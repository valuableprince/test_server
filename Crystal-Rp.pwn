//------------------------------- Include --------------------------------------
#include <a_samp>
#include <a_http>
#include <a_mysql>
#include <sscanf2>
#include <streamer>
#include <dc_cmd>
#include <foreach>
#include <Vectoral>                                                             
#include <mxdate>
#include <inc>
//
#include <ac_armour>
#include <a_actor>
//-------------------------------- MySQL ---------------------------------------
#define MYSQL_HOST               "triniti.ru-hoster.com"
#define MYSQL_USER               "bruno8PN"
#define MYSQL_DATABASE           "bruno8PN"
#define MYSQL_PASSWORD           "1T8P6iral6"
//------------------------------- Таблицы --------------------------------------
#define 	TABLE_ACCOUNTS  	"accounts"
#define 	TABLE_FRAKBANK  	"frakbank"
#define 	TABLE_BIZZ  		"bizz"
#define 	TABLE_HOUSE  		"house"
#define 	TABLE_HOTEL  		"hotel"
#define 	TABLE_GANGZONE  	"gangzone"
#define 	TABLE_PLANTS  		"plants"
#define 	TABLE_MAST  		"mast"
#define 	TABLE_FLOORS  		"Floors"
#define 	TABLE_FAMILY  		"Family"
#define 	TABLE_HOSPITAL 		"Hospital"
//------------------------------------------------------------------------------
#define SA1						!strcmp(PI[playerid][pName], "Bruno_Lindberg", true)
#define SA2                     !strcmp(PI[playerid][pName], "Rafael_Visconti", true)
#define SA3                     !strcmp(PI[playerid][pName], "Nikita_Zakharov", true)
#define SA4                     !strcmp(PI[playerid][pName], "", true)
#define SA5                     !strcmp(PI[playerid][pName], "", true)       // gzcolor
#define SA6                     !strcmp(PI[playerid][pName], "", true)      // bizmafia
#define SA7                     !strcmp(PI[playerid][pName], "", true)      // gzcolor
#define SA8                     !strcmp(PI[playerid][pName], "", true)   // gzcolor
//------------------------------------------------------------------------------
#pragma dynamic 5096
//------------------------------------------------------------------------------
#undef MAX_PLAYERS
#define MAX_PLAYERS 200
//------------------------------- define ---------------------------------------
//
#define ADMIN_SPEC_TYPE_NONE 	0
#define ADMIN_SPEC_TYPE_PLAYER 	1
#define ADMIN_SPEC_TYPE_VEHICLE 2
//------------------------------------------------------------------------------
#define 	BYTES_PER_CELL 		(cellbits / 8)
//------------------------------------------------------------------------------
#define VEHICLE_PARAMS_OFF  	0
#define VEHICLE_PARAMS_ON   	1
//------------------------------------------------------------------------------
#define CHECKPOINT_NONE 		0
#define CHECKPOINT_HOME 		12
//------------------------------------------------------------------------------
#define SCMF(%0,%1,%2,%3) format(format_string, 144, %2,%3) && SCM(%0, %1, format_string)
new format_string [144];
//------------------------------------------------------------------------------
#define FixConsole(%1) for(new rSt; rSt < strlen(%1); rSt++) if(%1[rSt] > 191 && %1[rSt] < 240) %1[rSt] -= 64; else if(%1[rSt] > 239 && %1[rSt] < 256) %1[rSt] -= 16; else if (%1[rSt] == 168 ) %1[rSt] += 72; else if (%1[rSt] == 184) %1[rSt] += 57
//------------------------------------------------------------------------------
#define Speed(%0,%1,%2,%3,%4) floatround(floatsqroot(%4?(%0*%0+%1*%1+%2*%2):(%0*%0+%1*%1))*%3*1.6)
#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
//------------------------------------------------------------------------------
#define publics:%0(%1)     									forward %0(%1); public %0(%1)
//
#define nfor(%0,%1)			for(new %0; %0 != %1; %0++)
//------------------------------------------------------------------------------
#define DIALOG_STYLE_MSGBOX 	0
#define DIALOG_STYLE_INPUT 		1
#define DIALOG_STYLE_LIST 		2
#define DIALOG_STYLE_PASSWORD 	3
//------------------------------------------------------------------------------
#define Ammo_SDPISTOL 			10
#define Ammo_DEAGLE 			7
#define Ammo_SHOTGUN			5
#define Ammo_MP5				25
#define Ammo_AK47				35
#define Ammo_M4A1				35
//------------------------------------------------------------------------------
#define SCM                     SendClientMessage
#define SCMToAll                SendClientMessageToAll
//------------------------------------------------------------------------------
#define RandomEx(%0,%1) 	random(%1 - %0) + %0
//------------------------------------------------------------------------------
#define TAZE_WEAPON 23
#define TAZE_TIMER 15000
//------------------------------------------------------------------------------
//
#define MAX_ROULET 13
//
#define MAX_PRODUCT 100
#define MAX_FUEL 100
//
#define MAX_DROP_GUN 500
//---------------------------------- Color -------------------------------------
#define COLOR_BBLUE 0x20A9FFFF
#define COLOR_ISPOLZUY 0x7FB151FF
#define COLOR_GRAD1 0xB4B5B7FF
#define COLOR_BLUE 0x33AAFFFF
#define COLOR_TEAL 0x008080FF
#define COLOR_GRAD2 0xBFC0C2FF
#define COLOR_IVORY 0xFFFF82AA
#define COLOR_GRAD3 0xCBCCCEFF
#define COLOR_GRAD4 0xD8D8D8FF
#define COLOR_GRAD5 0xE3E3E3FF
#define COLOR_BLACK 0x000000AA
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_GREEN 0x33AA33AA
#define COLOR_ORANGE 0xFF9900AA
#define COLOR_RED 0xAA3333AA
#define COLOR_LIGHTRED 0xFF6347AA
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COLOR_LIGHTGREEN 0x9ACD32AA
#define COLOR_YELLOW 0xFFFF00AA
#define COLOR_YELLOW2 0xF5DEB3AA
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_REDD 0xFF0000AA
#define COLOR_FADE1 0xE6E6E6E6
#define COLOR_FADE2 0xC8C8C8C8
#define COLOR_FADE3 0xAAAAAAAA
#define COLOR_FADE4 0x8C8C8C8C
#define COLOR_FADE5 0x6E6E6E6E
#define COLOR_PURPLE 0xC2A2DAAA
#define COLOR_ALLDEPT 0xFF8282AA
#define COLOR_NEWS 0xFFA500AA
#define COLOR_OOC 0xE0FFFFAA
#define TEAM_HIT_COLOR 0xFFFFFF00
#define TEAM_BLUE_COLOR 0x8D8DFF00
#define TEAM_GROVE_COLOR 0x00D900C8
#define TEAM_VAGOS_COLOR 0xFFC801C8
#define TEAM_BALLAS_COLOR 0xD900D3C8
#define TEAM_AZTECAS_COLOR 0x01FCFFC8
#define TEAM_CYAN_COLOR 0xFF8282AA
#define TEAM_ORANGE_COLOR 0xFF830000
#define COLOR_MUSICA 0x008F8FAA
#define COLOR_SYSTEM 0xFFFFFFFF
#define COLOR_YELLOW3d 0xFFFF00FF
#define COLOR_ADDNEWS 0x00D900C8
#define COLOR_OCEANIC 0x54FF9FFF

//------------------------------------------------------------------------------
new QUERY[4096];
new DATABASE;
//------------------------------------------------------------------------------
new players, YCMDstr[256];
//------------------------------- AntiRepair -----------------------------------
new player_NoCheckTimeVeh[MAX_PLAYERS], timer2[MAX_PLAYERS];
new Float:player_VehHealth[MAX_PLAYERS], Float:HealthVeh[MAX_PLAYERS];
//-------------------------------- CarSpam -------------------------------------
new IDVEH[MAX_PLAYERS];
new bool:UseEnter[MAX_PLAYERS];
//----------------------------------- /gotome ----------------------------------
new walk_goto_me[MAX_PLAYERS]={0,...};
//------------------------ Выбор цвета в автомастерской ------------------------
new Text:AutoColor[5];
//------------------------------- Телепорт MP ----------------------------------
new Teleport, TeleportInfo[2], Float:TeleportFloat[3];
//------------------------------------------------------------------------------
new object_job[MAX_PLAYERS][10], timenafta[MAX_PLAYERS];
//----------------------------- Проверка на GM ---------------------------------
new Float:GMARMOUR[MAX_PLAYERS][1], Float:GMHP[MAX_PLAYERS][2], Float:VEHHP[MAX_PLAYERS][2];
//----------------------------- Прослушка ФБР ----------------------------------
new tipster[MAX_PLAYERS], tipsterlisten[MAX_PLAYERS], tipsteron = -1, tipsterplayer = -1;
//-------------------------- Состояние транспорта  -----------------------------
new proccar[MAX_VEHICLES], Light[MAX_VEHICLES], enginebrokened[MAX_VEHICLES], IsLocked[MAX_VEHICLES], zavodis[MAX_VEHICLES], gCarLock[MAX_VEHICLES];
//------------------------------- Сигареты -------------------------------------
new IsSmoking[MAX_PLAYERS];
//------------------------------- Койки ----------------------------------------
new HPTimer[MAX_PLAYERS];
//
new SetFind[MAX_PLAYERS];
//------------------------------------------------------------------------------
new Float:spos[MAX_PLAYERS][3];
//----------------------------- Tazer, наручники -------------------------------
new Tazed[MAX_PLAYERS], PlayerCuffed[MAX_PLAYERS], PlayerCuffedTime[MAX_PLAYERS];
//------------------------------------------------------------------------------
new PlayerText:sobeit[MAX_PLAYERS][2];
//----------------------------- Капты у мафий ----------------------------------
new BizWarTime, ZonsWar[3], PlayerText:Bizwar[MAX_PLAYERS][5], MafiaCapture[15];
//------------------------------ Грабёж дома -----------------------------------
new bool:robhouse[999], bool:robh[MAX_PLAYERS];
//----------------------------- Работа грузчика --------------------------------
new bool:Works[MAX_PLAYERS], mesh[MAX_PLAYERS], usemesh[MAX_PLAYERS], JobCP[MAX_PLAYERS];
//--------------------- Таймер входа на сервер после рестарта ------------------
new VhodVozm = 30;
//---------------------------------- Recon -------------------------------------
new Float: Armour[MAX_PLAYERS], Menu:Admin, SpecAd[MAX_PLAYERS], SpecID[MAX_PLAYERS];
new gSpectateID[MAX_PLAYERS], gSpectateType[MAX_PLAYERS], TeleportDestNoFloat[MAX_PLAYERS][2];
//--------------------------- Бензин личного т/с -------------------------------
new Float:Fuell[MAX_VEHICLES];
//---------------------------- Логотип сервера ---------------------------------
new Text:Logotip[3];
//----------------------------- 3D Text Цистерн фракций ------------------------
new Text3D: BenzText[25];
//---------------------------- Запрет езды на крыше ----------------------------
new Typek = 2;
new Timerkk[MAX_PLAYERS];
//------------------------ 3D Текст над такси и механиков ----------------------
new Text3D:JobText3D[MAX_VEHICLES], Text3D:Meh3d[MAX_VEHICLES];
//---------------------------------- Скины -------------------------------------
new Menu:BuyClothes, ChangeSkin[MAX_PLAYERS], zips[MAX_PLAYERS], zips1[MAX_PLAYERS], Menu:ChoseSkin, Menu:bomj[2], Menu:BuyClothes1, Menu:BuyClothes2;
//--------------------------- Создание транспорта (/veh) -----------------------
new createdvehs, vehcreat[MAX_VEHICLES], CreatedCars[100], CreatedCar = 0;
//---------------------------- Покупка бизнеса у игрока ------------------------
new sellerbiz[MAX_PLAYERS], bizcost[MAX_PLAYERS], forwho[MAX_PLAYERS];
//----------------------------- Дома, отели, бизнесы, мастерские ---------------
new TotalHouse = 0, TotalHotel = 0, TotalBizz = 0, TotalMast = 0;
//------------------------------------ Объявления ------------------------------
new TOTALADVERT[3], ReportQ[MAX_PLAYERS][144], addd[3];
//------------------------------ Развозка продуктов ----------------------------
new TOTALPRODUCT, TOTALFUEL;
//-------------------------------------- /w /b ---------------------------------
new PText[MAX_PLAYERS][128];
//------------------------------------- Плантация ------------------------------
new narkot[MAX_PLAYERS];
//------------------------------- Анти флуд | Антиреклама ----------------------
new Flood[MAX_PLAYERS], realchat = 1, Rekl[MAX_PLAYERS];
//------------------------------- Сеанс от наркозависимости --------------------
new seans[MAX_PLAYERS];
//------------------------------------ Крыша от мафий --------------------------
new Krisha[MAX_PLAYERS], KrishaOffer[MAX_PLAYERS];
//---------------------------- Кража материалов на территории Армий ------------
new chekmatlva[10], chekmats[3];
//------------------------------------ Спортзал --------------------------------
new udar[MAX_PLAYERS], OldSkin[MAX_PLAYERS];
//-------------------------------- Звонки в SAN | Эфир -------------------------
new zvonok[MAX_PLAYERS], smspricesf = 50, smssf = 0, TalkingLive[MAX_PLAYERS];
//--------------------------------- Личный транспорт ---------------------------
new caridhouse[MAX_PLAYERS][3];
//------------------------- Раздевалка фракций | Начало рабочего дня -----------
new FormaFracPic[18], FormaFrac[MAX_PLAYERS];
//---------------------------------- /sellgun ----------------------------------
new sellgun, sellgun1, sellgun2, sellgun3, sellgun4;
//-------------------------------- Работа такси --------------------------------
new TransportCost[MAX_PLAYERS], TransportDuty[MAX_PLAYERS], TransportMoney[MAX_PLAYERS], TransportDriver[MAX_PLAYERS], taxiexpp[MAX_PLAYERS];
//---------------------------- Система спавна в больнице -----------------------
new TimerBill[MAX_PLAYERS];
//----------------------------------- Спидометр --------------------------------
new str1[20],str2[20],str3[20],str4[20];
//-------------------------------- Цена на лечение -----------------------------
new healpric = 1;
//-------------------------------- Создание обьектов ---------------------------
new SlotObject[51];
//----------------------------- Ключи от камер, дверей -------------------------
new keys[MAX_PLAYERS];
//--------------------------------- Зелёные зоны -------------------------------
new Army, ArmySF, ArmyVoe;
//------------------------------- Связывание игрока ----------------------------
new TieTime[MAX_PLAYERS];
//---------------------------------- Сервис вызов ------------------------------
new MedicCall = 999, MedicCallTime[MAX_PLAYERS], PoliceCall = 999, MechanicCall = 999, TaxiCall = 999;
//------------------------------- Фракционный скин по рангу --------------------
new InviteSkin[MAX_PLAYERS];
//------------------------------------- Метка /home ----------------------------
new gPlayerCheckpointStatus[MAX_PLAYERS];
//---------------------------------------- Чаты --------------------------------
new gOoc[MAX_PLAYERS], gNews[MAX_PLAYERS], gFam[MAX_PLAYERS], BigEar[MAX_PLAYERS];
//--------------------------------------- Мигалки ------------------------------
new police[MAX_VEHICLES];
//--------------------------------------- Звонок игроку ------------------------
new CellTime[MAX_PLAYERS], PhoneOnline[MAX_PLAYERS], Mobile[MAX_PLAYERS], callcost = 10, cchargetime = 60;
//------------------------------------------- Время ----------------------------
new ghour = 0, gminute = 0, gsecond = 0, realtime = 1, wtime = 15, timeshift = 0, shifthour;
//----------------------------------- Загрузка материалов в вертолёт -----------
new vertmatbi = 0;
//---------------------------------------------- LvL ---------------------------
new levelexp = 4;
//---------------------------------- Коннект лист ------------------------------
new Text:stroki[5], StroStr[5][128];
//------------------------------- Работа лесоруба ------------------------------
new bool:woodcutter[MAX_PLAYERS], cutt, timecutt[MAX_PLAYERS], Oldskin[MAX_PLAYERS], kgcutt[MAX_PLAYERS], cuttrands, pickcutt, cutter;
//---------------------------------- Транспорт ---------------------------------
new sherifpd[2], sapdcar[2], SultanPD[14], BulletPD[11], fbicar[11], armycarsf[2], armcar[2], gunscar[2], zcar[2], zfuelcar[2], trailerz[2], voenk[2], CarNafta[2];
new furabiker[2], matsfuravagos, matsfuragrove, matsfuraactek, matsfurarifa, matsfura, grovecar[2], ballascar[2], benzovozcar[2], comptruckcar[2], coronoscar[2], vagoscar[2], rifacar[2];
new cnncar[2], armsf[2], armsv[2], medicar[2], prezidentcar[2], zavcar[2], patzav[2];
new liccar[2], boatcar[2], flycar[2], taxicar[2], muscar[2], mehanik[2], saloncar[2], chistveh[2], lcncar[2], yakcar[2], ruscar[2], bmoto[2];
//----------------------------------- Пикапы -----------------------------------
new tirammo[8], PickupRazd[16], PickZavBen[6], timepickup[MAX_PLAYERS], rob, pickups, plinfo, plinfo2, voenkomat[2], barbike[2], chistigo;
new victim2[2], sportzal[2], rmpic[2], lcnpic[2], pband[2], yakexit[2], cerkva[2], sanpic[2], pdd, fbiintpic1[3], fbikpz, gunpiclic;
new buygunzakon[8], fbi, lspd[8], sf[7], lvpdpic[7], armpick[2], marenter[8], centr[2], bankpic[4], bankmenu[1], serdce, medserdce[21], passlic, ballaspickup[2], zavbenz[2];
new rifa[2], vagospic[2], aztecpic[2], grooveexit, grooveenter, clothes, maskirovka, medkarta, airport[3], airsp[3], cashs, skinshop[6], zip1[2], zip[2], plen[2], sklad[4], medicss[12], rabota;
new sab[33], Family, zavfrak[4], podeezdi, gunjob, ash[4], AvtoPrava, AvtoBoat, AvtoFly, prs[2], casdress[2], casinfo[2];
//-------------------------------- Телефон на TextDraw -------------------------
new Text:Mobilka[27], PlayerText:MobNom, EnterNumb[MAX_PLAYERS][7], OnMobile[MAX_PLAYERS];
//-------------------------------- АнтиЧит на оружие ---------------------------
new bool:WeaponInfo[MAX_PLAYERS][47];
new AmmoInfo[MAX_PLAYERS][47];
new AmmoSlot[MAX_PLAYERS][11];
new gunmute[MAX_PLAYERS];
//------------------------------ Анти-Флуд в один слот -------------------------
new slotUsed[MAX_PLAYERS char];
new playersIP[MAX_PLAYERS][64];
//----------------------------- Таймер аренды т/с ------------------------------
new arendtime[MAX_PLAYERS];
//--------------------------------- Древесина ----------------------------------
new randomcutt[][1] = {
	{10},{12},{32},{28},{23},{19},{21},{35},{25},{25},{13},
	{7},{5},{11},{13},{16},{21},{24},{20},{17},{27}
};

//--------------------------------- Казино -------------------------------------
new bool:RouletPrize[MAX_ROULET], bool:PlayRoulette[MAX_ROULET];
new RouletNumber[MAX_ROULET], DealerRoulette[MAX_ROULET], TimerRoulette[MAX_ROULET][3];
new PlayerText:RouletteText[MAX_PLAYERS];
//------------------------------- Поворотники ----------------------------------
new LightsObject[MAX_VEHICLES][4];
new Signal[MAX_VEHICLES];
new Float:SignalAngle[MAX_VEHICLES];
new SignalTick[MAX_VEHICLES][2];
//
static const stock Float:LightsPos[212][6] =
{
	{ 0.8766, 2.0272, -0.1000, 0.8766, -2.2272, -0.1000 },
	{ 0.9566, 2.4500, 0.0000, 0.9566, -2.3500, 0.0000 },
	{ 0.8033, 2.5363, 0.0000, 0.9033, -2.6363, 0.0000 },
	{ 1.1500, 4.1909, -0.2000, 0.3499, -4.1909, -0.7000 },
	{ 0.7333, 2.2409, 0.2000, 0.8333, -2.6409, 0.0000 },
	{ 0.9833, 2.2272, -0.1000, 0.8833, -2.7272, -0.1000 },
	{ 1.0566, 5.2681, 0.0000, 2.2566, -5.1681, 0.4000 },
	{ 0.8499, 4.0727, 0.1000, 1.0499, -3.4727, 0.2000 },
	{ 0.9399, 4.8590, -0.4000, 0.8399, -4.0590, -0.5000 },
	{ 0.8899, 3.6181, 0.0000, 0.8899, -3.9181, 0.0000 },
	{ 0.8533, 2.1772, 0.0000, 0.8533, -2.1772, 0.0000 },
	{ 0.9966, 2.6272, -0.2000, 0.8966, -2.4272, 0.0000 },
	{ 0.9166, 2.6227, -0.1000, 0.8166, -3.6227, -0.2000 },
	{ 0.9600, 2.6727, -0.1000, 0.9600, -2.6727, 0.0000 },
	{ 0.7399, 2.8136, -0.1000, 1.0399, -3.2136, 0.0000 },
	{ 0.8733, 2.5045, -0.3000, 0.7733, -2.5045, 0.0000 },
	{ 0.9099, 2.9409, 0.0000, 1.1100, -3.7409, -0.5000 },
	{ 1.8166, 10.5772, 0.0000, 1.8166, -10.5772, 0.0000 },
	{ 0.9566, 2.4772, -0.2000, 1.0566, -2.5772, -0.2000 },
	{ 0.8000, 2.7272, -0.4000, 0.8000, -2.9272, -0.2000 },
	{ 0.9033, 2.3863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 0.8500, 2.6045, -0.2000, 0.8500, -2.9045, -0.2000 },
	{ 0.7566, 2.2454, -0.3000, 0.8566, -2.4454, -0.3000 },
	{ 0.7733, 2.2999, 0.0000, 0.8733, -2.2000, 0.0000 },
	{ 0.7199, 1.5545, 0.2000, 0.6199, -1.6545, 0.3000 },
	{ 1.7199, 8.4681, 0.0000, 1.7199, -8.4681, 0.0000 },
	{ 1.0033, 2.3863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 0.8800, 3.3272, -0.1000, 0.9800, -3.7272, 0.3000 },
	{ 0.9100, 2.5545, 0.2000, 0.9100, -2.9545, 0.2000 },
	{ 0.7366, 2.2545, -0.3000, 0.8366, -2.4545, 0.0000 },
	{ 1.5900, 7.6818, 0.0000, 1.5900, -7.6818, 0.0000 },
	{ 1.0033, 5.9499, 0.4000, 1.0033, -5.8499, 0.0000 },
	{ 1.4333, 4.1681, 0.0000, 1.4333, -4.1681, 0.0000 },
	{ 1.2333, 3.7454, -0.1000, 1.3333, -4.7454, -0.1000 },
	{ 0.5633, 1.9772, -0.1000, 0.4633, -1.9772, -0.1000 },
	{ 1.0533, 6.1499, 0.0000, 1.0533, -3.9500, -1.1000 },
	{ 0.8600, 2.3045, 0.0000, 0.8600, -2.5045, 0.0000 },
	{ 1.2133, 5.5454, -0.2000, 1.1133, -5.2454, 0.4000 },
	{ 0.9033, 2.6454, 0.0000, 0.9033, -2.7454, -0.1000 },
	{ 0.8400, 2.4045, -0.5000, 0.8400, -2.7045, -0.1000 },
	{ 0.9700, 2.6272, -0.3000, 0.8700, -2.6272, 0.1000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.9699, 2.8363, -0.2000, 1.0699, -3.0363, 0.0000 },
	{ 1.0866, 5.8136, -1.0000, 1.2866, -7.1136, -0.9000 },
	{ 1.1200, 2.7363, 0.7000, 1.1200, -3.0363, 0.7000 },
	{ 0.9666, 2.3636, 0.0000, 0.9666, -2.7636, -0.2000 },
	{ 1.5900, 7.7363, 0.0000, 1.5900, -7.7363, 0.0000 },
	{ 0.8066, 6.7272, 0.0000, 0.8066, -6.7272, 0.0000 },
	{ 0.2366, 0.9954, 0.0000, 0.2366, -0.9954, 0.0000 },
	{ 1.0099, 4.1045, 0.0000, 1.0099, -4.1045, 0.0000 },
	{ 1.0233, 6.1409, 0.0000, 1.0233, -3.9409, -1.2000 },
	{ 0.7733, 2.0863, -0.2000, 0.8733, -2.4863, -0.2000 },
	{ 1.2033, 6.6227, 0.0000, 1.2033, -6.6227, 0.0000 },
	{ 1.7133, 6.2590, 0.0000, 1.7133, -6.2590, 0.0000 },
	{ 2.2066, 8.6590, 0.0000, 2.2066, -8.6590, 0.0000 },
	{ 1.2066, 3.7090, -0.1000, 1.3066, -4.7090, -0.1000 },
	{ 0.8766, 3.3272, -0.1000, 0.8766, -4.6272, -0.5000 },
	{ 0.4099, 1.1863, 0.0000, 0.5099, -1.2863, 0.0000 },
	{ 0.9033, 2.4909, -0.2000, 0.9033, -2.7909, 0.0000 },
	{ 0.9666, 2.5999, -0.1000, 0.8666, -2.5999, 0.1000 },
	{ 3.6166, 6.1590, 0.0000, 3.6166, -6.1590, 0.0000 },
	{ 0.2333, 0.8181, 0.5000, 0.2333, -1.1181, 0.3000 },
	{ 0.2366, 0.9954, 0.0000, 0.2366, -0.9954, 0.0000 },
	{ 0.2333, 1.1000, 0.0000, 0.2333, -1.1000, 0.0000 },
	{ 0.5266, 0.5045, 0.0000, 0.5266, -0.7045, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.9433, 2.6045, 0.1000, 1.0433, -2.8045, 0.0000 },
	{ 0.6433, 2.8909, -0.1000, 0.9433, -3.0909, 0.0000 },
	{ 0.2366, 1.0136, 0.0000, 0.2366, -1.0136, 0.0000 },
	{ 0.8066, 6.7272, 0.0000, 0.8066, -6.7272, 0.0000 },
	{ 1.0866, 2.0909, 0.2000, 1.0866, -2.6909, -0.2000 },
	{ 0.4733, 0.9090, 0.0000, 0.4733, -0.9090, 0.0000 },
	{ 0.8900, 4.2454, 0.0000, 0.8900, -4.2454, 0.0000 },
	{ 0.9666, 2.4545, 0.0000, 0.9666, -2.4545, 0.0000 },
	{ 0.9100, 2.7409, 0.0000, 1.0099, -2.7409, -0.1000 },
	{ 0.9166, 2.5272, -0.3000, 0.8166, -2.8272, -0.3000 },
	{ 3.6766, 5.1318, 0.0000, 3.6766, -5.1318, 0.0000 },
	{ 0.7900, 2.6954, -0.2000, 1.0900, -2.5954, 0.1000 },
	{ 0.9166, 2.2318, 0.0000, 1.0166, -2.5318, -0.3000 },
	{ 0.9500, 2.4954, 0.0000, 0.9500, -2.7954, 0.0000 },
	{ 0.8566, 1.7909, 0.0000, 0.8566, -2.2909, -0.2000 },
	{ 0.2366, 0.8545, 0.0000, 0.2366, -0.8545, 0.0000 },
	{ 0.8799, 2.3909, -0.4000, 0.8799, -2.5909, 0.0000 },
	{ 0.7833, 2.6136, 0.0000, 0.6833, -2.8136, -0.3000 },
	{ 1.7833, 11.9090, 0.0000, 1.7833, -11.9090, 0.0000 },
	{ 0.6566, 1.7500, 0.0000, 0.6566, -1.3499, 0.0000 },
	{ 0.8466, 1.5636, 1.0000, 0.5466, -3.2636, 1.1000 },
	{ 0.7766, 6.8363, 0.0000, 0.7766, -6.8363, 0.0000 },
	{ 0.7766, 5.7318, 0.0000, 0.7766, -5.7318, 0.0000 },
	{ 1.0466, 2.5909, 0.0000, 1.1466, -2.6909, 0.2000 },
	{ 0.9733, 3.1499, 0.0000, 1.1733, -3.1499, 0.1000 },
	{ 0.8700, 2.5772, -0.1000, 0.8700, -2.8772, 0.0000 },
	{ 0.7833, 2.6090, 0.0000, 0.7833, -2.8090, 0.0000 },
	{ 1.5900, 8.1045, 0.0000, 1.5900, -8.1045, 0.0000 },
	{ 0.8500, 2.3500, -0.2000, 0.8500, -2.8499, 0.1000 },
	{ 1.1266, 2.3772, 0.0000, 1.1266, -2.0772, 0.0000 },
	{ 0.9600, 2.2590, 0.0000, 0.9600, -2.0590, 0.0000 },
	{ 0.7766, 6.8363, 0.0000, 0.7766, -6.8363, 0.0000 },
	{ 0.8666, 3.0999, 0.2000, 0.9666, -3.0999, 0.3000 },
	{ 0.7799, 2.5727, -0.2000, 1.0800, -3.4727, 0.1000 },
	{ 0.4633, 2.0772, -0.2000, 0.7633, -1.9772, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.8833, 2.6136, -0.2000, 0.7833, -2.7136, 0.0000 },
	{ 0.8366, 2.3909, 0.0000, 0.8366, -2.8909, 0.0000 },
	{ 0.9433, 2.6454, 0.1000, 1.0433, -2.8454, 0.0000 },
	{ 1.0466, 2.5909, 0.0000, 1.1466, -2.6909, 0.1000 },
	{ 0.7500, 2.2727, -0.3000, 0.8500, -2.3727, 0.0000 },
	{ 1.0566, 2.5954, -0.1000, 1.1566, -2.8954, -0.1000 },
	{ 0.6866, 2.9590, -0.7000, 0.9866, -3.7590, 0.0000 },
	{ 0.2366, 0.8636, 0.0000, 0.2366, -0.8636, 0.0000 },
	{ 0.2400, 0.7909, 0.0000, 0.2400, -0.7909, 0.0000 },
	{ 7.0733, 9.6318, 0.0000, 7.0733, -9.6318, 0.0000 },
	{ 3.7200, 2.7999, 0.0000, 3.7200, -2.7999, 0.0000 },
	{ 2.8999, 4.0909, 0.0000, 2.8999, -4.0909, 0.0000 },
	{ 1.2633, 4.2772, 0.1000, 0.3633, -5.0772, -0.4000 },
	{ 1.2833, 4.4227, -0.5000, 0.3833, -4.6227, -1.3000 },
	{ 0.9666, 2.7363, 0.0000, 0.9666, -2.8363, 0.0000 },
	{ 0.9433, 2.7772, 0.0000, 0.9433, -2.7772, -0.1000 },
	{ 0.8100, 2.7272, 0.0000, 1.0099, -2.8272, -0.2000 },
	{ 6.7699, 8.7681, 0.0000, 6.7699, -8.7681, 0.0000 },
	{ 2.9166, 6.5090, 0.0000, 2.9166, -6.5090, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.2333, 1.1227, 0.0000, 0.2333, -1.1227, 0.0000 },
	{ 0.8966, 3.7181, 0.0000, 1.1966, -3.9181, -1.1000 },
	{ 0.8166, 3.0409, 0.1000, 0.9166, -3.1409, -0.1000 },
	{ 0.9333, 2.3545, -0.2000, 0.8333, -2.3545, 0.0000 },
	{ 0.9099, 2.5000, 0.0000, 0.9099, -2.3000, 0.0000 },
	{ 0.8499, 2.5227, -0.2000, 0.8499, -2.6227, -0.3000 },
	{ 0.9933, 2.5590, 0.0000, 0.9933, -2.5590, 0.1000 },
	{ 0.5266, -0.6772, 1.3000, 0.5266, -1.9227, 0.8000 },
	{ 0.2533, 1.5818, -0.2000, 0.2533, -1.1818, -0.1000 },
	{ 0.4733, 4.0772, 1.3000, 0.3733, -1.0772, 0.0000 },
	{ 0.9933, 2.4636, 0.0000, 0.8933, -2.5636, 0.0000 },
	{ 1.0266, 2.9499, -0.2000, 0.7266, -2.8499, -0.1000 },
	{ 0.8899, 2.4909, -0.1000, 0.8900, -2.5909, -0.1000 },
	{ 0.8199, 2.4181, -0.2000, 0.8199, -3.1181, -0.2000 },
	{ 0.7766, 2.3272, 0.0000, 1.1100, -7.9772, 0.0000 },
	{ 1.0900, 7.6409, 0.0000, 1.0900, -7.5409, 0.0000 },
	{ 0.8333, 2.0590, 0.0000, 0.8333, -1.7590, 0.0000 },
	{ 0.9633, 2.6590, -0.1000, 1.0633, -2.7590, -0.1000 },
	{ 0.6566, 2.2499, -0.2000, 0.7566, -2.2499, 0.1000 },
	{ 0.9266, 2.6090, -0.1000, 0.7266, -3.0090, -0.1000 },
	{ 0.7933, 2.3045, 0.1000, 0.9933, -2.7045, 0.0000 },
	{ 0.7366, 3.6454, -0.2000, 0.9366, -4.2454, -0.8000 },
	{ 0.5299, 1.7863, 0.0000, 0.8300, -2.0863, -0.4000 },
	{ 0.9566, 2.5636, 0.0000, 1.0566, -2.6636, 0.0000 },
	{ 0.9299, 2.5545, 0.0000, 0.9299, -2.6545, 0.1000 },
	{ 1.3933, 11.0999, 0.0000, 1.3933, -11.0999, 0.0000 },
	{ 0.9000, 2.5136, 0.0000, 0.9000, -2.5136, 0.0000 },
	{ 0.9466, 2.5772, -0.2000, 0.9466, -2.6772, -0.2000 },
	{ 0.9866, 2.5545, -0.1000, 0.9866, -3.0545, 0.0000 },
	{ 0.9833, 3.0545, 0.3000, 1.1833, -2.8545, 0.3000 },
	{ 9.5799, 10.6772, 0.0000, 9.5799, -10.6772, 0.0000 },
	{ 1.0933, 2.5045, 0.1000, 1.0933, -2.9045, 0.1000 },
	{ 0.7666, 2.2318, 0.0000, 0.6666, -2.4318, -0.2000 },
	{ 1.0199, 2.5954, 0.5000, 1.1200, -2.8954, 0.6000 },
	{ 1.1200, 2.4454, 0.7000, 1.1200, -2.7454, 0.7000 },
	{ 0.9433, 2.0863, 0.0000, 0.9433, -2.3863, 0.2000 },
	{ 0.7599, 2.3909, 0.0000, 0.8600, -2.2909, 0.2000 },
	{ 0.9733, 2.3545, -0.0000, 0.8733, -2.1545, 0.1000 },
	{ 0.8333, 2.6363, -0.1000, 0.9333, -2.6363, 0.0000 },
	{ 0.8533, 2.4136, 0.0000, 0.8533, -2.3136, 0.1000 },
	{ 1.1299, 8.4636, 0.0000, 1.1299, -8.4636, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.7766, 2.0909, 0.0000, 0.8766, -1.8909, 0.0000 },
	{ 0.9366, 2.7363, 0.0000, 0.9366, -2.9363, 0.0000 },
	{ 1.0033, 2.9136, -0.2000, 1.0033, -3.0136, -0.2000 },
	{ 0.4033, 2.1954, 0.0000, 0.2033, -1.4954, 0.0000 },
	{ 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 },
	{ 0.7766, 2.3272, 0.0000, 1.1566, -9.5772, 0.0000 },
	{ 0.5233, 1.0590, 0.0000, 0.5233, -1.0590, 0.0000 },
	{ 0.3533, 0.8681, -0.1000, 0.3533, -1.0681, -0.1000 },
	{ 0.8766, 3.1545, -0.4000, 0.8766, -3.3545, -0.4000 },
	{ 0.5400, 1.7499, -0.2000, 0.5400, -1.2499, -0.2000 },
	{ 0.9300, 2.3500, 0.1000, 0.8299, -2.7499, 0.0000 },
	{ 1.0066, 2.3909, -0.2000, 1.0066, -3.1909, 0.0000 },
	{ 20.8299, 27.9272, 0.0000, 0.0000, 0.0000, 0.0000 },
	{ 1.1500, 4.3590, -0.2000, 1.1500, -5.4590, -0.5000 },
	{ 0.9233, 2.3227, 0.0000, 1.0233, -2.8227, 0.1000 },
	{ 0.7866, 2.6227, -0.2000, 1.0866, -2.8227, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.9133, 2.5818, -0.1000, 0.9133, -3.3818, 0.1000 },
	{ 0.6566, 1.4636, 0.3000, 0.5566, -1.6636, 0.4000 },
	{ 1.1833, 7.2318, 0.0000, 1.1833, -7.2318, 0.0000 },
	{ 1.0133, 2.8681, 0.1000, 0.9133, -3.0681, 0.2000 },
	{ 0.2333, 1.2727, 0.0000, 0.2333, -1.2727, 0.0000 },
	{ 0.9699, 2.1181, -0.3000, 1.0699, -2.5181, 0.1000 },
	{ 1.0266, 3.4181, 0.4000, 1.0266, -4.0181, -0.3000 },
	{ 0.7533, 2.4136, 0.1000, 0.8533, -2.3136, 0.4000 },
	{ 1.1466, 8.3636, 0.0000, 1.1466, -8.3636, 0.0000 },
	{ 1.0600, 6.1954, 0.0000, 1.0600, -6.1954, 0.0000 },
	{ 14.8166, 26.1681, 0.0000, 14.8166, -26.1681, 0.0000 },
	{ 4.1966, 6.1590, 0.0000, 4.1966, -6.1590, 0.0000 },
	{ 0.1666, 0.4181, 0.0000, 0.1666, -0.4181, 0.0000 },
	{ 0.9499, 6.1227, 0.0000, 0.9499, -6.1227, 0.0000 },
	{ 1.0033, 2.2863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 1.0033, 2.2863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 1.0033, 2.3318, 0.0000, 0.9033, -2.7318, 0.0000 },
	{ 1.0733, 2.6000, 0.0000, 1.1733, -2.6000, 0.1000 },
	{ 0.8000, 2.7545, -0.1000, 1.0000, -2.7545, 0.1000 },
	{ 0.8266, 3.1636, 0.5000, 1.0266, -3.0636, 0.9000 },
	{ 0.8733, 2.1181, 0.0000, 0.8733, -2.6181, -0.3000 },
	{ 0.8800, 2.5590, -0.2000, 0.8800, -2.6590, -0.1000 },
	{ 0.8433, 2.6045, 0.1000, 1.0433, -2.8045, 0.0000 },
	{ 0.7933, 2.3045, 0.0000, 0.9933, -2.7045, 0.0000 },
	{ 0.9766, 1.5363, 0.0000, 0.9766, -1.5363, 0.0000 },
	{ 1.0066, 1.4818, 0.0000, 1.0066, -1.4818, 0.0000 },
	{ 0.4833, 2.1136, 0.0000, 0.4833, -2.1136, 0.0000 },
	{ 0.8666, 3.0999, 0.2000, 0.9666, -3.0999, 0.3000 },
	{ 0.8266, 0.6499, 0.0000, 0.8266, -0.6499, 0.0000 },
	{ 0.7100, 1.4363, 0.0000, 0.7100, -1.4363, 0.0000 }
};
//--------------------------- Заказ продуктов/топлива---------------------------
enum pinfo
{
	ids,
	pName[MAX_PLAYER_NAME],
	pBizzid,
	pPrice,
	pTill,
bool:pStatus,
Text3D:pText3D
};
new ProductInfo[MAX_PRODUCT][pinfo];
//
enum fuel_info
{
	ids,
	pName[MAX_PLAYER_NAME],
	pBizzid,
	pPrice,
	pTill,
bool:pStatus,
Text3D:pText3D
};
new FuelInfo[MAX_FUEL][fuel_info];
//------------------------------------------------------------------------------
new SuspectList[MAX_PLAYERS], ItemsSuspect;
enum SuspectEnum
{
	sNames[36],
	sSuspectReason[144],
	sSuspectReason1[80],
	sZvezd,
	sZvezd1
}
static const sSuspect [25][SuspectEnum] =
{
	{"Нападение с применением оружия",   	"Нападение с применением оружия [5 звезд]","",															5,0},
	{"Нападение",                        	"Нападение на гражданских [2 звезды]","Нападение на Гос.Сотрудника [4 звезды]",							2,4},
	{"Хулиганство",                      	"Порча личного имущества [2 звезды]","Порча Гос. имущества [4 звезды]",									2,4},
	{"Убийство",                      		"Убийство гражданского [6 звезд]","Убийство Гос. Сотрудника [6 звезд]",									6,6},
	{"Оружие",                           	"Использование оружия без лицензии [2 звезды]","Нелегальная продажа оружия [3 звезды]",				    2,3},
	{"Взятка",                           	"Взятка Гос. сотруднику [2 звезды]","Заказное убийство [4 звезды]",										2,4},
	{"Наркотические вещества",           	"Применение наркотических средств [3 звезды]","Продажа наркотических средств [5 звезд]",				3,5},
	{"Транспортные средства",            	"Угон т/с [2 звезды]","",     																			2,0},
	{"Неподчинение",                     	"Неподчинение Гос. Сотрудникам [2 звезды]","",  														2,0},
	{"Соучастие",                        	"Соучастие с нарушителем [3 звезды]","",     															3,0},
	{"Проникновение",                   	"Проникновение на запрещенную территорию [3 звезды]","", 												3,0},
	{"Похищение",                       	"Похищение человека [5 звезд]","",   																	5,0},
	{"Теракт",                          	"Устраивание терракта [6 звезд]","",                                                                 	6,0},
	{"Митинги",                             "Призыв граждан к совершению преступления [4 звезды]","",                                             	4,0},
	{"Уклонение от оплаты штрафа",          "Отказ оплаты штрафа [2 звезды]","",                                             						2,0},
	{"Расизм",          					"Проявление национализма, расизма [6 звезд]","",      													6,0},
	{"Вымогательство",          			"Вымогательство денежных средств [4 звезд]","",      													4,0},
	{"Помеха",          					"Помеха Гос. Сотруднику, находящемуся при исполнении [3 звезд]","",      								3,0},
	{"Кража",          						"Кража государственной собственности [6 звезд]","",      												6,0},
	{"Проституция",          				"Занятие проституцией [2 звезды]","",      																2,0},
	{"Отказ предоставления паспорта",       "Отказ гражданина предоставить Гос. Сотруднику паспорт [2 звезды]","",      							2,0},
	{"Оскорбление",       					"Оскорбление или использование бранных слов [1 звезда]","Оскорбление Гос. Сотрудника [3 звезды]",      	1,3},
	{"Суицид",       						"Попытка покончить жизнь самоубийством [2 звезды]","",      											2,0},
	{"Ношение оружия в общественном месте", "Ношение оружия в общественном месте [1 звезда]","",      												1,0},
    {"Нарушение правил ПДД",       			"Нарушение Правил дорожного движения [2 звезды]","",      											    2,0}
};
//------------------------------------ Акссесуары ------------------------------
static Float:PosX[311][12] = {
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.06, 0.02, 0.11, 0.118, 0.125, 0.127, 0.145, 0.13, 0.15, 0.16, 0.17, 0.19},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16},
	{-0.06, 0.02, 0.11, 0.118, 0.125, 0.127, 0.145, 0.13, 0.15, 0.16, 0.17, 0.19},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16},
	{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16},
	{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16},
	{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16},
	{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.14, 0.01, 0.03, 0.038, 0.045, 0.047, 0.065, 0.05, 0.07, 0.08, 0.09, 0.11},
	{-0.14, 0.01, 0.03, 0.038, 0.045, 0.047, 0.065, 0.05, 0.07, 0.08, 0.09, 0.11},
	{-0.14, 0.01, 0.03, 0.038, 0.045, 0.047, 0.065, 0.05, 0.07, 0.08, 0.09, 0.11},
	{-0.14, 0.01, 0.03, 0.038, 0.045, 0.047, 0.065, 0.05, 0.07, 0.08, 0.09, 0.11},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15},
	{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15},
	{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15},
	{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15},
	{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15},
	{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15},
	{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15},
	{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18},
	{-0.15, 0.0, 0.02, 0.028, 0.035, 0.037, 0.055, 0.04, 0.06, 0.07, 0.08, 0.1},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.06, 0.02, 0.11, 0.118, 0.125, 0.127, 0.145, 0.13, 0.15, 0.16, 0.17, 0.19},
	{-0.06, 0.02, 0.11, 0.118, 0.125, 0.127, 0.145, 0.13, 0.15, 0.16, 0.17, 0.19},
	{-0.06, 0.02, 0.11, 0.118, 0.125, 0.127, 0.145, 0.13, 0.15, 0.16, 0.17, 0.19},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.12, 0.03, 0.05, 0.058, 0.065, 0.067, 0.085, 0.07, 0.09, 0.1, 0.11, 0.13},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},// Добавленное
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
	{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17} // Добавленное
};
//
stock bool:AntiFakeKill[MAX_PLAYERS];
//------------------------------------------------------------------------------
static const stock Fraction_Name[25][32] = {
	"Нет",
	"{0000FF}SAPD",
	"{4F4F4F}FBI",
	"{804000}ВМФ",
	"Нет",
	"{EB4318}LCN",
	"{FF0000}Yakuza",
	"Нет",
	"{BC6443}Мед. Центр",
	"{80FF00}SA News",
	"Нет",
	"Нет",
	"{800080}The Ballas",
	"{F2D00D}The Vagos",
	"{788873}Русская мафия",
	"{008000}The Grove Street",
	"Нет",
	"{07F1F8}The Aztecas",
	"{008080}The Rifa",
	"{808000}Сухопутные войска",
	"Нет",
	"Нет",
	"{73926D}Правительство",
	"{58633D}Байкеры",
	"{0080FF}Директор К.А.С.С"
};
//------------------------------ Невалидное место в т/с-------------------------
static const MaxPassengers[27] =
{
	0x10331113, 0x11311131, 0x11331313, 0x80133301,
	0x1381F110, 0x10311103, 0x10001F10, 0x11113311,
	0x13113311, 0x31101100, 0x30001301, 0x11031311,
	0x11111331, 0x10013111, 0x01131100, 0x11111110,
	0x11100031, 0x11130221, 0x33113311, 0x11111101,
	0x33101133, 0x101001F0, 0x03133111, 0xFF11113F,
	0x13330111, 0xFF131111, 0x0000FF3F
};
//----------------------------------- Радары -----------------------------------
new radarka[6];
new Float: Radari[6][3] =
{
	{1817.53, 820.76, 8.77},
	{1402.78, -1737.79, 11.22},
	{1194.49, -1846.61, 11.76},
	{167.09, -1567.70, 10.53},
	{-2001.06, 19.17, 30.69},
	{-1740.99, 323.06, 5.45}
};
//------------------------------------------------------------------------------
enum exInfo
{
	ExitName[MAX_PLAYER_NAME],
	ExitTime
};
new ExitInfo[MAX_PLAYERS][exInfo];
enum aInfo
{
	aID,            // - Unknown -
	aPlayerID,      // - Unknown -
	aModel,			//Model
	aCost,			//Цена
Float:aPos_X,		//Кордината X
Float:aPos_Y,		//Кордината Y
Float:aPos_Z,		//Кордината Z
Float:aPos_A,		//Угол поворота
	aColor_1,		//Цвет 1
	aColor_2		//Цвет 2
};
new ArendInfo[][aInfo] = //ID, Цена, Координаты X, Y, Z, Цвет 1, Цвет 2
{
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-313.9353,1504.8102,75.2836,180.4045,1,1 },// Аренда мопедов в возле тюрьмы
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-316.0894,1504.8088,75.2836,180.5294,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-317.9136,1504.8075,75.2829,182.8322,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-319.9763,1504.7788,75.2843,178.4660,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-321.7320,1504.6814,75.2890,179.7786,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-311.9659,1504.9528,75.2143,182.9305,1,1 },// Аренда мопедов в возле тюрьмы
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1241.2059,-1810.6436,13.0162,204.6956,1,1 },// Аренда мопедов на респе 1 LvL
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1242.8688,-1809.9526,13.0263,202.7106,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1244.3998,-1809.3098,13.0262,205.6540,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1245.9036,-1808.6323,13.0259,209.2083,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1247.5969,-1807.7057,13.0176,211.1788,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1249.2142,-1806.3745,13.0236,213.8829,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1250.7209,-1805.2869,13.0235,217.3202,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1252.2694,-1804.2971,13.0216,214.7709,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1253.8115,-1803.1091,13.0220,217.0794,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1255.2579,-1801.8901,13.0351,221.1393,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1256.6763,-1800.3267,13.0222,228.5322,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1257.7565,-1798.5208,13.0247,232.0457,1,1 },// Аренда мопедов на респе 1 LvL
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-755.9129,-140.2607,65.5837,199.0886,1,1 },// Аренда мопедов на работе Лесоруб
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-753.9679,-139.6786,65.6799,194.1597,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-752.1191,-139.0507,65.7708,197.2197,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-750.0171,-138.5009,65.8392,194.9109,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-747.9548,-137.7259,65.8370,198.9536,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-745.6269,-136.8929,65.8304,199.4495,1,1 },// Аренда мопедов на работе Лесоруб
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 405, 200 ,197.7728,-1438.4072,12.9541,318.1961,1,1 },// Аренда транспорта в ЛС
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 516, 300 ,200.0203,-1440.3920,12.9179,318.9618,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 526, 250 ,202.2386,-1442.3953,12.8551,319.2899,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 540, 240 ,195.4264,-1436.4419,12.9355,319.3997,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 547, 300 ,204.6403,-1444.3556,12.8294,318.8909,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 581, 300 ,209.9343,-1421.3367,12.8541,135.0267,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 426, 238 ,211.9053,-1423.4625,13.0018,133.4682,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 581, 300 ,214.4363,-1425.5819,12.8608,136.0455,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 581, 300 ,216.3041,-1427.4049,12.8649,136.0812,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 492, 400 ,218.1953,-1430.0326,13.0544,133.1536,1,1 },// Аренда транспорта в ЛС
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 540, 250 ,-1851.4349,-144.5512,11.7590,91.7405,1,1 },// Аренда транспорта в СФ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 405, 360 ,-1851.7771,-141.0268,11.7751,93.0648,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 516, 340 ,-1851.9218,-137.3061,11.7340,91.2622,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 526, 320 ,-1851.6019,-132.7045,11.6701,90.8886,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 547, 300 ,-1851.5438,-128.9175,11.6362,89.1502,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 581, 310 ,-1871.5131,-144.5488,11.4947,359.8909,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 581, 360 ,-1868.7247,-144.4499,11.4961,358.2980,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 581, 310 ,-1866.1259,-144.4412,11.4974,359.5718,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 426, 330 ,-1884.1833,-138.6192,11.6456,288.0626,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 492, 230 ,-1885.4429,-145.2911,11.6802,288.0229,1,1 },// Аренда транспорта в СФ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2640.4861,634.2452,14.0537,179.6012,1,1 },// Аренда мопедов в больнице СФ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2642.4514,634.1914,14.0528,178.9813,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2644.4089,634.1061,14.0522,179.7978,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2646.4209,634.0875,14.0526,175.0869,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2648.4961,634.0779,14.0520,179.1272,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2650.6553,633.9535,14.0528,178.4517,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2652.4373,633.9686,14.0529,181.3244,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2654.5286,633.8961,14.0532,177.4587,1,1 },// Аренда мопедов в больнице СФ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1182.3547,-1312.5765,13.1652,269.8635,1,1 },// Аренда мопедов в больнице ЛС
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1182.2584,-1314.0326,13.1686,267.4701,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1182.3270,-1315.4464,13.1729,265.9073,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1182.3374,-1316.7201,13.1749,270.9416,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1182.5369,-1317.8846,13.1770,268.6043,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1182.4497,-1329.7207,13.1803,270.7345,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1182.3673,-1331.0654,13.1826,268.7368,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1182.1056,-1333.6287,13.1800,266.9137,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1181.9801,-1335.0266,13.1777,268.5479,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1182.1791,-1332.2686,13.1824,271.3996,1,1 },// Аренда мопедов в больнице ЛС
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 1000 ,139.8764,-1925.6326,-0.3875,89.7378,1,1 },// Аренда лодок в ЛС
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 1000 ,139.9150,-1906.7075,-0.1861,90.2676,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 484, 1000 ,132.5764,-1918.0710,0.2776,0.0015,1,1 },// Аренда лодок в ЛС
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,2236.7991,-2226.7905,13.1546,48.5388,1,1 }, // Грузчики мопеды
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,2235.6187,-2227.8618,13.1534,46.7658,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,2234.3337,-2229.2358,13.1540,48.2568,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,2232.9473,-2230.5752,13.1534,46.5963,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,2231.7480,-2231.8115,13.1540,46.8155,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,2230.6270,-2232.9683,13.1535,50.7708,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2055.8638,-80.9443,34.9197,269.4978,1,1 }, // АШ мопеды
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2055.9446,-82.0102,34.9188,268.0886,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2055.9355,-83.1524,34.9195,267.4443,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2056.0164,-84.2856,34.9200,266.6043,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2055.9524,-85.3922,34.9175,269.7475,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2055.9063,-86.5087,34.9202,267.3604,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2055.9553,-87.4833,34.9187,269.2530,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-1979.6238,79.2558,27.2871,359.2897,1,1 }, // Вокзал СФ мопеды
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-1978.1981,79.2309,27.2864,358.6962,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-1976.6755,79.2639,27.2872,0.8434,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-1974.9922,79.3085,27.2870,0.6665,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-1973.6299,79.3197,27.2876,1.1627,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-1972.3192,79.5363,27.2871,0.0011,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-1971.0646,79.3465,27.2876,1.1151,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-1969.4391,79.5141,27.2867,358.3290,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-1967.9125,79.3908,27.2871,357.9669,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2272.0535,2336.2847,4.4131,269.9487,1,1 }, // Морская школа мопеды
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2271.8950,2333.3313,4.4128,269.4393,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2271.7288,2330.1311,4.4161,271.5605,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2271.7034,2327.2673,4.4197,266.7755,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2271.7058,2324.2769,4.4191,270.4931,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,-2271.6174,2321.2571,4.4171,267.9212,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1328.7943,1278.9825,10.4193,0.7766,1,1 }, // Воздушная школа мопеды
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1325.5012,1278.8561,10.4196,3.0452,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1322.1786,1278.7623,10.4140,0.1963,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1319.0419,1278.5615,10.4196,0.8072,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1315.8477,1278.5194,10.4188,0.0964,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1312.6030,1278.3477,10.4202,0.8738,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1148.1593,1387.4520,10.4210,178.1576,1,1 }, // Военкомат мопеды
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1146.0494,1387.3889,10.4196,178.6619,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1144.0884,1387.3661,10.4204,178.8934,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1142.3644,1387.1646,10.4201,180.3587,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1140.6439,1387.1182,10.4203,178.8712,1,1 },
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50 ,1138.7561,1387.0271,10.4200,178.8918,1,1 }
};
//------------------------------------------------------------------------------
stock Float:GetDistanceBetweenPoints(Float:X, Float:Y, Float:Z, Float:PointX, Float:PointY, Float:PointZ)
{
	new Float:Distance;Distance = floatabs(floatsub(X, PointX)) + floatabs(floatsub(Y, PointY)) + floatabs(floatsub(Z, PointZ));
	return Distance;
}
//------------------------------------------------------------------------------
new Float:derevo[][10] = {
	{-753.9556,-163.4130,67.2436},
	{-735.9908,-146.8210,66.9632},
	{-735.5740,-132.3860,67.2843},
	{-720.1062,-126.0154,68.5032},
	{-703.8917,-130.5843,67.5126},
	{-693.1256,-178.1568,63.5557},
	{-706.0697,-191.3586,66.7527},
	{-725.3892,-199.4397,67.5116},
	{-742.5851,-191.8586,67.6204},
	{-779.2603,-167.4661,66.6257}
};

new SkinMen[][2] ={
	{1,500},
	{15,500},
	{25,500},
	{36,500},
	{50,500},
	{95,500},
	{96,500},
	{143,500},
	{155,500},
	{32,1000},
	{20,1000},
	{43,2500},
	{44,2500},
	{58,5000},
	{72,5000},
	{94,5000}
};
new SkinMale[][2] ={
	{38, 1000},
	{39, 1000},
	{41, 5000},
	{77, 5000},
	{85, 5000},
	{88, 5000},
	{89, 5000},
	{129, 5000},
	{130, 5000},
    {192, 10000},
    {216, 20000}
};
new SkinMen1[][2] ={
	{2,15000},
	{3,15000},
	{24,15000},
	{35,15000},
	{213,15000},
	{58,25000},
	{97,25000},
	{154,25000},
	{206,25000},
	{229,25000},
	{7,25000},
	{23,25000},
	{33,25000},
	{182,25000},
	{60,25000},
	{67,25000},
	{73,30000},
	{184,30000},
	{220,30000},
	{234,40000},
	{236,40000},
	{21,45000},
	{22,45000},
	{30,45000},
	{183,45000},
	{242,45000},
	{3,50000},
	{6,50000},
	{8,50000},
	{42,50000},
	{45,50000},
	{156,50000},
	{221,50000},
	{222,50000}
};
new SkinMale1[][2] ={
	{87,30000},
	{90,30000},
	{256,30000},
	{257,30000},
	{193,30000},
	{246,40000},
	{169,40000},
	{55,40000},
	{224, 50000}

};
new SkinMen2[][2] ={
	{82,60000},
	{83,60000},
	{84,60000},
	{185,60000},
	{290,60000},
	{291,60000},
	{28,65000},
	{29,65000},
	{249,65000},
	{18,75000},
	{19,75000},
	{47,75000},
	{46,100000},
	{101,100000},
	{292,100000},
	{293,100000},
	{294,100000},
	{296,150000},
	{297,150000},
	{299,150000},
	{241,200000},
	{242,200000}
};
new SkinMale2[][2] ={
	{225,20000},
	{12,30000},
	{192,40000},
	{237,25000},
	{194,35000},
	{198,10000},
	{215,20000},
	{91, 50000}
};
enum adInfo
{
	adPhone,
	adText[128],
	adName[MAX_PLAYER_NAME]
};
new AdvertInfo[30][3][adInfo];
//------------------------------------------------------------------------------
enum nZoneInfo
{
	nID,
Float:nX,
Float:nY,
Float:nZ,
	nZasev,
	nWait,
Text3D:nLabel,
	nSobrat,
	nObject,
	nPickup
}
new NarkoInfo[49][nZoneInfo],NARKO;
//------------------------------------------------------------------------------
new player_family[MAX_PLAYERS];
enum _fam_enum_
{
	f_id,
	f_name[32],
	f_chat_color,
	f_creator[MAX_PLAYER_NAME],
	f_creating_data[32],
	f_online
}
new family_info[200][_fam_enum_];

new family_count = 0;

new family_chat_color[5][12] =
{
	"FF0000","FF1493","FFFF00","FF4500","008000"
};
//------------------------------------------------------------------------------
new Float:mestospawna[3][4] = {
	{1219.2566,-1814.6709,16.5938,267.5163},
	{1219.2566,-1814.6709,16.5938,267.5163},
	{1219.2566,-1814.6709,16.5938,267.5163}
};
new Float:mestospawnaa[3][4] = {
	{-1968.3754,116.5747,27.6875,7.6848},
	{-1968.3754,116.5747,27.6875,7.6848},
	{-1968.3754,116.5747,27.6875,7.6848}
};
new VehicleNames[212][] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Perrenial","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
	"Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr.Whoopee","BF Injection",
	"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
	"Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Barron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","Zr-350","Walton","Regina",
	"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring A","Hotring B",
	"Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain",
	"Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
	"Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
	"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car","Police Car",
	"Police Car","Police Ranger","Picador","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","L Trailer A","L Trailer B",
	"Stair Trailer","Boxville","Farm Plow","U Trailer"
};
//------------------------------------------------------------------------------
enum _pl
{
	PEfir,
	Pefir,
	gcontract,
	cenabenza,
	HealPrice,
	HealOffer,
	InviteOffer,
	DrugPrice,
	DrugGram,
	CarOffer,
	CarOffer2,
	CarPrice,
	CarPrice2,
	GMNameAdmin,
	RepairOffer,
	RepairPrice,
	RefillOffer,
	RefillPrice,
	RepairCar,
	PlayerTied,
	LiveOffer,
	ChosenSkin,
	CP,
	DrugOffer,
	GruzCP,
	usemats,
	useguns,
	PoliceCallTime,
	MechanicCallTime,
	TaxiCallTime,
	SelectCharPlace,
	gLogin,
	Tel,
	chisttimer,
	ProposeOffer,
	world,
	world1,
	world2,
	ZoneOffer,
	ZonePrice,
	sellzone,
	BizOffer,
	BizPrice,
	sellbiz,
	JobAmmount,
	Employer,
	Employert,
	TicketOffer,
	TicketMoney,
	enterbiz,
	creatcar,
	getgunsid,
	spawnEx,
	crashtick,
	PlayerDrunk,
	oldpickup,
	MatsOffer,
	MatsPrice,
	MatsGram,
Float:PickupX,
Float:PickupY,
Float:PlayerHealth,
Float:TeleportDest[3],
Float:TelePos[6],
PlayerText:Speed,
PlayerText:SpeedShow,
PlayerText:FuelShow,
PlayerText:StatusShow,
PlayerText:KMShow,
PlayerText:FillShow,
PlayerText:CarHPShow,
PlayerText:IndCarHP,
PlayerText:FULLRECON,
PlayerText:boxre,
bool:Operation
}
new FL[MAX_PLAYERS][_pl];
//---------------------------- Система поднятия оружия -------------------------
new GunObjects[47] =
{
	0, 331, 333, 334, 335, 336, 337, 338, 339, 341, 321, 322, 323, 324, 325, 326,
	342, 343, 344, 0, 0, 0, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 372,
	357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 368, 371
};
enum GunEnum
{
Float:ObjPos[3],
	ObjID,
	ObjData[2],
	Virtual,
	Interior,
Text3D:Label

};
new GunInfo[MAX_DROP_GUN][GunEnum];
//------------------------------------------------------------------------------
new legalmods[48][22] = {
	{400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
	{404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
	{492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
	{500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
	{518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
	{527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
	{534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
	{535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
	{536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
	{540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
	{542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
	{547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
	{550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
	{551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
	{558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
	{559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
	{560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
	{561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
	{562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
	{565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
	{567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
	{575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
	{600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
};

enum fInfo
{
	fSfnews,
	fKazna,
	fBMoney,
	fBDrugs,
	fBMats,
	fVMoney,
	fVDrugs,
	fVMats,
	fGMoney,
	fGDrugs,
	fGMats,
	fCMoney,
	fCDrugs,
	fCMats,
	fRMoney,
	fRDrugs,
	fRMats,
	farmmatbi,
	farmmatsf,
	flspdmatbi,
	ffbimats,
	fyakuzamats,
	frmmats,
	flcnmats,
	fsfpdmats,
	flvpdmats,
	fMMoney,
	fMDrugs,
	fMMats,
	fzmatbi,
	fzsklad,
	fsklballas,
	fsklvagos,
	fsklgrove,
	fsklaztec,
	fsklrifa,
	fsklbiker,
	fskllcn,
	fsklyak,
	fsklrus,
	pCena,
	pKol,
	pSuma,
	pCena2,
	pKol2,
	pSuma2,
	nLcn,
	nYakuza,
	nRm,
	lspdbenz,
	fbibenz,
	vmfbenz,
	medsfbenz,
	lcnbenz,
	yakuzabenz,
	medlsbenz,
	ballasbenz,
	vagosbenz,
	pmbenz,
	grovebenz,
	aztecbenz,
	rifabenz,
	zonabenz,
	pravbenz,
	bikerbenz,
	kassbenz,
	kassnafta,
	kassbenzce,
	sfpdbenz,
	nFond,
	musorbak1,
	musorbak2,
	musorbak3,
	musorbak4,
	musorbak5,
	musorbak6,
	musorbak7
};
new FracBank[1][fInfo];

enum bInfo
{
	bID,
	bOwned,
	bOwner[64],
	bMessage[20],
Float:bEntranceX,
Float:bEntranceY,
Float:bEntranceZ,
Float:bExitX,
Float:bExitY,
Float:bExitZ,
	bBuyPrice,
	bTill,
	bLocked,
	bInterior,
	bProducts,
Text3D: bLabel,
	b2Till,
	bTovar1,//товар
	bTovar2,//товар
	bTovar3,//товар
	bTovar4,//товар
	bTovar5,//товар
	bTovar6,//товар
	bTovar7,//товар
	bTovar8,//товар
	bTovar9,//товар
	bTovar10,//товар
	bTovar11,//товар
	bTovar12,//товар
	bTovar13,//товар
	bTovar14,//бензин
Float:bBarX,
Float:bBarY,
Float:bBarZ,
	bMafia,
	bCapture,
	bType,
	bLockTime,
	pBizLic,
	bVirtualWorld,
	bEntranceCost,
	caKrupie1[32],
	caKrupie2[32],
	caKrupie3[32],
	caKrupie4[32],
	caKrupie5[32]
};
new BizzInfo[55][bInfo];

enum vInfo
{
	vID,
	vOwned,
	vOwner[64],
	vMessage[20],
Float:vEntranceX,
Float:vEntranceY,
Float:vEntranceZ,
	vBuyPrice,
	vTill,
	vLocked,
	vProducts,
Text3D: vLabel,
	v2Till,
	vLockTime,
Float:vBarX,
Float:vBarY,
Float:vBarZ,
    vPickup
};
new AvtoMInfo[5][vInfo];
//------------------------------------------------------------------------------
enum cainfo
{
Float:callx,
Float:cally,
Float:callz,
	callused
};
new CallInfo[MAX_PLAYERS][cainfo];
//------------------------------------------------------------------------------
publics: IsVehicleOccupied(vehicleid)
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(IsPlayerInVehicle(i,vehicleid)) return i;
	}
	return -1;
}

publics: AddictionTimer(playerid) return SetPlayerWeather(playerid,10);

stock DestroyVehicleEx(vehicleid)
{
	DestroyVehicle(vehicleid);
	if(LightsObject[vehicleid][0] != -1 || LightsObject[vehicleid][1] != -1 || (LightsObject[vehicleid][2] != -1 && LightsObject[vehicleid][3] != -1))
  	{
		if(LightsObject[vehicleid][0] != -1) DestroyDynamicObject(LightsObject[vehicleid][0]), LightsObject[vehicleid][0] = -1;
        if(LightsObject[vehicleid][1] != -1) DestroyDynamicObject(LightsObject[vehicleid][1]), LightsObject[vehicleid][1] = -1;
        if(LightsObject[vehicleid][2] != -1) DestroyDynamicObject(LightsObject[vehicleid][2]), LightsObject[vehicleid][2] = -1;
        if(LightsObject[vehicleid][3] != -1) DestroyDynamicObject(LightsObject[vehicleid][3]), LightsObject[vehicleid][3] = -1;
		SignalTick[vehicleid][0] = 0;
		SignalTick[vehicleid][1] = -1;
		Signal[vehicleid] = 0;
	}
	return 1;
}
#define	DestroyVehicle DestroyVehicleEx

stock Float:fmax(Float:v1, Float:v2) return v1 > v2?v1:v2;
stock Float:fmin(Float:v1, Float:v2) return v1 < v2?v1:v2;
stock Float:jfloatsub(Float:value1, Float:value2)
{
	new Float:num1 = fmax(value1, value2);
	new Float:num2 = fmin(value1, value2);
	new Float:diff = (num1 - num2);
	if(diff > 300.0) diff = (360.0 - num1) + num2;
	return diff;
}

stock SPDEx(playerid, dialogid, style, caption[], info[], button1[], button2[])
{
	ShowPlayerDialog(playerid, dialogid, style,caption, info, button1, button2);
	SetPVarInt(playerid, "USEDIALOGID", dialogid);
	return 1;
}

stock Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
new Float:gInviteSpawns[0][4] = {
	{199.4940,-35.2287,1002.3040,270.4601}
};
//----------------------------------- Автошкола --------------------------------
new CarLesson[MAX_PLAYERS], pLessonCar[MAX_PLAYERS];
//--------------------------------- Морская школа ------------------------------
new BoatLesson[MAX_PLAYERS], pLessonBoat[MAX_PLAYERS];
//----------------------------------- Авиашкола --------------------------------
new FlyLesson[MAX_PLAYERS], pLessonFly[MAX_PLAYERS];
//------------------------------------------------------------------------------
new pdddialogMSG[13][] = {
	{"<< 1. Общие правила >>\n\n"},
	{"Обгон транспортного средства разрешен только с левой стороны,\n"},
	{"при этом водители обязаны убедиться, что встречная полоса свободна на достаточном для обгона расстояние.\n"},
	{"При ДТП водители обязаны позвонить в полицию, и дождаться ДПС\n\n"},
	{"<< 2. Скорость движения >> \n\n"},
	{"В переделах города разрешается движение транспортных средств со скоростью не более 50 км/ч.\n"},
	{"В жилых зонах и на дворовых территориях не более 30 км/ч\n\n"},
	{"<< 3. Остановка и стоянка >>\n\n"},
	{"Остановка и стоянка транспортных средств разрешаются на правой стороне дороги на обочине.\n"},
	{"В специальных отведённых для этого местах\n\n"},
	{"<< 4. ДПС >> \n\n"},
	{"При виде автомобиля с включённой сереной, водитель обязан сбавить скорость и прижаться к обочине.\n"},
	{"Водитель обязан предъявить паспорт/лицензии, если тот попросил"}
};
new RulesMSG[17][] = {
	{"{008080}1. Игровой процесс\n"},
	{"{AA3333}Запрещено:\n"},
	{"{ffffff}Использование любых программ скриптов читов и.т.п. дающие нечестное преймущество в игре.\n"},
	{"{ffffff}Использование багов (Ошибок, Неисправностей мода).\n"},
	{"{ffffff}Использовать ESC в целях ухода от погони/смерти.\n"},
	{"{ffffff}Убивать игроков на спавне (Место возрождения, базы организаций).\n"},
	{"{ffffff}Убивать игроков при помощи транспорта (Давить, Стрелять с водительского места).\n"},
	{"{ffffff}Убийство/нанесение физического вреда игрокам без причины (ДМ - Death Match).\n"},
	{"{ffffff}Злоупотребление игровыми возможностями для создания неудобств игрокам.\n\n"},
	{"{008080}2. Ник в игре\n"},
	{"{ffffff}(сменить ник можно через /mm >> Сменить ник)\n"},
	{"{ffffff}Ник должен состоять из Имени_Фамилии с заглавных букв.\n"},
	{"{AA3333}Запрещено:\n"},
	{"{ffffff}Запрещено использовать чужие (уже кем-то занятые) ники.\n"},
	{"{ffffff}Запрещено использовать ники, содержащие нецензурные или оскорбительные слова.\n"},
	{"{ffffff}Отправлять более одной заявки в час (Исключение: Просьба Администрации).\n"},
	{"{ffffff}Если Вам отказали в смене ника, Значит нельзя.\n"}
};
new RulesMSGG[22][] = {
	{"{008080}3. Чат\n"},
	{"{ffffff}OOC (Out Of Charter) - это всё, что касается реального мира.\n"},
	{"{ffffff}IC (In Charter) - это всё, что касается виртульного мира, то есть игры.\n"},
	{"{AA3333}Запрещено:\n"},
	{"{ffffff}Ругательство, оскорбления или нецензурная речь.\n"},
	{"{ffffff}Угрозы игрокам (Не относящиеся к игровому процессу).\n"},
	{"{ffffff}Писать сообщения в верхнем регистре (Caps Lock).\n"},
	{"{ffffff}Писать в чат объявлений сообщения не относящихся к Role Play.\n"},
	{"{ffffff}Писать одно и тоже сообщение слишком часто.\n"},
	{"{ffffff}Обсуждать, критиковать действия администрации.\n"},
	{"{ffffff}Реклама сторонних ресурсов.\n\n"},
	{"{008080}4. Администрация сервера\n"},
	{"{ffffff}Необходимо сообщать администрации о каких либо нарушениях из данных правил (/mm > Связь с Администрацией).\n"},
	{"{ffffff}Администрация самостоятельно выбирает штрафные санкции для каждого из случаев.\n"},
	{"{ffffff}Запрещено препятствовать администрации в работе.\n"},
	{"{ffffff}Решение администрации является окончательным и не подлежит обсуждению.\n\n"},
	{"{008080}5. Торговля.\n"},
	{"{ffffff}Запрещены любые денежные махинации.\n"},
	{"{ffffff}Запрещена продажа / покупка чего либо, за реальные деньги.\n"},
	{"{ffffff}Запрещен обмен внеигровых предметов в любой форме, на игровые.\n"},
	{"{ffffff}Запрещен обмен чего либо между игровыми серверами.\n"},
	{"{ffffff}Запрещена продажа / передача аккаунтов.\n"}
};
enum pInfo
{
	pName[24],
	pKey[32],
	pLevel,
	pForma,
	pBSA,
	pMestoJail,
	pSong,
	pIp[32],
	pvIp[32],
	pIpReg[32],
	pHousecash,
	pText,
	Float:pHP,
	pDataReg[12],
	pCar1,
	pCar2,
	pCar3,
	Float:pFuelcar,
	pProcents,
	pDonateRank,
	pDonatemoney,
	pMats,
	pSex,
	pArrested,
	pMuted,
	pExp,
	pCash,
	pKills,
	pPayCheck,
	pJailed,
	pJailTime,
	pDrugs,
	pLeader,
	pMember,
	pRank,
	pSAPD,
	pMedic,
	pChar[3],
	pJob,
	pVoenBil,
	pMedKarta,
	pInt,
	pLocal,
	pModel,
	pPnumber,
	pPhoneBook,
	pDirectory,
	pVhoddata,
	pVhodMes,
	pVhodchas,
	pVhodminute,
	pCarLic,
	pFlyLic,
	pBoatLic,
	pGunLic,
	pBizLic,
	pPhousekey,
	pPbiskey,
	pZakonp,
	pAddiction,
	pNarcoLomka,
	pPayDay,
	pPayDayHad,
	pTut,
	pWarns,
	punWarns,
	punWarnstime,
	pFuel,
	pMarried,
	pMarriedTo[24],
	pDrug[24],
	pMuteTime,
	pBank,
	pBanDay,
	pBanMounth,
	pMobile,
	pDostup[32],
	pLocked,
	pDolg,
	pKrisha,
	pUseKrisha,
	pWantedLevel,
	pGunSkill[6],
	pBoxstyle,
	pKstyle,
	pKickstyle,
	pBoxSkill,
	pKongfuSkill,
	pKickboxSkill,
	pWheels,
	pPaintJob,
	pSpoiler,
	pBumper1,
	pBumper2,
	pColor[2],
	pNitro,
	pHydrawlic,
	pUbka,
	pVozduh,
	pVihlop,
	pOnline[12],
	pViborChar,
	pChas,
	pMin,
	pLogin,
	pLighter,
	pCigarettes,
	pRobHouse,
	pGolod,
	pReport,
	pPviskey,
	pPhotelkey,
	pWheels1,
	pPaintJob1,
	pSpoiler1,
	pBumper11,
	pBumper21,
	pColor1[2],
	pNitro1,
	pHydrawlic1,
	pUbka11,
	pVozduh11,
	pVihlop11,
	pVent12,
	pVent22,
	pProcents2,
	pColor3[2],
	ptaxiexp,
	ptaxilvl,
	Float:pFuelcar1,
	pFLeader,
	pVbiltime,
	pStraf,
	pPassport,
	pClock,
	pRadio,
	pGiveExp,
	pGuns[11],
	pWeapons[32],
	pAmmos[11],
	pAmmo[32],
	pOFFDMG,
	pNameAdmin[24],
	pCause[50],
	pOFFMute,
	pAdminMute[24],
	pCauseMute[50],
	pBanAdmin[24],
	pBanInfo[50],
	pEmailStat,
	pEmail[64],
	pPinStat,
	pPinCode,
	pSPChange,
    pHospLS,
    pHospSF,
    pSiteSkin,
	pQuest[17],// Последняя переменная в БД
	pNkeys,
	pDrugtime,
	Float:pPos_x,
	Float:pPos_y,
	Float:pPos_z,
	pPkeys,
	pFlr,
	pMaska,
	pDM,
	bool:kaptmafia,
	bool:kaptbanda,
	pHeal,
	pHospital
};
new PI[MAX_PLAYERS][pInfo];
#define Name(%1) PI[%1][pName]

stock t_SetPlayerPos(playerid, Float:x, Float:y, Float:z)
{
	SetPVarInt(playerid,"Anti_Cheats",gettime() + 5);
	PI[ playerid ][ pPos_x ] = x;
	PI[ playerid ][ pPos_y ] = y;
	PI[ playerid ][ pPos_z ] = z;
	return SetPlayerPos( playerid, x, y, z );
}
stock t_SetVehiclePos(vehicleid, Float:x, Float:y, Float:z)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && IsPlayerInVehicle(i, vehicleid))
		{
			SetPVarInt(i,"Anti_Cheats",gettime() + 5);
			PI[i][pPos_x] = x;
			PI[i][pPos_y] = y;
			PI[i][pPos_z] = z;
		}
	}
	return SetVehiclePos(vehicleid, x, y, z);
}
#define SetPlayerPos t_SetPlayerPos
#define SetVehiclePos t_SetVehiclePos

enum PickInfo
{
Float: PickX,
Float: PickY,
Float: PickZ
}
new PickupInfo[MAX_PICKUPS][PickInfo];

CreatePickupAC(model, type, Float:X, Float:Y, Float:Z, virtualworld = 0)
{
	new TempID = CreateDynamicPickup(model, type, X, Y, Z, virtualworld);
	PickupInfo[TempID][PickX] = X;
	PickupInfo[TempID][PickY] = Y;
	PickupInfo[TempID][PickZ] = Z;
	return TempID;
}
#define CreatePickup CreatePickupAC
//
stock Float:GetVehicleHealthEx(vehicleid)
{
    new Float:health;
	GetVehicleHealth(vehicleid, health);
    if(health > 900.0)
	{
    	return health / 10.0;
    }
    else return ( health / 10.0 )-(24);
}
//------------------------------------------------------------------------------
enum hInfo
{
Float:hEntrancex,
Float:hEntrancey,
Float:hEntrancez,
Float:hExitx,
Float:hExity,
Float:hExitz,
Float:hCarx,
Float:hCary,
Float:hCarz,
Float:hCarc,
	hOwner[24],
	hValue,
	hHel,
	hInt,
	hLock,
	hOwned,
	hTakings,
	hKlass,
	hGarage,
	hGun[7],
	hGunAmmo[7],
	hNarko,
	hPickup,
	hMIcon,
	hID
};
new House[875][hInfo];
//------------------------------------------------------------------------------
enum oInfo
{
Float:oEntrancex,
Float:oEntrancey,
Float:oEntrancez,
Float:oExitx,
Float:oExity,
Float:oExitz,
Float:oCarx,
Float:oCary,
Float:oCarz,
Float:oCarc,
	oOwner[24],
	oValue,
	oInt,
	oVirt,
	oLock,
	oOwned,
	oTakings,
	virtmir,
	oPickup,
	oID
};
new HotelInfo[249][oInfo];
//
enum podInfo
{
	pid,
Float:podPicX,
Float:podPicY,
Float:podPicZ,
	podEtazi,
	podMir[50],
	podPic
};
new PodeezdInfo[5][podInfo], AllPODEZD, ALLPODEZD;
//------------------------------------------------------------------------------
enum pMatss
{
	gBallas,
	gVagos,
	gGrove,
	gAztek,
	gRifa
};
new Furi[1][pMatss];
//------------------------------------------------------------------------------
enum pMBike
{
	gBiker
};
new Furgon[2][pMBike];
//------------------------------------------------------------------------------
enum pMatZ
{
	mLoadZ,
	mCapasityZ
};
new MatHaulZ[5][pMatZ];
//------------------------------------------------------------------------------
enum pMatF
{
	mLoadF,
	mCapasityF
};
new MatHaulF[5][pMatF];
//------------------------------------------------------------------------------
enum pArTr
{
	mArLoad,
	mCaparmy
};
new MatArmy[6][pArTr];
//------------------------------------------------------------------------------
enum pMusor
{
    MusGruz,
    MusCarWork
};
new MusorWork[5][pMusor];
//------------------------------------------------------------------------------
new JoinPed[8][1] = {
	{2},  //  0   мужик (регистрация)
	{15},  //  1   мужик (регистрация)
	{26},  //  2   мужик (регистрация)
	{36},  //  3   мужик (регистрация)
	{96},  //   4   мужик (регистрация)
	{143},  //   5   мужик (регистрация)
	{90},  //   6   Девушка (регистрация)
	{55}  //    7   Девушка (регистрация)
};

stock NoNalog(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = PI[playerid][pLeader];
	new member = PI[playerid][pMember];
	new job = PI[playerid][pJob];
	new krish = PI[playerid][pKrisha];
	if(member == 5 || member == 6 || member == 12 || member==13 || member == 14|| member == 15|| member == 17 || member == 18 || member == 23) return true;
	if(leader == 5 || leader == 6 || leader == 12 || leader==13 || leader == 14|| leader == 15|| leader == 17 || leader == 18 || leader == 23) return true;
	if(member == 0 && job == 0) return true;
	if(member == 0 && krish > 0) return true;
	return false;
}
stock IsAMafia(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = PI[playerid][pLeader];
	new member = PI[playerid][pMember];
	if(member == 5 || member == 6 || member == 14) return true;
	if(leader == 5|| leader == 6 || leader == 14) return true;
	return false;
}
stock IsAmbike(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = PI[playerid][pLeader];
	new member = PI[playerid][pMember];
	if(member == 23) return true;
	if(leader == 23) return true;
	return false;
}
stock IsAGang(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = PI[playerid][pLeader];
	new member = PI[playerid][pMember];
	if(member==12 || member==13 || member==15 || member==17 || member==18) return true;
	if(leader==12 || leader==13 || leader==15 || leader==17 || leader==18) return true;
	return false;
}
new Peds[57][1] = {
	{79},
	{254},{259},{249},{248},{247},{242},{239},{228},
	{185},{184},{160},{155},{135},{126},{122},{121},{101},
	{100},{96},{82},{83},{84},{294},{94},{73},{67},
	{28},{29},{24},{23},{22},{21},
	{20},{19},{18},{17},{15},
	{7},{2},{299},{297},{296},{293},{46},
	{198},{197},{196},
	{190},{193},{243},{178},{192},{199},{201},{214},
	{224}
};
stock PrintBizInfo(playerid,targetid)
{
	new mafiatext[10], string[512];
	if(BizzInfo[targetid][bMafia] == 6) mafiatext = "Yakuza";
	else if(BizzInfo[targetid][bMafia] == 14) mafiatext = "RM";
	else if(BizzInfo[targetid][bMafia] == 5) mafiatext = "LCN";
	else if(BizzInfo[targetid][bMafia] == 0) mafiatext = "Нет";
	if(BizzInfo[targetid][bType] != 4)
	{
		format(string,512, "Название: %s\n\nТоваров: %d/2000\n\nБюджет: $%d\nКасса за электричество: $%d\nНалог за электроэнергию: $100\n\nПод контролем: %s\nСостояние: %s\nЛицензия: %s\nЧасы простоя: %d час(а/ов)",
		BizzInfo[targetid][bMessage],BizzInfo[targetid][bProducts],BizzInfo[targetid][b2Till],BizzInfo[targetid][bTill],mafiatext,(!BizzInfo[targetid][bLocked])?("Открыт") : ("Закрыт"),(!BizzInfo[targetid][pBizLic])?("Отсутствует") : ("Присутствует"),BizzInfo[targetid][bLockTime]);
		SPDEx(playerid,1062,0, "Cостояние бизнеса",string, "$", "$");
	}
	else
	{
		format(string,512, "Название: %s\n\nТоплива: %d/20000\nЦена бензина: $%d\n\nБюджет: $%d\nКасса за электричество: $%d\nНалог за электроэнергию: $100\n\nПод контролем: %s\nСостояние: %s\nЛицензия: %s\nЧасы простоя: %d час(а/ов)",
		BizzInfo[targetid][bMessage],BizzInfo[targetid][bProducts],BizzInfo[targetid][bTovar14],BizzInfo[targetid][b2Till],BizzInfo[targetid][bTill],mafiatext,(!BizzInfo[targetid][bLocked])?("Открыт") : ("Закрыт"),(!BizzInfo[targetid][pBizLic])?("Отсутствует") : ("Присутствует"),BizzInfo[targetid][bLockTime]);
		SPDEx(playerid,1063,0, "Cостояние бизнеса",string, "$", "$");
	}
}

stock PrintMastInfo(playerid,targetid)
{
	new string[350];
	format(string,350,"%s\n\nВсего заработано: %d\n\nБаланс банка для оплаты энергии: $%d\nНалог за электроэнергию: $200\n\nСостояние: %s\nЗапчасти: %d/50000\nЧасы простоя: %d час(а/ов)\n\nЦена: $3.100.000",
	AvtoMInfo[targetid][vMessage],AvtoMInfo[targetid][v2Till],AvtoMInfo[targetid][vTill],(!AvtoMInfo[targetid][vLocked])?("Открыта") : ("Закрыта"),AvtoMInfo[targetid][vProducts],AvtoMInfo[targetid][vLockTime]);
	SPDEx(playerid,1064,0,"Cостояние автомастерской",string,"X","");
}
stock AntiParkovka(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,9,1474.7435,-1748.5330,13.5469) || IsPlayerInRangeOfPoint(playerid,9,-2043.7283,-83.5429,35.1641) || IsPlayerInRangeOfPoint(playerid,9,-2050.4612,-94.1704,35.1718) ||
			IsPlayerInRangeOfPoint(playerid,9,-2037.1213,-96.7359,35.1641) || IsPlayerInRangeOfPoint(playerid,9,-2025.0549,-98.1995,35.1641) || IsPlayerInRangeOfPoint(playerid,9,1243.4534,-1817.6663,13.4161) ||
			IsPlayerInRangeOfPoint(playerid,9,1251.8638,-1828.6849,13.3992) || IsPlayerInRangeOfPoint(playerid,9,1254.5646,-1814.8708,13.4107) ||
			IsPlayerInRangeOfPoint(playerid,9,1447.0629,-1734.4830,13.3828) || IsPlayerInRangeOfPoint(playerid,9,1462.1543,-1734.5499,13.3828) || IsPlayerInRangeOfPoint(playerid,9,1484.4880,-1735.2356,13.3828)){return true;}
	if(IsPlayerInRangeOfPoint(playerid,8,1412.2250,-1703.4980,13.5395) || IsPlayerInRangeOfPoint(playerid,9,1475.5748,-1700.3610,14.0469)){return true;}
	if(IsPlayerInRangeOfPoint(playerid,8,1312.1475,-1370.4679,13.5788) || IsPlayerInRangeOfPoint(playerid,9,1541.9255,-1625.5852,13.3828)){return true;}
	return false;
}
stock BuyHouse(h)
{
	if(House[h][hOwned] == 0)
	{
		DestroyDynamicMapIcon(House[h][hMIcon]);
		DestroyDynamicPickup(House[h][hPickup]);
		House[h][hPickup] = CreatePickup(1273, 23, House[h][hEntrancex], House[h][hEntrancey], House[h][hEntrancez],-1);
		pickups++;
		House[h][hMIcon] = CreateDynamicMapIcon(House[h][hEntrancex], House[h][hEntrancey], House[h][hEntrancez], 31, COLOR_WHITE, 0, -1, -1);
	}
	if(House[h][hOwned] == 1)
	{
		DestroyDynamicMapIcon(House[h][hMIcon]);
		DestroyDynamicPickup(House[h][hPickup]);
		House[h][hPickup] = CreatePickup(1272, 23, House[h][hEntrancex], House[h][hEntrancey], House[h][hEntrancez],-1);
		pickups++;
		House[h][hMIcon] = CreateDynamicMapIcon(House[h][hEntrancex], House[h][hEntrancey], House[h][hEntrancez], 32, COLOR_WHITE, 0, -1, -1);
	}
	return true;
}
stock BuyHotel(o)
{
	if(HotelInfo[o][oOwned] == 0)
	{
		DestroyDynamicPickup(HotelInfo[o][oPickup]);
		HotelInfo[o][oPickup] = CreatePickup(1239, 23, HotelInfo[o][oEntrancex], HotelInfo[o][oEntrancey], HotelInfo[o][oEntrancez], HotelInfo[o][oVirt]);
		pickups++;
	}
	if(HotelInfo[o][oOwned] == 1)
	{
		DestroyDynamicPickup(HotelInfo[o][oPickup]);
		HotelInfo[o][oPickup] = CreatePickup(1559, 23, HotelInfo[o][oEntrancex], HotelInfo[o][oEntrancey], HotelInfo[o][oEntrancez], HotelInfo[o][oVirt]);
		pickups++;
	}
	return true;
}

main()
{
	#include <Mapping>
	return 1;
}

publics: HPCheck()
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(PI[i][pLogin] == 0) continue;
		if(!IsAPlane(GetPlayerVehicleID(i)) && !IsABoat(GetPlayerVehicleID(i)) && !IsABike(GetPlayerVehicleID(i)) && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == PLAYER_STATE_DRIVER && zavodis[GetPlayerVehicleID(i)] == 1)
		{
			if(VehiclePlayer(GetPlayerVehicleID(i)) != -1 && PI[VehiclePlayer(GetPlayerVehicleID(i))][pProcents] < 70 && PI[VehiclePlayer(GetPlayerVehicleID(i))][pProcents] > 50) Fuell[GetPlayerVehicleID(i)] -= 2.0000, PI[VehiclePlayer(GetPlayerVehicleID(i))][pFuelcar] = Fuell[GetPlayerVehicleID(i)];
			else if(VehiclePlayer(GetPlayerVehicleID(i)) != -1 && PI[VehiclePlayer(GetPlayerVehicleID(i))][pProcents] < 50 && PI[VehiclePlayer(GetPlayerVehicleID(i))][pProcents] > 20) Fuell[GetPlayerVehicleID(i)] -= 2.0000, PI[VehiclePlayer(GetPlayerVehicleID(i))][pFuelcar] = Fuell[GetPlayerVehicleID(i)];
			else if(VehiclePlayer(GetPlayerVehicleID(i)) != -1 && PI[VehiclePlayer(GetPlayerVehicleID(i))][pProcents] < 20) Fuell[GetPlayerVehicleID(i)] -= 2.0000, PI[VehiclePlayer(GetPlayerVehicleID(i))][pFuelcar] = Fuell[GetPlayerVehicleID(i)];
			else if(VehiclePlayer(GetPlayerVehicleID(i)) == -1 || PI[VehiclePlayer(GetPlayerVehicleID(i))][pProcents] > 70) Fuell[GetPlayerVehicleID(i)] -= 2.0000;
		}
		if(!IsAPlane(GetPlayerVehicleID(i)) && !IsABoat(GetPlayerVehicleID(i)) && !IsABike(GetPlayerVehicleID(i)) && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == PLAYER_STATE_DRIVER && zavodis[GetPlayerVehicleID(i)] == 1)
		{
			if(VehiclePlayer(GetPlayerVehicleID(i)) != -1 && PI[VehiclePlayer(GetPlayerVehicleID(i))][pProcents2] < 70 && PI[VehiclePlayer(GetPlayerVehicleID(i))][pProcents2] > 50) Fuell[GetPlayerVehicleID(i)] -= 2.0000, PI[VehiclePlayer(GetPlayerVehicleID(i))][pFuelcar1] = Fuell[GetPlayerVehicleID(i)];
			else if(VehiclePlayer(GetPlayerVehicleID(i)) != -1 && PI[VehiclePlayer(GetPlayerVehicleID(i))][pProcents2] < 50 && PI[VehiclePlayer(GetPlayerVehicleID(i))][pProcents2] > 20) Fuell[GetPlayerVehicleID(i)] -= 2.0000, PI[VehiclePlayer(GetPlayerVehicleID(i))][pFuelcar1] = Fuell[GetPlayerVehicleID(i)];
			else if(VehiclePlayer(GetPlayerVehicleID(i)) != -1 && PI[VehiclePlayer(GetPlayerVehicleID(i))][pProcents2] < 20) Fuell[GetPlayerVehicleID(i)] -= 2.0000, PI[VehiclePlayer(GetPlayerVehicleID(i))][pFuelcar1] = Fuell[GetPlayerVehicleID(i)];
			else if(VehiclePlayer(GetPlayerVehicleID(i)) == -1 || PI[VehiclePlayer(GetPlayerVehicleID(i))][pProcents2] > 70) Fuell[GetPlayerVehicleID(i)] -= 2.0000;
		}
		//
		PI[i][pMin]++;
		if(PI[i][pMin] >= 60) PI[i][pChas]++, PI[i][pMin] = 0;
		//
		if(PI[i][pGolod] <= 0 && PI[i][pBSA] == 0)
		{
		    new Float:health;
			GetPlayerHealth(i,health);
			SetPlayerHealthAC(i, health - 5.0);
			SCM(i,COLOR_MUSICA,"Вы проголодались. Посетите бар или закусочную. Индикатор голода: /hunger");
		}
		else PI[i][pGolod] -= 5;
	}
	return true;
}
stock SetPlayerCash(playerid, money)
{
	PI[playerid][pCash] = money;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, PI[playerid][pCash]);
	return 1;
}

stock ResetCarInfo(playerid)
{
    IDVEH[playerid] = -1;
    UseEnter[playerid] = false;
}
stock PutPlayerInVehicleEx(playerid, vehicleid, seatid)
{
    UseEnter[playerid] = false;
    IDVEH[playerid] = vehicleid;
    PutPlayerInVehicle(playerid, vehicleid, seatid);
    return true;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
    DeletePVar(playerid, "CarID");
	SetPVarInt(playerid, "CarID",GetVehicleModel(vehicleid));
	//
	UseEnter[playerid] = true;
 	IDVEH[playerid] = vehicleid;
	//
	SetPVarInt(playerid,"Anti_Cheats",gettime() + 5);
	SetPlayerArmedWeapon(playerid,0);
	if(IsLocked[vehicleid] == 1)
	{
		LockCar(vehicleid);
		GameTextForPlayer(playerid,"~w~VEHICLE ~r~LOCKED", 5000, 3);
		ClearAnim(playerid);
	}
	if(GetPVarInt(playerid,"startjobd") == 1)
	{
		if(woodcutter[playerid] == true)
		{
			RemovePlayerAttachedObject(playerid,1);
			DisablePlayerCheckpoint(playerid);
			ApplyAnimation(playerid, "PED", "IDLE_tired", 4.1, 0, 1, 1, 0, 1);
			new rand = random(sizeof(derevo));
			SetPlayerCheckpoint(playerid,derevo[rand][0],derevo[rand][1],derevo[rand][2],3.0);
			SetPVarInt(playerid, "startjobd", 0);
			SCM(playerid, 0xAFAFAFAA, "Вы уронили дрова.");
		}
	}
 	if(usemesh[playerid] == 1)
 	{
 	    if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
	 	Works[playerid] = true; JobCP[playerid] = 1; mesh[playerid] = 0; usemesh[playerid] = 0;
		SetPlayerCheckpoint(playerid,2230.3528,-2286.1353,14.3751,1.5);
		ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
		SCM(playerid,COLOR_GREEN, "Вы уронили мешок.");
 	}
	if(FL[playerid][usemats] > 0)
	{
		if(FL[playerid][usemats] == 1) FracBank[0][farmmatsf] += 250;
		if(FL[playerid][usemats] == 2) FracBank[0][farmmatbi] += 250;
		FL[playerid][usemats] = 0;
		PI[playerid][pMats] = 0;
		RemovePlayerAttachedObject(playerid, 1);
		SCM(playerid, COLOR_REDD,"Вы уронили ящик");
		ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
	}
	SetVehicleParamsForPlayer(vehicleid, playerid, 0, gCarLock[vehicleid]);
	return true;
}
stock IsAMedic(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = PI[playerid][pLeader];
	new member = PI[playerid][pMember];
	if(member == 4 || member == 8) return true;
	else if(leader == 4 || leader == 8) return true;
	return false;
}
stock IsAMayor(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = PI[playerid][pLeader];
	new member = PI[playerid][pMember];
	if(member == 22 || leader == 22) return true;
	return false;
}
stock IsASAPD(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = PI[playerid][pLeader];
	new member = PI[playerid][pMember];
	if(member == 1 || member == 10 || member == 21) return true;
	else if(leader == 1 || leader == 10 || leader == 21) return true;
	return false;
}
stock IsACop(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = PI[playerid][pLeader];
	new member = PI[playerid][pMember];
	if(member == 1 || member == 2 || member == 10 || member == 21) return true;
	else if(leader == 1 || leader == 2 || leader == 10 || leader == 21) return true;
	return false;
}
stock IsAArm(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = PI[playerid][pLeader];
	new member = PI[playerid][pMember];
	if(member == 3 || member == 19) return true;
	else if(leader == 3 || leader == 19) return true;
	return false;
}
stock IsAAnew(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new newlev = PI[playerid][pLevel];
	if(newlev == 1 || newlev == 2) return true;
	return false;
}
stock IsANonf(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	new leader = PI[playerid][pLeader];
	new member = PI[playerid][pMember];
	if(member == 1 || member == 2 || member == 3 || member == 4 || member == 8 || member == 10 || member == 19 || member == 21 || member == 22 || member == 24) return true;
	else if(leader == 1 || leader == 2 || leader == 3 || leader == 4 || leader == 8 || leader == 10 || leader == 19 || leader == 21 || leader == 22 || leader == 24) return true;
	return false;
}
stock IsADonatCar1(playerid)
{
	new slot1 = PI[playerid][pCar1];
	if(slot1 == 424 || slot1 == 444 || slot1 == 556 || slot1 == 557 || slot1 == 494 || slot1 == 502 || slot1 == 503 || slot1 == 495 || slot1 == 568 || slot1 == 411 || slot1 == 571 ||
		slot1 == 471 || slot1 == 510 || slot1 == 509 || slot1 == 483 || slot1 == 555 || slot1 == 531 || slot1 == 573 || slot1 == 508 || slot1 == 409 || slot1 == 434)
	{
		return 1;
	}
	return 0;
}
stock IsADonatCar2(playerid)
{
	new slot2 = PI[playerid][pCar2];
	if(slot2 == 424 || slot2 == 444 || slot2 == 556 || slot2 == 557 || slot2 == 494 || slot2 == 502 || slot2 == 503 || slot2 == 495 || slot2 == 568 || slot2 == 411 || slot2 == 571 ||
		slot2 == 471 || slot2 == 510 || slot2 == 509 || slot2 == 483 || slot2 == 555 || slot2 == 531 || slot2 == 573 || slot2 == 508 || slot2 == 409 || slot2 == 434)
	{
		return 1;
	}
	return 0;
}
stock IsADonatAir(playerid)
{
	new aesl1 = PI[playerid][pCar3];
	if(aesl1 == 447 || aesl1 == 460 || aesl1 == 469 || aesl1 == 476 || aesl1 == 487 || aesl1 == 511 || aesl1 == 512 || aesl1 == 513 || aesl1 == 519 || aesl1 == 553 || aesl1 == 593)
	{
		return 1;
	}
	return 0;
}
stock AntiDM(playerid)
{
	if(PlayerToPoint(50.0,playerid,1480.8051,-1742.8186,13.5469) ||// Адм. Президента
			PlayerToPoint(50.0,playerid,1255.1592,-1816.2676,13.4089) ||// Спавн 1 лвл
			PlayerToPoint(50.0,playerid,938.7954,-22.6310,1503.8600) ||// Интерьер Адм. Президента
			PlayerToPoint(50.0,playerid,-1052.3988,694.6255,1507.3469) ||// Интерьер медиков
			PlayerToPoint(50.0,playerid,1992.9965,1017.6743,994.8906) ||// Казино 4 дракона
			PlayerToPoint(50.0,playerid,1961.2919,1017.9551,992.4688) ||// Казино 4 дракона
			PlayerToPoint(50.0,playerid,2235.6194,1677.9879,1008.3594) ||// Казино калигула
			PlayerToPoint(50.0,playerid,2236.4705,1602.6838,1006.1797) ||// Казино калигула
			PlayerToPoint(30.0,playerid,-1969.8351,132.2554,27.6875) ||// Вокзал СФ
			PlayerToPoint(50.0,playerid,-743.7255,-157.2037,67.2925) ||// Работа лесоруба
			PlayerToPoint(20.0,playerid,-2099.5566,76.0459,35.3203)) return true;// Работа уборщика улиц
	return false;
}
stock IsATerra(playerid)
{
	if(PlayerToKvadrat(playerid,1890.060546, -1283.657470, 2010.060546, -1183.657470) ||      // Ballas
			PlayerToKvadrat(playerid,2010.060546, -1383.657470, 2130.060546, -1283.657470) ||
			PlayerToKvadrat(playerid,1890.060546, -1383.657470, 2010.060546, -1283.657470) ||
			PlayerToKvadrat(playerid,2010.060546, -1283.657470, 2130.060546, -1183.657470) ||// Ballas
			PlayerToKvadrat(playerid,2730.060546, -1683.657470, 2850.060546, -1583.657470) || // Vagos
			PlayerToKvadrat(playerid,2490.060546, -1683.657470, 2610.060546, -1583.657470) || // Grove
			PlayerToKvadrat(playerid,2370.060546, -1683.657470, 2490.060546, -1583.657470) || // Grove
			PlayerToKvadrat(playerid,2490.060546, -1783.657470, 2610.060546, -1683.657470) || // Grove
			PlayerToKvadrat(playerid,2370.060546, -1783.657470, 2490.060546, -1683.657470) || // Grove
			PlayerToKvadrat(playerid,2130.060546, -1783.657470, 2250.060546, -1683.657470) || // Rifa
			PlayerToKvadrat(playerid,2130.060546, -1883.657470, 2250.060546, -1783.657470) || // Rifa
			PlayerToKvadrat(playerid,2730.060546, -1983.657470, 2850.060546, -1883.657470) || // Aztec
			PlayerToKvadrat(playerid,2730.060546, -2083.657470, 2850.060546, -1983.657470)) return true; // Aztec
	return false;
}
stock IsAFree(playerid)
{
	if(PlayerToPoint(2.0,playerid,266.7484,86.7387,1001.0391) ||
			PlayerToPoint(2.0,playerid,266.7469,82.1532,1001.0391) ||
			PlayerToPoint(2.0,playerid,266.7471,77.6146,1001.0391) ||
			PlayerToPoint(2.0,playerid,288.1540,-159.0658,1141.0859) ||
			PlayerToPoint(2.0,playerid,293.5399,-159.0854,1141.0859) ||
			PlayerToPoint(2.0,playerid,298.8310,-159.1149,1141.0859) ||
			PlayerToPoint(2.0,playerid,304.0923,-159.1225,1141.0859) ||
			PlayerToPoint(2.0,playerid,219.4582,113.1854,999.0156) ||
			PlayerToPoint(2.0,playerid,198.2410,159.8736,1003.0234))
	{
		return true;
	}
	return false;
}
stock IsABankomat(playerid)
{
	if(PlayerToPoint(2.0,playerid,-1676.34570312,434.01806641,7.08183193) ||
			PlayerToPoint(2.0,playerid,2592.3872,2785.2283,10.8203) ||
			PlayerToPoint(2.0,playerid,2183.2092,1660.9530,11.0767) ||
			PlayerToPoint(2.0,playerid,2021.6993,1016.2911,10.8203) ||
			PlayerToPoint(2.0,playerid,-818.55200195,1567.63708496,27.01933098) ||
			PlayerToPoint(2.0,playerid,-2421.45410156,958.35540771,45.18632126) ||
			PlayerToPoint(2.0,playerid,2174.20336914,1402.93469238,10.96464443) ||
			PlayerToPoint(2.0,playerid,-2621.31445312,1415.23510742,6.88521862) ||
			PlayerToPoint(2.0,playerid,1587.30920410,2218.34838867,10.96464443) ||
			PlayerToPoint(2.0,playerid,-2452.32275391,2252.62988281,4.87058449) ||
			PlayerToPoint(2.0,playerid,2187.36035156,2478.89160156,11.14433193) ||
			PlayerToPoint(2.0,playerid,-1282.38098145,2715.18652344,50.16842651) ||
			PlayerToPoint(2.0,playerid,-2033.32604980,159.50723267,28.94120598) ||
			PlayerToPoint(2.0,playerid,91.92106628,1180.56555176,18.56620598) ||
			PlayerToPoint(2.0,playerid,2236.16186523,-1665.79772949,15.27980804) ||
			PlayerToPoint(2.0,playerid,847.58093262,-1799.19348145,13.71945286) ||
			PlayerToPoint(2.0,playerid,1367.56359863,-1290.13696289,13.44901943) ||
			PlayerToPoint(2.0,playerid,-78.74282837,-1171.64892578,1.95329499) ||
			PlayerToPoint(2.0,playerid,1212.93,-1819.40,13.00) ||
			PlayerToPoint(2.0,playerid,-1551.53637695,-2737.33691406,48.64560318) ||
			PlayerToPoint(2.0,playerid,661.71307373,-576.21777344,16.25428581) ||
			PlayerToPoint(2.0,playerid,557.32824707,-1294.28137207,17.24994087) ||
			PlayerToPoint(2.0,playerid,-2035.70605469,-102.35491180,35.07402039) ||
			PlayerToPoint(2.0,playerid,1919.78381348,-1766.21813965,13.44901943) ||
			PlayerToPoint(2.0,playerid,2843.2822,1286.9712,11.3906) ||
			PlayerToPoint(2.0,playerid,1457.6998,-1754.5968,13.5469) ||
			PlayerToPoint(2.0,playerid,1415.9821,-1693.4142,13.5469) ||
			PlayerToPoint(2.0,playerid,-106.6350,1117.2729,1083.8634) ||
			PlayerToPoint(2.0,playerid,-107.7119,1117.2758,1083.8634) ||
			PlayerToPoint(2.0,playerid,-108.8473,1117.2677,1083.8634) ||
			PlayerToPoint(2.0,playerid,-108.4680,1126.8971,1083.8634) ||
			PlayerToPoint(2.0,playerid,-107.3594,1126.9254,1083.8634) ||
			PlayerToPoint(2.0,playerid,-106.2401,1126.9452,1083.8634) ||
			PlayerToPoint(2.0,playerid,2137.2881,1617.5621,993.6882) ||
			PlayerToPoint(2.0,playerid,2137.2883,1612.4106,993.6882) ||
			PlayerToPoint(2.0,playerid,2149.4390,1612.2612,993.6882) ||
			PlayerToPoint(2.0,playerid,2149.4792,1617.4609,993.6882) ||
			PlayerToPoint(2.0,playerid,1768.18213, -1907.19373, 13.37540) ||
			PlayerToPoint(2.0,playerid,1085.9705,-1698.8969,13.5530))
	{
		return true;
	}
	return false;
}
stock IsAPlane(carid){switch(GetVehicleModel(carid)){case 417,425,447,460,469,476,487,488,497,511,512,513,519,520,548,553,563,577,593:return true;}return false;}
stock PJ(carid){switch(GetVehicleModel(carid)){case 534,535,536,558,559,560,561,562,565,575,576,483,567:return true;}return false;}
stock IsABoat(carid){switch(GetVehicleModel(carid)){case 430,446,452,453,454,472,473,484,493,594:return true;}return false;}
stock IsABike(carid){switch(GetVehicleModel(carid)){case 448,435,449,450,457,462,464,465,481,485,501,509,510,530,564,569,570,584,594,606,607,608,610,611:return true;}return false;}

stock GetXYInBackOfPlayer(const playerid, &Float:x, &Float:y, const Float:distance)
{
	new Float:a; GetPlayerPos(playerid, x, y, a); GetPlayerFacingAngle(playerid, a);
	if (IsPlayerInAnyVehicle(playerid))
	{
		new vid=GetPlayerVehicleID(playerid);
		if (vid > 0 && vid <= MAX_VEHICLES)GetVehicleZAngle(vid, a);
	}
	x -= (distance * floatsin(-a, degrees)); y -= (distance * floatcos(-a, degrees));
}
//------------------------------------------------------------------------------
enum MzoneInfo
{
	bFrakVlad,
	bNapad,
	bBiz,
	bMesto,
	bCountDead[15]
}
new MZInfo[MzoneInfo];
//------------------------------------------------------------------------------
new PlayerText:Capture[MAX_PLAYERS][6];
new allowedfactions[] = {12,13,15,17,18};
enum GzoneInfo
{
	gID,
Float:gCoords[4],
	gFrakVlad,
	gFrak,
	gNapad,
	ZoneOnBattle,
	gTime,
	gzTimer,
string:strcpt[30]
}
new GZInfo[132][GzoneInfo];
new FrakCD[20], FracVoina[20], CountOnZone[20], VladGzone[5];
new BestScoreB[MAX_PLAYERS char];
new IsCapture;
publics: GzCheck(i,napad,vlad)
{
	new temp = 0, bestid = -1;
	foreach(new m : Player)
	{
		if(m == -1) continue;
		if(PI[m][kaptbanda] == true && !IsAGang(m)) EndCapt(m);
		if(PI[m][pMember] == napad || PI[m][pMember] == vlad)
		{
			if(m != -1 && BestScoreB {m} > temp)
			{
				temp = BestScoreB{m};
				bestid = m;
			}
			if(PI[m][kaptbanda] == false)
			{
				GangZoneFlashForPlayer(m,GZInfo[i][gID],GetGangColor(napad));
				PlayerTextDrawShow(m, Capture[m][0]);
				PlayerTextDrawShow(m, Capture[m][1]);
				PlayerTextDrawShow(m, Capture[m][2]);
				PlayerTextDrawShow(m, Capture[m][3]);
				format(GZInfo[i][strcpt],30,"Time: %s",TimeConverter(GZInfo[i][gTime]));
				PlayerTextDrawSetString(m,Capture[m][3],GZInfo[i][strcpt]);
				format(GZInfo[i][strcpt],30,"~w~%s - Kill: ~r~0",GFrac(vlad));
				PlayerTextDrawSetString(m,Capture[m][5],GZInfo[i][strcpt]);
				PlayerTextDrawShow(m, Capture[m][5]);
				format(GZInfo[i][strcpt],30,"~w~%s - Kill: ~r~0",GFrac(napad));
				PlayerTextDrawSetString(m,Capture[m][4],GZInfo[i][strcpt]);
				PlayerTextDrawShow(m, Capture[m][4]);
				PI[m][kaptbanda] = true;
				SetPVarInt(m, "CaptureOn", 1);
			}
			else
			{
				format(GZInfo[i][strcpt],30,"Time: %s",TimeConverter(GZInfo[i][gTime]));
				PlayerTextDrawSetString(m,Capture[m][3],GZInfo[i][strcpt]);
				format(GZInfo[i][strcpt],30,"~w~%s - Kill: ~r~%d",GFrac(vlad),CountOnZone[vlad]);
				PlayerTextDrawSetString(m,Capture[m][5],GZInfo[i][strcpt]);
				format(GZInfo[i][strcpt],30,"~w~%s - Kill: ~r~%d",GFrac(napad),CountOnZone[napad]);
				PlayerTextDrawSetString(m,Capture[m][4],GZInfo[i][strcpt]);
			}
		}
	}
	if(GZInfo[i][gTime] > 0) GZInfo[i][gTime] -= 1;
	if(GZInfo[i][gTime] <= 0)
	{
		if(GZInfo[i][ZoneOnBattle] == 1)
		{
			if(CountOnZone[vlad] == CountOnZone[napad] || CountOnZone[vlad] > CountOnZone[napad]) format(YCMDstr,55,"%s захватили территорию у банды %s",GFrac(vlad),GFrac(napad));
			else
			{
				format(YCMDstr,55,"%s захватили территорию у банды %s",GFrac(napad),GFrac(vlad));
				GZInfo[i][gFrakVlad] = GZInfo[i][gNapad];
			}
			SendBand(napad,vlad,COLOR_ORANGE,YCMDstr);
			GZInfo[i][ZoneOnBattle] = 2;
		}
		if(GZInfo[i][ZoneOnBattle] == 2)
		{
			foreach(new m : Player)
			{
				if(m == -1) continue;
				if(PI[m][pMember] == napad || PI[m][pMember] == vlad) EndCapt(m);
				BestScoreB{m} = 0;
			}
			if(bestid != -1) format(YCMDstr, 134, "{20B2AA}Лучший стрелок во время войны за территорию: {00FF00}%s{20B2AA}. Он убил {FF0000}%d{20B2AA} человек(а)", Name(bestid), temp);
			else format(YCMDstr, 66, "{FFD700}Лучший стрелок во время войны за территорию не определён!");
			SendBand(napad,vlad,COLOR_ORANGE,YCMDstr);
			IsCapture = 0;
			CountOnZone[napad] = 0;
			CountOnZone[vlad] = 0;
			GZInfo[i][ZoneOnBattle] = 0;
			FracV(napad,vlad,0);
			GangZoneStopFlashForAll(GZInfo[i][gID]);
			GangZoneHideForAll(GZInfo[i][gID]);
			GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
			SaveGZ(i);
			KillTimer(GZInfo[i][gzTimer]);
			return true;
		}
	}
	return true;
}
stock EndCapt(m)
{
	for(new i; i < 6; i++) PlayerTextDrawHide(m, Capture[m][i]);
	PI[m][kaptbanda] = false;
	DeletePVar(m, "CaptureOn");
	return true;
}
stock FracCD(one,two,item)
{
	FrakCD[one] = item;
	FrakCD[two] = item;
	FracV(one,two,1);
	return true;
}
stock FracV(one,two,item)
{
	FracVoina[one] = item;
	FracVoina[two] = item;
	return true;
}
stock SendBand(one,two,color,str[])
{
	foreach(new x : Player)
	{
		if(x == -1) continue;
		if(PI[x][pMember] == one || PI[x][pMember] == two)
		SCM(x,color,str);
	}
	return true;
}
stock GFrac(frac)
{
	new namegang[20];
	switch(frac)
	{
	case 15: namegang = "Grove Gang";
	case 17: namegang = "Aztecas Gang";
	case 12: namegang = "Ballas Gang";
	case 18: namegang = "Rifa Gang";
	case 13: namegang = "Vagos Gang";
	}
	return namegang;
}
//------------------------------------------------------------------------------
stock MafiaCapt(playerid)
{
	if(BizWarTime > gettime())
	{
		if(PI[playerid][kaptmafia] == true && !IsAMafia(playerid)) EndBizwar(playerid);
		if(MZInfo[bFrakVlad] != PI[playerid][pMember] && MZInfo[bNapad] != PI[playerid][pMember]) return true;
		if(PI[playerid][kaptmafia] == false)
		{
			GangZoneFlashForPlayer(playerid,ZonsWar[MZInfo[bMesto]-1],GetColor(MZInfo[bNapad]));
			format(YCMDstr,12,"Time: %s",TimeConverter(BizWarTime-gettime()));
			PlayerTextDrawSetString(playerid,Bizwar[playerid][0],YCMDstr);
			PlayerTextDrawShow(playerid, Bizwar[playerid][0]);
			format(YCMDstr,27,"%s - Kill: 0",GetMN(MZInfo[bFrakVlad]));
			PlayerTextDrawSetString(playerid,Bizwar[playerid][1],YCMDstr);
			PlayerTextDrawShow(playerid, Bizwar[playerid][1]);
			format(YCMDstr,27,"%s - Kill: 0",GetMN(MZInfo[bNapad]));
			PlayerTextDrawSetString(playerid,Bizwar[playerid][2],YCMDstr);
			PlayerTextDrawShow(playerid, Bizwar[playerid][2]);
			PlayerTextDrawShow(playerid, Bizwar[playerid][3]);
			PlayerTextDrawShow(playerid, Bizwar[playerid][4]);
			PI[playerid][kaptmafia] = true;
		}
		else
		{
			format(YCMDstr,12,"Time: %s",TimeConverter(BizWarTime-gettime()));
			PlayerTextDrawSetString(playerid,Bizwar[playerid][0],YCMDstr);
			format(YCMDstr,27,"%s - Kill: %d",GetMN(MZInfo[bFrakVlad]),MZInfo[bCountDead][MZInfo[bFrakVlad]]);
			PlayerTextDrawSetString(playerid,Bizwar[playerid][1],YCMDstr);
			format(YCMDstr,27,"%s - Kill: %d",GetMN(MZInfo[bNapad]),MZInfo[bCountDead][MZInfo[bNapad]]);
			PlayerTextDrawSetString(playerid,Bizwar[playerid][2],YCMDstr);
		}
	}
	else if(0 < BizWarTime <= gettime() && MZInfo[bBiz] != 255)
	{
		if(MZInfo[bCountDead][MZInfo[bFrakVlad]] > MZInfo[bCountDead][MZInfo[bNapad]])
		{
			format(YCMDstr,137, "{008000}[Стрела] {FFD700}Мафии {FF0000}%s{FFD700} не удалось отобрать у Вас контроль над бизнесом {4169E1}%s",GetMN(MZInfo[bNapad]),BizzInfo[MZInfo[bBiz]][bMessage]);
			SendFamilyMessage(MZInfo[bFrakVlad], COLOR_WHITE, YCMDstr);
			format(YCMDstr,137, "{008000}[Стрела] {FFD700}Вам не удалось отобрать у мафии {FF0000}%s{FFFFFF} контроль над бизнесом {4169E1}%s",GetMN(MZInfo[bFrakVlad]),BizzInfo[MZInfo[bBiz]][bMessage]);
			SendFamilyMessage(MZInfo[bNapad], COLOR_WHITE, YCMDstr);
		}
		else if(MZInfo[bCountDead][MZInfo[bFrakVlad]] == MZInfo[bCountDead][MZInfo[bNapad]])
		{
			format(YCMDstr,121, "{008000}[Стрела] {FFD700}Стрела за бизнес {4169E1}%s{FFD700} закончилась ничьей. {FF0000}Бизнес потерян!",BizzInfo[MZInfo[bBiz]][bMessage]);
			SendFamilyMessage(MZInfo[bFrakVlad], COLOR_WHITE, YCMDstr);
			format(YCMDstr,117, "{008000}[Стрела] {FFD700}Стрела за бизнес {4169E1}%s{FFD700} закончилась ничьей. {FF0000}Бизнес Ваш!",BizzInfo[MZInfo[bBiz]][bMessage]);
			SendFamilyMessage(MZInfo[bNapad], COLOR_WHITE, YCMDstr);
			BizzInfo[MZInfo[bBiz]][bMafia] = MZInfo[bNapad];
		}
		else
		{
			format(YCMDstr,125, "{008000}[Стрела] {FFD700}Мафия {FF0000}%s{FFD700} забрала у Вас контроль над бизнесом {4169E1}%s",GetMN(MZInfo[bNapad]),BizzInfo[MZInfo[bBiz]][bMessage]);
			SendFamilyMessage(MZInfo[bFrakVlad], COLOR_WHITE, YCMDstr);
			format(YCMDstr,125, "{008000}[Стрела] {FFD700}Вы отобрали контроль над бизнесом {4169E1}%s{FFFFFF} у мафии {4169E1}%s",BizzInfo[MZInfo[bBiz]][bMessage],GetMN(MZInfo[bFrakVlad]));
			SendFamilyMessage(MZInfo[bNapad], COLOR_WHITE, YCMDstr);
			BizzInfo[MZInfo[bBiz]][bMafia] = MZInfo[bNapad];
		}
		foreach(new m : Player)
		{
			if(MZInfo[bFrakVlad] != PI[m][pMember] && MZInfo[bNapad] != PI[m][pMember]) continue;
			EndBizwar(m);
		}
		MZInfo[bFrakVlad] = 0;
		MZInfo[bNapad] = 0;
		MZInfo[bBiz] = 255;
		GangZoneStopFlashForAll(ZonsWar[MZInfo[bMesto]-1]);
		GangZoneHideForAll(ZonsWar[MZInfo[bMesto]]);
		GangZoneShowForAll(ZonsWar[MZInfo[bMesto]], 16711888);
		MZInfo[bMesto] = 0;
		MZInfo[bCountDead][MZInfo[bNapad]] = 0;
		MZInfo[bCountDead][MZInfo[bFrakVlad]] = 0;
	}
	return true;
}

stock PriceCar(vehicleid)
{
	new buycena;
	switch(GetVehicleModel(vehicleid))
	{
	case 400: buycena = 165000; case 579: buycena = 214000; case 602: buycena = 280000;
	case 404: buycena = 19500; case 506: buycena = 760000; case 521: buycena = 162000;
	case 589: buycena = 350000; case 468: buycena = 56000; case 402: buycena = 850000;
	case 603: buycena = 395000; case 451: buycena = 2100000; case 477: buycena = 810000;
	case 418: buycena = 145000; case 535: buycena = 24100; case 429: buycena = 730000;
	case 466: buycena = 24000; case 480: buycena = 795000; case 500: buycena = 115000;
	case 475: buycena = 82000; case 581: buycena = 123000; case 566: buycena = 167000;
	case 586: buycena = 81000; case 545: buycena = 15200; case 580: buycena = 250000;
	case 401: buycena = 64000; case 559: buycena = 659000; case 522: buycena = 320000;
	case 492: buycena = 35000; case 405: buycena = 102000; case 415: buycena = 1300000;
	case 516: buycena = 43000; case 412: buycena = 240000; case 534: buycena = 280000;
	case 517: buycena = 23000; case 422: buycena = 23700; case 541: buycena = 1550000;
	case 426: buycena = 130000; case 565: buycena = 642000; case 533: buycena = 240000;
	case 526: buycena = 82000; case 467: buycena = 31500; case 587: buycena = 525000;
	case 527: buycena = 86200; case 474: buycena = 17300; case 600: buycena = 19200;
	case 542: buycena = 15000; case 496: buycena = 220000; case 562: buycena = 305000;
	case 543: buycena = 16000; case 463: buycena = 98000; case 585: buycena = 116000;
	case 546: buycena = 121000; case 529: buycena = 37600; case 560: buycena = 590000;
	case 547: buycena = 125000; case 536: buycena = 152000; case 576: buycena = 230000;
	case 549: buycena = 20100; case 540: buycena = 134000; case 575: buycena = 41000;
	case 567: buycena = 190000; case 550: buycena = 126000; case 421: buycena = 124000;
	case 409: buycena = 1500000; case 508: buycena = 1000000; case 556: buycena = 575000;
	case 502: buycena = 750000; case 503: buycena = 750000; case 557: buycena = 575000;
	case 509: buycena = 250000;
	}
	return buycena;
}
stock IsTextRussian(text[])
{
	if(strfind(text, "а", true) != -1 ||
			strfind(text, "б", true) != -1 ||
			strfind(text, "в", true) != -1 ||
			strfind(text, "г", true) != -1 ||
			strfind(text, "д", true) != -1 ||
			strfind(text, "е", true) != -1 ||
			strfind(text, "ё", true) != -1 ||
			strfind(text, "ж", true) != -1 ||
			strfind(text, "з", true) != -1 ||
			strfind(text, "и", true) != -1 ||
			strfind(text, "й", true) != -1 ||
			strfind(text, "к", true) != -1 ||
			strfind(text, "л", true) != -1 ||
			strfind(text, "м", true) != -1 ||
			strfind(text, "н", true) != -1 ||
			strfind(text, "о", true) != -1 ||
			strfind(text, "п", true) != -1 ||
			strfind(text, "р", true) != -1 ||
			strfind(text, "с", true) != -1 ||
			strfind(text, "т", true) != -1 ||
			strfind(text, "у", true) != -1 ||
			strfind(text, "ф", true) != -1 ||
			strfind(text, "х", true) != -1 ||
			strfind(text, "ц", true) != -1 ||
			strfind(text, "ч", true) != -1 ||
			strfind(text, "ш", true) != -1 ||
			strfind(text, "щ", true) != -1 ||
			strfind(text, "ъ", true) != -1 ||
			strfind(text, "ы", true) != -1 ||
			strfind(text, "ь", true) != -1 ||
			strfind(text, "э", true) != -1 ||
			strfind(text, "ю", true) != -1 ||
			strfind(text, "я", true) != -1) return true;
	return 0;
}

stock DollahScoreUpdate(playerid) return SetPlayerScore(playerid, PI[playerid][pLevel]);

stock IsKeyJustDown(key, newkeys, oldkeys)
{
	if((newkeys & key) && !(oldkeys & key))
	return 1;

	return 0;
}

publics: IsAGunsCar(carid) { if(carid >= gunscar[0] && carid <= gunscar[1]) return true; return false; }
publics: IsAZCar(carid) { if(carid >= zcar[0] && carid <= zcar[1]) return true; return false; }
publics: IsAZFuelCar(carid) { if(carid >= zfuelcar[0] && carid <= zfuelcar[1]) return true; return false; }
//==============================================================================
publics: _GiveGun(playerid, weaponid, ammo)
{
	new slot = GetWeaponSlot(weaponid);
	if(slot == 0xFFFF) return false;
	gunmute[playerid] = gettime()+3;

	WeaponInfo[playerid][weaponid] = true;
	AmmoSlot[playerid][slot] += ammo;
	AmmoInfo[playerid][weaponid] = AmmoSlot[playerid][slot];

	GivePlayerWeapon(playerid, weaponid, ammo);
	if(PI[playerid][pAmmos][slot] == 0) PI[playerid][pGuns][slot] = 0;
	return true;
}
publics: _ResetGun(playerid)
{
	gunmute[playerid] = gettime()+3;
	ResetPlayerWeapons(playerid);
	for(new x = 1; x < 11; x++)
	{
		PI[playerid][pGuns][x] = 0;
		PI[playerid][pAmmos][x] = 0;
		AmmoSlot[playerid][x] = 0;
	}
	for(new i = 0; i < 47; i++)
	{
		WeaponInfo[playerid][i] = false;
		AmmoInfo[playerid][i] = 0;
	}
	return true;
}
stock GetWeaponSlot(weaponid)
{
	switch(weaponid)
	{
	case 1: return 0;
	case 2..9: return 1;
	case 22..24: return 2;
	case 25..27: return 3;
	case 28, 29, 32: return 4;
	case 30, 31: return 5;
	case 33, 34: return 6;
	case 35..38: return 7;
	case 16..18, 39: return 8;
	case 41..43: return 9;
	case 10..15: return 10;
	case 44..46: return 11;
	case 40: return 12;
	}
	return 0xFFFF;
}
stock RemovedObjects(playerid)
{
	//Парковка
    RemoveBuildingForPlayer(playerid, 713, 1496.8672, -1707.8203, 13.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1716.7031, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1702.5313, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1692.3906, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1682.3125, 15.6328, 0.25);
	//-------------------------- В интерьере К.А.С.С. --------------------------
	RemoveBuildingForPlayer(playerid, 2358, 303.0000, -144.1250, 998.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 303.0000, -144.1406, 999.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 302.9922, -144.0859, 998.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 303.7422, -144.2578, 999.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1886, 304.3281, -144.2578, 1006.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 303.7266, -144.2500, 998.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 303.6875, -144.2344, 998.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 304.5547, -144.3672, 998.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 304.5938, -144.3672, 998.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 304.6094, -144.3672, 999.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 305.4297, -144.3672, 998.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 18051, 295.7734, -133.4609, 1004.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 18050, 299.9453, -133.9297, 1005.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1886, 304.2109, -126.1719, 1006.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 305.5156, -144.3750, 999.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 306.2344, -144.3750, 998.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 305.4688, -144.3594, 998.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 306.3203, -144.3594, 999.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 306.2656, -144.3594, 998.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 305.6406, -133.8828, 1003.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 305.6406, -133.8281, 1003.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 305.6250, -133.7969, 1003.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 305.6406, -133.0313, 1003.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 305.6250, -133.0781, 1003.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 305.6328, -132.9922, 1003.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 305.6328, -132.1172, 1003.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 305.6328, -132.1563, 1003.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 305.6328, -132.1719, 1003.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 305.7500, -131.2891, 1003.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 305.7422, -131.3047, 1003.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 305.7656, -131.2500, 1003.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 305.8750, -130.5625, 1003.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 305.8594, -130.5625, 1003.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 2358, 305.9141, -130.5547, 1003.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 18052, 309.2109, -137.4766, 1000.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 18109, 311.0703, -137.4453, 1005.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 18053, 311.3750, -137.4219, 1004.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 18054, 311.3750, -134.7578, 1003.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 2619, 317.3750, -137.1250, 1005.6953, 0.25);
	//-------------------------- Бидоны, трубы на К.А.С.С. ---------------------
	RemoveBuildingForPlayer(playerid, 6935, 2686.1953, 2663.4063, 23.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 6936, 2729.4375, 2685.6328, 35.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 6938, 2693.4844, 2696.6641, 19.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 6941, 2717.9453, 2773.6250, 43.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 6942, 2593.2578, 2638.3359, 61.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 7038, 2527.8203, 2703.9609, 10.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 985, 2497.4063, 2777.0703, 11.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 986, 2497.4063, 2769.1094, 11.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 7170, 2706.4531, 2762.9141, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 7201, 2615.5000, 2740.6719, 85.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 7237, 2692.0703, 2784.8984, 35.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 7239, 2592.2578, 2660.4453, 23.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 7276, 2686.1953, 2663.4063, 23.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 7386, 2622.9141, 2704.8047, 30.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2511.5234, 2706.1484, 10.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2500.2188, 2706.1484, 10.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2534.1328, 2706.1484, 10.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2522.8281, 2706.1484, 10.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 3474, 2523.9688, 2818.4922, 16.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2555.3047, 2707.2188, 10.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2545.4375, 2706.1484, 10.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2555.7578, 2724.6953, 10.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2556.0156, 2715.9375, 10.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 7095, 2545.5469, 2751.3828, 11.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2578.7031, 2796.8672, 10.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2564.8516, 2796.8672, 10.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2552.1719, 2796.8672, 10.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2538.5078, 2796.8672, 10.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2564.4922, 2809.0859, 10.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2564.4922, 2809.0859, 10.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2563.1406, 2809.0781, 10.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2563.1406, 2809.0781, 10.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2567.0313, 2809.0781, 10.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2567.3906, 2807.7813, 10.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2566.0625, 2807.7734, 10.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2565.8125, 2809.0781, 10.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2566.0625, 2807.7734, 10.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2565.8125, 2809.0781, 10.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2567.0313, 2809.0781, 10.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2567.3906, 2807.7813, 10.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2569.9453, 2807.7734, 10.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2568.6797, 2807.7734, 10.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2568.6797, 2807.7734, 10.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2569.9453, 2807.7734, 10.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2572.9844, 2806.7500, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2572.9844, 2806.7500, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2572.3359, 2809.5938, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2572.3359, 2809.5938, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2572.7578, 2808.2109, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2572.7578, 2808.2109, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2566.4453, 2819.5469, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2566.4453, 2819.5469, 10.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2558.0703, 2820.3594, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2558.0703, 2820.3594, 10.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2565.6016, 2820.4766, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2565.6016, 2820.4766, 10.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2564.9922, 2822.7500, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2564.9922, 2822.7500, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2566.1328, 2822.0391, 10.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2566.1328, 2822.0391, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 7172, 2546.0313, 2828.7344, 11.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2564.6563, 2824.0078, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2564.6563, 2824.0078, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2564.9141, 2823.6484, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2564.9141, 2823.6484, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2570.7344, 2829.7734, 11.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2570.7344, 2829.7734, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2551.5781, 2835.9375, 10.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2551.5781, 2835.9375, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2554.5234, 2834.7266, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2553.1641, 2834.7188, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2553.1641, 2834.7188, 10.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2554.5234, 2834.7266, 10.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2555.8672, 2834.7188, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2555.8672, 2834.7188, 10.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2555.8203, 2835.9531, 10.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2557.2266, 2834.7188, 10.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2557.2266, 2834.7188, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2555.8203, 2835.9531, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2556.1406, 2838.5703, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2556.1406, 2838.5703, 10.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2556.3672, 2837.2422, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2556.3672, 2837.2422, 10.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2563.9141, 2836.6406, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2563.9141, 2836.6406, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2563.2734, 2837.0156, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2563.2734, 2837.0234, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2561.3750, 2837.5547, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2561.3750, 2837.5547, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2562.7813, 2837.4844, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2562.7813, 2837.4844, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2561.3438, 2838.9219, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2561.3438, 2838.9219, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2561.0703, 2840.3281, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2561.0703, 2840.3281, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 6934, 2593.2578, 2638.3359, 61.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 7238, 2592.2578, 2660.4453, 23.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 7040, 2594.3750, 2680.0234, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 6931, 2686.1953, 2663.4063, 23.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 6928, 2729.4375, 2685.6328, 35.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2591.2031, 2730.0547, 10.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2591.2031, 2742.1328, 10.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2591.2031, 2754.2109, 10.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2591.2031, 2766.2891, 10.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2591.2031, 2778.3672, 10.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 7153, 2622.9141, 2704.8047, 30.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 7229, 2629.2188, 2742.9922, 14.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 7039, 2629.2891, 2742.9219, 10.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 6930, 2693.4844, 2696.6641, 19.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 7104, 2706.4531, 2762.9141, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 6933, 2717.9453, 2773.6250, 43.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 7103, 2579.1172, 2826.8828, 19.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2590.1406, 2816.3516, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2590.1406, 2816.3516, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 7105, 2586.7266, 2820.7266, 14.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 2591.2031, 2796.8672, 10.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2590.6719, 2813.6563, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2590.6719, 2813.6563, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2594.5859, 2821.3750, 11.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2594.5938, 2821.3750, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2590.8594, 2815.1094, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2590.8594, 2815.1094, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2590.6328, 2815.5938, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2590.6328, 2815.5938, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2593.5469, 2838.8438, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2592.9922, 2837.6250, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2592.9922, 2837.6250, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2593.5469, 2838.8438, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2593.5469, 2840.2031, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2593.5469, 2840.2031, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2597.7813, 2819.0000, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2597.7813, 2819.0000, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2596.1563, 2820.1016, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2596.1563, 2820.1016, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2596.5469, 2820.4297, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2596.5469, 2820.4297, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2597.2422, 2821.1484, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2597.2500, 2821.1484, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2602.7109, 2836.5234, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2601.4141, 2836.8906, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2601.4141, 2836.8906, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2602.7109, 2836.5234, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2601.7188, 2838.3047, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2600.4531, 2838.2656, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2600.4531, 2838.2656, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2601.7188, 2838.3047, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2600.6406, 2840.3125, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2599.4141, 2839.7344, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2599.4141, 2839.7344, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2600.6406, 2840.3125, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2598.6641, 2842.0859, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2597.3125, 2842.0938, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2597.3125, 2842.0938, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2598.6641, 2842.0859, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 7236, 2692.0703, 2784.8984, 35.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2608.7969, 2806.9063, 11.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2608.7969, 2806.9063, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2607.0234, 2816.8516, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2606.8828, 2815.5078, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2606.8828, 2815.5078, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2607.0234, 2816.8516, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2610.1172, 2816.5703, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2610.1250, 2816.5703, 10.2109, 0.25);
	//-------------------------- Ограждение СВ ---------------------------------
	RemoveBuildingForPlayer(playerid, 16094, 191.1406, 1870.0391, 21.4766, 0.25);
	//------------------------- Казино калигула --------------------------------
	RemoveBuildingForPlayer(playerid, 2786, 2273.4609, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2268.7188, 1596.4688, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2273.4609, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2268.7188, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2263.6563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2258.2578, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2253.2344, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2263.6563, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2258.2578, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2253.2344, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2254.1797, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2259.2188, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2264.6250, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2269.6719, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2274.4063, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2274.4063, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2269.6563, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2264.6094, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2259.1875, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2254.1563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1588.0938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1588.5703, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1592.3984, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1592.8750, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2217.0156, 1602.8125, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2217.5469, 1602.7969, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2217.0234, 1603.9297, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1835, 2217.0156, 1605.0469, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2217.0313, 1603.9219, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2217.5469, 1603.8984, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2217.5469, 1603.9141, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1834, 2217.5469, 1605.0391, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1614.2422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1614.7188, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1618.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1619.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1588.0938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1588.0781, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1588.6016, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1588.5703, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1588.3359, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1589.1875, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2242.3672, 1589.1875, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1592.3828, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1592.9063, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1592.6406, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1592.3984, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1592.8750, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1594.7578, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2242.3672, 1594.7578, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2220.6719, 1602.8125, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2221.2031, 1602.7969, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2230.3750, 1602.7500, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2241.3125, 1602.7500, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2220.6797, 1603.9297, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2221.2031, 1603.8984, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2220.6875, 1603.9219, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2221.2031, 1603.9141, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2243.1250, 1604.4375, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2232.1875, 1604.4375, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2239.4297, 1604.4531, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2228.4922, 1604.4531, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1834, 2221.2031, 1605.0391, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1835, 2220.6719, 1605.0469, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2241.3125, 1606.2734, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2230.3750, 1606.2734, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1614.2266, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1614.2422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1614.4844, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1614.7500, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1614.7188, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1614.5938, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2241.4453, 1614.5547, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1618.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1618.5625, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1619.0859, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1619.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1618.8203, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1619.6563, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2241.4453, 1619.6094, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 2252.0313, 1584.4219, 1007.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 2261.6328, 1584.4297, 1007.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2264.6094, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2263.6563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2258.2578, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2253.2344, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2259.1875, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2254.1563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2258.2578, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2263.6563, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2253.2344, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2254.1797, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2259.2188, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2264.6250, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1609.6406, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1609.6016, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1609.6406, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1609.8750, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1610.1172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1610.1172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1610.1250, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1614.1641, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1613.6875, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1613.6484, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1614.1641, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1613.6875, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1614.1719, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1613.9141, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1617.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1617.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1617.5469, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1617.8125, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1618.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1618.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1618.0703, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 2271.7266, 1584.4219, 1007.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2268.7188, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2269.6563, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2268.7188, 1596.4688, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2269.6719, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2269.2578, 1604.5938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2269.7344, 1604.6172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2269.7734, 1606.6484, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2269.2578, 1608.7422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2269.2500, 1606.6797, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2269.7344, 1608.7344, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2269.5078, 1606.7031, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2273.4609, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2274.4063, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2273.4609, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2274.4063, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2273.2969, 1606.6797, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2273.3047, 1604.5938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2273.3047, 1608.7422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2273.5469, 1606.7031, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2273.8203, 1606.6484, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2273.7813, 1604.6172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2273.7813, 1608.7344, 1006.0000, 0.25);
	//------------------------ Казино 4 дракона --------------------------------
	RemoveBuildingForPlayer(playerid, 14608, 1955.5781, 994.0234, 993.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.73, 1029.66, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.73, 1029.66, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.41, 1029.66, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.41, 1029.66, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1963.71, 1010.12, 992.508, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1959.4, 1010.12, 992.508, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1963.71, 1025.7, 992.508, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1959.4, 1025.7, 992.508, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 1940.69, 989.172, 992.883, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 1938.05, 986.625, 992.883, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 1943.22, 986.523, 992.883, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1962.34, 1020.18, 992.469, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1960.37, 1020.17, 992.469, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1962.34, 1015.66, 992.469, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1960.37, 1015.66, 992.469, 0.25);
	RemoveBuildingForPlayer(playerid, 14562, 1975.82, 1017.71, 994.75, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.41, 1021.69, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.41, 1021.69, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.73, 1021.69, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.73, 1014.00, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.41, 1014.00, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.41, 1006.34, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.73, 1006.34, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1940.88, 1006.11, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1939.7, 1014.22, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1939.7, 1021.41, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1940.55, 1029.48, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1942.12, 1006.57, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.02, 1014.23, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.02, 1021.41, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.84, 1029.13, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.41, 1021.69, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.41, 1021.69, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.73, 1021.69, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.73, 1014.00, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.41, 1014.00, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.41, 1006.34, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.73, 1006.34, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1940.88, 1006.11, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1939.7, 1014.22, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1939.7, 1021.41, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1940.55, 1029.48, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1942.12, 1006.57, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.02, 1014.23, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.02, 1021.41, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.84, 1029.13, 992.312, 0.25);
	RemoveBuildingForPlayer(playerid, 14567, 1955.12, 995.711, 992.922, 0.25);
	RemoveBuildingForPlayer(playerid, 14566, 1954.4, 994.992, 992.922, 0.25);
	RemoveBuildingForPlayer(playerid, 14568, 1953.68, 994.281, 992.922, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1965.1, 998.305, 992.984, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1964.57, 998.453, 992.984, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1962.41, 991.875, 992.984, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1961.96, 992.203, 992.984, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.72, 987.195, 992.984, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.45, 987.672, 992.984, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1964.55, 1037.28, 992.984, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1965.09, 1037.35, 992.984, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1961.92, 1043.36, 992.984, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1962.4, 1043.63, 992.984, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.32, 1047.98, 992.984, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.66, 1048.41, 992.984, 0.25);
	//---------------------------------- Тюрьма --------------------------------
	RemoveBuildingForPlayer(playerid, 16614, -346.6719, 1595.0781, 79.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 16615, -389.7656, 1515.1641, 74.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 16616, -326.6953, 1541.3906, 74.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 16722, -372.4453, 1495.9609, 61.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 16139, -372.4453, 1495.9609, 61.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 16137, -389.7656, 1515.1641, 74.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 16138, -326.6953, 1541.3906, 74.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 16136, -350.0625, 1594.3438, 75.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 16613, -346.6719, 1595.0781, 79.6641, 0.25);
	// Инт в тюрьме
	RemoveBuildingForPlayer(playerid, 1440, 2538.2969, -1299.1875, 1030.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, 2544.0000, -1300.6875, 1031.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 1464, 2545.3281, -1300.6797, 1031.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 944, 2567.3984, -1299.1484, 1030.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1499, 2577.8516, -1307.1563, 1036.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1499, 2577.8359, -1304.1484, 1036.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1421, 2553.0313, -1297.4141, 1031.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 1431, 2552.1875, -1297.2500, 1030.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1421, 2539.3516, -1296.3828, 1031.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 1431, 2551.5000, -1296.4922, 1030.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 944, 2571.5469, -1295.9531, 1030.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1421, 2539.3516, -1294.6094, 1031.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 1431, 2537.8203, -1295.5000, 1030.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1431, 2538.5078, -1295.2422, 1030.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1421, 2553.0313, -1295.6406, 1031.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 944, 2533.1172, -1293.2578, 1030.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 944, 2533.1172, -1290.2500, 1031.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 1431, 2544.7422, -1291.9688, 1030.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1431, 2545.4297, -1292.3750, 1030.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1421, 2546.2734, -1292.4766, 1031.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 1421, 2546.2734, -1290.7031, 1031.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 944, 2567.3672, -1291.9063, 1030.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1450, 2538.1172, -1287.5313, 1031.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 923, 2567.3906, -1281.5156, 1031.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 922, 2568.2734, -1280.5000, 1031.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 944, 2571.5313, -1288.6875, 1030.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 922, 2572.3203, -1281.5313, 1031.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 922, 2573.0313, -1280.5000, 1031.3125, 0.25);
	//--------------------------------------------------------------------------
	RemoveBuildingForPlayer(playerid, 968, -1526.4375, 481.3828, 6.9063, 0.25);// Удалённый шлагбаум СФА
	RemoveBuildingForPlayer(playerid, 966, -1526.3906, 481.3828, 6.1797, 0.25);// Удалённый шлагбаум СФА
	RemoveBuildingForPlayer(playerid, 8229, 1142.0313, 1362.5000, 12.4844, 0.25);// Удаленные ворота военкомата
	//----------------------- Удаленное здание у мастерской ЛС -----------------
	RemoveBuildingForPlayer(playerid, 1297, 2522.9766, -1508.9609, 26.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 5852, 1315.3672, -887.4688, 41.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1522, 1314.7266, -897.2656, 38.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 11245, -2023.7109, 83.9688, 37.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 11272, -2037.5391, 79.9297, 34.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 11008, -2037.5391, 79.9297, 34.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 8300, 1542.6484, 998.8984, 12.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 8301, 1542.6484, 998.8984, 12.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 1340, 1558.1953, 979.4453, 10.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, 1524.7656, 991.6172, 9.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, 1543.3672, 981.5391, 9.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 640, 1545.5156, 1016.1328, 10.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1554.7188, 1028.1641, 11.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1549.4453, 1028.1641, 11.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1544.1641, 1028.1641, 11.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 17350, -54.9922, -1130.7266, 4.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 17072, -54.9922, -1130.7266, 4.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 17073, -56.1250, -1130.1719, 4.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1462, -60.3594, -1116.9375, 0.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, -63.6719, -1125.6953, 0.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, -63.4141, -1115.4141, 0.0469, 0.25);
	//SAN
	RemoveBuildingForPlayer(playerid, 1411, -2529.2813, -594.3281, 133.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, -2524.0156, -594.3281, 133.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, -2518.7500, -594.3281, 133.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, -2513.4844, -594.3281, 133.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, -2508.2188, -594.3281, 133.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, -2502.9531, -594.3281, 133.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, -2497.6875, -594.3281, 133.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, -2492.4219, -594.3281, 133.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, -2487.1563, -594.3281, 133.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, -2484.2969, -597.1641, 133.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, -2484.2969, -602.4297, 133.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, -2484.2969, -607.6953, 133.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, -2539.8125, -594.3281, 133.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, -2534.5469, -594.3281, 133.2969, 0.25);
	//----------------------- Удалённые объекты у Адм. Президента --------------
	RemoveBuildingForPlayer(playerid, 712, 1480.609, -1666.179, 22.257, 0.250);
	RemoveBuildingForPlayer(playerid, 4186, 1479.550, -1693.140, 19.578, 0.250);
	RemoveBuildingForPlayer(playerid, 4057, 1479.550, -1693.140, 19.578, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1480.609, -1666.180, 22.257, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1461.130, -1687.560, 11.835, 0.250);
	RemoveBuildingForPlayer(playerid, 700, 1463.060, -1690.650, 13.726, 0.250);
	RemoveBuildingForPlayer(playerid, 4206, 1479.550, -1639.609, 13.648, 0.250);
	RemoveBuildingForPlayer(playerid, 3985, 1479.560, -1631.449, 12.078, 0.250);
	RemoveBuildingForPlayer(playerid, 4210, 1479.560, -1631.449, 12.078, 0.250);
	RemoveBuildingForPlayer(playerid, 1283, 1430.170, -1719.469, 15.625, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1505.180, -1727.670, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1485.170, -1727.670, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1467.979, -1727.670, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1451.630, -1727.670, 16.421, 0.250);
	//------------------------ Задний двор АШ ----------------------------------
	RemoveBuildingForPlayer(playerid, 11372, -2076.4375, -107.9297, 36.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 11014, -2076.4375, -107.9297, 36.9688, 0.25);
}

stock CreateTextDraws(playerid)
{
    sobeit[playerid][0] = CreatePlayerTextDraw(playerid, 225.3440, 232.5830, "CHECKING ON SOBEIT");
	PlayerTextDrawLetterSize(playerid, sobeit[playerid][0], 0.5616, 2.5741);
	PlayerTextDrawAlignment(playerid, sobeit[playerid][0], 1);
	PlayerTextDrawColor(playerid, sobeit[playerid][0], 0xFF0000AA);
	PlayerTextDrawBackgroundColor(playerid, sobeit[playerid][0], 255);
	PlayerTextDrawFont(playerid, sobeit[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, sobeit[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, sobeit[playerid][0], 0);

	sobeit[playerid][1] = CreatePlayerTextDraw(playerid, 281.5665, 258.2499, "");
	PlayerTextDrawLetterSize(playerid, sobeit[playerid][1], 0.4332, 2.1658);
	PlayerTextDrawAlignment(playerid, sobeit[playerid][1], 1);
	PlayerTextDrawColor(playerid, sobeit[playerid][1], 0xFF0000AA);
	PlayerTextDrawBackgroundColor(playerid, sobeit[playerid][1], 255);
	PlayerTextDrawFont(playerid, sobeit[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, sobeit[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, sobeit[playerid][1], 0);
	//--------------------------------------------------------------------------
	RouletteText[playerid] = CreatePlayerTextDraw(playerid,467.584136, 323.166748, "");
	PlayerTextDrawLetterSize(playerid,RouletteText[playerid], 0.444846, 2.008333);
	PlayerTextDrawAlignment(playerid,RouletteText[playerid], 1);
	PlayerTextDrawColor(playerid,RouletteText[playerid], -1);
	PlayerTextDrawSetShadow(playerid,RouletteText[playerid], 0);
	PlayerTextDrawSetOutline(playerid,RouletteText[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid,RouletteText[playerid], 51);
	PlayerTextDrawFont(playerid,RouletteText[playerid], 1);
	PlayerTextDrawSetProportional(playerid,RouletteText[playerid], 1);
	PlayerTextDrawHide(playerid,RouletteText[playerid]);
	
	FL[playerid][Speed] = CreatePlayerTextDraw(playerid, 615.294250, 362.000152, "usebox");// BOX 
	PlayerTextDrawLetterSize(playerid, FL[playerid][Speed], 0.003748, 6.155744);
	PlayerTextDrawTextSize(playerid, FL[playerid][Speed], 449.654693, -13.416667);
	PlayerTextDrawAlignment(playerid, FL[playerid][Speed], 1);
	PlayerTextDrawColor(playerid, FL[playerid][Speed], 0);
	PlayerTextDrawUseBox(playerid, FL[playerid][Speed], true);
	PlayerTextDrawBoxColor(playerid, FL[playerid][Speed], 102);
	PlayerTextDrawSetShadow(playerid, FL[playerid][Speed], 0);
	PlayerTextDrawSetOutline(playerid, FL[playerid][Speed], 0);
	PlayerTextDrawFont(playerid, FL[playerid][Speed], 0);
	
	FL[playerid][SpeedShow] = CreatePlayerTextDraw(playerid, 465.710571, 368.083312, "_");// Индикатор скорости 
	PlayerTextDrawLetterSize(playerid, FL[playerid][SpeedShow], 0.537143, 3.437501);
	PlayerTextDrawAlignment(playerid, FL[playerid][SpeedShow], 1);
	PlayerTextDrawColor(playerid, FL[playerid][SpeedShow], -1);
	PlayerTextDrawSetShadow(playerid, FL[playerid][SpeedShow], 0);
	PlayerTextDrawSetOutline(playerid, FL[playerid][SpeedShow], 1);
	PlayerTextDrawBackgroundColor(playerid, FL[playerid][SpeedShow], 51);
	PlayerTextDrawFont(playerid, FL[playerid][SpeedShow], 2);
	PlayerTextDrawSetProportional(playerid, FL[playerid][SpeedShow], 1);
	
	FL[playerid][KMShow] = CreatePlayerTextDraw(playerid, 508.814849, 382.083374, "KM/H");// KM/H
	PlayerTextDrawLetterSize(playerid, FL[playerid][KMShow], 0.358638, 1.594167);
	PlayerTextDrawAlignment(playerid, FL[playerid][KMShow], 1);
	PlayerTextDrawColor(playerid, FL[playerid][KMShow], -1);
	PlayerTextDrawSetShadow(playerid, FL[playerid][KMShow], 0);
	PlayerTextDrawSetOutline(playerid, FL[playerid][KMShow], 1);
	PlayerTextDrawBackgroundColor(playerid, FL[playerid][KMShow], 51);
	PlayerTextDrawFont(playerid, FL[playerid][KMShow], 1);
	PlayerTextDrawSetProportional(playerid, FL[playerid][KMShow], 1);
	
	FL[playerid][StatusShow] = CreatePlayerTextDraw(playerid, 486.325531, 401.333435, "_");// Unlock and Lock
	PlayerTextDrawLetterSize(playerid, FL[playerid][StatusShow], 0.368477, 1.518333);
	PlayerTextDrawAlignment(playerid, FL[playerid][StatusShow], 1);
	PlayerTextDrawColor(playerid, FL[playerid][StatusShow], -1);
	PlayerTextDrawSetShadow(playerid, FL[playerid][StatusShow], 0);
	PlayerTextDrawSetOutline(playerid, FL[playerid][StatusShow], 1);
	PlayerTextDrawBackgroundColor(playerid, FL[playerid][StatusShow], 51);
	PlayerTextDrawFont(playerid, FL[playerid][StatusShow], 1);
	PlayerTextDrawSetProportional(playerid, FL[playerid][StatusShow], 1);
	
	FL[playerid][FillShow] = CreatePlayerTextDraw(playerid, 555.666320, 367.500000, "hud:radar_centre");// FUEL
	PlayerTextDrawLetterSize(playerid, FL[playerid][FillShow], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, FL[playerid][FillShow], 17.335266, 18.083374);
	PlayerTextDrawAlignment(playerid, FL[playerid][FillShow], 1);
	PlayerTextDrawColor(playerid, FL[playerid][FillShow], -1);
	PlayerTextDrawSetShadow(playerid, FL[playerid][FillShow], 0);
	PlayerTextDrawSetOutline(playerid, FL[playerid][FillShow], 0);
	PlayerTextDrawFont(playerid, FL[playerid][FillShow], 4);
	
	FL[playerid][IndCarHP] = CreatePlayerTextDraw(playerid, 579.560852, 390.833343, "_");// Индикатор состояния HP Car
	PlayerTextDrawLetterSize(playerid, FL[playerid][IndCarHP], 0.274304, 1.687500);
	PlayerTextDrawAlignment(playerid, FL[playerid][IndCarHP], 1);
	PlayerTextDrawColor(playerid, FL[playerid][IndCarHP], -1);
	PlayerTextDrawSetShadow(playerid, FL[playerid][IndCarHP], 0);
	PlayerTextDrawSetOutline(playerid, FL[playerid][IndCarHP], 1);
	PlayerTextDrawBackgroundColor(playerid, FL[playerid][IndCarHP], 51);
	PlayerTextDrawFont(playerid, FL[playerid][IndCarHP], 2);
	PlayerTextDrawSetProportional(playerid, FL[playerid][IndCarHP], 1);
	
	FL[playerid][CarHPShow] = CreatePlayerTextDraw(playerid, 557.541015, 393.166534, "hud:radar_modGarage");// Значек состояния HP Car
	PlayerTextDrawLetterSize(playerid, FL[playerid][CarHPShow], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, FL[playerid][CarHPShow], 16.000000, 17.500000);
	PlayerTextDrawAlignment(playerid, FL[playerid][CarHPShow], 1);
	PlayerTextDrawColor(playerid, FL[playerid][CarHPShow], -1);
	PlayerTextDrawSetShadow(playerid, FL[playerid][CarHPShow], 0);
	PlayerTextDrawSetOutline(playerid, FL[playerid][CarHPShow], 0);
	PlayerTextDrawFont(playerid, FL[playerid][CarHPShow], 4);
	
	FL[playerid][FuelShow] = CreatePlayerTextDraw(playerid, 579.092285, 368.666442, "_");// Индикатор бензина
	PlayerTextDrawLetterSize(playerid, FL[playerid][FuelShow], 0.286017, 1.716667);
	PlayerTextDrawAlignment(playerid, FL[playerid][FuelShow], 1);
	PlayerTextDrawColor(playerid, FL[playerid][FuelShow], -1);
	PlayerTextDrawSetShadow(playerid, FL[playerid][FuelShow], 0);
	PlayerTextDrawSetOutline(playerid, FL[playerid][FuelShow], 1);
	PlayerTextDrawBackgroundColor(playerid, FL[playerid][FuelShow], 51);
	PlayerTextDrawFont(playerid, FL[playerid][FuelShow], 2);
	PlayerTextDrawSetProportional(playerid, FL[playerid][FuelShow], 1);
	//==========================================================================
	FL[playerid][FULLRECON] = CreatePlayerTextDraw(playerid,510.000000, 120.000000, "_");
	PlayerTextDrawColor(playerid,FL[playerid][FULLRECON], -1);
	PlayerTextDrawSetShadow(playerid,FL[playerid][FULLRECON], 0);
	PlayerTextDrawBackgroundColor(playerid,FL[playerid][FULLRECON], 51);
	PlayerTextDrawSetProportional(playerid,FL[playerid][FULLRECON], 1);
	PlayerTextDrawAlignment(playerid,FL[playerid][FULLRECON], 1);
	PlayerTextDrawFont(playerid,FL[playerid][FULLRECON], 1);
	PlayerTextDrawSetOutline(playerid,FL[playerid][FULLRECON], 1);
	PlayerTextDrawLetterSize(playerid,FL[playerid][FULLRECON], 0.271024, 1.267499);
	//==========================================================================
	FL[playerid][boxre] = CreatePlayerTextDraw(playerid, 629.349914, 116.416664, "usebox");
	PlayerTextDrawLetterSize(playerid, FL[playerid][boxre], 0.012650, 19.294374);
	PlayerTextDrawTextSize(playerid, FL[playerid][boxre], 503.065887, 0.000000);
	PlayerTextDrawAlignment(playerid, FL[playerid][boxre], 1);
	PlayerTextDrawColor(playerid, FL[playerid][boxre], 0);
	PlayerTextDrawUseBox(playerid, FL[playerid][boxre], true);
	PlayerTextDrawBoxColor(playerid, FL[playerid][boxre], 102);
	PlayerTextDrawSetShadow(playerid, FL[playerid][boxre], 0);
	PlayerTextDrawSetOutline(playerid,FL[playerid][boxre], 0);
	PlayerTextDrawFont(playerid, FL[playerid][boxre], 0);
	//--------------------------------------------------------------------------
	Bizwar[playerid][0] = CreatePlayerTextDraw(playerid, 58.000000, 245.083190, "_");// Time
	PlayerTextDrawLetterSize(playerid, Bizwar[playerid][0], 0.323999, 1.634998);
	PlayerTextDrawAlignment(playerid, Bizwar[playerid][0], 2);
	PlayerTextDrawColor(playerid, Bizwar[playerid][0], -16776961);
	PlayerTextDrawSetShadow(playerid, Bizwar[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, Bizwar[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, Bizwar[playerid][0], 51);
	PlayerTextDrawFont(playerid, Bizwar[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, Bizwar[playerid][0], 1);

	Bizwar[playerid][1] = CreatePlayerTextDraw(playerid, 9.500000, 265.083251, "_");// Mafia 1
	PlayerTextDrawLetterSize(playerid, Bizwar[playerid][1], 0.266999, 1.599999);
	PlayerTextDrawAlignment(playerid, Bizwar[playerid][1], 1);
	PlayerTextDrawColor(playerid, Bizwar[playerid][1], -5963521);
	PlayerTextDrawSetShadow(playerid, Bizwar[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, Bizwar[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, Bizwar[playerid][1], 51);
	PlayerTextDrawFont(playerid, Bizwar[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, Bizwar[playerid][1], 1);

	Bizwar[playerid][2] = CreatePlayerTextDraw(playerid, 9.000000, 283.000030, "_");// Mafia 2
	PlayerTextDrawLetterSize(playerid, Bizwar[playerid][2], 0.266999, 1.599999);
	PlayerTextDrawAlignment(playerid, Bizwar[playerid][2], 1);
	PlayerTextDrawColor(playerid, Bizwar[playerid][2], 16711935);
	PlayerTextDrawSetShadow(playerid, Bizwar[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, Bizwar[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, Bizwar[playerid][2], 51);
	PlayerTextDrawFont(playerid, Bizwar[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, Bizwar[playerid][2], 1);

	Bizwar[playerid][3] = CreatePlayerTextDraw(playerid, 135.000000, 264.583312, "usebox");
	PlayerTextDrawLetterSize(playerid, Bizwar[playerid][3], 0.000000, -0.446291);
	PlayerTextDrawTextSize(playerid, Bizwar[playerid][3], 7.500000, 0.000000);
	PlayerTextDrawAlignment(playerid, Bizwar[playerid][3], 1);
	PlayerTextDrawColor(playerid, Bizwar[playerid][3], 0);
	PlayerTextDrawUseBox(playerid, Bizwar[playerid][3], true);
	PlayerTextDrawBoxColor(playerid, Bizwar[playerid][3], -1);
	PlayerTextDrawSetShadow(playerid, Bizwar[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, Bizwar[playerid][3], 0);
	PlayerTextDrawFont(playerid, Bizwar[playerid][3], 0);

	Bizwar[playerid][4] = CreatePlayerTextDraw(playerid, 135.000000, 301.750152, "usebox");
	PlayerTextDrawLetterSize(playerid, Bizwar[playerid][4], 0.000000, -0.446291);
	PlayerTextDrawTextSize(playerid, Bizwar[playerid][4], 6.500000, 0.000000);
	PlayerTextDrawAlignment(playerid, Bizwar[playerid][4], 1);
	PlayerTextDrawColor(playerid, Bizwar[playerid][4], 0);
	PlayerTextDrawUseBox(playerid, Bizwar[playerid][4], true);
	PlayerTextDrawBoxColor(playerid, Bizwar[playerid][4], -1);
	PlayerTextDrawSetShadow(playerid, Bizwar[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, Bizwar[playerid][4], 0);
	PlayerTextDrawFont(playerid, Bizwar[playerid][4], 0);
	//==========================================================================
	Capture[playerid][0] = CreatePlayerTextDraw(playerid, 151.000000, 254.122222, "usebox");
	PlayerTextDrawLetterSize(playerid, Capture[playerid][0], 0.000000, 1.135183);
	PlayerTextDrawTextSize(playerid, Capture[playerid][0], 1.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, Capture[playerid][0], 1);
	PlayerTextDrawColor(playerid, Capture[playerid][0], 0);
	PlayerTextDrawUseBox(playerid, Capture[playerid][0], true);
	PlayerTextDrawBoxColor(playerid, Capture[playerid][0], -5963521);
	PlayerTextDrawSetShadow(playerid, Capture[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, Capture[playerid][0], 0);
	PlayerTextDrawFont(playerid, Capture[playerid][0], 1);

	Capture[playerid][1] = CreatePlayerTextDraw(playerid, 151.000000, 271.544464, "usebox");
	PlayerTextDrawLetterSize(playerid, Capture[playerid][1], 0.000000, 1.104321);
	PlayerTextDrawTextSize(playerid, Capture[playerid][1], 1.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, Capture[playerid][1], 1);
	PlayerTextDrawColor(playerid, Capture[playerid][1], 0);
	PlayerTextDrawUseBox(playerid, Capture[playerid][1], true);
	PlayerTextDrawBoxColor(playerid, Capture[playerid][1], 50529738);
	PlayerTextDrawSetShadow(playerid, Capture[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, Capture[playerid][1], 0);
	PlayerTextDrawFont(playerid, Capture[playerid][1], 0);

	Capture[playerid][2] = CreatePlayerTextDraw(playerid, 151.000000, 289.344482, "usebox");
	PlayerTextDrawLetterSize(playerid, Capture[playerid][2], 0.000000, 1.154321);
	PlayerTextDrawTextSize(playerid, Capture[playerid][2], 1.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, Capture[playerid][2], 1);
	PlayerTextDrawColor(playerid, Capture[playerid][2], 0);
	PlayerTextDrawUseBox(playerid, Capture[playerid][2], true);
	PlayerTextDrawBoxColor(playerid, Capture[playerid][2], 50529738);
	PlayerTextDrawSetShadow(playerid, Capture[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, Capture[playerid][2], 0);
	PlayerTextDrawFont(playerid, Capture[playerid][2], 0);

	Capture[playerid][3] = CreatePlayerTextDraw(playerid, 19.000000, 251.377807, "Time: 10:00");
	PlayerTextDrawLetterSize(playerid, Capture[playerid][3], 0.282000, 1.438222);
	PlayerTextDrawAlignment(playerid, Capture[playerid][3], 1);
	PlayerTextDrawColor(playerid, Capture[playerid][3], -1);
	PlayerTextDrawSetShadow(playerid, Capture[playerid][3], 1);
	PlayerTextDrawSetOutline(playerid, Capture[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, Capture[playerid][3], 51);
	PlayerTextDrawFont(playerid, Capture[playerid][3], 2);
	PlayerTextDrawSetProportional(playerid, Capture[playerid][3], 1);

	Capture[playerid][4] = CreatePlayerTextDraw(playerid, 6.500000, 269.177825, "Grove Gang: 15");
	PlayerTextDrawLetterSize(playerid, Capture[playerid][4], 0.211500, 1.326222);
	PlayerTextDrawAlignment(playerid, Capture[playerid][4], 1);
	PlayerTextDrawColor(playerid, Capture[playerid][4], -1);
	PlayerTextDrawSetShadow(playerid, Capture[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, Capture[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, Capture[playerid][4], 51);
	PlayerTextDrawFont(playerid, Capture[playerid][4], 2);
	PlayerTextDrawSetProportional(playerid, Capture[playerid][4], 1);

	Capture[playerid][5] = CreatePlayerTextDraw(playerid, 6.500000, 287.600067, "Vagos Gang: 15");
	PlayerTextDrawLetterSize(playerid, Capture[playerid][5], 0.211500, 1.326222);
	PlayerTextDrawAlignment(playerid, Capture[playerid][5], 1);
	PlayerTextDrawColor(playerid, Capture[playerid][5], -1);
	PlayerTextDrawSetShadow(playerid, Capture[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, Capture[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, Capture[playerid][5], 51);
	PlayerTextDrawFont(playerid, Capture[playerid][5], 2);
	PlayerTextDrawSetProportional(playerid, Capture[playerid][5], 1);
	return true;
}

stock ResetNew(playerid)
{
	FL[playerid][creatcar] = -1;
	FL[playerid][crashtick] = 0;
	arendtime[playerid] = 0;
	OnMobile[playerid] = 0;
	CallInfo[playerid][callused] = 0;
	tipster[playerid] = 0;
	tipsterlisten[playerid] = 0;
	FL[playerid][spawnEx] = -1;
	IsSmoking[playerid] = 0;
	Rekl[playerid] = 1;
	mesh[playerid] = 999;
	usemesh[playerid] = 0;
	FormaFrac[playerid] = 0;
	TransportDuty[playerid] = 0;
	FL[playerid][ZoneOffer] = 999;
	FL[playerid][ZonePrice] = 0;
	FL[playerid][BizOffer] = 999;
	FL[playerid][BizPrice] = 0;
	Armour[playerid] = 0;
	robh[playerid] = false;
	FL[playerid][DrugOffer] = 999;
	FL[playerid][DrugPrice]= 999;
	FL[playerid][DrugGram]= 999;
	FL[playerid][MatsOffer] = 999;
	FL[playerid][MatsPrice]= 999;
	FL[playerid][MatsGram]= 999;
	FL[playerid][TicketOffer] = 999;
	FL[playerid][TicketMoney] = 0;
	FL[playerid][ProposeOffer] = 999;
	FL[playerid][InviteOffer] = 999;
	udar[playerid] = 0;
	PhoneOnline[playerid] = 0;
	FL[playerid][ChosenSkin] = 0;
	InviteSkin[playerid] = 0;
	FL[playerid][PEfir] = 255;
	FL[playerid][Pefir] = 0;
	TransportMoney[playerid] = 0;
	TransportCost[playerid] = 0;
	TransportDriver[playerid] = 999;
	Works[playerid] = false;
	JobCP[playerid] = 0;
	FL[playerid][GruzCP] = 0;
	FL[playerid][JobAmmount] = 0;
	OldSkin[playerid] = 320;
	CarLesson[playerid] = 0;
	BoatLesson[playerid] = 0;
	FlyLesson[playerid] = 0;
	FL[playerid][Employer] = 999;
	FL[playerid][Employert] = 999;
	FL[playerid][CP] = 0;
	TalkingLive[playerid] = 999;
	FL[playerid][LiveOffer] = 999;
	FL[playerid][RepairOffer] = 999;
	FL[playerid][RepairPrice] = 0;
	FL[playerid][CarOffer] = 999;
	FL[playerid][CarOffer2] = 999;
	FL[playerid][CarPrice] = 0;
	FL[playerid][CarPrice2] = 0;
	FL[playerid][RepairCar] = 0;
	TieTime[playerid] = 0;
	FL[playerid][RefillOffer] = 999;
	FL[playerid][RefillPrice] = 0;
	PlayerCuffed[playerid] = 0;
	PlayerCuffedTime[playerid] = 0;
	FL[playerid][DrugGram] = 0;
	FL[playerid][PlayerTied] = 0;
	Mobile[playerid] = 999;
	FL[playerid][Tel] = 999;
	gOoc[playerid] = 0;
	gNews[playerid] = 0;
	BigEar[playerid] = 0;
	gFam[playerid] = 0;
	sellerbiz[playerid] = INVALID_PLAYER_ID;
	bizcost[playerid] = 0;
	forwho[playerid] = INVALID_PLAYER_ID;
	FL[playerid][gLogin] = 0;
	FL[playerid][chisttimer] = 0;
	FL[playerid][PlayerDrunk] = 0;
	KrishaOffer[playerid] = 999;
	OldSkin[playerid] = GetPlayerSkin(playerid);
	FL[playerid][ChosenSkin] = OldSkin[playerid];
	InviteSkin[playerid] = OldSkin[playerid];
}
public OnPlayerConnect(playerid)
{
	cvector_push_back(players, playerid);
	for(new pInfo:i; i < pInfo; i ++) PI[playerid][i] = 0;
	GetPlayerName(playerid, PI[playerid][pName], MAX_PLAYER_NAME);
	gunmute[playerid] = gettime()+5;
	FL[playerid][Operation] = false;
	AntiFakeKill[playerid] = false;
	SetPVarInt(playerid, "SobCheck", 6);
	SetPlayerHealthAC(playerid, 100);
	Tazed[playerid] = 0;
	narkot[playerid] = 0;
	TimerBill[playerid] = 0;
	CreateTextDraws(playerid);
	RemovedObjects(playerid);
	ResetCarInfo(playerid);
	walk_goto_me[playerid] = 0;
	for(new l; l < 3; l++) TextDrawShowForPlayer(playerid, Logotip[l]);
	SetPVarInt(playerid, "hProdaet", 999);
	SetPVarInt(playerid, "KissUser", 999);
	SetPVarInt(playerid, "HiUser", 999);
	SetPVarInt(playerid, "PlayerInAFK", -2);
	//------------------------- Анти-Флуд в один слот --------------------------
	new __IP[64];
	GetPlayerIp(playerid, __IP, 64);
	if(slotUsed{playerid} && !strcmp(playersIP[playerid], __IP, true))
	{
		return Ban(playerid);
	}
	GetPlayerIp(playerid, playersIP[playerid], 64);
	slotUsed{playerid} = 1;
	//------------------------------ Анти-Бот ----------------------------------
	new ip[2][16],x;
	GetPlayerIp(playerid,ip[0],16);
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(i == playerid) continue;
		GetPlayerIp(i,ip[1],16);
		if(!strcmp(ip[0],ip[1],true)) x++;
		if(x > 3) print("KICK #1"), Kick(i), Kick(playerid);
		break;
	}
	//--------------------------------------------------------------------------
	new unixtime = GetTickCount();
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(!strcmp(ExitInfo[i][ExitName],Name(playerid),true))
		{
			if(unixtime - ExitInfo[i][ExitTime] <= 15000) return Kick(playerid) ,SCM(playerid,COLOR_LIGHTRED,"Повторный вход на сервер возможен не раньше, чем через 15 секунд");
			else strmid(ExitInfo[i][ExitName],"None", 0, strlen("None"), 32), ExitInfo[i][ExitTime] = 0;
		}
	}
	//--------------------------------------------------------------------------
	if(VhodVozm > 0)
	{
		format(YCMDstr,60, "< Загрузка игрового режима. Вход возможен через %d секунд >",VhodVozm);
		SCM(playerid,COLOR_REDD,YCMDstr);
		Kick(playerid);
		return true;
	}
	//--------------------------------------------------------------------------
	SetPlayerArmour(playerid, 0);
	SetPlayerColor(playerid, TEAM_HIT_COLOR);
	//--------------------------------------------------------------------------
	if(PI[playerid][pBSA] < 1)
	{
		new playersip[16];
		GetPlayerIp(playerid,playersip,sizeof(playersip));
		format(YCMDstr, 56, "%s - [ID:%d][IP:%s]",Name(playerid),playerid,playersip);
		ConnectMessage(YCMDstr);
	}
	//--------------------------------------------------------------------------
	for(new i = 0; i < 47; i++)
	{
		WeaponInfo[playerid][i] = false;
		AmmoInfo[playerid][i] = 0;
	}
	for(new i = 1; i < 11; i++) AmmoSlot[playerid][i] = 0;
	//--------------------------------------------------------------------------
	for(new s = 0; s < 132; s++) GangZoneShowForPlayer(playerid,GZInfo[s][gID],GetGangZoneColor(s));
	for(new i = 0; i < 3; i++) GangZoneShowForPlayer(playerid,ZonsWar[i],16711888);
	//--------------------------------------------------------------------------
	MobNom = CreatePlayerTextDraw(playerid,366.383666, 262.500000, "");// Ввод цифр в телефоне
	PlayerTextDrawLetterSize(playerid,MobNom, 0.211991, 1.179999);
	PlayerTextDrawSetShadow(playerid,MobNom, 0);
	PlayerTextDrawSetOutline(playerid,MobNom, 1);
	PlayerTextDrawBackgroundColor(playerid,MobNom, 51);
	return true;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(GetPVarInt(playerid,"USEDIALOGID") != dialogid) return print("KICK #2"), Kick(playerid);
	DeletePVar(playerid, "USEDIALOGID");
	while(strfind(inputtext, "%s",true) != -1) strdel(inputtext,strfind(inputtext, "%s",true),strfind(inputtext, "%s",true)+2);
	while(strfind(inputtext, "%",true) != -1) strdel(inputtext,strfind(inputtext, "%",true),strfind(inputtext, "%",true)+2);
	new gun, ammo, money, string[612];
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	switch(dialogid)
	{
	case 1426:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					if(PI[playerid][pDrugs] < 1) return SCM(playerid,COLOR_GREY,"У Вас нет наркотиков!");
					SCM(playerid,COLOR_GREY,"Вы выбросили наркотики на землю!");
					PI[playerid][pDrugs] = 0;
				}
			case 1:
				{
					if(PI[playerid][pMats] < 1) return SCM(playerid,COLOR_GREY,"У Вас нет материалов!");
					SCM(playerid,COLOR_GREY,"Вы выбросили материалы на землю!");
					PI[playerid][pMats] = 0;
				}
			case 2:
				{
					new GunIDEx = GetPlayerWeapon(playerid);
					new GunAmmoEx = GetPlayerAmmo(playerid);
					if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SCM(playerid, COLOR_GREY, "Вы находитесь в транспорте.");
					if(GetPlayerWeapon(playerid) <= 0 && GetPlayerAmmo(playerid) <= 0) return SCM(playerid, COLOR_GREY, "Вы не имеете при себе оружия.");
					if(GunIDEx == 4 || GunIDEx == 35 || GunIDEx == 36 || GunIDEx == 37 || GunIDEx == 39 || GunIDEx == 16 || GunIDEx == 18 || GunIDEx == 38 || GunIDEx == 44 || GunIDEx == 45)
					{
						SCM(playerid, 0xAFAFAFAA, "Нельзя положить это оружие!");
						return true;
					}
					if(GunIDEx > 0 && GunAmmoEx != 0)
					{
						new f = MAX_DROP_GUN+1;
						for(new a = 0; a < MAX_DROP_GUN; a++)
						{
							if(GunInfo[a][ObjPos][0] == 0.0)
							{
								f = a;
								break;
							}
						}
						if(f > MAX_DROP_GUN) return SCM(playerid, 0xAFAFAFAA, "Вы не можете положить оружие. Превышен максимальный лимит.");
						SCM(playerid,COLOR_GREY,"Вы положили оружие которое было у Вас в руках на землю.");
						RemovePlayerWeapon(playerid, GunIDEx);
						GunInfo[f][ObjData][0] = GunIDEx;
						GunInfo[f][ObjData][1] = GunAmmoEx;
						GunInfo[f][Virtual] = GetPlayerVirtualWorld(playerid);
						GunInfo[f][Interior] = GetPlayerInterior(playerid);
						GetPlayerPos(playerid, GunInfo[f][ObjPos][0], GunInfo[f][ObjPos][1], GunInfo[f][ObjPos][2]);
						SetPlayerVirtualWorld(playerid, GunInfo[f][Virtual]);
						GunInfo[f][ObjID] = CreateDynamicObject(GunObjects[GunIDEx], GunInfo[f][ObjPos][0], GunInfo[f][ObjPos][1], GunInfo[f][ObjPos][2]-1, 93.7, 120.0, 120.0 , GunInfo[f][Virtual], GunInfo[f][Interior], -1, 800);
						ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
						format(YCMDstr, 30, "Нажмите < C > чтобы подобрать", YCMDstr);
						GunInfo[f][Label] = CreateDynamic3DTextLabel(YCMDstr, 0xFFFF00AA, GunInfo[f][ObjPos][0], GunInfo[f][ObjPos][1], GunInfo[f][ObjPos][2], 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, GunInfo[f][Virtual], GunInfo[f][Interior], -1, 100.0);
					}
				}
			}
		}
	case 1203:
		{
			if(!response) return true;
			if(GetPVarInt(GetPVarInt(playerid,"TaxiPlayer"),"PayDayCashJob") > gettime()) return true;
			if(GetPVarInt(GetPVarInt(playerid,"TaxiPlayer"),"Taxi_") <= 0) SetPVarInt(GetPVarInt(playerid,"TaxiPlayer"),"PayDayCashJob",gettime() + 150);
			PI[GetPVarInt(playerid,"TaxiPlayer")][ptaxiexp]++;
			if(PI[GetPVarInt(playerid,"TaxiPlayer")][ptaxiexp] >= PI[GetPVarInt(playerid,"TaxiPlayer")][ptaxilvl]*8) PI[GetPVarInt(playerid,"TaxiPlayer")][ptaxilvl]++, PI[GetPVarInt(playerid,"TaxiPlayer")][ptaxiexp] = 0;
		}
	case 2017:
		{
			if(!response) return true;
			if(FracBank[0][kassnafta] >= 49999) return SCM(playerid,COLOR_GRAD1, "Склад завода К.А.С.С. забит нефтью.");
			SetPVarInt(playerid, "loading_job", 2);
			SCM(playerid, COLOR_ORANGE, "- Отправляйтесь на нефтяной завод и загрузите бочки с нефтью.");
			SetPlayerRaceCheckpoint(playerid, 0, 266.6995,1408.8074,10.6250, 2688.4985,2721.0486,10.9633, 5.0);
		}
	case 2112:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					new house = PI[playerid][pPhousekey];
					if(House[house][hGarage] == 0)
					{
						if(caridhouse[playerid][0] != 0) DestroyVehicle(caridhouse[playerid][0]), caridhouse[playerid][0] = 0;
						if(caridhouse[playerid][1] != 0) DestroyVehicle(caridhouse[playerid][1]), caridhouse[playerid][1] = 0;
						caridhouse[playerid][0] = CreateVehicle(PI[playerid][pCar1], House[house][hCarx], House[house][hCary], House[house][hCarz], House[house][hCarc] , PI[playerid][pColor][0] ,PI[playerid][pColor][1], 86400);
						LockCar(caridhouse[playerid][0]);
						Fuell[caridhouse[playerid][0]] = PI[playerid][pFuelcar];
						GameTextForPlayer(playerid, "~g~car at your home~n~~r~$-500", 5000, 1);
						PI[playerid][pCash] -= 500;
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						CompVeh(playerid,caridhouse[playerid][0]);
					}
					if(House[house][hGarage] == 1)
					{
						if(caridhouse[playerid][0] != 0) DestroyVehicle(caridhouse[playerid][0]), caridhouse[playerid][0] = 0;
						caridhouse[playerid][0] = CreateVehicle(PI[playerid][pCar1], 2491.6121,-2564.9578,2500.8130,73.1183, PI[playerid][pColor][0] ,PI[playerid][pColor][1], 86400);
						LinkVehicleToInterior(caridhouse[playerid][0],1);
						SetVehicleVirtualWorld(caridhouse[playerid][0],house+50);
						LockCar(caridhouse[playerid][0]);
						Fuell[caridhouse[playerid][0]] = PI[playerid][pFuelcar];
						GameTextForPlayer(playerid, "~g~car at your home~n~~r~$-500", 5000, 1);
						PI[playerid][pCash] -= 500;
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						CompVeh(playerid,caridhouse[playerid][0]);
					}
				}
			case 1:
				{
					new house = PI[playerid][pPhousekey];
					if(House[house][hGarage] == 0)
					{
						if(caridhouse[playerid][0] != 0) DestroyVehicle(caridhouse[playerid][0]), caridhouse[playerid][0] = 0;
						if(caridhouse[playerid][1] != 0) DestroyVehicle(caridhouse[playerid][1]), caridhouse[playerid][1] = 0;
						caridhouse[playerid][1] = CreateVehicle(PI[playerid][pCar2], House[house][hCarx], House[house][hCary], House[house][hCarz], House[house][hCarc] , PI[playerid][pColor1][0] ,PI[playerid][pColor1][1], 86400);
						LockCar(caridhouse[playerid][1]);
						Fuell[caridhouse[playerid][1]] = PI[playerid][pFuelcar1];
						GameTextForPlayer(playerid, "~g~car at your home~n~~r~$-500", 5000, 1);
						PI[playerid][pCash] -= 500;
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						CompVeh1(playerid,caridhouse[playerid][1]);
					}
					if(House[house][hGarage] == 1)
					{
						if(caridhouse[playerid][1] != 0) DestroyVehicle(caridhouse[playerid][1]), caridhouse[playerid][1] = 0;
						caridhouse[playerid][1] = CreateVehicle(PI[playerid][pCar2], 2491.8872,-2559.2559,2500.8147,98.5833, PI[playerid][pColor1][0] ,PI[playerid][pColor1][1], 86400);
						LinkVehicleToInterior(caridhouse[playerid][1],1);
						SetVehicleVirtualWorld(caridhouse[playerid][1],house+50);
						LockCar(caridhouse[playerid][1]);
						Fuell[caridhouse[playerid][1]] = PI[playerid][pFuelcar1];
						GameTextForPlayer(playerid, "~g~car at your home~n~~r~$-500", 5000, 1);
						PI[playerid][pCash] -= 500;
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						CompVeh1(playerid,caridhouse[playerid][1]);
					}
				}
			}
		}
	case 6111:
		{
			if(!response) return true;
			if(FracBank[0][fzmatbi] <= 0) return SCM(playerid,COLOR_GRAD1, "На складе завода нет оружия!");
			FracBank[0][fzmatbi] -= 100;
			switch(listitem)
			{
			case 0:
				{
					if(GetPVarInt(playerid,"Deagle_1") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 24, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Desert Eagle [100 пт.]");
					SetPVarInt(playerid,"Deagle_1",gettime() + 180);
					SPDEx(playerid, 6111, 2, "Склад", "- Desert Eagle [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Аптечка [2 шт.]\n- Броня", "Выбрать", "Отмена");
				}
			case 1:
				{
					if(GetPVarInt(playerid,"M4_1") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 31, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: M4 [100 пт.]");
					SetPVarInt(playerid,"M4_1",gettime() + 180);
					SPDEx(playerid, 6111, 2, "Склад", "- Desert Eagle [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Аптечка [2 шт.]\n- Броня", "Выбрать", "Отмена");
				}
			case 2:
				{
					PI[playerid][pGolod] = 500;
					SCM(playerid,COLOR_GRAD1, "Выдано: Сухой паёк");
					SPDEx(playerid, 6111, 2, "Склад", "- Desert Eagle [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Аптечка [2 шт.]\n- Броня", "Выбрать", "Отмена");
				}
			case 3:
				{
					SetPlayerHealthAC(playerid, 100); PI[playerid][pHeal] = 1;
					SCM(playerid,COLOR_GRAD1, "Выдано: Аптечка [1 шт.]");
					SPDEx(playerid, 6111, 2, "Склад", "- Desert Eagle [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Аптечка [2 шт.]\n- Броня", "Выбрать", "Отмена");
				}
			case 4:
				{
					SetPlayerArmour(playerid, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Броня");
					SPDEx(playerid, 6111, 2, "Склад", "- Desert Eagle [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Аптечка [2 шт.]\n- Броня", "Выбрать", "Отмена");
				}
			}
		}
	case 6112:
		{
			if(!response) return true;
			if(FracBank[0][ffbimats] <= 0) return SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
			FracBank[0][ffbimats] -= 100;
			switch(listitem)
			{
			case 0:
				{
					if(GetPVarInt(playerid,"Tazer_1") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 23, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Tazer [100 пт.]");
					SetPVarInt(playerid,"Tazer_1",gettime() + 180);
					SPDEx(playerid, 6112, 2, "Склад", "- Tazer [100 пт.]\n- MP5 [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз\n- Дымовые шашки [5 шт.]", "Выбрать", "Отмена");
				}
			case 1:
				{
					if(GetPVarInt(playerid,"MP5_1") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 29, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: MP5 [100 пт.]");
					SetPVarInt(playerid,"MP5_1",gettime() + 180);
					SPDEx(playerid, 6112, 2, "Склад", "- Tazer [100 пт.]\n- MP5 [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз\n- Дымовые шашки [5 шт.]", "Выбрать", "Отмена");
				}
			case 2:
				{
					if(GetPVarInt(playerid,"M4_2") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 31, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: M4 [100 пт.]");
					SetPVarInt(playerid,"M4_2",gettime() + 180);
					SPDEx(playerid, 6112, 2, "Склад", "- Tazer [100 пт.]\n- MP5 [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз\n- Дымовые шашки [5 шт.]", "Выбрать", "Отмена");
				}
			case 3:
				{
					PI[playerid][pGolod] = 500;
					SCM(playerid,COLOR_GRAD1, "Выдано: Сухой паёк");
					SPDEx(playerid, 6112, 2, "Склад", "- Tazer [100 пт.]\n- MP5 [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз\n- Дымовые шашки [5 шт.]", "Выбрать", "Отмена");
				}
			case 4:
				{
					SetPlayerArmour(playerid, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Броня");
					SPDEx(playerid, 6112, 2, "Склад", "- Tazer [100 пт.]\n- MP5 [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз\n- Дымовые шашки [5 шт.]", "Выбрать", "Отмена");
				}
			case 5:
				{
					SetPlayerHealthAC(playerid, 100); PI[playerid][pHeal] = 1;
					SCM(playerid,COLOR_GRAD1, "Выдано: Аптечка [1 шт.]");
					SPDEx(playerid, 6112, 2, "Склад", "- Tazer [100 пт.]\n- MP5 [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз\n- Дымовые шашки [5 шт.]", "Выбрать", "Отмена");
				}
			case 6:
				{
					SetPlayerAttachedObject(playerid, 1, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0);
					SCM(playerid,COLOR_GRAD1, "Выдано: Полицейский щит");
					SCM(playerid,COLOR_GRAD1, "Чтобы снять полицейский щит, введите: /delshield");
					SPDEx(playerid, 6112, 2, "Склад", "- Tazer [100 пт.]\n- MP5 [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз\n- Дымовые шашки [5 шт.]", "Выбрать", "Отмена");
				}
			case 7:
				{
					SetPlayerAttachedObject(playerid,3,19472,2,-0.002999,0.121999,-0.004000,4.200000,86.299980,86.000000,1.129000,1.117999,1.139999);
					SCM(playerid,COLOR_GRAD1, "Выдано: Противогаз");
					SCM(playerid,COLOR_GRAD1, "Чтобы снять противогаз, введите: /delmask");
					SPDEx(playerid, 6112, 2, "Склад", "- Tazer [100 пт.]\n- MP5 [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз\n- Дымовые шашки [5 шт.]", "Выбрать", "Отмена");
				}
			case 8:
				{
					if(GetPVarInt(playerid,"Shahka") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 17, 5);
					SCM(playerid,COLOR_GRAD1, "Выдано: Дымовые шашки [5 шт.]");
					SetPVarInt(playerid,"Shahka",gettime() + 180);
					SPDEx(playerid, 6112, 2, "Склад", "- Tazer [100 пт.]\n- MP5 [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз\n- Дымовые шашки [5 шт.]", "Выбрать", "Отмена");
				}
			}
		}
	case 6113:
		{
			if(!response) return true;
			if(FracBank[0][flspdmatbi] <= 0) return SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
			FracBank[0][flspdmatbi] -= 100;
			switch(listitem)
			{
			case 0:
				{
					if(GetPVarInt(playerid,"Dubinka_1") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 3, 1);
					SCM(playerid,COLOR_GRAD1, "Выдано: Дубинка");
					SetPVarInt(playerid,"Dubinka_1",gettime() + 180);
					SPDEx(playerid, 6113, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 1:
				{
					if(GetPVarInt(playerid,"Tazer_2") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 23, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Tazer [100 пт.]");
					SetPVarInt(playerid,"Tazer_2",gettime() + 180);
					SPDEx(playerid, 6113, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 2:
				{
					if(GetPVarInt(playerid,"Shotgun_1") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 25, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Shotgun [100 пт.]");
					SetPVarInt(playerid,"Shotgun_1",gettime() + 180);
					SPDEx(playerid, 6113, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 3:
				{
					if(GetPVarInt(playerid,"M4_3") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 31, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: M4 [100 пт.]");
					SetPVarInt(playerid,"M4_3",gettime() + 180);
					SPDEx(playerid, 6113, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 4:
				{
					PI[playerid][pGolod] = 500;
					SCM(playerid,COLOR_GRAD1, "Выдано: Сухой паёк");
					SPDEx(playerid, 6113, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 5:
				{
					SetPlayerArmour(playerid, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Броня");
					SPDEx(playerid, 6113, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 6:
				{
					SetPlayerHealthAC(playerid, 100); PI[playerid][pHeal] = 1;
					SCM(playerid,COLOR_GRAD1, "Выдано: Аптечка [1 шт.]");
					SPDEx(playerid, 6113, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 7:
				{
					SetPlayerAttachedObject(playerid, 1, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0);
					SCM(playerid,COLOR_GRAD1, "Выдано: Полицейский щит");
					SCM(playerid,COLOR_GRAD1, "Чтобы снять полицейский щит, введите: /delshield");
					SPDEx(playerid, 6113, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 8:
				{
					SetPlayerAttachedObject(playerid,3,19472,2,-0.002999,0.121999,-0.004000,4.200000,86.299980,86.000000,1.129000,1.117999,1.139999);
					SCM(playerid,COLOR_GRAD1, "Выдано: Противогаз");
					SCM(playerid,COLOR_GRAD1, "Чтобы снять противогаз, введите: /delmask");
					SPDEx(playerid, 6113, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			}
		}
	case 6114:
		{
			if(!response) return true;
			if(FracBank[0][flspdmatbi] <= 0) return SCM(playerid,0xB4B5B7FF,"На складе LSPD нет материалов. Свяжитесь с сотрудниками LSPD!");
			FracBank[0][flspdmatbi] -= 100;
			switch(listitem)
			{
			case 0:
				{
					if(GetPVarInt(playerid,"Dubinka_2") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 3, 1);
					SCM(playerid,COLOR_GRAD1, "Выдано: Дубинка");
					SetPVarInt(playerid,"Dubinka_2",gettime() + 180);
					SPDEx(playerid, 6114, 2, "Склад", "- Дубинка\n- Deagle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Противогаз", "Выбрать", "Отмена");
				}
			case 1:
				{
					if(GetPVarInt(playerid,"Deagle_2") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 24, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Deagle [100 пт.]");
					SetPVarInt(playerid,"Deagle_2",gettime() + 180);
					SPDEx(playerid, 6114, 2, "Склад", "- Дубинка\n- Deagle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Противогаз", "Выбрать", "Отмена");
				}
			case 2:
				{
					PI[playerid][pGolod] = 500;
					SCM(playerid,COLOR_GRAD1, "Выдано: Сухой паёк");
					SPDEx(playerid, 6114, 2, "Склад", "- Дубинка\n- Deagle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Противогаз", "Выбрать", "Отмена");
				}
			case 3:
				{
					SetPlayerArmour(playerid, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Броня");
					SPDEx(playerid, 6114, 2, "Склад", "- Дубинка\n- Deagle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Противогаз", "Выбрать", "Отмена");
				}
			case 4:
				{
					SetPlayerHealthAC(playerid, 100); PI[playerid][pHeal] = 1;
					SCM(playerid,COLOR_GRAD1, "Выдано: Аптечка [1 шт.]");
					SPDEx(playerid, 6114, 2, "Склад", "- Дубинка\n- Deagle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Противогаз", "Выбрать", "Отмена");
				}
			case 5:
				{
					SetPlayerAttachedObject(playerid,3,19472,2,-0.002999,0.121999,-0.004000,4.200000,86.299980,86.000000,1.129000,1.117999,1.139999);
					SCM(playerid,COLOR_GRAD1, "Выдано: Противогаз");
					SCM(playerid,COLOR_GRAD1, "Чтобы снять противогаз, введите: /delmask");
					SPDEx(playerid, 6114, 2, "Склад", "- Дубинка\n- Deagle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Противогаз", "Выбрать", "Отмена");
				}
			}
		}
	case 6115:
		{
			if(!response) return true;
			if(FracBank[0][flvpdmats] <= 0) return SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
			FracBank[0][flvpdmats] -= 100;
			switch(listitem)
			{
			case 0:
				{
					if(GetPVarInt(playerid,"Dubinka_3") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 3, 1);
					SCM(playerid,COLOR_GRAD1, "Выдано: Дубинка");
					SetPVarInt(playerid,"Dubinka_3",gettime() + 180);
					SPDEx(playerid, 6115, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 1:
				{
					if(GetPVarInt(playerid,"Tazer_3") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 23, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Tazer [100 пт.]");
					SetPVarInt(playerid,"Tazer_3",gettime() + 180);
					SPDEx(playerid, 6115, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 2:
				{
					if(GetPVarInt(playerid,"Shotgun_2") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 25, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Shotgun [100 пт.]");
					SetPVarInt(playerid,"Shotgun_2",gettime() + 180);
					SPDEx(playerid, 6115, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 3:
				{
					if(GetPVarInt(playerid,"M4_4") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 31, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: M4 [100 пт.]");
					SetPVarInt(playerid,"M4_4",gettime() + 180);
					SPDEx(playerid, 6115, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 4:
				{
					PI[playerid][pGolod] = 500;
					SCM(playerid,COLOR_GRAD1, "Выдано: Сухой паёк");
					SPDEx(playerid, 6115, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 5:
				{
					SetPlayerArmour(playerid, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Броня");
					SPDEx(playerid, 6115, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 6:
				{
					SetPlayerHealthAC(playerid, 100); PI[playerid][pHeal] = 1;
					SCM(playerid,COLOR_GRAD1, "Выдано: Аптечка [1 шт.]");
					SPDEx(playerid, 6115, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 7:
				{
					SetPlayerAttachedObject(playerid, 1, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0);
					SCM(playerid,COLOR_GRAD1, "Выдано: Полицейский щит");
					SCM(playerid,COLOR_GRAD1, "Чтобы снять полицейский щит, введите: /delshield");
					SPDEx(playerid, 6115, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 8:
				{
					SetPlayerAttachedObject(playerid,3,19472,2,-0.002999,0.121999,-0.004000,4.200000,86.299980,86.000000,1.129000,1.117999,1.139999);
					SCM(playerid,COLOR_GRAD1, "Выдано: Противогаз");
					SCM(playerid,COLOR_GRAD1, "Чтобы снять противогаз, введите: /delmask");
					SPDEx(playerid, 6115, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			}
		}
	case 6116:
		{
			if(!response) return true;
			if(FracBank[0][fsfpdmats] <= 0) return SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
			FracBank[0][fsfpdmats] -= 100;
			switch(listitem)
			{
			case 0:
				{
					if(GetPVarInt(playerid,"Dubinka_4") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 3, 1);
					SCM(playerid,COLOR_GRAD1, "Выдано: Дубинка");
					SetPVarInt(playerid,"Dubinka_4",gettime() + 180);
					SPDEx(playerid, 6116, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 1:
				{
					if(GetPVarInt(playerid,"Tazer_4") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 23, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Tazer [100 пт.]");
					SetPVarInt(playerid,"Tazer_4",gettime() + 180);
					SPDEx(playerid, 6116, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 2:
				{
					if(GetPVarInt(playerid,"Shotgun_3") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 25, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Shotgun [100 пт.]");
					SetPVarInt(playerid,"Shotgun_3",gettime() + 180);
					SPDEx(playerid, 6116, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 3:
				{
					if(GetPVarInt(playerid,"M4_5") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 31, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: M4 [100 пт.]");
					SetPVarInt(playerid,"M4_5",gettime() + 180);
					SPDEx(playerid, 6116, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 4:
				{
					PI[playerid][pGolod] = 500;
					SCM(playerid,COLOR_GRAD1, "Выдано: Сухой паёк");
					SPDEx(playerid, 6116, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 5:
				{
					SetPlayerArmour(playerid, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Броня");
					SPDEx(playerid, 6116, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 6:
				{
					SetPlayerHealthAC(playerid, 100); PI[playerid][pHeal] = 1;
					SCM(playerid,COLOR_GRAD1, "Выдано: Аптечка [1 шт.]");
					SPDEx(playerid, 6116, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 7:
				{
					SetPlayerAttachedObject(playerid, 1, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0);
					SCM(playerid,COLOR_GRAD1, "Выдано: Полицейский щит");
					SCM(playerid,COLOR_GRAD1, "Чтобы снять полицейский щит, введите: /delshield");
					SPDEx(playerid, 6116, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			case 8:
				{
					SetPlayerAttachedObject(playerid,3,19472,2,-0.002999,0.121999,-0.004000,4.200000,86.299980,86.000000,1.129000,1.117999,1.139999);
					SCM(playerid,COLOR_GRAD1, "Выдано: Противогаз");
					SCM(playerid,COLOR_GRAD1, "Чтобы снять противогаз, введите: /delmask");
					SPDEx(playerid, 6116, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
				}
			}
		}
	case 6117:
		{
			if(!response) return true;
			if(FracBank[0][farmmatbi] <= 0) return SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
			FracBank[0][farmmatbi] -= 100;
			switch(listitem)
			{
			case 0:
				{
					if(GetPVarInt(playerid,"Deagle_3") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 24, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Desert Eagle [100 пт.]");
					SetPVarInt(playerid,"Deagle_3",gettime() + 180);
					SPDEx(playerid, 6117, 2, "Склад", "- Desert Eagle [100 пт.]\n- M4 [100 пт.]\n- Sniper Rifle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]", "Выбрать", "Отмена");
				}
			case 1:
				{
					if(GetPVarInt(playerid,"M4_6") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 31, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: M4 [100 пт.]");
					SetPVarInt(playerid,"M4_6",gettime() + 180);
					SPDEx(playerid, 6117, 2, "Склад", "- Desert Eagle [100 пт.]\n- M4 [100 пт.]\n- Sniper Rifle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]", "Выбрать", "Отмена");
				}
			case 2:
				{
					if(GetPVarInt(playerid,"Sniper_1") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 34, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Sniper Rifle [100 пт.]");
					SetPVarInt(playerid,"Sniper_1",gettime() + 180);
					SPDEx(playerid, 6117, 2, "Склад", "- Desert Eagle [100 пт.]\n- M4 [100 пт.]\n- Sniper Rifle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]", "Выбрать", "Отмена");
				}
			case 3:
				{
					PI[playerid][pGolod] = 500;
					SCM(playerid,COLOR_GRAD1, "Выдано: Сухой паёк");
					SPDEx(playerid, 6117, 2, "Склад", "- Desert Eagle [100 пт.]\n- M4 [100 пт.]\n- Sniper Rifle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]", "Выбрать", "Отмена");
				}
			case 4:
				{
					SetPlayerArmour(playerid, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Броня");
					SPDEx(playerid, 6117, 2, "Склад", "- Desert Eagle [100 пт.]\n- M4 [100 пт.]\n- Sniper Rifle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]", "Выбрать", "Отмена");
				}
			case 5:
				{
					SetPlayerHealthAC(playerid, 100); PI[playerid][pHeal] = 1;
					SCM(playerid,COLOR_GRAD1, "Выдано: Аптечка [1 шт.]");
					SPDEx(playerid, 6117, 2, "Склад", "- Desert Eagle [100 пт.]\n- M4 [100 пт.]\n- Sniper Rifle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]", "Выбрать", "Отмена");
				}
			}
		}
	case 6118:
		{
			if(!response) return true;
			if(FracBank[0][farmmatsf] <= 0) return SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
			FracBank[0][farmmatsf] -= 100;
			switch(listitem)
			{
			case 0:
				{
					if(GetPVarInt(playerid,"Deagle_4") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 24, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Desert Eagle [100 пт.]");
					SetPVarInt(playerid,"Deagle_4",gettime() + 180);
					SPDEx(playerid, 6118, 2, "Склад", "- Desert Eagle [100 пт.]\n- M4 [100 пт.]\n- Sniper Rifle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]", "Выбрать", "Отмена");
				}
			case 1:
				{
					if(GetPVarInt(playerid,"M4_7") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 31, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: M4 [100 пт.]");
					SetPVarInt(playerid,"M4_7",gettime() + 180);
					SPDEx(playerid, 6118, 2, "Склад", "- Desert Eagle [100 пт.]\n- M4 [100 пт.]\n- Sniper Rifle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]", "Выбрать", "Отмена");
				}
			case 2:
				{
					if(GetPVarInt(playerid,"Sniper_2") > gettime()) return SCM(playerid, 0xFF0000FF, "Оружие можно брать раз в 3 минуты.");
					_GiveGun(playerid, 34, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Sniper Rifle [100 пт.]");
					SetPVarInt(playerid,"Sniper_2",gettime() + 180);
					SPDEx(playerid, 6118, 2, "Склад", "- Desert Eagle [100 пт.]\n- M4 [100 пт.]\n- Sniper Rifle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]", "Выбрать", "Отмена");
				}
			case 3:
				{
					PI[playerid][pGolod] = 500;
					SCM(playerid,COLOR_GRAD1, "Выдано: Сухой паёк");
					SPDEx(playerid, 6118, 2, "Склад", "- Desert Eagle [100 пт.]\n- M4 [100 пт.]\n- Sniper Rifle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]", "Выбрать", "Отмена");
				}
			case 4:
				{
					SetPlayerArmour(playerid, 100);
					SCM(playerid,COLOR_GRAD1, "Выдано: Броня");
					SPDEx(playerid, 6118, 2, "Склад", "- Desert Eagle [100 пт.]\n- M4 [100 пт.]\n- Sniper Rifle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]", "Выбрать", "Отмена");
				}
			case 5:
				{
					SetPlayerHealthAC(playerid, 100); PI[playerid][pHeal] = 1;
					SCM(playerid,COLOR_GRAD1, "Выдано: Аптечка [1 шт.]");
					SPDEx(playerid, 6118, 2, "Склад", "- Desert Eagle [100 пт.]\n- M4 [100 пт.]\n- Sniper Rifle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]", "Выбрать", "Отмена");
				}
			}
		}
	case 2421:
		{
			if(!response) return 1;
			if(FracBank[0][fzmatbi] >= 499999) return SCM(playerid,COLOR_GRAD1, "Склад завода К.А.С.С. забит ящиками с оружием.");
			if(FracBank[0][fzsklad] <= 0) return SCM(playerid,COLOR_GRAD1, "На складе нет деталей для изготовления оружия!");
			SCM(playerid,COLOR_ORANGE,"Вы начали работу сборщика оружия. Следуйте к ящикам, чтобы взять детали.");
			SetPVarInt(playerid,"Gunjob",1);
			SetPVarInt(playerid,"Gjob",1);
			new mcheck = random(4);
			if(mcheck == 0) SetPlayerCheckpoint(playerid,2570.6636,2840.0378,10.8218,1.5);
			if(mcheck == 1) SetPlayerCheckpoint(playerid,2589.0168,2841.2839,10.8218,1.5);
			if(mcheck == 2) SetPlayerCheckpoint(playerid,2588.2476,2814.6499,10.8218,1.5);
			if(mcheck == 3) SetPlayerCheckpoint(playerid,2562.5381,2814.7732,10.8218,1.5);
			return 1;
		}
	case 2422:
		{
			if(!response) return 1;
			format(YCMDstr, 38,"Вы закончили работу. Премия: $%i.",GetPVarInt(playerid, "GUN")*100);
			SCM(playerid,COLOR_ORANGE,YCMDstr);
			GiveMoney(playerid,GetPVarInt(playerid, "GUN")*100);
			RemovePlayerAttachedObject(playerid, 3);
			DeletePVar(playerid, "Gunjob");
			DeletePVar(playerid, "GUN");
			DeletePVar(playerid, "Gjob");
			DisablePlayerCheckpoint(playerid);
			return 1;
		}
	case 1362:
		{
			if(response)
			{
				if(GetPVarInt(playerid, "ProverkaDice") == 1)
				{
					if(GetPVarInt(playerid, "KostiName") < 999)
					{
						if(PlayerToPoint(7.0,playerid,1953.2626,997.4374,992.8594) || PlayerToPoint(7.0,playerid,1953.4767,1037.9865,992.8594) || PlayerToPoint(7.0,playerid,2219.1223,1601.3096,1006.1797) || PlayerToPoint(7.0,playerid,2219.2183,1605.8140,1006.1797))
						{
						    if(!IsPlayerConnected(GetPVarInt(playerid, "KostiName")))
							{
							    DeletePVar(playerid, "ZapretDice");
								DeletePVar(GetPVarInt(playerid, "KostiName"), "ZapretDice");
								SetPVarInt(playerid, "KostiMoney",0);
								DeletePVar(playerid, "ProverkaDice");
								SetPVarInt(playerid, "KostiName",999);
								SCM(playerid, COLOR_GREY, "Игрок вышел с сервера!");
								return true;
							}
							if(PI[playerid][pCash] < GetPVarInt(playerid, "KostiMoney")) return SCM(playerid, COLOR_GRAD2, "У Вас нет столько денег!");
							new dice = random(12)+1;
							new dice1 = random(12)+1;
							format(YCMDstr, 92, "%s и %s бросили кости. Результат: {CC9900}%i:%i",PI[GetPVarInt(playerid, "KostiName")][pName],PI[playerid][pName],dice,dice1);
							ProxDetector(5.0, playerid, YCMDstr, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
							if(dice > dice1)
							{
								PI[GetPVarInt(playerid, "KostiName")][pCash] += GetPVarInt(playerid, "KostiMoney");
								PI[playerid][pCash] -= GetPVarInt(playerid, "KostiMoney");
								SCM(GetPVarInt(playerid, "KostiName"), COLOR_GREEN, "Поздравляем, Вы выиграли!");
								SCM(playerid, COLOR_ORANGE, "К сожалению, Вы проиграли!");
								format(YCMDstr, 17, "~g~+%d$", GetPVarInt(playerid, "KostiMoney"));
								GameTextForPlayer(GetPVarInt(playerid, "KostiName"), YCMDstr, 3000, 1);
								format(YCMDstr, 17, "~r~-%d$", GetPVarInt(playerid, "KostiMoney"));
								GameTextForPlayer(playerid, YCMDstr, 3000, 1);
								format(YCMDstr,11, "Выпало: %i",dice1);
								SetPlayerChatBubble(playerid,YCMDstr,COLOR_ORANGE,30.0,10000);
								format(YCMDstr,11, "Выпало: %i",dice);
								SetPlayerChatBubble(GetPVarInt(playerid, "KostiName"),YCMDstr,TEAM_GROVE_COLOR,30.0,10000);
								DeletePVar(playerid, "ZapretDice");
								DeletePVar(GetPVarInt(playerid, "KostiName"), "ZapretDice");
								SetPVarInt(playerid, "KostiMoney",0);
								DeletePVar(playerid, "ProverkaDice");
								SetPVarInt(playerid, "KostiName",999);
							}
							if(dice < dice1)
							{
							    if(!IsPlayerConnected(GetPVarInt(playerid, "KostiName")))
								{
								    DeletePVar(playerid, "ZapretDice");
									DeletePVar(GetPVarInt(playerid, "KostiName"), "ZapretDice");
									SetPVarInt(playerid, "KostiMoney",0);
									DeletePVar(playerid, "ProverkaDice");
									SetPVarInt(playerid, "KostiName",999);
									SCM(playerid, COLOR_GREY, "Игрок вышел с сервера!");
									return true;
								}
								if(PI[playerid][pCash] < GetPVarInt(playerid, "KostiMoney")) return SCM(playerid, COLOR_GRAD2, "У Вас нет столько денег!");
								PI[GetPVarInt(playerid, "KostiName")][pCash] -= GetPVarInt(playerid, "KostiMoney");
								PI[playerid][pCash] += GetPVarInt(playerid, "KostiMoney");
								SCM(playerid, COLOR_GREEN, "Поздравляем, Вы выиграли!");
								SCM(GetPVarInt(playerid, "KostiName"), COLOR_ORANGE, "К сожалению, Вы проиграли!");
								format(YCMDstr, 17, "~g~+%d$", GetPVarInt(playerid, "KostiMoney"));
								GameTextForPlayer(playerid, YCMDstr, 3000, 1);
								format(YCMDstr, 17, "~r~-%d$", GetPVarInt(playerid, "KostiMoney"));
								GameTextForPlayer(GetPVarInt(playerid, "KostiName"), YCMDstr, 3000, 1);
								format(YCMDstr,11, "Выпало: %i",dice1);
								SetPlayerChatBubble(playerid,YCMDstr,TEAM_GROVE_COLOR,30.0,10000);
								format(YCMDstr,11, "Выпало: %i",dice);
								SetPlayerChatBubble(GetPVarInt(playerid, "KostiName"),YCMDstr,COLOR_ORANGE,30.0,10000);
								DeletePVar(playerid, "ZapretDice");
								DeletePVar(GetPVarInt(playerid, "KostiName"), "ZapretDice");
								SetPVarInt(playerid, "KostiMoney",0);
								DeletePVar(playerid, "ProverkaDice");
								SetPVarInt(playerid, "KostiName",999);
							}
							if(dice == dice1)
							{
							    if(!IsPlayerConnected(GetPVarInt(playerid, "KostiName")))
								{
								    DeletePVar(playerid, "ZapretDice");
									DeletePVar(GetPVarInt(playerid, "KostiName"), "ZapretDice");
									SetPVarInt(playerid, "KostiMoney",0);
									DeletePVar(playerid, "ProverkaDice");
									SetPVarInt(playerid, "KostiName",999);
									SCM(playerid, COLOR_GREY, "Игрок вышел с сервера!");
									return true;
								}
								if(PI[playerid][pCash] < GetPVarInt(playerid, "KostiMoney")) return SCM(playerid, COLOR_GRAD2, "У Вас нет столько денег!");
								SCM(playerid, COLOR_ORANGE, "Игра закончилась в ничью!");
								SCM(GetPVarInt(playerid, "KostiName"), COLOR_ORANGE, "Игра закончилась в ничью!");
								format(YCMDstr,11, "Выпало: %i",dice1);
								SetPlayerChatBubble(playerid,YCMDstr,COLOR_LIGHTBLUE,30.0,10000);
								format(YCMDstr,11, "Выпало: %i",dice);
								SetPlayerChatBubble(GetPVarInt(playerid, "KostiName"),YCMDstr,COLOR_LIGHTBLUE,30.0,10000);
								DeletePVar(playerid, "ZapretDice");
								DeletePVar(GetPVarInt(playerid, "KostiName"), "ZapretDice");
								SetPVarInt(playerid, "KostiMoney",0);
								DeletePVar(playerid, "ProverkaDice");
								SetPVarInt(playerid, "KostiName",999);
							}
						}
					}
				}
			}
			else
			{
				if(GetPVarInt(playerid, "ProverkaDice") == 1)
				{
					if(GetPVarInt(playerid, "KostiName") < 999)
					{
						SCM(playerid, -1,"- Вы отказались от предложения.");
						SCM(GetPVarInt(playerid, "KostiName"),-1,"- Игрок отказался от предложения.");
						SetPVarInt(playerid, "KostiName",999);
						DeletePVar(playerid, "KostiMoney");
						DeletePVar(playerid, "ProverkaDice");
					}
				}
			}
		}
	case 2113:
		{
			new hotel = PI[playerid][pPhotelkey];
			if(response)
			{
				caridhouse[playerid][0] = CreateVehicle(PI[playerid][pCar1], HotelInfo[hotel][oCarx], HotelInfo[hotel][oCary], HotelInfo[hotel][oCarz], HotelInfo[hotel][oCarc] , PI[playerid][pColor][0] ,PI[playerid][pColor][1], 86400);
				LockCar(caridhouse[playerid][0]);
				Fuell[caridhouse[playerid][0]] = PI[playerid][pFuelcar];
				GameTextForPlayer(playerid, "~g~car at your home~n~~r~$-500", 5000, 1);
				PI[playerid][pCash] -= 500;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				CompVeh(playerid,caridhouse[playerid][0]);
			}
			else
			{
				caridhouse[playerid][1] = CreateVehicle(PI[playerid][pCar2], HotelInfo[hotel][oCarx], HotelInfo[hotel][oCary], HotelInfo[hotel][oCarz], HotelInfo[hotel][oCarc] , PI[playerid][pColor1][0] ,PI[playerid][pColor1][1], 86400);
				LockCar(caridhouse[playerid][1]);
				Fuell[caridhouse[playerid][1]] = PI[playerid][pFuelcar1];
				GameTextForPlayer(playerid, "~g~car at your home~n~~r~$-500", 5000, 1);
				PI[playerid][pCash] -= 500;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				CompVeh1(playerid,caridhouse[playerid][1]);
			}
		}
	case 9681:
		{
			if(!response) return DeletePVar(playerid, #id_suspect);
			SetPVarInt(playerid, #id_listitem, SuspectList[listitem]);
			SuspectList[playerid] = -1;
			if(listitem >= 1 && listitem <= 6) format(YCMDstr, 200, "{FF6F00}-{FFFFFF} %s\n{FF6F00}-{FFFFFF} %s", sSuspect[listitem][sSuspectReason], sSuspect[listitem][sSuspectReason1]);
   			else format(YCMDstr, 150, "{FF6F00}-{FFFFFF} %s", sSuspect[listitem][sSuspectReason]);
			SPDEx(playerid, 9682, 2, PI[GetPVarInt(playerid, #id_suspect)][pName], YCMDstr, "Выдать", "Отмена");
			return true;
		}
	case 9682:
		{
			if(!response) return DeletePVar(playerid, #id_suspect), DeletePVar(playerid, #id_listitem);
			if(!IsPlayerConnected(GetPVarInt(playerid, #id_suspect))) return SCM(playerid, -1, "Игрок оффлайн!");
			new my_string[180], strings[260];
			if(!listitem)
			{
				Hook_SetPlayerWanted(GetPVarInt(playerid, #id_suspect),PI[GetPVarInt(playerid, #id_suspect)][pWantedLevel] + sSuspect[GetPVarInt(playerid, #id_listitem)][sZvezd]);
				format(my_string,sizeof(my_string),"%s объявил Вас в розыск. Причина: %s",PI[playerid][pName],sSuspect[GetPVarInt(playerid, #id_listitem)][sSuspectReason]);
				SCM(GetPVarInt(playerid, #id_suspect),0xFF182DFF,my_string);
				format(strings,260,"Рация: %s подозреваемый. Обвинитель: %s. Причина: %s.",PI[GetPVarInt(playerid, #id_suspect)][pName],PI[playerid][pName],sSuspect[GetPVarInt(playerid, #id_listitem)][sSuspectReason]);
			}
			if(listitem)
			{
				Hook_SetPlayerWanted(GetPVarInt(playerid, #id_suspect),PI[GetPVarInt(playerid, #id_suspect)][pWantedLevel] + sSuspect[GetPVarInt(playerid, #id_listitem)][sZvezd1]);
				format(my_string,sizeof(my_string),"%s объявил Вас в розыск. Причина: %s",PI[playerid][pName],sSuspect[GetPVarInt(playerid, #id_listitem)][sSuspectReason1]);
				SCM(GetPVarInt(playerid, #id_suspect),0xFF182DFF,my_string);
				format(strings,200,"Рация: %s подозреваемый. Обвинитель: %s. Причина: %s.",PI[GetPVarInt(playerid, #id_suspect)][pName],PI[playerid][pName],sSuspect[GetPVarInt(playerid, #id_listitem)][sSuspectReason1]);
			}
			SendPoliceMessage(1, 0x007FFFFF, strings);
			DeletePVar(playerid, #id_suspect), DeletePVar(playerid, #id_listitem);
			return true;
		}
	case 1556:
		{
			if(!response) return true;
			switch (listitem)
			{
			case 0: { PI[GetPVarInt(playerid,"LID")][pRank] = 10; PI[GetPVarInt(playerid,"LID")][pLeader] = 1; PI[GetPVarInt(playerid,"LID")][pMember] = 1; PI[GetPVarInt(playerid,"LID")][pSAPD] = 1; FormaFrac[GetPVarInt(playerid,"LID")] = 1; switch(PI[GetPVarInt(playerid,"LID")][pSex]) { case 1: InviteSkin[GetPVarInt(playerid,"LID")] = 283; case 2: InviteSkin[GetPVarInt(playerid,"LID")] = 76; } }// SAPD
			case 1: { PI[GetPVarInt(playerid,"LID")][pRank] = 10; PI[GetPVarInt(playerid,"LID")][pLeader] = 2; PI[GetPVarInt(playerid,"LID")][pMember] = 2; FormaFrac[GetPVarInt(playerid,"LID")] = 2; switch(PI[GetPVarInt(playerid,"LID")][pSex]) { case 1: InviteSkin[GetPVarInt(playerid,"LID")] = 166; case 2: InviteSkin[GetPVarInt(playerid,"LID")] = 141; } } // FBI
			case 2: { PI[GetPVarInt(playerid,"LID")][pRank] = 16; PI[GetPVarInt(playerid,"LID")][pLeader] = 3; PI[GetPVarInt(playerid,"LID")][pMember] = 3; FormaFrac[GetPVarInt(playerid,"LID")] = 3; switch(PI[GetPVarInt(playerid,"LID")][pSex]) { case 1: InviteSkin[GetPVarInt(playerid,"LID")] = 61; case 2: InviteSkin[GetPVarInt(playerid,"LID")] = 191; } } // ВМФ
			case 3: { PI[GetPVarInt(playerid,"LID")][pRank] = 5; PI[GetPVarInt(playerid,"LID")][pLeader] = 5; PI[GetPVarInt(playerid,"LID")][pMember] = 5; FormaFrac[GetPVarInt(playerid,"LID")] = 5; switch(PI[GetPVarInt(playerid,"LID")][pSex]) { case 1: InviteSkin[GetPVarInt(playerid,"LID")] = 113; case 2: InviteSkin[GetPVarInt(playerid,"LID")] = 214; } } // LCN
			case 4: { PI[GetPVarInt(playerid,"LID")][pRank] = 5; PI[GetPVarInt(playerid,"LID")][pLeader] = 6; PI[GetPVarInt(playerid,"LID")][pMember] = 6; FormaFrac[GetPVarInt(playerid,"LID")] = 6; switch(PI[GetPVarInt(playerid,"LID")][pSex]) { case 1: InviteSkin[GetPVarInt(playerid,"LID")] = 186; case 2: InviteSkin[GetPVarInt(playerid,"LID")] = 169; } } // Yakuza
			case 5: { PI[GetPVarInt(playerid,"LID")][pRank] = 6; PI[GetPVarInt(playerid,"LID")][pLeader] = 24; PI[GetPVarInt(playerid,"LID")][pMember] = 24; FormaFrac[GetPVarInt(playerid,"LID")] = 24; switch(PI[GetPVarInt(playerid,"LID")][pSex]) { case 1: InviteSkin[GetPVarInt(playerid,"LID")] = 17; case 2: InviteSkin[GetPVarInt(playerid,"LID")] = 69; } } // Директор К.А.С.С.
			case 6: { PI[GetPVarInt(playerid,"LID")][pRank] = 10; PI[GetPVarInt(playerid,"LID")][pLeader] = 8; PI[GetPVarInt(playerid,"LID")][pMember] = 8; PI[GetPVarInt(playerid,"LID")][pMedic] = 1; FormaFrac[GetPVarInt(playerid,"LID")] = 8; switch(PI[GetPVarInt(playerid,"LID")][pSex]) { case 1: InviteSkin[GetPVarInt(playerid,"LID")] = 70; case 2: InviteSkin[GetPVarInt(playerid,"LID")] = 219; } } // Мед. Центр
			case 7: { PI[GetPVarInt(playerid,"LID")][pRank] = 7; PI[GetPVarInt(playerid,"LID")][pLeader] = 9; PI[GetPVarInt(playerid,"LID")][pMember] = 9; FormaFrac[GetPVarInt(playerid,"LID")] = 9; switch(PI[GetPVarInt(playerid,"LID")][pSex]) { case 1: InviteSkin[GetPVarInt(playerid,"LID")] = 228; case 2: InviteSkin[GetPVarInt(playerid,"LID")] = 211; } } // SA News
			case 8: { PI[GetPVarInt(playerid,"LID")][pRank] = 5; PI[GetPVarInt(playerid,"LID")][pLeader] = 23; PI[GetPVarInt(playerid,"LID")][pMember] = 23; FormaFrac[GetPVarInt(playerid,"LID")] = 23; switch(PI[GetPVarInt(playerid,"LID")][pSex]) { case 1: InviteSkin[GetPVarInt(playerid,"LID")] = 100; case 2: InviteSkin[GetPVarInt(playerid,"LID")] = 298; } } // Байкеры
			case 9: { PI[GetPVarInt(playerid,"LID")][pRank] = 14; PI[GetPVarInt(playerid,"LID")][pLeader] = 22; PI[GetPVarInt(playerid,"LID")][pMember] = 22; FormaFrac[GetPVarInt(playerid,"LID")] = 22; switch(PI[GetPVarInt(playerid,"LID")][pSex]) { case 1: InviteSkin[GetPVarInt(playerid,"LID")] = 295; case 2: InviteSkin[GetPVarInt(playerid,"LID")] = 150; } } // Правительство
			case 10: { PI[GetPVarInt(playerid,"LID")][pRank] = 5; PI[GetPVarInt(playerid,"LID")][pLeader] = 12; PI[GetPVarInt(playerid,"LID")][pMember] = 12; FormaFrac[GetPVarInt(playerid,"LID")] = 12; switch(PI[GetPVarInt(playerid,"LID")][pSex]) { case 1: InviteSkin[GetPVarInt(playerid,"LID")] = 102; case 2: InviteSkin[GetPVarInt(playerid,"LID")] = 195; } } // Ballas
			case 11: { PI[GetPVarInt(playerid,"LID")][pRank] = 5; PI[GetPVarInt(playerid,"LID")][pLeader] = 13; PI[GetPVarInt(playerid,"LID")][pMember] = 13; FormaFrac[GetPVarInt(playerid,"LID")] = 13; switch(PI[GetPVarInt(playerid,"LID")][pSex]) { case 1: InviteSkin[GetPVarInt(playerid,"LID")] = 110; case 2: InviteSkin[GetPVarInt(playerid,"LID")] = 190; } } // Vagos
			case 12: { PI[GetPVarInt(playerid,"LID")][pRank] = 5; PI[GetPVarInt(playerid,"LID")][pLeader] = 14; PI[GetPVarInt(playerid,"LID")][pMember] = 14; FormaFrac[GetPVarInt(playerid,"LID")] = 14; switch(PI[GetPVarInt(playerid,"LID")][pSex]) { case 1: InviteSkin[GetPVarInt(playerid,"LID")] = 272; case 2: InviteSkin[GetPVarInt(playerid,"LID")] = 263; } } // PM
			case 13: { PI[GetPVarInt(playerid,"LID")][pRank] = 5; PI[GetPVarInt(playerid,"LID")][pLeader] = 15; PI[GetPVarInt(playerid,"LID")][pMember] = 15; FormaFrac[GetPVarInt(playerid,"LID")] = 15; switch(PI[GetPVarInt(playerid,"LID")][pSex]) { case 1: InviteSkin[GetPVarInt(playerid,"LID")] = 270; case 2: InviteSkin[GetPVarInt(playerid,"LID")] = 65; } } // Grove
			case 14: { PI[GetPVarInt(playerid,"LID")][pRank] = 16; PI[GetPVarInt(playerid,"LID")][pLeader] = 19; PI[GetPVarInt(playerid,"LID")][pMember] = 19; FormaFrac[GetPVarInt(playerid,"LID")] = 19; switch(PI[GetPVarInt(playerid,"LID")][pSex]) { case 1: InviteSkin[GetPVarInt(playerid,"LID")] = 61; case 2: InviteSkin[GetPVarInt(playerid,"LID")] = 191; } } // СВ
			case 15: { PI[GetPVarInt(playerid,"LID")][pRank] = 5; PI[GetPVarInt(playerid,"LID")][pLeader] = 17; PI[GetPVarInt(playerid,"LID")][pMember] = 17; FormaFrac[GetPVarInt(playerid,"LID")] = 17; switch(PI[GetPVarInt(playerid,"LID")][pSex]) { case 1: InviteSkin[GetPVarInt(playerid,"LID")] = 116; case 2: InviteSkin[GetPVarInt(playerid,"LID")] = 193; } } // Aztecas
			case 16: { PI[GetPVarInt(playerid,"LID")][pRank] = 5; PI[GetPVarInt(playerid,"LID")][pLeader] = 18; PI[GetPVarInt(playerid,"LID")][pMember] = 18; FormaFrac[GetPVarInt(playerid,"LID")] = 18; switch(PI[GetPVarInt(playerid,"LID")][pSex]) { case 1: InviteSkin[GetPVarInt(playerid,"LID")] = 173; case 2: InviteSkin[GetPVarInt(playerid,"LID")] = 226; } } // Rifa
			}
			PI[GetPVarInt(playerid,"LID")][pJob] = 0;
			format(YCMDstr, 69, "Администратор %s назначил Вас лидером фракции",Name(playerid));
			SCM(GetPVarInt(playerid,"LID"), COLOR_BLUE, YCMDstr);
			PI[GetPVarInt(playerid,"LID")][pSPChange] = 0;
			format(YCMDstr, 54, "Вы назначили %s лидером фракции",Name(GetPVarInt(playerid,"LID")));
			SCM(playerid,COLOR_BLUE, YCMDstr);
			PI[GetPVarInt(playerid,"LID")][pModel] = InviteSkin[GetPVarInt(playerid,"LID")];
			SetPlayerArmour(GetPVarInt(playerid,"LID"),0);
			SetPlayerHealthAC(GetPVarInt(playerid,"LID"),100);
			SetPlayerSkin(GetPVarInt(playerid,"LID"), InviteSkin[GetPVarInt(playerid,"LID")]);
			FormaFrac[GetPVarInt(playerid,"LID")] = PI[GetPVarInt(playerid,"LID")][pMember];
			PI[GetPVarInt(playerid,"LID")][pForma] = FormaFrac[GetPVarInt(playerid,"LID")];
			SpawnPlayer(GetPVarInt(playerid,"LID"));
		}
	case 1557:
		{
			if(!response) return true;
			switch (listitem)
			{
			case 0: { PI[GetPVarInt(playerid,"pBSA")][pBSA] = 1; } // 1 lvl
			case 1: { PI[GetPVarInt(playerid,"pBSA")][pBSA] = 2; } // 2 lvl
			case 2: { PI[GetPVarInt(playerid,"pBSA")][pBSA] = 3; } // 3 lvl
			case 3: { PI[GetPVarInt(playerid,"pBSA")][pBSA] = 4; } // 4 lvl
			case 4: { PI[GetPVarInt(playerid,"pBSA")][pBSA] = 5; } //  5 lvl
			case 5: { PI[GetPVarInt(playerid,"pBSA")][pBSA] = 6; } // 6 lvl
			case 6: { PI[GetPVarInt(playerid,"pBSA")][pBSA] = 7; } // 7 lvl
			case 7: { PI[GetPVarInt(playerid,"pBSA")][pBSA] = 8; } // 8 lvl
			case 8: { PI[GetPVarInt(playerid,"pBSA")][pBSA] = 9; } // 9 lvl
			case 9: { PI[GetPVarInt(playerid,"pBSA")][pBSA] = 10; } // 10 lvl
			case 10:{ PI[GetPVarInt(playerid,"pBSA")][pBSA] = 11; } // 11 lvl
			case 11:{ PI[GetPVarInt(playerid,"pBSA")][pBSA] = 12; } // 12 lvl
			case 12:{ PI[GetPVarInt(playerid,"pBSA")][pBSA] = 13; } // 13 lvl
			}
			PI[GetPVarInt(playerid,"pBSA")][pDostup] = 1015;
			format(YCMDstr, 130, "Администратор %s назначил Вас на %d уровень Администрирования. Ваш пароль: %d",Name(playerid), PI[GetPVarInt(playerid,"pBSA")][pBSA], PI[GetPVarInt(playerid,"pBSA")][pDostup]);
			SCM(GetPVarInt(playerid,"pBSA"), COLOR_SYSTEM, YCMDstr);
			mysql_format(DATABASE, YCMDstr, 256, "UPDATE `accounts` SET pBSA = '%d', pDostup = '%d' WHERE Name = '%s'",PI[GetPVarInt(playerid,"pBSA")],PI[GetPVarInt(playerid,"pBSA")][pDostup],Name(GetPVarInt(playerid,"pBSA")));
			mysql_function_query(DATABASE,YCMDstr,false,"","");
			format(YCMDstr, 66, "Вы назначили %s на %d уровень Администрирования!",Name(GetPVarInt(playerid,"pBSA")),PI[GetPVarInt(playerid,"pBSA")][pBSA]);
			SCM(playerid,COLOR_YELLOW, YCMDstr);
		}
    case 2768:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:// Нитро
   				{
                    SCM(playerid,0xFFFFFFAA,"Нитро удалено с Вашего т/с.");
                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0])
					{
					    RemoveVehicleComponent(GetPlayerVehicleID(playerid),PI[playerid][pNitro]);
						PI[playerid][pNitro] = 0;
					}
					else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1])
					{
					    RemoveVehicleComponent(GetPlayerVehicleID(playerid),PI[playerid][pNitro1]);
						PI[playerid][pNitro1] = 0;
					}
   				}
            case 1:// Диски
   				{
   					SCM(playerid,0xFFFFFFAA,"Диски удалены с Вашего т/с.");
   					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0])
					{
					    RemoveVehicleComponent(GetPlayerVehicleID(playerid),PI[playerid][pWheels]);
						PI[playerid][pWheels] = 0;
					}
					else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1])
					{
					    RemoveVehicleComponent(GetPlayerVehicleID(playerid),PI[playerid][pWheels1]);
						PI[playerid][pWheels1] = 0;
					}
   				}
            case 2:// Покрасочная работа
   				{
   					SCM(playerid,0xFFFFFFAA,"Покрасочная работа удалена с Вашего т/с.");
   					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3);
					if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pPaintJob] = 3;
					else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pPaintJob1] = 3;
   				}
            case 3:// Спойлер
   				{
   					SCM(playerid,0xFFFFFFAA,"Спойлер удалён с Вашего т/с.");
   					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0])
					{
					    RemoveVehicleComponent(GetPlayerVehicleID(playerid),PI[playerid][pSpoiler]);
						PI[playerid][pSpoiler] = 0;
					}
					else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1])
					{
					    RemoveVehicleComponent(GetPlayerVehicleID(playerid),PI[playerid][pSpoiler1]);
						PI[playerid][pSpoiler1] = 0;
					}
   				}
            case 4:// Передний бампер
   				{
   					SCM(playerid,0xFFFFFFAA,"Передний бампер удалён с Вашего т/с.");
   					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0])
					{
					    RemoveVehicleComponent(GetPlayerVehicleID(playerid),PI[playerid][pBumper1]);
						PI[playerid][pBumper1] = 0;
					}
					else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1])
					{
					    RemoveVehicleComponent(GetPlayerVehicleID(playerid),PI[playerid][pBumper11]);
						PI[playerid][pBumper11] = 0;
					}
   				}
            case 5:// Задний бампер
   				{
   					SCM(playerid,0xFFFFFFAA,"Задний бампер удалён с Вашего т/с.");
   					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0])
					{
					    RemoveVehicleComponent(GetPlayerVehicleID(playerid),PI[playerid][pBumper2]);
						PI[playerid][pBumper2] = 0;
					}
					else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1])
					{
					    RemoveVehicleComponent(GetPlayerVehicleID(playerid),PI[playerid][pBumper21]);
						PI[playerid][pBumper21] = 0;
					}
   				}
            case 6: // Гибравлика
   				{
   					SCM(playerid,0xFFFFFFAA,"Гидравлика удалена с Вашего т/с.");
   					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0])
					{
					    RemoveVehicleComponent(GetPlayerVehicleID(playerid),PI[playerid][pHydrawlic]);
						PI[playerid][pHydrawlic] = 0;
					}
					else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1])
					{
					    RemoveVehicleComponent(GetPlayerVehicleID(playerid),PI[playerid][pHydrawlic1]);
						PI[playerid][pHydrawlic1] = 0;
					}
   				}
            case 7:// Боковая юбка
   				{
   					SCM(playerid,0xFFFFFFAA,"Боковая юбка удалена с Вашего т/с.");
   					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0])
					{
					    RemoveVehicleComponent(GetPlayerVehicleID(playerid),PI[playerid][pUbka]);
						PI[playerid][pUbka] = 0;
					}
					else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1])
					{
					    RemoveVehicleComponent(GetPlayerVehicleID(playerid),PI[playerid][pUbka11]);
						PI[playerid][pUbka11] = 0;
					}
   				}
            case 8:// Воздухозаборник
   				{
   					SCM(playerid,0xFFFFFFAA,"Воздухозаборник удалён с Вашего т/с.");
   					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0])
					{
					    RemoveVehicleComponent(GetPlayerVehicleID(playerid),PI[playerid][pVozduh]);
						PI[playerid][pVozduh] = 0;
					}
					else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1])
					{
					    RemoveVehicleComponent(GetPlayerVehicleID(playerid),PI[playerid][pVozduh11]);
						PI[playerid][pVozduh11] = 0;
					}
   				}
            case 9:// Выхлоп
   				{
   					SCM(playerid,0xFFFFFFAA,"Выхлоп удалён с Вашего т/с.");
   					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0])
					{
					    RemoveVehicleComponent(GetPlayerVehicleID(playerid),PI[playerid][pVihlop]);
						PI[playerid][pVihlop] = 0;
					}
					else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1])
					{
					    RemoveVehicleComponent(GetPlayerVehicleID(playerid),PI[playerid][pVihlop11]);
						PI[playerid][pVihlop11] = 0;
					}
   				}
			}
		}
    case 2769:
		{
			for(new v = 1; v <= TotalMast; v++)
			{
				if(response)
				{
					switch(listitem)
					{
					case 0:
						{
						    if(GetPlayerVehicleID(playerid) != caridhouse[playerid][0] && GetPlayerVehicleID(playerid) != caridhouse[playerid][1]) return SCM(playerid,COLOR_GREY,"Вы должны быть в личном транспорте!");
							for(new x; x < 5; x++) TextDrawShowForPlayer(playerid, AutoColor[x]);
							SelectTextDraw(playerid, 0x0080FFFF);
						}
					case 1:
						{
						    if(GetPlayerVehicleID(playerid) != caridhouse[playerid][0] && GetPlayerVehicleID(playerid) != caridhouse[playerid][1]) return SCM(playerid,COLOR_GREY,"Вы должны быть в личном транспорте!");
							format(YCMDstr,128,"[1] Nitro x2\t\t$1.000\n[2] Nitro x5\t\t$2.000\n[3] Nitro x10\t\t$3.000");
							SPDEx(playerid, 3069, 2,"Закись азота(Нитро)",YCMDstr,"Выбрать","Назад");
						}
					case 2:
						{
						    if(GetPlayerVehicleID(playerid) != caridhouse[playerid][0] && GetPlayerVehicleID(playerid) != caridhouse[playerid][1]) return SCM(playerid,COLOR_GREY,"Вы должны быть в личном транспорте!");
							format(string,556,"[1] Ahab\t\t$1.000\n[2] Virtual\t\t$1.250\n[3] Access\t\t$1.200\n[4] Shadow\t\t$1.500\n[5] Mega\t\t$1.320\n[6] Wires\t\t$1.220\n[7] Classic\t\t$1.410\n[8] Twist\t\t$1.100\n[9] Grove\t\t$1.480\n[10] Atomic\t\t$1.300\n[11] Dollar [Premium]\t$1.470\n[12] Rimshine\t\t$1.250\n[13] Cutter\t\t$1.800\n[14] Switch\t\t$1.750\n[15] Import\t\t$1.790\n[16] Trance\t\t$1.350");
							SPDEx(playerid, 3169, 2,"Смена дисков",string,"Выбрать","Назад");
						}
					case 3:
						{
						    if(GetPlayerVehicleID(playerid) != caridhouse[playerid][0] && GetPlayerVehicleID(playerid) != caridhouse[playerid][1]) return SCM(playerid,COLOR_GREY,"Вы должны быть в личном транспорте!");
							format(YCMDstr,150,"[1] Покрасочная работа (1)\t\t$3.000\n[2] Покрасочная работа (2)\t\t$4.000\n[3] Покрасочная работа (3)\t\t$5.000");
							SPDEx(playerid, 3269, 2,"Покрасочные работы",YCMDstr,"Выбрать","Назад");
						}
					case 4:
						{
						    if(GetPlayerVehicleID(playerid) != caridhouse[playerid][0] && GetPlayerVehicleID(playerid) != caridhouse[playerid][1]) return SCM(playerid,COLOR_GREY,"Вы должны быть в личном транспорте!");
						    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560
									|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
									|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
							{
							    SPDEx(playerid, 3369, 2,"Спойлера","[1]> X-Flow\t\t$4.000\n[2]> Alien\t\t$4.000","Выбрать","Отмена");
							}
							else return SCM(playerid,-1,"Данная деталь недоступна для Вашей модели"),ShowSTODialog(playerid);
						}
					case 5:
						{
						    if(GetPlayerVehicleID(playerid) != caridhouse[playerid][0] && GetPlayerVehicleID(playerid) != caridhouse[playerid][1]) return SCM(playerid,COLOR_GREY,"Вы должны быть в личном транспорте!");
							if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560
									|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
									|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558
									|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536
									|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
							{
								SPDEx(playerid, 3469, 2,"Передний бампер","[1]> X-Flow\t\t$3.000\n[2]> Alien\t\t$3.000","Выбрать","Отмена");
							}
							else return SCM(playerid,-1,"Данная деталь недоступна для Вашей модели"),ShowSTODialog(playerid);
						}
					case 6:
						{
						    if(GetPlayerVehicleID(playerid) != caridhouse[playerid][0] && GetPlayerVehicleID(playerid) != caridhouse[playerid][1]) return SCM(playerid,COLOR_GREY,"Вы должны быть в личном транспорте!");
							if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560
									|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
									|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558
									|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536
									|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
							{
								SPDEx(playerid, 3569, 2,"Задний бампер","[1]> X-Flow\t\t$3.000\n[2]> Alien\t\t$3.000","Выбрать","Отмена");
							}
							else return SCM(playerid,-1,"Данная деталь недоступна для Вашей модели"),ShowSTODialog(playerid);
						}
					case 7:
						{
						    if(GetPlayerVehicleID(playerid) != caridhouse[playerid][0] && GetPlayerVehicleID(playerid) != caridhouse[playerid][1]) return SCM(playerid,COLOR_GREY,"Вы должны быть в личном транспорте!");
							if(GetVehicleComponentInSlot(GetPlayerVehicleID(playerid),CARMODTYPE_HYDRAULICS) != 1087)
							{
								format(YCMDstr,128,"Стоимость установки: $5000\nВы уверены, что хотите купить и поставить гидравлику?");
								SPDEx(playerid, 2869, 0,"Установка гидравлики",YCMDstr,"Да","Назад");
							}
						}
					case 8:
						{
							if(PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 500) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно $500");
								GameTextForPlayer(playerid, "~y~-500~r~$", 5000, 1);
								PI[playerid][pCash] -= 500; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 500;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы отремонтировали свой транспорт");
								AC_RepairVeh(GetPlayerVehicleID(playerid));
							}
						}
					case 9:
						{
							if(PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
							    if(GetPlayerVehicleID(playerid) != caridhouse[playerid][0] && GetPlayerVehicleID(playerid) != caridhouse[playerid][1]) return SCM(playerid,COLOR_GREY,"Вы должны быть в личном транспорте!");
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 8000) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно $8.000");
								GameTextForPlayer(playerid, "~y~-8.000~r~$", 5000, 1);
								PI[playerid][pCash] -= 8000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 8000;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы отремонтировали свой двигатель за 8.000$.");
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pProcents] = 100;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pProcents2] = 100;
							}
						}
					case 10:
						{
						    if(GetPlayerVehicleID(playerid) != caridhouse[playerid][0] && GetPlayerVehicleID(playerid) != caridhouse[playerid][1]) return SCM(playerid,COLOR_GREY,"Вы должны быть в личном транспорте!");
							if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560
									|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559
									|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
							{
								SPDEx(playerid, 3333, 2,"Боковая юбка","[1]> X-Flow\t\t$2.000\n[2]> Alien\t\t$2.000","Выбрать","Отмена");
							}
							else return SCM(playerid,-1,"Данная деталь недоступна для Вашей модели"),ShowSTODialog(playerid);
						}
					case 11:
						{
						    if(GetPlayerVehicleID(playerid) != caridhouse[playerid][0] && GetPlayerVehicleID(playerid) != caridhouse[playerid][1]) return SCM(playerid,COLOR_GREY,"Вы должны быть в личном транспорте!");
							if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560
									|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559
									|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
							{
								SPDEx(playerid, 3334, 2,"Воздухозаборник","[1]> X-Flow\t\t$4.000\n[2]> Alien\t\t$4.000","Выбрать","Отмена");
							}
							else return SCM(playerid,-1,"Данная деталь недоступна для Вашей модели"),ShowSTODialog(playerid);
						}
					case 12:
						{
						    if(GetPlayerVehicleID(playerid) != caridhouse[playerid][0] && GetPlayerVehicleID(playerid) != caridhouse[playerid][1]) return SCM(playerid,COLOR_GREY,"Вы должны быть в личном транспорте!");
							if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560
									|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559
									|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
							{
								SPDEx(playerid, 3335, 2,"Выхлоп","[1]> X-Flow\t\t$3.000\n[2]> Alien\t\t$3.000","Выбрать","Отмена");
							}
							else return SCM(playerid,-1,"Данная деталь недоступна для Вашей модели"),ShowSTODialog(playerid);
						}
					case 13:
						{
						    if(GetPlayerVehicleID(playerid) != caridhouse[playerid][0] && GetPlayerVehicleID(playerid) != caridhouse[playerid][1]) return SCM(playerid,COLOR_GREY,"Вы должны быть в личном транспорте!");
							SPDEx(playerid, 2768, 2,"Удаление тюнинга","- Удалить нитро\n- Удалить диски\n- Удалить покрасочную работу\n- Удалить спойлер\n- Удалить передний бампер\n- Удалить задний бампер\n- Удалить гидравлику\n- Удалить боковая юбку\n- Удалить воздухозаборник\n- Удалить выхлоп","Выбрать","Закрыть");
						}
					}
				}
			}
		}
	case 3333:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: // Боковая юбка X-Flow
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								new tunef[2];
								if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) tunef[0] = 1041, tunef[1] = 1039; // Elegy
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) tunef[0] = 1031, tunef[1] = 1030; // Sultan
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) tunef[0] = 1052, tunef[1] = 1048; // Flash
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) tunef[0] = 1070, tunef[1] = 1072; // Jester
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) tunef[0] = 1057, tunef[1] = 1063; // Stratum
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) tunef[0] = 1093, tunef[1] = 1095; // Uranus
								else return SCM(playerid,-1,"Данная деталь недоступна для Вашей модели"),ShowSTODialog(playerid);
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 3000) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 3.000$");
								GameTextForPlayer(playerid, "~y~-3.000~r~$", 5000, 1);
								PI[playerid][pCash] -= 3000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 3000;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы установили боковую юбку X-Flow");
								AddVehicleComponent(GetPlayerVehicleID(playerid), tunef[listitem]);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pUbka] = tunef[listitem];
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pUbka11] = tunef[listitem];
								ShowSTODialog(playerid);
							}
						}
					}
				case 1: // Боковая юбка Alien
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								new tunea[2];
								if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) tunea[0] = 1036, tunea[1] = 1040; // Elegy
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) tunea[0] = 1026, tunea[1] = 1027; // Sultan
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) tunea[0] = 1047, tunea[1] = 1051; // Flash
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) tunea[0] = 1069, tunea[1] = 1071; // Jester
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) tunea[0] = 1056, tunea[1] = 1062; // Stratum
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) tunea[0] = 1090, tunea[1] = 1094; // Uranus
								else return SCM(playerid,-1,"Данная деталь недоступна для Вашей модели"),ShowSTODialog(playerid);
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 3000) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 3.000$");
								GameTextForPlayer(playerid, "~y~-3.000~r~$", 5000, 1);
								PI[playerid][pCash] -= 3000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 3000;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы установили боковую юбку Alien");
								AddVehicleComponent(GetPlayerVehicleID(playerid), tunea[listitem]);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pUbka] = tunea[listitem];
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pUbka11] = tunea[listitem];
								ShowSTODialog(playerid);
							}
						}
					}
				}
			}
		}
	case 3334:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: // Воздухозаборник X-Flow
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								new tunev[1];
								if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) tunev[0] = 1035;// Elegy
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) tunev[0] = 1033; // Sultan
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) tunev[0] = 1053; // Flash
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) tunev[0] = 1068; // Jester
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) tunev[0] = 1061; // Stratum
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) tunev[0] = 1091; // Uranus
								else return SCM(playerid,-1,"Данная деталь недоступна для Вашей модели"),ShowSTODialog(playerid);
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 4000) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 4.000$");
								GameTextForPlayer(playerid, "~y~-4.000~r~$", 5000, 1);
								PI[playerid][pCash] -= 4000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 4000;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы установили воздухозаборник");
								AddVehicleComponent(GetPlayerVehicleID(playerid), tunev[listitem]);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pVozduh] = tunev[listitem];
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pVozduh11] = tunev[listitem];
								ShowSTODialog(playerid);
							}
						}
					}
				case 1: // Воздухозаборник Alien
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								new tunevs[2];
								if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) tunevs[1] = 1038;// Elegy
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) tunevs[1] = 1032; // Sultan
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) tunevs[1] = 1054; // Flash
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) tunevs[1] = 1067; // Jester
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) tunevs[1] = 1055; // Stratum
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) tunevs[1] = 1088; // Uranus
								else return SCM(playerid,-1,"Данная деталь недоступна для Вашей модели"),ShowSTODialog(playerid);
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 4000) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 4.000$");
								GameTextForPlayer(playerid, "~y~-4.000~r~$", 5000, 1);
								PI[playerid][pCash] -= 4000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 4000;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы установили воздухозаборник");
								AddVehicleComponent(GetPlayerVehicleID(playerid), tunevs[listitem]);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pVozduh] = tunevs[listitem];
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pVozduh11] = tunevs[listitem];
								ShowSTODialog(playerid);
							}
						}
					}
				}
			}
		}
	case 3335:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: // Выхлоп X-flow
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								new tunevi[1];
								if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) tunevi[0] = 1037; // Elegy
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) tunevi[0] = 1029; // Sultan
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) tunevi[0] = 1045; // Flash
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) tunevi[0] = 1066; // Jester
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) tunevi[0] = 1059; // Stratum
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) tunevi[0] = 1089; // Uranus
								else return SCM(playerid,-1,"Данная деталь недоступна для Вашей модели"),ShowSTODialog(playerid);
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 3000) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 3.000$");
								GameTextForPlayer(playerid, "~y~-3.000~r~$", 5000, 1);
								PI[playerid][pCash] -= 3000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 3000;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы установили выхлоп");
								AddVehicleComponent(GetPlayerVehicleID(playerid), tunevi[listitem]);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pVihlop] = tunevi[listitem];
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pVihlop11] = tunevi[listitem];
								ShowSTODialog(playerid);
							}
						}
					}
				case 1: // Выхлоп Alien
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								new tunels[2];
								if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) tunels[1] = 1034; // Elegy
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) tunels[1] = 1028; // Sultan
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) tunels[1] = 1046; // Flash
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) tunels[1] = 1065; // Jester
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) tunels[1] = 1064; // Stratum
								else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) tunels[1] = 1092; // Uranus
								else return SCM(playerid,-1,"Данная деталь недоступна для Вашей модели"),ShowSTODialog(playerid);
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 3000) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 3.000$");
								GameTextForPlayer(playerid, "~y~-3.000~r~$", 5000, 1);
								PI[playerid][pCash] -= 3000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 3000;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы установили выхлоп Alien");
								AddVehicleComponent(GetPlayerVehicleID(playerid), tunels[listitem]);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pVihlop] = tunels[listitem];
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pVihlop11] = tunels[listitem];
								ShowSTODialog(playerid);
							}
						}
					}
				}
			}
		}
	case 2869:
		{
			for(new v = 1; v <= TotalMast; v++)
			{
				if(response)
				{
					if(GetVehicleComponentInSlot(GetPlayerVehicleID(playerid),CARMODTYPE_HYDRAULICS) != 1087)
					{
						if(PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
						{
							if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
							if(PI[playerid][pCash] < 5000) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 5.000$");
							GameTextForPlayer(playerid, "~y~-5.000~r~$", 5000, 1);
							PI[playerid][pCash] -= 5000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							AvtoMInfo[v][v2Till] += 5000;
							if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
							SCM(playerid,0xFFFFFFAA,"Вы поставили гидравлику");
							AddVehicleComponent(GetPlayerVehicleID(playerid),1087);
							if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pHydrawlic] = 1087;
							else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pHydrawlic1] = 1087;
							ShowSTODialog(playerid);
						}
					}
				}
			}
		}
	case 3069:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 1000) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 1.000$");
								GameTextForPlayer(playerid, "~y~-1.000~r~$", 5000, 1);
								PI[playerid][pCash] -= 1000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 1000;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы установили Nitro x2");
								AddVehicleComponent(GetPlayerVehicleID(playerid),1009);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pNitro] = 1009;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pNitro1] = 1009;
								ShowSTODialog(playerid);
							}
						}
					}
				case 1:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 2000) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 2.000$");
								GameTextForPlayer(playerid, "~y~-2.000~r~$", 5000, 1);
								PI[playerid][pCash] -= 2000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 2000;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы установили Nitro x5");
								AddVehicleComponent(GetPlayerVehicleID(playerid),1008);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pNitro] = 1008;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pNitro1] = 1008;
								ShowSTODialog(playerid);
							}
						}
					}
				case 2:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 3000) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 3.000$");
								GameTextForPlayer(playerid, "~y~-5.000~r~$", 5000, 1);
								PI[playerid][pCash] -= 3000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 3000;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы установили Nitro x10");
								AddVehicleComponent(GetPlayerVehicleID(playerid),1010);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pNitro] = 1010;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pNitro1] = 1010;
								ShowSTODialog(playerid);
							}
						}
					}
				}
			}
		}
	case 3169:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 1000) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 1.000$");
								GameTextForPlayer(playerid, "~y~-1.000~r~$", 5000, 1);
								PI[playerid][pCash] -= 1000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 1000;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы поставили диски Ahab");
								AddVehicleComponent(GetPlayerVehicleID(playerid),1096);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pWheels] = 1096;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pWheels1] = 1096;
							}
						}
					}
				case 1:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 1250) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 1.250$");
								GameTextForPlayer(playerid, "~y~-1.250~r~$", 5000, 1);
								PI[playerid][pCash] -= 1250; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 1250;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы поставили диски Virtual");
								AddVehicleComponent(GetPlayerVehicleID(playerid),1097);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pWheels] = 1097;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pWheels1] = 1097;
							}
						}
					}
				case 2:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 1200) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 1.200$");
								GameTextForPlayer(playerid, "~y~-1.200~r~$", 5000, 1);
								PI[playerid][pCash] -= 1200; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 1200;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы поставили диски Access");
								AddVehicleComponent(GetPlayerVehicleID(playerid),1098);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pWheels] = 1098;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pWheels1] = 1098;
							}
						}
					}
				case 3:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 1500) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 1.500$");
								GameTextForPlayer(playerid, "~y~-1.500~r~$", 5000, 1);
								PI[playerid][pCash] -= 1500; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 1500;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы поставили диски Shadow");
								AddVehicleComponent(GetPlayerVehicleID(playerid),1073);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pWheels] = 1073;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pWheels1] = 1073;
							}
						}
					}
				case 4:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 1320) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 1.320$");
								GameTextForPlayer(playerid, "~y~-1.320~r~$", 5000, 1);
								PI[playerid][pCash] -= 1320; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 1320;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы поставили диски Mega");
								AddVehicleComponent(GetPlayerVehicleID(playerid),1074);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pWheels] = 1074;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pWheels1] = 1074;
							}
						}
					}
				case 5:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 1220) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 1.220$");
								GameTextForPlayer(playerid, "~y~-1.220~r~$", 5000, 1);
								PI[playerid][pCash] -= 1220; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 1220;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы поставили диски Wires");
								AddVehicleComponent(GetPlayerVehicleID(playerid),1076);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pWheels] = 1076;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pWheels1] = 1076;
							}
						}
					}
				case 6:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 1410) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 1.410$");
								GameTextForPlayer(playerid, "~y~-1.410~r~$", 5000, 1);
								PI[playerid][pCash] -= 1410; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 1410;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы поставили диски Classic");
								AddVehicleComponent(GetPlayerVehicleID(playerid),1077);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pWheels] = 1077;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pWheels1] = 1077;
							}
						}
					}
				case 7:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 1100) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 1.100$");
								GameTextForPlayer(playerid, "~y~-1.100~r~$", 5000, 1);
								PI[playerid][pCash] -= 1100; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 1100;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы поставили диски Twist");
								AddVehicleComponent(GetPlayerVehicleID(playerid),1078);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pWheels] = 1078;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pWheels1] = 1078;
							}
						}
					}
				case 8:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 1480) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 1.480$");
								GameTextForPlayer(playerid, "~y~-1.480~r~$", 5000, 1);
								AvtoMInfo[v][v2Till] += 1480;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								PI[playerid][pCash] -= 1480; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								SCM(playerid,0xFFFFFFAA,"Вы поставили диски Grove");
								AddVehicleComponent(GetPlayerVehicleID(playerid),1081);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pWheels] = 1081;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pWheels1] = 1081;
							}
						}
					}
				case 9:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 1300) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 1.300$");
								GameTextForPlayer(playerid, "~y~-1.300~r~$", 5000, 1);
								PI[playerid][pCash] -= 1300; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 1300;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы поставили диски Atomic");
								AddVehicleComponent(GetPlayerVehicleID(playerid),1085);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pWheels] = 1085;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pWheels1] = 1085;
							}
						}
					}
				case 10:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 1470) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 1.470$");
								GameTextForPlayer(playerid, "~y~-1.470~r~$", 5000, 1);
								PI[playerid][pCash] -= 1470; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 1470;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы поставили диски Dollar for Premium");
								AddVehicleComponent(GetPlayerVehicleID(playerid),1083);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pWheels] = 1083;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pWheels1] = 1083;
							}
						}
					}
				case 11:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 1250) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 1.250$");
								GameTextForPlayer(playerid, "~y~-1.250~r~$", 5000, 1);
								PI[playerid][pCash] -= 1250; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 1250;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы поставили диски Rimshine");
								AddVehicleComponent(GetPlayerVehicleID(playerid),1075);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pWheels] = 1075;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pWheels1] = 1075;
							}
						}
					}
				case 12:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 1800) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 1.800$");
								GameTextForPlayer(playerid, "~y~-1.800~r~$", 5000, 1);
								PI[playerid][pCash] -= 1800; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 1800;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы поставили диски Cutter");
								AddVehicleComponent(GetPlayerVehicleID(playerid),1079);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pWheels] = 1079;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pWheels1] = 1079;
							}
						}
					}
				case 13:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 1750) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 1.750$");
								GameTextForPlayer(playerid, "~y~-1.750~r~$", 5000, 1);
								PI[playerid][pCash] -= 1750; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 1750;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы поставили диски Switch");
								AddVehicleComponent(GetPlayerVehicleID(playerid),1080);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pWheels] = 1080;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pWheels1] = 1080;
							}
						}
					}
				case 14:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 1790) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 1.790$");
								GameTextForPlayer(playerid, "~y~-1.790~r~$", 5000, 1);
								PI[playerid][pCash] -= 1790; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 1790;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы поставили диски Import");
								AddVehicleComponent(GetPlayerVehicleID(playerid),1082);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pWheels] = 1082;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pWheels1] = 1082;
							}
						}
					}
				case 15:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 1350) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 1.350$");
								GameTextForPlayer(playerid, "~y~-1.350~r~$", 5000, 1);
								PI[playerid][pCash] -= 1350; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 1350;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы поставили диски Trance");
								AddVehicleComponent(GetPlayerVehicleID(playerid),1084);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pWheels] = 1084;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pWheels1] = 1084;
							}
						}
					}
				}
			}
		}
	case 3269:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 3000) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 3.000$");
								GameTextForPlayer(playerid, "~y~-3.000~r~$", 5000, 1);
								PI[playerid][pCash] -= 3000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 3000;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы оплатили 3000$ за покрасочную работу");
								ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),0);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pPaintJob] = 0;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pPaintJob1] = 0;
								ShowSTODialog(playerid);
							}
						}
					}
				case 1:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 4000) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 4.000$");
								GameTextForPlayer(playerid, "~y~-4.000~r~$", 5000, 1);
								PI[playerid][pCash] -= 4000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 4000;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы оплатили 4000$ за покрасочную работу");
								ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),1);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pPaintJob] = 1;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pPaintJob1] = 1;
								ShowSTODialog(playerid);
							}
						}
					}
				case 2:
					{
						for(new v = 1; v <= TotalMast; v++)
						{
							if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
							{
								if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
								if(PI[playerid][pCash] < 5000) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 5.000$");
								GameTextForPlayer(playerid, "~y~-5.000~r~$", 5000, 1);
								PI[playerid][pCash] -= 5000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								AvtoMInfo[v][v2Till] += 5000;
								if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
								SCM(playerid,0xFFFFFFAA,"Вы оплатили 5000$ за покрасочную работу");
								ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),2);
								if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pPaintJob] = 2;
								else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pPaintJob1] = 2;
								ShowSTODialog(playerid);
							}
						}
					}
				}
			}
		}
	case 3369:
		{
			for(new v = 1; v <= TotalMast; v++)
			{
				if(response)
				{
					if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
					{
						new tunes[2];
						if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) tunes[0] = 1146, tunes[1] = 1147;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) tunes[0] = 1138, tunes[1] = 1139;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) tunes[0] = 1049, tunes[1] = 1050;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) tunes[0] = 1058, tunes[1] = 1060;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) tunes[0] = 1158, tunes[1] = 1162;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) tunes[0] = 1063, tunes[1] = 1064;
						else return SCM(playerid,-1,"Данная деталь недоступна для вашей модели"),ShowSTODialog(playerid);
						if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
						if(PI[playerid][pCash] < 4000) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 4.000$");
						GameTextForPlayer(playerid, "~y~-4.000~r~$", 5000, 1);
						AvtoMInfo[v][v2Till] += 4000;
						if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
						PI[playerid][pCash] -= 4000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SCM(playerid,0xFFFFFFAA,"Вы установили Спойлер");
						AddVehicleComponent(GetPlayerVehicleID(playerid), tunes[listitem]);
						if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pSpoiler] = tunes[listitem];
						else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pSpoiler1] = tunes[listitem];
						ShowSTODialog(playerid);
					}
				}
			}
		}
	case 3469:
		{
			for(new v = 1; v <= TotalMast; v++)
			{
				if(response)
				{
					if (PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
					{
						new tuneb[2];
						if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) tuneb[0] = 1171, tuneb[1] = 1172;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) tuneb[0] = 1169, tuneb[1] = 1170;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) tuneb[0] = 1174, tuneb[1] = 1175;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) tuneb[0] = 1152, tuneb[1] = 1153;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) tuneb[0] = 1155, tuneb[1] = 1157;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) tuneb[0] = 1160, tuneb[1] = 1173;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) tuneb[0] = 1165, tuneb[1] = 1166;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534) tuneb[0] = 1179, tuneb[1] = 1185;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) tuneb[0] = 1181, tuneb[1] = 1182;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) tuneb[0] = 1188, tuneb[1] = 1189;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) tuneb[0] = 1190, tuneb[1] = 1191;
						else return SCM(playerid,-1,"Данная деталь недоступна для вашей модели"),ShowSTODialog(playerid);
						if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
						if(PI[playerid][pCash] < 3000) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 3.000$");
						GameTextForPlayer(playerid, "~y~-3.000~r~$", 5000, 1);
						AvtoMInfo[v][v2Till] += 3000;
						if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
						PI[playerid][pCash] -= 3000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SCM(playerid,0xFFFFFFAA,"Вы установили Передний бампер");
						AddVehicleComponent(GetPlayerVehicleID(playerid), tuneb[listitem]);
						if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pBumper1] = tuneb[listitem];
						else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pBumper11] = tuneb[listitem];
						ShowSTODialog(playerid);
					}
				}
			}
		}
	case 3569:
		{
			for(new v = 1; v <= TotalMast; v++)
			{
				if(response)
				{
					if(PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
					{
						new tuneg[2];
						if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) tuneg[0] = 1148, tuneg[1] = 1149;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) tuneg[0] = 1140, tuneg[1] = 1141;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) tuneg[0] = 1176, tuneg[1] = 1177;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) tuneg[0] = 1150, tuneg[1] = 1151;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) tuneg[0] = 1154, tuneg[1] = 1156;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) tuneg[0] = 1159, tuneg[1] = 1161;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) tuneg[0] = 1167, tuneg[1] = 1168;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534) tuneg[0] = 1178, tuneg[1] = 1180;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) tuneg[0] = 1183, tuneg[1] = 1184;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) tuneg[0] = 1186, tuneg[1] = 1187;
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) tuneg[0] = 1192, tuneg[1] = 1193;
						else return SCM(playerid,-1,"Данная деталь недоступна для вашей модели"),ShowSTODialog(playerid);
						if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
						if(PI[playerid][pCash] < 3000) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 3.000$");
						GameTextForPlayer(playerid, "~y~-3.000~r~$", 5000, 1);
						AvtoMInfo[v][v2Till] += 3000;
						if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
						PI[playerid][pCash] -= 3000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SCM(playerid,0xFFFFFFAA,"Вы установили Задний бампер");
						AddVehicleComponent(GetPlayerVehicleID(playerid), tuneg[listitem]);
						if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0]) PI[playerid][pBumper2] = tuneg[listitem];
						else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1]) PI[playerid][pBumper21] = tuneg[listitem];
						ShowSTODialog(playerid);
					}
				}
			}
  		}
    case 4489:
		{
			for(new h = 1; h <= TotalBizz; h++)
			{
				if(!response) return true;
				switch(listitem)
				{
				case 0:
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
						    if(GetPVarInt(playerid,"Gun1") > gettime()) return SCM(playerid, 0xFF0000FF, "Вы только что покупали это оружие. Купите чуть позже.");
							SetPVarInt(playerid,"Gun1",gettime() + 180);
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине нет оружия!");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar1]) return SCM(playerid, COLOR_GREY, "У Вас нет столько денег");
							SPDEx(playerid, 7927, 1, "Патроны", "Введите кол-во патронов которые будут в комплекте с оружием.", "Купить", "отмена");
							return true;
						}
					}
    			case 1:
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
						    if(GetPVarInt(playerid,"Gun2") > gettime()) return SCM(playerid, 0xFF0000FF, "Вы только что покупали это оружие. Купите чуть позже.");
							SetPVarInt(playerid,"Gun2",gettime() + 180);
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине нет оружия!");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar2]) return SCM(playerid, COLOR_GREY, "У Вас нет столько денег");
							SPDEx(playerid, 7928, 1, "Патроны", "Введите кол-во патронов которые будут в комплекте с оружием.", "Купить", "отмена");
							return true;
						}
					}
				case 2:
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
						    if(GetPVarInt(playerid,"Gun3") > gettime()) return SCM(playerid, 0xFF0000FF, "Вы только что покупали это оружие. Купите чуть позже.");
							SetPVarInt(playerid,"Gun3",gettime() + 180);
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине нет оружия!");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar3]) return SCM(playerid, COLOR_GREY, "У Вас нет столько денег");
							SPDEx(playerid, 7929, 1, "Патроны", "Введите кол-во патронов которые будут в комплекте с оружием.", "Купить", "отмена");
							return true;
						}
					}
				case 3:
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
						    if(GetPVarInt(playerid,"Gun4") > gettime()) return SCM(playerid, 0xFF0000FF, "Вы только что покупали это оружие. Купите чуть позже.");
							SetPVarInt(playerid,"Gun4",gettime() + 180);
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине нет оружия!");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar4]) return SCM(playerid, COLOR_GREY, "У Вас нет столько денег");
							SPDEx(playerid, 7930, 1, "Патроны", "Введите кол-во патронов которые будут в комплекте с оружием.", "Купить", "отмена");
							return true;
						}
					}
				case 4:
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
						    if(GetPVarInt(playerid,"Gun5") > gettime()) return SCM(playerid, 0xFF0000FF, "Вы только что покупали это оружие. Купите чуть позже.");
							SetPVarInt(playerid,"Gun5",gettime() + 180);
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине нет оружия!");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar5]) return SCM(playerid, COLOR_GREY, "У Вас нет столько денег");
							SPDEx(playerid, 7931, 1, "Патроны", "Введите кол-во патронов которые будут в комплекте с оружием.", "Купить", "отмена");
							return true;
						}
					}
				case 5:
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
						    if(GetPVarInt(playerid,"Gun6") > gettime()) return SCM(playerid, 0xFF0000FF, "Вы только что покупали это оружие. Купите чуть позже.");
							SetPVarInt(playerid,"Gun6",gettime() + 180);
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине нет оружия!");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar6]) return SCM(playerid, COLOR_GREY, "У Вас нет столько денег");
							SPDEx(playerid, 7932, 1, "Патроны", "Введите кол-во патронов которые будут в комплекте с оружием.", "Купить", "отмена");
							return true;
						}
					}
				case 6:
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
						    if(GetPVarInt(playerid,"Gun7") > gettime()) return SCM(playerid, 0xFF0000FF, "Вы только что покупали это оружие. Купите чуть позже.");
							SetPVarInt(playerid,"Gun7",gettime() + 180);
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине нет оружия!");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar7]) return SCM(playerid, COLOR_GREY, "У Вас нет столько денег");
							SPDEx(playerid, 7933, 1, "Патроны", "Введите кол-во патронов которые будут в комплекте с оружием.", "Купить", "отмена");
							return true;
						}
					}
				case 7:
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
						    if(GetPVarInt(playerid,"Gun8") > gettime()) return SCM(playerid, 0xFF0000FF, "Вы только что покупали это оружие. Купите чуть позже.");
							SetPVarInt(playerid,"Gun8",gettime() + 180);
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине нет оружия!");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar8]) return SCM(playerid, COLOR_GREY, "У Вас нет столько денег");
							SPDEx(playerid, 7934, 1, "Патроны", "Введите кол-во патронов которые будут в комплекте с оружием.", "Купить", "отмена");
							return true;
						}
					}
				case 8:
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
						    if(GetPVarInt(playerid,"Gun9") > gettime()) return SCM(playerid, 0xFF0000FF, "Вы только что покупали это оружие. Купите чуть позже.");
							SetPVarInt(playerid,"Gun9",gettime() + 180);
						    if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине закончились клюшки!");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar9]) return SCM(playerid, COLOR_GREY, "У Вас нет столько денег");
						    BizzInfo[h][b2Till] += BizzInfo[h][bTovar9];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar9];
							_GiveGun(playerid,2,1);
							format(YCMDstr,24, "Вы купили клюшку за $%d",BizzInfo[h][bTovar9]);
							SCM(playerid,0x29FF00AA,YCMDstr);
							return true;
						}
					}
				case 9:
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
						    if(GetPVarInt(playerid,"Gun10") > gettime()) return SCM(playerid, 0xFF0000FF, "Вы только что покупали это оружие. Купите чуть позже.");
							SetPVarInt(playerid,"Gun10",gettime() + 180);
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине закончились биты!");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar10]) return SCM(playerid, COLOR_GREY, "У Вас нет столько денег");
						    BizzInfo[h][b2Till] += BizzInfo[h][bTovar10];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar10];
							_GiveGun(playerid, 5,1);
							format(YCMDstr,22, "Вы купили биту за $%d",BizzInfo[h][bTovar10]);
							SCM(playerid,0x29FF00AA,YCMDstr);
							return true;
						}
					}
				case 10:
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
						    if(GetPVarInt(playerid,"Gun11") > gettime()) return SCM(playerid, 0xFF0000FF, "Вы только что покупали это оружие. Купите чуть позже.");
							SetPVarInt(playerid,"Gun11",gettime() + 180);
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине закончились лопаты!");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar11]) return SCM(playerid, COLOR_GREY, "У Вас нет столько денег");
						    BizzInfo[h][b2Till] += BizzInfo[h][bTovar11];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar11];
							_GiveGun(playerid, 6,1);
							format(YCMDstr,24, "Вы купили лопату за $%d",BizzInfo[h][bTovar11]);
							SCM(playerid,0x29FF00AA,YCMDstr);
							return true;
						}
					}
				case 11:
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
						    if(GetPVarInt(playerid,"Gun12") > gettime()) return SCM(playerid, 0xFF0000FF, "Вы только что покупали это оружие. Купите чуть позже.");
							SetPVarInt(playerid,"Gun12",gettime() + 180);
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине закончились Pool Cue!");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar12]) return SCM(playerid, COLOR_GREY, "У Вас нет столько денег");
						    BizzInfo[h][b2Till] += BizzInfo[h][bTovar12];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar12];
							_GiveGun(playerid, 7,1);
							format(YCMDstr,26, "Вы купили Pool Cue за $%d",BizzInfo[h][bTovar12]);
							SCM(playerid,0x29FF00AA,YCMDstr);
							return true;
						}
					}
				case 12:
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
						    if(GetPVarInt(playerid,"Gun13") > gettime()) return SCM(playerid, 0xFF0000FF, "Вы только что покупали это оружие. Купите чуть позже.");
							SetPVarInt(playerid,"Gun13",gettime() + 180);
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине закончились Katana!");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar13]) return SCM(playerid, COLOR_GREY, "У Вас нет столько денег");
						    BizzInfo[h][b2Till] += BizzInfo[h][bTovar13];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar13];
							_GiveGun(playerid, 8,1);
							format(YCMDstr,24, "Вы купили Katana за $%d",BizzInfo[h][bTovar13]);
							SCM(playerid,0x29FF00AA,YCMDstr);
							return true;
						}
					}
				}
			}
		}
	case 7927:
		{
			if(!response) return true;
			for(new h = 1; h <= TotalBizz; h++)
			{
			    if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
			    {
					new gungins = strval(inputtext);
					if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине нет оружия!");
					if(!strval(inputtext)) return SPDEx(playerid, 7927, 1, "Патроны", "Введите кол-во патронов которые будут в комплекте с оружием.", "Купить", "отмена");
					if(PI[playerid][pCash] < strval(inputtext)*BizzInfo[h][bTovar1]) return SCM(playerid,-1,"Недостаточно денег");
					if(gungins > 999 || gungins < 0) return SPDEx(playerid, 7927, 1, "Патроны", "Кол-во патронов не должно быть меньше 1 или более 999", "Купить", "отмена");
	                if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
					BizzInfo[h][b2Till] += strval(inputtext)*BizzInfo[h][bTovar1];
					PI[playerid][pCash] -= strval(inputtext)*BizzInfo[h][bTovar1];
					_GiveGun(playerid,24,gungins);
					format(YCMDstr,33, "Вы купили Deagle за $%d",strval(inputtext)*BizzInfo[h][bTovar1]);
					SCM(playerid,0x29FF00AA,YCMDstr);
					return true;
				}
			}
		}
	case 7928:
		{
			if(!response) return true;
			for(new h = 1; h <= TotalBizz; h++)
			{
			    if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
			    {
					new gungins = strval(inputtext);
					if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине нет оружия!");
					if(!strval(inputtext)) return SPDEx(playerid, 7928, 1, "Патроны", "Введите кол-во патронов которые будут в комплекте с оружием.", "Купить", "отмена");
					if(PI[playerid][pCash] < strval(inputtext)*BizzInfo[h][bTovar2]) return SCM(playerid,-1,"Недостаточно денег");
					if(gungins > 999 || gungins < 0) return SPDEx(playerid, 7928, 1, "Патроны", "Кол-во патронов не должно быть меньше 1 или более 999", "Купить", "отмена");
                    if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
					BizzInfo[h][b2Till] += strval(inputtext)*BizzInfo[h][bTovar2];
					PI[playerid][pCash] -= strval(inputtext)*BizzInfo[h][bTovar2];
					_GiveGun(playerid,23,gungins);
					format(YCMDstr,35,"Вы купили Silenced за $%d",strval(inputtext)*BizzInfo[h][bTovar2]);
					SCM(playerid,0x29FF00AA,YCMDstr);
					return true;
				}
			}
		}
	case 7929:
		{
			if(!response) return true;
			for(new h = 1; h <= TotalBizz; h++)
			{
			    if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
			    {
					new gungins = strval(inputtext);
					if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине нет оружия!");
					if(!strval(inputtext)) return SPDEx(playerid, 7929, 1, "Патроны", "Введите кол-во патронов которые будут в комплекте с оружием.", "Купить", "отмена");
					if(PI[playerid][pCash] < strval(inputtext)*BizzInfo[h][bTovar3]) return SCM(playerid,-1,"Недостаточно денег");
					if(gungins > 999 || gungins < 0) return SPDEx(playerid, 7929, 1, "Патроны", "Кол-во патронов не должно быть меньше 1 или более 999", "Купить", "отмена");
                    if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
					BizzInfo[h][b2Till] += strval(inputtext)*BizzInfo[h][bTovar3];
					PI[playerid][pCash] -= strval(inputtext)*BizzInfo[h][bTovar3];
					_GiveGun(playerid,33,gungins);
					format(YCMDstr,40,"Вы купили Country Rifle за $%d",strval(inputtext)*BizzInfo[h][bTovar3]);
					SCM(playerid,0x29FF00AA,YCMDstr);
					return true;
				}
			}
		}
	case 7930:
		{
			if(!response) return true;
			for(new h = 1; h <= TotalBizz; h++)
			{
			    if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
			    {
					new gungins = strval(inputtext);
					if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине нет оружия!");
					if(!strval(inputtext)) return SPDEx(playerid, 7930, 1, "Патроны", "Введите кол-во патронов которые будут в комплекте с оружием.", "Купить", "отмена");
					if(PI[playerid][pCash] < strval(inputtext)*BizzInfo[h][bTovar4]) return SCM(playerid,-1,"Недостаточно денег");
					if(gungins > 999 || gungins < 0) return SPDEx(playerid, 7930, 1, "Патроны", "Кол-во патронов не должно быть меньше 1 или более 999", "Купить", "отмена");
                    if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
					BizzInfo[h][b2Till] += strval(inputtext)*BizzInfo[h][bTovar4];
					PI[playerid][pCash] -= strval(inputtext)*BizzInfo[h][bTovar4];
					_GiveGun(playerid,25,gungins);
					format(YCMDstr,34,"Вы купили Shotgun за $%d",strval(inputtext)*BizzInfo[h][bTovar4]);
					SCM(playerid,0x29FF00AA,YCMDstr);
					return true;
				}
			}
		}
	case 7931:
		{
			if(!response) return true;
			for(new h = 1; h <= TotalBizz; h++)
			{
			    if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
			    {
					new gungins = strval(inputtext);
					if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине нет оружия!");
					if(!strval(inputtext)) return SPDEx(playerid, 7931, 1, "Патроны", "Введите кол-во патронов которые будут в комплекте с оружием.", "Купить", "отмена");
					if(PI[playerid][pCash] < strval(inputtext)*BizzInfo[h][bTovar5]) return SCM(playerid,-1,"Недостаточно денег");
					if(gungins > 999 || gungins < 0) return SPDEx(playerid, 7931, 1, "Патроны", "Кол-во патронов не должно быть меньше 1 или более 999", "Купить", "отмена");
                    if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
					BizzInfo[h][b2Till] += strval(inputtext)*BizzInfo[h][bTovar5];
					PI[playerid][pCash] -= strval(inputtext)*BizzInfo[h][bTovar5];
					_GiveGun(playerid,29,gungins);
					format(YCMDstr,30,"Вы купили SMG за $%d",strval(inputtext)*BizzInfo[h][bTovar5]);
					SCM(playerid,0x29FF00AA,YCMDstr);
					return true;
				}
			}
		}
	case 7932:
		{
			if(!response) return true;
			for(new h = 1; h <= TotalBizz; h++)
			{
			    if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
			    {
					new gungins = strval(inputtext);
					if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине нет оружия!");
					if(!strval(inputtext)) return SPDEx(playerid, 7932, 1, "Патроны", "Введите кол-во патронов которые будут в комплекте с оружием.", "Купить", "отмена");
					if(PI[playerid][pCash] < strval(inputtext)*BizzInfo[h][bTovar6]) return SCM(playerid,-1,"Недостаточно денег");
					if(gungins > 999 || gungins < 0) return SPDEx(playerid, 7932, 1, "Патроны", "Кол-во патронов не должно быть меньше 1 или более 999", "Купить", "отмена");
                    if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
					BizzInfo[h][b2Till] += strval(inputtext)*BizzInfo[h][bTovar6];
					PI[playerid][pCash] -= strval(inputtext)*BizzInfo[h][bTovar6];
					_GiveGun(playerid,30,gungins);
					format(YCMDstr,31,"Вы купили AK47 за $%d",strval(inputtext)*BizzInfo[h][bTovar6]);
					SCM(playerid,0x29FF00AA,YCMDstr);
					return true;
				}
			}
		}
	case 7933:
		{
			if(!response) return true;
			for(new h = 1; h <= TotalBizz; h++)
			{
			    if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
			    {
					new gungins = strval(inputtext);
					if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине нет оружия!");
					if(!strval(inputtext)) return SPDEx(playerid, 7933, 1, "Патроны", "Введите кол-во патронов которые будут в комплекте с оружием.", "Купить", "отмена");
					if(PI[playerid][pCash] < strval(inputtext)*BizzInfo[h][bTovar7]) return SCM(playerid,-1,"Недостаточно денег");
					if(gungins > 999 || gungins < 0) return SPDEx(playerid, 7933, 1, "Патроны", "Кол-во патронов не должно быть меньше 1 или более 999", "Купить", "отмена");
                    if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
					BizzInfo[h][b2Till] += strval(inputtext)*BizzInfo[h][bTovar7];
					PI[playerid][pCash] -= strval(inputtext)*BizzInfo[h][bTovar7];
					_GiveGun(playerid,31,gungins);
					format(YCMDstr,29,"Вы купили M4 за $%d",strval(inputtext)*BizzInfo[h][bTovar7]);
					SCM(playerid,0x29FF00AA,YCMDstr);
					return true;
				}
			}
		}
	case 7934:
		{
			if(!response) return true;
			for(new h = 1; h <= TotalBizz; h++)
			{
			    if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
			    {
					new gungins = strval(inputtext);
					if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В магазине нет оружия!");
					if(!strval(inputtext)) return SPDEx(playerid, 7934, 1, "Патроны", "Введите кол-во патронов которые будут в комплекте с оружием.", "Купить", "отмена");
					if(PI[playerid][pCash] < strval(inputtext)*BizzInfo[h][bTovar8]) return SCM(playerid,-1,"Недостаточно денег");
					if(gungins > 999 || gungins < 0) return SPDEx(playerid, 7934, 1, "Патроны", "Кол-во патронов не должно быть меньше 1 или более 999", "Купить", "отмена");
                    if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
					BizzInfo[h][b2Till] += strval(inputtext)*BizzInfo[h][bTovar8];
					PI[playerid][pCash] -= strval(inputtext)*BizzInfo[h][bTovar8];
					_GiveGun(playerid,17,gungins);
					format(YCMDstr,35,"Вы купили Tear Gas за $%d",strval(inputtext)*BizzInfo[h][bTovar8]);
					SCM(playerid,0x29FF00AA,YCMDstr);
					return true;
				}
			}
		}
	case 2746:
		{
			if(!response) return true;
			new i = PI[playerid][pPviskey];
			switch(listitem)
			{
			case 0: PrintMastInfo(playerid, i);
			case 1:
				{
					if(AvtoMInfo[i][vLocked] == 0) return SCM(playerid, COLOR_GREY, "Автомастерская уже открыта!");
					if(AvtoMInfo[i][vProducts] <= 0) return SCM(playerid, COLOR_GREY, "В Автомастерской нет запчастей");
					AvtoMInfo[i][vLocked] = 0;
					AvtoMInfo[i][vLockTime] = 0;
					SCM(playerid, COLOR_LIGHTRED, "Вы открыли Автомастерскую. Всегда следите за её состоянием!");
					SCM(playerid, COLOR_LIGHTRED, "В противном случае Вы можете потерять Автомастерскую");
				}
			case 2: CallLocalFunction("OnPlayerCommandText", "is", playerid, "/sellmast");
			case 3:
				{
					format(YCMDstr, 32,"Всего заработано: $%d.",AvtoMInfo[i][v2Till]);
					SPDEx(playerid, 2750, 1,"Снять деньги с бизнеса",YCMDstr,"Снять","Назад");
				}
            case 4: SPDEx(playerid, 2749, 1, "Закупка запчастей", "Введите кол-во запчастей.\n\nПример: 10000.", "Принять", "Отмена");
			}
		}
    case 2749:
		{
			if(!response) return true;
			new i = PI[playerid][pPviskey];
			if(strval(inputtext)+AvtoMInfo[i][vProducts] > 50000 || strval(inputtext)+AvtoMInfo[i][vProducts] > 50000) return SCM(playerid,COLOR_GREY,"Неверное кол-во");
			if(!strval(inputtext)) return SPDEx(playerid, 2749, 1, "Закупка запчастей", "Введите кол-во запчастей.\n\nПример: 10000.", "Принять", "Отмена");
			if(strval(inputtext) < 1) return SPDEx(playerid, 2749, 1, "Закупка запчастей", "Введите кол-во запчастей.\n\nПример: 10000.", "Принять", "Отмена");
			if(PI[playerid][pCash] < strval(inputtext)) return SCM(playerid,COLOR_GREY,"У Вас недостаточно денег для оплаты запчастей");
			AvtoMInfo[i][vProducts] += strval(inputtext);
			PI[playerid][pCash] -= strval(inputtext);
			SCMF(playerid, COLOR_BLUE, "Вы заказали %d запчастей. Цена одной запчасти: $1. Запчасти доставлены на склад",strval(inputtext));
			SaveMySQL(6,i);
			return true;
		}
	case 2750:
		{
			if(!response) return true;
			new moneyy = strval(inputtext);
			new vouse = PI[playerid][pPviskey];
			if(vouse == 255) return SCM(playerid,COLOR_GREY,"У Вас нет Автомастерской.");
			if(moneyy < 1 && moneyy > AvtoMInfo[vouse][v2Till]) return SCMF(playerid,COLOR_GREY,"Нельзя взять меньше 1 и больше %d", AvtoMInfo[vouse][v2Till]);
			if(moneyy > AvtoMInfo[vouse][v2Till] || moneyy < 1)  return SCM(playerid, COLOR_GRAD2, "На счету Автомастерской нет столько денег!");
			AvtoMInfo[vouse][v2Till] -= moneyy;
			PI[playerid][pCash] += moneyy;
			SCMF(playerid,COLOR_WHITE,"Вы сняли с счета $%d. В Автомастерской осталось $%d.",moneyy,AvtoMInfo[vouse][v2Till]);
			SaveMySQL(6,vouse);
			return true;
		}
	case 1746:
		{
			if(!response) return true;
			new i = PI[playerid][pPbiskey];
			switch(listitem)
			{
			case 0: PrintBizInfo(playerid, i);
			case 1:
				{
					if(BizzInfo[i][bLocked] == 0) return SCM(playerid, COLOR_GREY, "Бизнес уже открыт!");
					if(BizzInfo[i][bProducts] <= 0 || BizzInfo[i][pBizLic] == 0) return SCM(playerid, COLOR_GREY, "В бизнесе нет товаров или нет лицензии!");
					BizzInfo[i][bLocked] = 0;
					BizzInfo[i][bLockTime] = 0;
					SCM(playerid, COLOR_LIGHTRED, "Бизнес открыт. Всегда следите за состоянием товаров и лицензией или Вы потеряете бизнес!");
				}
			case 2:
				{
					if(BizzInfo[i][bType] == 1)
					{
						format(YCMDstr,sizeof(YCMDstr), "Вода\t\t| $%d\nСода\t\t| $%d\nКока-Кола\t| $%d\nПиво\t\t| $%d\nВино\t\t| $%d\nАбсент\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],BizzInfo[i][bTovar6]);
						SPDEx(playerid, 1747, 2, "Настройка цены", YCMDstr, "Выбрать", "Отмена");
					}
					if(BizzInfo[i][bType] == 2)
					{
						format(YCMDstr,sizeof(YCMDstr), "Бургер\t\t\t| $%d\nРыбный суп\t\t| $%d\nБольшой бургер\t| $%d\nКотлеты\t\t| $%d\nПельмени\t\t| $%d\nГамбургер\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],BizzInfo[i][bTovar6]);
						SPDEx(playerid, 1847, 2, "Настройка цены", YCMDstr, "Выбрать", "Отмена");
					}
					if(BizzInfo[i][bType] == 3)
					{
					    new sstring[470];
						format(sstring,sizeof(sstring), "Телефоный номер\t\t| $%d\nНаручные Часы\t\t| $%d\nПлэер\t\t\t\t| $%d\nЗажигалка\t\t\t| $%d\nСигареты\t\t\t| $%d\nТелефонная книга\t\t| $%d\nСправочник\t\t\t| $%d\nАптечки\t\t\t| $%d\nФотоаппарат\t\t\t| $%d\nЦветы\t\t\t\t| $%d\nГазовый балончик\t\t| $%d\nМаска\t\t\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],
							BizzInfo[i][bTovar6],BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12]);
						SPDEx(playerid, 1947, 2, "Настройка цены", sstring, "Выбрать", "Отмена");
					}
					if(BizzInfo[i][bType] == 4) SPDEx(playerid, 1800, 1, "Настройка цены", "Введите цену за бензин. Цена должна быть от $1 до $499", "Выбрать", "Отмена");
                    if(BizzInfo[i][bType] == 5)
					{
					    new sstring[268];
    					format(sstring,268, "- Desert Eagle\t\t[$%d]\n- Silenced 9mm\t\t[$%d]\n- Country Rifle\t\t[$%d]\n- Shotgun\t\t[$%d]\n- SMG\t\t\t[$%d]\n- AK47\t\t\t[$%d]\n- M4\t\t\t[$%d]\n- Tear Gas\t\t[$%d]\n- Golf Club\t\t[$%d]\n- Baseboll Bat\t\t[$%d]\n- Shovel\t\t[$%d]\n- Pool Cue\t\t[$%d]\n- Katana\t\t[$%d]",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4], BizzInfo[i][bTovar5],BizzInfo[i][bTovar6],
							BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12],BizzInfo[i][bTovar13]);
                        SPDEx(playerid, 2047, 2, "Настройка цены", sstring, "Выбрать", "Отмена");
					}
				 }
			case 3: if(BizzInfo[i][bType] != 2 && BizzInfo[i][bType] != 3 && BizzInfo[i][bType] != 4 && BizzInfo[i][bType] != 5) SPDEx(playerid, 1748, 1, "Цена", "Введите цену за вход:", "Принять", "Отмена");
			case 4: CallLocalFunction("OnPlayerCommandText", "is", playerid, "/prodatbiz");
			case 5:
				{
					format(YCMDstr, 32,"Всего заработано: $%d.",BizzInfo[i][b2Till]);
					SPDEx(playerid, 1750, 1,"Снять деньги с бизнеса",YCMDstr,"Снять","Назад");
				}
			case 6: if(BizzInfo[i][bType] != 4) SPDEx(playerid, 5350, 2, "Закупка товаров", "Выбрать", "Товары", "Отмена");
			case 7: if(BizzInfo[i][bType] == 4) SPDEx(playerid, 5347, 2, "Закупка топлива", "Выбрать", "Топливо", "Отмена");
			case 8: if(BizzInfo[i][bType] != 4) SPDEx(playerid, 1749, 1, "Экспресс заказ", "Введите кол-во товаров.\n\nПример: 1000.", "Принять", "Отмена");
			case 9: if(BizzInfo[i][bType] == 4) SPDEx(playerid, 1751, 1, "Экспресс заказ", "Введите кол-во топлива.\n\nПример: 1000.", "Принять", "Отмена");
			}
		}
    case 1747:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: SPDEx(playerid, 1801, 1, "Цена", "Введите цену за воду. Цена должна быть от $1 до $499", "Принять", "Отмена");
			case 1: SPDEx(playerid, 1802, 1, "Цена", "Введите цену за соду. Цена должна быть от $1 до $499", "Принять", "Отмена");
		   	case 2: SPDEx(playerid, 1803, 1, "Цена", "Введите цену за кока-колу. Цена должна быть от $1 до $499", "Принять", "Отмена");
		   	case 3: SPDEx(playerid, 1804, 1, "Цена", "Введите цену за пиво. Цена должна быть от $1 до $499", "Принять", "Отмена");
		   	case 4: SPDEx(playerid, 1805, 1, "Цена", "Введите цену за вино. Цена должна быть от $1 до $499", "Принять", "Отмена");
		   	case 5: SPDEx(playerid, 1806, 1, "Цена", "Введите цену за абсент. Цена должна быть от $1 до $499", "Принять", "Отмена");
			}
		}
    case 1847:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: SPDEx(playerid, 1807, 1, "Цена", "Введите цену за бургер. Цена должна быть от $1 до $499", "Принять", "Отмена");
				case 1: SPDEx(playerid, 1808, 1, "Цена", "Введите цену за рыбный суп. Цена должна быть от $1 до $499", "Принять", "Отмена");
                case 2: SPDEx(playerid, 1809, 1, "Цена", "Введите цену за большой бургер. Цена должна быть от $1 до $499", "Принять", "Отмена");
                case 3: SPDEx(playerid, 1810, 1, "Цена", "Введите цену за котлеты. Цена должна быть от $1 до $499", "Принять", "Отмена");
                case 4: SPDEx(playerid, 1811, 1, "Цена", "Введите цену за пельмени. Цена должна быть от $1 до $499", "Принять", "Отмена");
                case 5: SPDEx(playerid, 1812, 1, "Цена", "Введите цену за гамбургер. Цена должна быть от $1 до $499", "Принять", "Отмена");
				}
			}
		}
    case 1947:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: SPDEx(playerid, 1813, 1, "Цена", "Введите цену за телефонный номер. Цена должна быть от $1 до $499", "Принять", "Отмена");
				case 1: SPDEx(playerid, 1814, 1, "Цена", "Введите цену за наручные часы. Цена должна быть от $1 до $499", "Принять", "Отмена");
                case 2: SPDEx(playerid, 1815, 1, "Цена", "Введите цену за плэер. Цена должна быть от $1 до $499", "Принять", "Отмена");
                case 3: SPDEx(playerid, 1816, 1, "Цена", "Введите цену за зажигалку. Цена должна быть от $1 до $499", "Принять", "Отмена");
                case 4: SPDEx(playerid, 1817, 1, "Цена", "Введите цену за сигареты. Цена должна быть от $1 до $499", "Принять", "Отмена");
                case 5: SPDEx(playerid, 1818, 1, "Цена", "Введите цену за телефонную книгу. Цена должна быть от $1 до $499", "Принять", "Отмена");
                case 6: SPDEx(playerid, 1819, 1, "Цена", "Введите цену за справочник. Цена должна быть от $1 до $499", "Принять", "Отмена");
                case 7: SPDEx(playerid, 1820, 1, "Цена", "Введите цену за аптечки. Цена должна быть от $1 до $499", "Принять", "Отмена");
                case 8: SPDEx(playerid, 1821, 1, "Цена", "Введите цену за фотоаппарат. Цена должна быть от $1 до $499", "Принять", "Отмена");
                case 9: SPDEx(playerid, 1822, 1, "Цена", "Введите цену за цветы. Цена должна быть от $1 до $499", "Принять", "Отмена");
                case 10: SPDEx(playerid, 1823, 1, "Цена", "Введите цену за газовый балончик. Цена должна быть от $1 до $499", "Принять", "Отмена");
                case 11: SPDEx(playerid, 1824, 1, "Цена", "Введите цену за маску. Цена должна быть от $1 до $499", "Принять", "Отмена");
				}
			}
		}
    case 2047:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: SPDEx(playerid, 2813, 1, "Цена", "Введите цену за 1пт. Deagle. Цена от $10 до $49", "Принять", "Отмена");
				case 1: SPDEx(playerid, 2814, 1, "Цена", "Введите цену за 1пт. Silenced. Цена от $10 до $49", "Принять", "Отмена");
                case 2: SPDEx(playerid, 2815, 1, "Цена", "Введите цену за 1пт. Rifle. Цена от $10 до $49", "Принять", "Отмена");
                case 3: SPDEx(playerid, 2816, 1, "Цена", "Введите цену за 1пт. Shotgun. Цена от $10 до $49", "Принять", "Отмена");
                case 4: SPDEx(playerid, 2817, 1, "Цена", "Введите цену за 1пт. SMG. Цена от $10 до $49", "Принять", "Отмена");
                case 5: SPDEx(playerid, 2818, 1, "Цена", "Введите цену за 1пт. AK47. Цена от $10 до $49", "Принять", "Отмена");
                case 6: SPDEx(playerid, 2819, 1, "Цена", "Введите цену за 1пт. M4. Цена от $10 до $49", "Принять", "Отмена");
                case 7: SPDEx(playerid, 2820, 1, "Цена", "Введите цену за 1пт. Tear Gas. Цена от $10 до $49", "Принять", "Отмена");
                case 8: SPDEx(playerid, 2821, 1, "Цена", "Введите цену за 1пт. Golf Club. Цена от $10 до $49", "Принять", "Отмена");
                case 9: SPDEx(playerid, 2822, 1, "Цена", "Введите цену за 1пт. Baseboll Bat. Цена от $10 до $49", "Принять", "Отмена");
                case 10: SPDEx(playerid, 2823, 1, "Цена", "Введите цену за 1пт. Shovel. Цена от $10 до $49", "Принять", "Отмена");
                case 11: SPDEx(playerid, 2824, 1, "Цена", "Введите цену за 1пт. Pool Cue. Цена от $10 до $49", "Принять", "Отмена");
                case 12: SPDEx(playerid, 2825, 1, "Цена", "Введите цену за 1пт. Katana. Цена от $10 до $49", "Принять", "Отмена");
				}
			}
		}
    case 1800:// Бензин
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
		   	summa = strval(inputtext);
		   	if(summa < 1 || summa > 800) return SCM(playerid, COLOR_GREY, "Цена на бензин должна быть от $1 до $800");
		   	BizzInfo[i][bTovar14] = summa;
			SaveMySQL(2,i);
			format(YCMDstr, 83, "{FF4500}%s\n{008000}Владелец: %s\n{008080}Цена бензина: $%d", BizzInfo[i][bMessage], BizzInfo[i][bOwner], BizzInfo[i][bTovar14]);
			Update3DTextLabelText(BizzInfo[i][bLabel], 0x00D900FF, YCMDstr);
			return true;
		}
    case 1801:// Вода
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
		   	summa = strval(inputtext);
		   	if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на воду должна быть от $1 до $499");
		   	BizzInfo[i][bTovar1] = summa;
			SaveMySQL(2,i);
			format(YCMDstr,256, "Вода\t\t| $%d\nСода\t\t| $%d\nКока-Кола\t| $%d\nПиво\t\t| $%d\nВино\t\t| $%d\nАбсент\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],BizzInfo[i][bTovar6]);
			SPDEx(playerid, 1747, 2, "Настройка цены", YCMDstr, "Выбрать", "Отмена");
			return true;
		}
    case 1802:// Сода
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
		   	summa = strval(inputtext);
		   	if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на соду должна быть от $1 до $499");
		   	BizzInfo[i][bTovar2] = summa;
			SaveMySQL(2,i);
			format(YCMDstr,256, "Вода\t\t| $%d\nСода\t\t| $%d\nКока-Кола\t| $%d\nПиво\t\t| $%d\nВино\t\t| $%d\nАбсент\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],BizzInfo[i][bTovar6]);
			SPDEx(playerid, 1747, 2, "Настройка цены", YCMDstr, "Выбрать", "Отмена");
			return true;
		}
    case 1803:// Кока-Кола
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
		   	summa = strval(inputtext);
		   	if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на кока-колу должна быть от $1 до $499");
		   	BizzInfo[i][bTovar3] = summa;
			SaveMySQL(2,i);
			format(YCMDstr,256, "Вода\t\t| $%d\nСода\t\t| $%d\nКока-Кола\t| $%d\nПиво\t\t| $%d\nВино\t\t| $%d\nАбсент\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],BizzInfo[i][bTovar6]);
			SPDEx(playerid, 1747, 2, "Настройка цены", YCMDstr, "Выбрать", "Отмена");
			return true;
		}
    case 1804:// Пиво
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
		   	summa = strval(inputtext);
		   	if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на пиво должна быть от $1 до $499");
		   	BizzInfo[i][bTovar4] = summa;
			SaveMySQL(2,i);
			format(YCMDstr,256, "Вода\t\t| $%d\nСода\t\t| $%d\nКока-Кола\t| $%d\nПиво\t\t| $%d\nВино\t\t| $%d\nАбсент\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],BizzInfo[i][bTovar6]);
			SPDEx(playerid, 1747, 2, "Настройка цены", YCMDstr, "Выбрать", "Отмена");
			return true;
		}
    case 1805:// Вино
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
		   	summa = strval(inputtext);
		   	if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на вино должна быть от $1 до $499");
		   	BizzInfo[i][bTovar5] = summa;
			SaveMySQL(2,i);
			format(YCMDstr,256, "Вода\t\t| $%d\nСода\t\t| $%d\nКока-Кола\t| $%d\nПиво\t\t| $%d\nВино\t\t| $%d\nАбсент\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],BizzInfo[i][bTovar6]);
			SPDEx(playerid, 1747, 2, "Настройка цены", YCMDstr, "Выбрать", "Отмена");
			return true;
		}
    case 1806:// Абсент
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
		   	summa = strval(inputtext);
		   	if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на абсент должна быть от $1 до $499");
		   	BizzInfo[i][bTovar6] = summa;
			SaveMySQL(2,i);
			format(YCMDstr,256, "Вода\t\t| $%d\nСода\t\t| $%d\nКока-Кола\t| $%d\nПиво\t\t| $%d\nВино\t\t| $%d\nАбсент\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],BizzInfo[i][bTovar6]);
			SPDEx(playerid, 1747, 2, "Настройка цены", YCMDstr, "Выбрать", "Отмена");
			return true;
		}
    case 1807:// Бургер
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
		   	summa = strval(inputtext);
		   	if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на бургер должна быть от $1 до $499");
		   	BizzInfo[i][bTovar1] = summa;
			SaveMySQL(2,i);
			format(YCMDstr,sizeof(YCMDstr), "Бургер\t\t\t| $%d\nРыбный суп\t\t| $%d\nБольшой бургер\t| $%d\nКотлеты\t\t| $%d\nПельмени\t\t| $%d\nГамбургер\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],BizzInfo[i][bTovar6]);
			SPDEx(playerid, 1847, 2, "Настройка цены", YCMDstr, "Выбрать", "Отмена");
			return true;
		}
    case 1808:// Рыбный суп
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
		   	summa = strval(inputtext);
		   	if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на рыбный суп должна быть от $1 до $499");
		   	BizzInfo[i][bTovar2] = summa;
			SaveMySQL(2,i);
			format(YCMDstr,sizeof(YCMDstr), "Бургер\t\t\t| $%d\nРыбный суп\t\t| $%d\nБольшой бургер\t| $%d\nКотлеты\t\t| $%d\nПельмени\t\t| $%d\nГамбургер\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],BizzInfo[i][bTovar6]);
			SPDEx(playerid, 1847, 2, "Настройка цены", YCMDstr, "Выбрать", "Отмена");
			return true;
		}
    case 1809:// Большой бургер
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
		   	summa = strval(inputtext);
		   	if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на большой бургер должна быть от $1 до $499");
		   	BizzInfo[i][bTovar3] = summa;
			SaveMySQL(2,i);
			format(YCMDstr,sizeof(YCMDstr), "Бургер\t\t\t| $%d\nРыбный суп\t\t| $%d\nБольшой бургер\t| $%d\nКотлеты\t\t| $%d\nПельмени\t\t| $%d\nГамбургер\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],BizzInfo[i][bTovar6]);
			SPDEx(playerid, 1847, 2, "Настройка цены", YCMDstr, "Выбрать", "Отмена");
			return true;
		}
    case 1810:// Котлеты
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
		   	summa = strval(inputtext);
		   	if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на котлеты должна быть от $1 до $499");
		   	BizzInfo[i][bTovar4] = summa;
			SaveMySQL(2,i);
			format(YCMDstr,sizeof(YCMDstr), "Бургер\t\t\t| $%d\nРыбный суп\t\t| $%d\nБольшой бургер\t| $%d\nКотлеты\t\t| $%d\nПельмени\t\t| $%d\nГамбургер\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],BizzInfo[i][bTovar6]);
			SPDEx(playerid, 1847, 2, "Настройка цены", YCMDstr, "Выбрать", "Отмена");
			return true;
		}
    case 1811:// Пельмени
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
		   	summa = strval(inputtext);
		   	if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на пельмени должна быть от $1 до $499");
		   	BizzInfo[i][bTovar5] = summa;
			SaveMySQL(2,i);
			format(YCMDstr,sizeof(YCMDstr), "Бургер\t\t\t| $%d\nРыбный суп\t\t| $%d\nБольшой бургер\t| $%d\nКотлеты\t\t| $%d\nПельмени\t\t| $%d\nГамбургер\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],BizzInfo[i][bTovar6]);
			SPDEx(playerid, 1847, 2, "Настройка цены", YCMDstr, "Выбрать", "Отмена");
			return true;
		}
    case 1812:// Гамбургер
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
		   	summa = strval(inputtext);
		   	if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на гамбургер должна быть от $1 до $499");
		   	BizzInfo[i][bTovar6] = summa;
			SaveMySQL(2,i);
			format(YCMDstr,sizeof(YCMDstr), "Бургер\t\t\t| $%d\nРыбный суп\t\t| $%d\nБольшой бургер\t| $%d\nКотлеты\t\t| $%d\nПельмени\t\t| $%d\nГамбургер\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],BizzInfo[i][bTovar6]);
			SPDEx(playerid, 1847, 2, "Настройка цены", YCMDstr, "Выбрать", "Отмена");
			return true;
		}
    case 1813:// Телефоный номер
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на бургер должна быть от $1 до $499");
			BizzInfo[i][bTovar1] = summa;
			SaveMySQL(2,i);
			new sstring[470];
			format(sstring,sizeof(sstring), "Телефоный номер\t\t| $%d\nНаручные Часы\t\t| $%d\nПлэер\t\t\t\t| $%d\nЗажигалка\t\t\t| $%d\nСигареты\t\t\t| $%d\nТелефонная книга\t\t| $%d\nСправочник\t\t\t| $%d\nАптечки\t\t\t| $%d\nФотоаппарат\t\t\t| $%d\nЦветы\t\t\t\t| $%d\nГазовый балончик\t\t| $%d\nМаска\t\t\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],
			BizzInfo[i][bTovar6],BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12]);
			SPDEx(playerid, 1947, 2, "Настройка цены", sstring, "Купить", "Отмена");
			return true;
		}
	case 1814:// Наручные Часы
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на рыбный суп должна быть от $1 до $499");
			BizzInfo[i][bTovar2] = summa;
			SaveMySQL(2,i);
			new sstring[470];
			format(sstring,sizeof(sstring), "Телефоный номер\t\t| $%d\nНаручные Часы\t\t| $%d\nПлэер\t\t\t\t| $%d\nЗажигалка\t\t\t| $%d\nСигареты\t\t\t| $%d\nТелефонная книга\t\t| $%d\nСправочник\t\t\t| $%d\nАптечки\t\t\t| $%d\nФотоаппарат\t\t\t| $%d\nЦветы\t\t\t\t| $%d\nГазовый балончик\t\t| $%d\nМаска\t\t\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],
			BizzInfo[i][bTovar6],BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12]);
			SPDEx(playerid, 1947, 2, "Настройка цены", sstring, "Купить", "Отмена");
			return true;
		}
	case 1815:// Плэер
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на большой бургер должна быть от $1 до $499");
			BizzInfo[i][bTovar3] = summa;
			SaveMySQL(2,i);
			new sstring[470];
			format(sstring,sizeof(sstring), "Телефоный номер\t\t| $%d\nНаручные Часы\t\t| $%d\nПлэер\t\t\t\t| $%d\nЗажигалка\t\t\t| $%d\nСигареты\t\t\t| $%d\nТелефонная книга\t\t| $%d\nСправочник\t\t\t| $%d\nАптечки\t\t\t| $%d\nФотоаппарат\t\t\t| $%d\nЦветы\t\t\t\t| $%d\nГазовый балончик\t\t| $%d\nМаска\t\t\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],
			BizzInfo[i][bTovar6],BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12]);
			SPDEx(playerid, 1947, 2, "Настройка цены", sstring, "Купить", "Отмена");
			return true;
		}
	case 1816:// Зажигалка
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на котлеты должна быть от $1 до $499");
			BizzInfo[i][bTovar4] = summa;
			SaveMySQL(2,i);
			new sstring[470];
			format(sstring,sizeof(sstring), "Телефоный номер\t\t| $%d\nНаручные Часы\t\t| $%d\nПлэер\t\t\t\t| $%d\nЗажигалка\t\t\t| $%d\nСигареты\t\t\t| $%d\nТелефонная книга\t\t| $%d\nСправочник\t\t\t| $%d\nАптечки\t\t\t| $%d\nФотоаппарат\t\t\t| $%d\nЦветы\t\t\t\t| $%d\nГазовый балончик\t\t| $%d\nМаска\t\t\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],
			BizzInfo[i][bTovar6],BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12]);
			SPDEx(playerid, 1947, 2, "Настройка цены", sstring, "Купить", "Отмена");
			return true;
		}
	case 1817:// Сигареты
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на пельмени должна быть от $1 до $499");
			BizzInfo[i][bTovar5] = summa;
			SaveMySQL(2,i);
			new sstring[470];
			format(sstring,sizeof(sstring), "Телефоный номер\t\t| $%d\nНаручные Часы\t\t| $%d\nПлэер\t\t\t\t| $%d\nЗажигалка\t\t\t| $%d\nСигареты\t\t\t| $%d\nТелефонная книга\t\t| $%d\nСправочник\t\t\t| $%d\nАптечки\t\t\t| $%d\nФотоаппарат\t\t\t| $%d\nЦветы\t\t\t\t| $%d\nГазовый балончик\t\t| $%d\nМаска\t\t\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],
			BizzInfo[i][bTovar6],BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12]);
			SPDEx(playerid, 1947, 2, "Настройка цены", sstring, "Купить", "Отмена");
			return true;
		}
	case 1818:// Телефонная книга
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на гамбургер должна быть от $1 до $499");
			BizzInfo[i][bTovar6] = summa;
			SaveMySQL(2,i);
			new sstring[470];
			format(sstring,sizeof(sstring), "Телефоный номер\t\t| $%d\nНаручные Часы\t\t| $%d\nПлэер\t\t\t\t| $%d\nЗажигалка\t\t\t| $%d\nСигареты\t\t\t| $%d\nТелефонная книга\t\t| $%d\nСправочник\t\t\t| $%d\nАптечки\t\t\t| $%d\nФотоаппарат\t\t\t| $%d\nЦветы\t\t\t\t| $%d\nГазовый балончик\t\t| $%d\nМаска\t\t\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],
			BizzInfo[i][bTovar6],BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12]);
			SPDEx(playerid, 1947, 2, "Настройка цены", sstring, "Купить", "Отмена");
			return true;
		}
	case 1819:// Справочник
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на гамбургер должна быть от $1 до $499");
			BizzInfo[i][bTovar7] = summa;
			SaveMySQL(2,i);
			new sstring[470];
			format(sstring,sizeof(sstring), "Телефоный номер\t\t| $%d\nНаручные Часы\t\t| $%d\nПлэер\t\t\t\t| $%d\nЗажигалка\t\t\t| $%d\nСигареты\t\t\t| $%d\nТелефонная книга\t\t| $%d\nСправочник\t\t\t| $%d\nАптечки\t\t\t| $%d\nФотоаппарат\t\t\t| $%d\nЦветы\t\t\t\t| $%d\nГазовый балончик\t\t| $%d\nМаска\t\t\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],
			BizzInfo[i][bTovar6],BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12]);
			SPDEx(playerid, 1947, 2, "Настройка цены", sstring, "Купить", "Отмена");
			return true;
		}
	case 1820:// Аптечки
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на гамбургер должна быть от $1 до $499");
			BizzInfo[i][bTovar8] = summa;
			SaveMySQL(2,i);
			new sstring[470];
			format(sstring,sizeof(sstring), "Телефоный номер\t\t| $%d\nНаручные Часы\t\t| $%d\nПлэер\t\t\t\t| $%d\nЗажигалка\t\t\t| $%d\nСигареты\t\t\t| $%d\nТелефонная книга\t\t| $%d\nСправочник\t\t\t| $%d\nАптечки\t\t\t| $%d\nФотоаппарат\t\t\t| $%d\nЦветы\t\t\t\t| $%d\nГазовый балончик\t\t| $%d\nМаска\t\t\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],
			BizzInfo[i][bTovar6],BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12]);
			SPDEx(playerid, 1947, 2, "Настройка цены", sstring, "Купить", "Отмена");
			return true;
		}
	case 1821:// Фотоаппарат
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на гамбургер должна быть от $1 до $499");
			BizzInfo[i][bTovar9] = summa;
			SaveMySQL(2,i);
			new sstring[470];
			format(sstring,sizeof(sstring), "Телефоный номер\t\t| $%d\nНаручные Часы\t\t| $%d\nПлэер\t\t\t\t| $%d\nЗажигалка\t\t\t| $%d\nСигареты\t\t\t| $%d\nТелефонная книга\t\t| $%d\nСправочник\t\t\t| $%d\nАптечки\t\t\t| $%d\nФотоаппарат\t\t\t| $%d\nЦветы\t\t\t\t| $%d\nГазовый балончик\t\t| $%d\nМаска\t\t\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],
			BizzInfo[i][bTovar6],BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12]);
			SPDEx(playerid, 1947, 2, "Настройка цены", sstring, "Купить", "Отмена");
			return true;
		}
	case 1822:// Цветы
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на гамбургер должна быть от $1 до $499");
			BizzInfo[i][bTovar10] = summa;
			SaveMySQL(2,i);
			new sstring[470];
			format(sstring,sizeof(sstring), "Телефоный номер\t\t| $%d\nНаручные Часы\t\t| $%d\nПлэер\t\t\t\t| $%d\nЗажигалка\t\t\t| $%d\nСигареты\t\t\t| $%d\nТелефонная книга\t\t| $%d\nСправочник\t\t\t| $%d\nАптечки\t\t\t| $%d\nФотоаппарат\t\t\t| $%d\nЦветы\t\t\t\t| $%d\nГазовый балончик\t\t| $%d\nМаска\t\t\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],
			BizzInfo[i][bTovar6],BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12]);
			SPDEx(playerid, 1947, 2, "Настройка цены", sstring, "Купить", "Отмена");
			return true;
		}
	case 1823:// Газовый балончик
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на гамбургер должна быть от $1 до $499");
			BizzInfo[i][bTovar11] = summa;
			SaveMySQL(2,i);
			new sstring[470];
			format(sstring,sizeof(sstring), "Телефоный номер\t\t| $%d\nНаручные Часы\t\t| $%d\nПлэер\t\t\t\t| $%d\nЗажигалка\t\t\t| $%d\nСигареты\t\t\t| $%d\nТелефонная книга\t\t| $%d\nСправочник\t\t\t| $%d\nАптечки\t\t\t| $%d\nФотоаппарат\t\t\t| $%d\nЦветы\t\t\t\t| $%d\nГазовый балончик\t\t| $%d\nМаска\t\t\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],
			BizzInfo[i][bTovar6],BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12]);
			SPDEx(playerid, 1947, 2, "Настройка цены", sstring, "Купить", "Отмена");
			return true;
		}
	case 1824:// Маска
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 1 || summa > 499) return SCM(playerid, COLOR_GREY, "Цена на гамбургер должна быть от $1 до $499");
			BizzInfo[i][bTovar12] = summa;
			SaveMySQL(2,i);
			new sstring[470];
			format(sstring,sizeof(sstring), "Телефоный номер\t\t| $%d\nНаручные Часы\t\t| $%d\nПлэер\t\t\t\t| $%d\nЗажигалка\t\t\t| $%d\nСигареты\t\t\t| $%d\nТелефонная книга\t\t| $%d\nСправочник\t\t\t| $%d\nАптечки\t\t\t| $%d\nФотоаппарат\t\t\t| $%d\nЦветы\t\t\t\t| $%d\nГазовый балончик\t\t| $%d\nМаска\t\t\t\t| $%d",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],
			BizzInfo[i][bTovar6],BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12]);
			SPDEx(playerid, 1947, 2, "Настройка цены", sstring, "Купить", "Отмена");
			return true;
		}
    case 2813:// Desert Eagle
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 10 || summa > 49) return SCM(playerid, COLOR_GREY, "Цена на Desert Eagle должна быть от $10 до $49");
			BizzInfo[i][bTovar1] = summa;
			SaveMySQL(2,i);
			new sstring[268];
			format(sstring,268, "- Desert Eagle\t\t[$%d]\n- Silenced 9mm\t\t[$%d]\n- Country Rifle\t\t[$%d]\n- Shotgun\t\t[$%d]\n- SMG\t\t\t[$%d]\n- AK47\t\t\t[$%d]\n- M4\t\t\t[$%d]\n- Tear Gas\t\t[$%d]\n- Golf Club\t\t[$%d]\n- Baseboll Bat\t\t[$%d]\n- Shovel\t\t[$%d]\n- Pool Cue\t\t[$%d]\n- Katana\t\t[$%d]",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4], BizzInfo[i][bTovar5],BizzInfo[i][bTovar6],
				BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12],BizzInfo[i][bTovar13]);
    		SPDEx(playerid, 2047, 2, "Настройка цены", sstring, "Выбрать", "Отмена");
			return true;
		}
	case 2814:// Silenced 9mm
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 10 || summa > 49) return SCM(playerid, COLOR_GREY, "Цена на Silenced 9mm должна быть от $10 до $49");
			BizzInfo[i][bTovar2] = summa;
			SaveMySQL(2,i);
			new sstring[268];
			format(sstring,268, "- Desert Eagle\t\t[$%d]\n- Silenced 9mm\t\t[$%d]\n- Country Rifle\t\t[$%d]\n- Shotgun\t\t[$%d]\n- SMG\t\t\t[$%d]\n- AK47\t\t\t[$%d]\n- M4\t\t\t[$%d]\n- Tear Gas\t\t[$%d]\n- Golf Club\t\t[$%d]\n- Baseboll Bat\t\t[$%d]\n- Shovel\t\t[$%d]\n- Pool Cue\t\t[$%d]\n- Katana\t\t[$%d]",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4], BizzInfo[i][bTovar5],BizzInfo[i][bTovar6],
				BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12],BizzInfo[i][bTovar13]);
   			SPDEx(playerid, 2047, 2, "Настройка цены", sstring, "Выбрать", "Отмена");
			return true;
		}
	case 2815:// Country Rifle
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 10 || summa > 49) return SCM(playerid, COLOR_GREY, "Цена на Country Rifle должна быть от $10 до $49");
			BizzInfo[i][bTovar3] = summa;
			SaveMySQL(2,i);
			new sstring[268];
			format(sstring,268, "- Desert Eagle\t\t[$%d]\n- Silenced 9mm\t\t[$%d]\n- Country Rifle\t\t[$%d]\n- Shotgun\t\t[$%d]\n- SMG\t\t\t[$%d]\n- AK47\t\t\t[$%d]\n- M4\t\t\t[$%d]\n- Tear Gas\t\t[$%d]\n- Golf Club\t\t[$%d]\n- Baseboll Bat\t\t[$%d]\n- Shovel\t\t[$%d]\n- Pool Cue\t\t[$%d]\n- Katana\t\t[$%d]",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4], BizzInfo[i][bTovar5],BizzInfo[i][bTovar6],
				BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12],BizzInfo[i][bTovar13]);
    		SPDEx(playerid, 2047, 2, "Настройка цены", sstring, "Выбрать", "Отмена");
			return true;
		}
	case 2816:// Shotgun
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 10 || summa > 49) return SCM(playerid, COLOR_GREY, "Цена на Shotgun должна быть от $10 до $49");
			BizzInfo[i][bTovar4] = summa;
			SaveMySQL(2,i);
			new sstring[268];
			format(sstring,268, "- Desert Eagle\t\t[$%d]\n- Silenced 9mm\t\t[$%d]\n- Country Rifle\t\t[$%d]\n- Shotgun\t\t[$%d]\n- SMG\t\t\t[$%d]\n- AK47\t\t\t[$%d]\n- M4\t\t\t[$%d]\n- Tear Gas\t\t[$%d]\n- Golf Club\t\t[$%d]\n- Baseboll Bat\t\t[$%d]\n- Shovel\t\t[$%d]\n- Pool Cue\t\t[$%d]\n- Katana\t\t[$%d]",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4], BizzInfo[i][bTovar5],BizzInfo[i][bTovar6],
				BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12],BizzInfo[i][bTovar13]);
    		SPDEx(playerid, 2047, 2, "Настройка цены", sstring, "Выбрать", "Отмена");
			return true;
		}
	case 2817:// SMG
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 10 || summa > 49) return SCM(playerid, COLOR_GREY, "Цена на SMG должна быть от $10 до $49");
			BizzInfo[i][bTovar5] = summa;
			SaveMySQL(2,i);
			new sstring[268];
			format(sstring,268, "- Desert Eagle\t\t[$%d]\n- Silenced 9mm\t\t[$%d]\n- Country Rifle\t\t[$%d]\n- Shotgun\t\t[$%d]\n- SMG\t\t\t[$%d]\n- AK47\t\t\t[$%d]\n- M4\t\t\t[$%d]\n- Tear Gas\t\t[$%d]\n- Golf Club\t\t[$%d]\n- Baseboll Bat\t\t[$%d]\n- Shovel\t\t[$%d]\n- Pool Cue\t\t[$%d]\n- Katana\t\t[$%d]",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4], BizzInfo[i][bTovar5],BizzInfo[i][bTovar6],
				BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12],BizzInfo[i][bTovar13]);
    		SPDEx(playerid, 2047, 2, "Настройка цены", sstring, "Выбрать", "Отмена");
			return true;
		}
	case 2818:// AK47
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 10 || summa > 49) return SCM(playerid, COLOR_GREY, "Цена на AK47 должна быть от $10 до $49");
			BizzInfo[i][bTovar6] = summa;
			SaveMySQL(2,i);
			new sstring[268];
			format(sstring,268, "- Desert Eagle\t\t[$%d]\n- Silenced 9mm\t\t[$%d]\n- Country Rifle\t\t[$%d]\n- Shotgun\t\t[$%d]\n- SMG\t\t\t[$%d]\n- AK47\t\t\t[$%d]\n- M4\t\t\t[$%d]\n- Tear Gas\t\t[$%d]\n- Golf Club\t\t[$%d]\n- Baseboll Bat\t\t[$%d]\n- Shovel\t\t[$%d]\n- Pool Cue\t\t[$%d]\n- Katana\t\t[$%d]",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4], BizzInfo[i][bTovar5],BizzInfo[i][bTovar6],
				BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12],BizzInfo[i][bTovar13]);
   			SPDEx(playerid, 2047, 2, "Настройка цены", sstring, "Выбрать", "Отмена");
			return true;
		}
	case 2819:// M4
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 10 || summa > 49) return SCM(playerid, COLOR_GREY, "Цена на M4 должна быть от $10 до $49");
			BizzInfo[i][bTovar7] = summa;
			SaveMySQL(2,i);
			new sstring[268];
			format(sstring,268, "- Desert Eagle\t\t[$%d]\n- Silenced 9mm\t\t[$%d]\n- Country Rifle\t\t[$%d]\n- Shotgun\t\t[$%d]\n- SMG\t\t\t[$%d]\n- AK47\t\t\t[$%d]\n- M4\t\t\t[$%d]\n- Tear Gas\t\t[$%d]\n- Golf Club\t\t[$%d]\n- Baseboll Bat\t\t[$%d]\n- Shovel\t\t[$%d]\n- Pool Cue\t\t[$%d]\n- Katana\t\t[$%d]",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4], BizzInfo[i][bTovar5],BizzInfo[i][bTovar6],
				BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12],BizzInfo[i][bTovar13]);
    		SPDEx(playerid, 2047, 2, "Настройка цены", sstring, "Выбрать", "Отмена");
			return true;
		}
	case 2820:// Tear Gas
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 10 || summa > 49) return SCM(playerid, COLOR_GREY, "Цена на Tear Gas должна быть от $10 до $49");
			BizzInfo[i][bTovar8] = summa;
			SaveMySQL(2,i);
			new sstring[268];
			format(sstring,268, "- Desert Eagle\t\t[$%d]\n- Silenced 9mm\t\t[$%d]\n- Country Rifle\t\t[$%d]\n- Shotgun\t\t[$%d]\n- SMG\t\t\t[$%d]\n- AK47\t\t\t[$%d]\n- M4\t\t\t[$%d]\n- Tear Gas\t\t[$%d]\n- Golf Club\t\t[$%d]\n- Baseboll Bat\t\t[$%d]\n- Shovel\t\t[$%d]\n- Pool Cue\t\t[$%d]\n- Katana\t\t[$%d]",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4], BizzInfo[i][bTovar5],BizzInfo[i][bTovar6],
				BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12],BizzInfo[i][bTovar13]);
   			SPDEx(playerid, 2047, 2, "Настройка цены", sstring, "Выбрать", "Отмена");
			return true;
		}
	case 2821:// Golf Club
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 10 || summa > 49) return SCM(playerid, COLOR_GREY, "Цена на Golf Club должна быть от $10 до $49");
			BizzInfo[i][bTovar9] = summa;
			SaveMySQL(2,i);
			new sstring[268];
			format(sstring,268, "- Desert Eagle\t\t[$%d]\n- Silenced 9mm\t\t[$%d]\n- Country Rifle\t\t[$%d]\n- Shotgun\t\t[$%d]\n- SMG\t\t\t[$%d]\n- AK47\t\t\t[$%d]\n- M4\t\t\t[$%d]\n- Tear Gas\t\t[$%d]\n- Golf Club\t\t[$%d]\n- Baseboll Bat\t\t[$%d]\n- Shovel\t\t[$%d]\n- Pool Cue\t\t[$%d]\n- Katana\t\t[$%d]",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4], BizzInfo[i][bTovar5],BizzInfo[i][bTovar6],
				BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12],BizzInfo[i][bTovar13]);
    		SPDEx(playerid, 2047, 2, "Настройка цены", sstring, "Выбрать", "Отмена");
			return true;
		}
	case 2822:// Baseboll Bat
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 10 || summa > 49) return SCM(playerid, COLOR_GREY, "Цена на Baseboll Bat должна быть от $10 до $49");
			BizzInfo[i][bTovar10] = summa;
			SaveMySQL(2,i);
			new sstring[268];
			format(sstring,268, "- Desert Eagle\t\t[$%d]\n- Silenced 9mm\t\t[$%d]\n- Country Rifle\t\t[$%d]\n- Shotgun\t\t[$%d]\n- SMG\t\t\t[$%d]\n- AK47\t\t\t[$%d]\n- M4\t\t\t[$%d]\n- Tear Gas\t\t[$%d]\n- Golf Club\t\t[$%d]\n- Baseboll Bat\t\t[$%d]\n- Shovel\t\t[$%d]\n- Pool Cue\t\t[$%d]\n- Katana\t\t[$%d]",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4], BizzInfo[i][bTovar5],BizzInfo[i][bTovar6],
				BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12],BizzInfo[i][bTovar13]);
    		SPDEx(playerid, 2047, 2, "Настройка цены", sstring, "Выбрать", "Отмена");
			return true;
		}
	case 2823:// Shovel
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 10 || summa > 49) return SCM(playerid, COLOR_GREY, "Цена на Shovel должна быть от $10 до $49");
			BizzInfo[i][bTovar11] = summa;
			SaveMySQL(2,i);
			new sstring[268];
			format(sstring,268, "- Desert Eagle\t\t[$%d]\n- Silenced 9mm\t\t[$%d]\n- Country Rifle\t\t[$%d]\n- Shotgun\t\t[$%d]\n- SMG\t\t\t[$%d]\n- AK47\t\t\t[$%d]\n- M4\t\t\t[$%d]\n- Tear Gas\t\t[$%d]\n- Golf Club\t\t[$%d]\n- Baseboll Bat\t\t[$%d]\n- Shovel\t\t[$%d]\n- Pool Cue\t\t[$%d]\n- Katana\t\t[$%d]",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4], BizzInfo[i][bTovar5],BizzInfo[i][bTovar6],
				BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12],BizzInfo[i][bTovar13]);
    		SPDEx(playerid, 2047, 2, "Настройка цены", sstring, "Выбрать", "Отмена");
			return true;
		}
	case 2824:// Pool Cue
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 10 || summa > 49) return SCM(playerid, COLOR_GREY, "Цена на Pool Cue должна быть от $10 до $49");
			BizzInfo[i][bTovar12] = summa;
			SaveMySQL(2,i);
			new sstring[268];
			format(sstring,268, "- Desert Eagle\t\t[$%d]\n- Silenced 9mm\t\t[$%d]\n- Country Rifle\t\t[$%d]\n- Shotgun\t\t[$%d]\n- SMG\t\t\t[$%d]\n- AK47\t\t\t[$%d]\n- M4\t\t\t[$%d]\n- Tear Gas\t\t[$%d]\n- Golf Club\t\t[$%d]\n- Baseboll Bat\t\t[$%d]\n- Shovel\t\t[$%d]\n- Pool Cue\t\t[$%d]\n- Katana\t\t[$%d]",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4], BizzInfo[i][bTovar5],BizzInfo[i][bTovar6],
				BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12],BizzInfo[i][bTovar13]);
    		SPDEx(playerid, 2047, 2, "Настройка цены", sstring, "Выбрать", "Отмена");
			return true;
		}
	case 2825:// Katana
		{
			if(!response) return true;
			new summa, i = PI[playerid][pPbiskey];
			summa = strval(inputtext);
			if(summa < 10 || summa > 49) return SCM(playerid, COLOR_GREY, "Цена на Katana должна быть от $10 до $49");
			BizzInfo[i][bTovar13] = summa;
			SaveMySQL(2,i);
			new sstring[268];
			format(sstring,268, "- Desert Eagle\t\t[$%d]\n- Silenced 9mm\t\t[$%d]\n- Country Rifle\t\t[$%d]\n- Shotgun\t\t[$%d]\n- SMG\t\t\t[$%d]\n- AK47\t\t\t[$%d]\n- M4\t\t\t[$%d]\n- Tear Gas\t\t[$%d]\n- Golf Club\t\t[$%d]\n- Baseboll Bat\t\t[$%d]\n- Shovel\t\t[$%d]\n- Pool Cue\t\t[$%d]\n- Katana\t\t[$%d]",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4], BizzInfo[i][bTovar5],BizzInfo[i][bTovar6],
				BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12],BizzInfo[i][bTovar13]);
    		SPDEx(playerid, 2047, 2, "Настройка цены", sstring, "Выбрать", "Отмена");
			return true;
		}
	case 1748:
		{
			if(!response) return true;
			new price, i = PI[playerid][pPbiskey];
			if(sscanf(inputtext, "i",price)) SPDEx(playerid, 1748, 1, "Цена", "Введите цену за вход от $1 до $5000:", "Принять", "Отмена");
			if(price < 1 || price > 5000) return SPDEx(playerid, 1748, 1, "Цена", "Введите цену за вход от $1 до $5000:", "Принять", "Отмена");
			BizzInfo[i][bEntranceCost] = price;
			format(YCMDstr, 256, "{FF4500}%s\n{008000}Владелец: %s\n{008080}Цена за вход: $%d\n\n{3CB371}Нажмите {00FF7F}<Alt> {3CB371}чтобы войти", BizzInfo[i][bMessage], BizzInfo[i][bOwner], BizzInfo[i][bEntranceCost]);
			Update3DTextLabelText(BizzInfo[i][bLabel], 0x00D900FF, YCMDstr);
			SendMes(playerid, COLOR_BLUE, "Вы установили цену за вход: %i", price);
			SaveMySQL(2,i);
			return true;
		}
	case 1749:
		{
			if(!response) return true;
			new test = 0;
			for(new idx=0, i=0; idx<cvector_size(players); idx++)
			{
				i = cvector_get(players, idx);
				if(PI[i][pJob] == 7) test++;
			}
			if(test > 0) return SCM(playerid,COLOR_GREY,"В данный момент на сервере присутствуют развозчики товаров");
			new i = PI[playerid][pPbiskey];
			if(strval(inputtext)+BizzInfo[i][bProducts] > 2000 && BizzInfo[i][bType] != 4 || strval(inputtext)+BizzInfo[i][bProducts] > 20000 && BizzInfo[i][bType] == 4) return SCM(playerid,COLOR_GREY,"Неверное кол-во");
			if(!strval(inputtext)) return SPDEx(playerid, 1749, 1, "Закупка товаров", "Введите кол-во товаров.\n\nПример: 1000.", "Принять", "Отмена");
			if(strval(inputtext) < 1) return SPDEx(playerid, 1749, 1, "Закупка товаров", "Введите кол-во товаров.\n\nПример: 1000.", "Принять", "Отмена");
			if(PI[playerid][pCash] < strval(inputtext)) return SCM(playerid,COLOR_GREY,"У Вас недостаточно налички для оплаты");
			BizzInfo[i][bProducts] += strval(inputtext);
			PI[playerid][pCash] -= strval(inputtext);
			SendMes(playerid, COLOR_BLUE, "Вы заказали %d товаров. Цена 1 товара - $10. Товары доставлены на склад.",strval(inputtext));
			SaveMySQL(2,i);
			return true;
		}
    case 1750:
		{
			if(response)
			{
				new moneyy = strval(inputtext);
				new bouse = PI[playerid][pPbiskey];
				if(bouse == 255) return SCM(playerid,COLOR_GREY,"У Вас нет бизнеса");
				if(moneyy < 1 && moneyy > BizzInfo[bouse][b2Till]) return SCMF(playerid,COLOR_GREY,"Нельзя взять меньше 1 и больше %d", BizzInfo[bouse][b2Till]);
				if(moneyy > BizzInfo[bouse][b2Till] || moneyy < 1)  return SCM(playerid, COLOR_GRAD2, "На счету бизнеса нет столько денег!");
				BizzInfo[bouse][b2Till] -= moneyy;
				PI[playerid][pCash] += moneyy;
				SCMF(playerid,COLOR_WHITE,"Вы сняли с счета $%d. В бизнесе осталось $%d.",moneyy,BizzInfo[bouse][b2Till]);
				SaveMySQL(6,bouse);
				return true;
			}
		}
	case 1751:
		{
			if(!response) return true;
			new test = 0;
			for(new idx=0, i=0; idx<cvector_size(players); idx++)
			{
				i = cvector_get(players, idx);
				if(PI[i][pJob] == 8) test++;
			}
			if(test > 0) return SCM(playerid,COLOR_GREY,"В данный момент на сервере присутствуют развозчики топлива");
			new i = PI[playerid][pPbiskey];
			if(strval(inputtext)+BizzInfo[i][bProducts] > 2000 && BizzInfo[i][bType] != 4 || strval(inputtext)+BizzInfo[i][bProducts] > 20000 && BizzInfo[i][bType] == 4) return SCM(playerid,COLOR_GREY,"Неверное кол-во");
			if(!strval(inputtext)) return SPDEx(playerid, 1751, 1, "Закупка топлива", "Введите кол-во л. топлива.\n\nПример: 1000.", "Принять", "Отмена");
			if(strval(inputtext) < 1) return SPDEx(playerid, 1751, 1, "Закупка топлива", "Введите кол-во л. топлива.\n\nПример: 1000.", "Принять", "Отмена");
			if(PI[playerid][pCash] < strval(inputtext)) return SCM(playerid,COLOR_GREY,"У Вас недостаточно налички для оплаты");
			BizzInfo[i][bProducts] += strval(inputtext);
			PI[playerid][pCash] -= strval(inputtext);
			SendMes(playerid, COLOR_BLUE, "Вы заказали %d л. топлива. Цена 1л. топлива - $10. Топливо доставлены на склад.",strval(inputtext));
			SaveMySQL(2,i);
			return true;
		}
	case 5300:
		{
			new house = PI[playerid][pPhousekey];
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						CallLocalFunction("OnPlayerCommandText", "is", playerid, "/buyinterior");
						return true;
					}
				case 1:
					{
						if(House[house][hLock] == 1)
						{
							House[house][hLock] = 0;
							GameTextForPlayer(playerid, "~w~House ~g~Unlocked", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							CallLocalFunction("OnPlayerCommandText", "is", playerid, "/hpanel");
							return true;
						}
						if(House[house][hLock] == 0)
						{
							House[house][hLock] = 1;
							GameTextForPlayer(playerid, "~w~House ~r~Locked", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							CallLocalFunction("OnPlayerCommandText", "is", playerid, "/hpanel");
							return true;
						}
					}
				case 2:
					{
						for(new i = 1; i <= TotalHouse; i++)
						{
							if(!PlayerToPoint(5, playerid,House[i][hExitx], House[i][hExity], House[i][hExitz])) continue;
							if(GetPlayerVirtualWorld(playerid) != i+50) continue;
							if(House[i][hHel] == 0) return SCM(playerid, COLOR_GRAD1, "В этом месте нет аптечек");
							if(PI[playerid][pHeal] == 1) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть аптечка. Введите /healme");
							House[i][hHel] -= 1;
							PI[playerid][pHeal] = 1;
							SCM(playerid, COLOR_WHITE, "Вы взяли одну аптечку. Введите /healme чтобы использовать аптечку.");
							format(YCMDstr, 50, "В доме осталось %d аптечек", House[i][hHel]);
							SCM(playerid, COLOR_BLUE, YCMDstr);
							SaveMySQL(3,i);
							return true;
						}
					}
				case 3:
					{
						new texts[500],deagle[50],sl[20],shot4[50],ak[20],m4[20],mp[20],rf[20];
						if(House[house][hGun][0] == 23 && House[house][hGunAmmo][0] > 0) { sl = "{2BE01B}Silenced"; } else { sl = "{F23030}Silenced"; }
						if(House[house][hGun][1] == 24 && House[house][hGunAmmo][1] > 0) { deagle = "{2BE01B}Deagle"; } else { deagle = "{F23030}Deagle"; }
						if(House[house][hGun][2] == 25 && House[house][hGunAmmo][2] > 0) { shot4 = "{2BE01B}Shotgun"; } else { shot4 = "{F23030}Shotgun"; }
						if(House[house][hGun][3] == 30 && House[house][hGunAmmo][3] > 0) { ak = "{2BE01B}AK-47"; } else { ak = "{F23030}AK-47"; }
						if(House[house][hGun][4] == 31 && House[house][hGunAmmo][4] > 0) { m4 = "{2BE01B}M4"; } else { m4 = "{F23030}M4"; }
						if(House[house][hGun][5] == 29 && House[house][hGunAmmo][5] > 0) { mp = "{2BE01B}MP5"; } else { mp = "{F23030}MP5"; }
						if(House[house][hGun][6] == 33 && House[house][hGunAmmo][6] > 0) { rf = "{2BE01B}Rifle"; } else { rf = "{F23030}Rifle"; }
						format(texts,500,"{EDDD2D}- Наркотики \t\t[%i/500 гр.]\n- %s \t\t[%d/999 пт.]\n- %s \t\t[%d/999 пт.]\n- %s \t\t[%d/999 пт.]\n- %s \t\t\t[%d/999 пт.]\n- %s \t\t\t[%d/999 пт.]\n- %s \t\t\t[%d/999 пт.]\n- %s \t\t\t[%d/999 пт.]\n{918F76}Положить всё оружие в сейф",
						House[house][hNarko],sl,House[house][hGunAmmo][0],deagle,House[house][hGunAmmo][1],shot4,House[house][hGunAmmo][2],ak,House[house][hGunAmmo][3],m4,House[house][hGunAmmo][4],mp,House[house][hGunAmmo][5],rf,House[house][hGunAmmo][6]);
						SPDEx(playerid, 5320, 2,"Сейф", texts, "Выбрать", "Отмена");
						return 1;
					}
				case 4: { SPDEx(playerid,5032,0,"Продажа дома","Вы действительно хотите продать дом?","Да","Нет"); }
				case 5: { SPDEx(playerid,1234,0,"Info","Вы действительно хотите продать свой транспорт\nБудет возвращено лишь 50% от стоимости траспорта.","Далее","Выйти"); }
				case 6: { ShowClothesShopDialogEx(playerid); }
				}
			}
			else
			{
				return true;
			}
		}
	case 5320:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						SPDEx(playerid, 5330, 2, "Наркотики", "- Взять\n- Положить", "Выбрать", "Отмена");
					}
				case 1:
					{
						if(!House[PI[playerid][pPhousekey]][hGun][0]) return SCM(playerid,COLOR_GRAD1,"В Вашем сейфe нет Silenced");
						SPDEx(playerid, 5321, DIALOG_STYLE_INPUT, "Сейф", "Введите сколько патронов Вы хотите взять:", "Взять","Отмена");
					}
				case 2:
					{
						if(!House[PI[playerid][pPhousekey]][hGun][1]) return SCM(playerid,COLOR_GRAD1,"В Вашем сейфe нет Deagle");
						SPDEx(playerid, 5327, DIALOG_STYLE_INPUT, "Сейф", "Введите сколько патронов Вы хотите взять:", "Взять","Отмена");
					}
				case 3:
					{
						if(!House[PI[playerid][pPhousekey]][hGun][2]) return SCM(playerid,COLOR_GRAD1,"В Вашем сейфe нет Shotgun");
						SPDEx(playerid, 5322, DIALOG_STYLE_INPUT, "Сейф", "Введите сколько патронов Вы хотите взять:", "Взять","Отмена");
					}
				case 4:
					{
						if(!House[PI[playerid][pPhousekey]][hGun][3]) return SCM(playerid,COLOR_GRAD1,"В Вашем сейфe нет AK-47");
						SPDEx(playerid, 5323, DIALOG_STYLE_INPUT, "Сейф", "Введите сколько патронов Вы хотите взять:", "Взять","Отмена");
					}
				case 5:
					{
						if(!House[PI[playerid][pPhousekey]][hGun][4]) return SCM(playerid,COLOR_GRAD1,"В Вашем сейфe нет M4");
						SPDEx(playerid, 5325, DIALOG_STYLE_INPUT, "Сейф", "Введите сколько патронов Вы хотите взять:", "Взять","Отмена");
					}
				case 6:
					{
						if(!House[PI[playerid][pPhousekey]][hGun][5]) return SCM(playerid,COLOR_GRAD1,"В Вашем сейфe нет MP5");
						SPDEx(playerid, 5326, DIALOG_STYLE_INPUT, "Сейф", "Введите сколько патронов Вы хотите взять:", "Взять","Отмена");
					}
				case 7:
					{
						if(!House[PI[playerid][pPhousekey]][hGun][6]) return SCM(playerid,COLOR_GRAD1,"В Вашем сейфe нет Rifle");
						SPDEx(playerid, 5328, DIALOG_STYLE_INPUT, "Сейф", "Введите сколько патронов Вы хотите взять:", "Взять","Отмена");
					}
				case 8:
					{
						if(GetPlayerWeapon(playerid))
						{
							new Weap[10];
							GetPlayerWeaponData(playerid, 2, Weap[0], Weap[1]);
							GetPlayerWeaponData(playerid, 3, Weap[2], Weap[3]);
							GetPlayerWeaponData(playerid, 5, Weap[4], Weap[5]);
							GetPlayerWeaponData(playerid, 4, Weap[6], Weap[7]);
							GetPlayerWeaponData(playerid, 6, Weap[8], Weap[9]);
							if(Weap[0] == 23)
							{
								if(Weap[1] + House[PI[playerid][pPhousekey]][hGunAmmo][0] > 999) return SCM(playerid,COLOR_GREY,"Нельзя ложить в сейф больше 999 патронов.");
								if(House[PI[playerid][pPhousekey]][hGunAmmo][0] + Weap[0] > 999) return SCM(playerid,COLOR_GREY,"Патроны от Silenced занимают много места в сейфе.");
								House[PI[playerid][pPhousekey]][hGun][0] = Weap[0];
								House[PI[playerid][pPhousekey]][hGunAmmo][0] += Weap[1];
								SCM(playerid,COLOR_BLUE,"Вы положили Silenced в сейф");
							}
							if(Weap[0] == 24)
							{
								if(Weap[1] + House[PI[playerid][pPhousekey]][hGunAmmo][1] > 999) return SCM(playerid,COLOR_GREY,"Нельзя ложить в сейф больше 999 патронов.");
								if(House[PI[playerid][pPhousekey]][hGunAmmo][1] + Weap[0] > 999) return SCM(playerid,COLOR_GREY,"Патроны от Deagle занимают много места в сейфе.");
								House[PI[playerid][pPhousekey]][hGun][1] = Weap[0];
								House[PI[playerid][pPhousekey]][hGunAmmo][1] += Weap[1];
								SCM(playerid,COLOR_BLUE,"Вы положили Deagle в сейф");
							}
							if(Weap[2] == 25)
							{
								if(Weap[3] + House[PI[playerid][pPhousekey]][hGunAmmo][2] > 999) return SCM(playerid,COLOR_GREY,"Нельзя ложить в сейф больше 999 патронов.");
								if(House[PI[playerid][pPhousekey]][hGunAmmo][2] + Weap[2] > 999) return SCM(playerid,COLOR_GREY,"Патроны от Shotgun занимают много места в сейфе.");
								House[PI[playerid][pPhousekey]][hGun][2] = Weap[2];
								House[PI[playerid][pPhousekey]][hGunAmmo][2] += Weap[3];
								SCM(playerid,COLOR_BLUE,"Вы положили Shotgun в сейф");
							}
							if(Weap[4] == 30)
							{
								if(Weap[5] + House[PI[playerid][pPhousekey]][hGunAmmo][3] > 999) return SCM(playerid,COLOR_GREY,"Нельзя ложить в сейф больше 999 патронов.");
								if(House[PI[playerid][pPhousekey]][hGunAmmo][3] + Weap[4] > 999) return SCM(playerid,COLOR_GREY,"Патроны от AK-47 занимают много места в сейфе.");
								House[PI[playerid][pPhousekey]][hGun][3] = Weap[4];
								House[PI[playerid][pPhousekey]][hGunAmmo][3] += Weap[5];
								SCM(playerid,COLOR_BLUE,"Вы положили AK-47 в сейф");
							}
							if(Weap[4] == 31)
							{
								if(Weap[5] + House[PI[playerid][pPhousekey]][hGunAmmo][4] > 999) return SCM(playerid,COLOR_GREY,"Нельзя ложить в сейф больше 999 патронов.");
								if(House[PI[playerid][pPhousekey]][hGunAmmo][4] + Weap[4] > 999) return SCM(playerid,COLOR_GREY,"Патроны от M4 занимают много места в сейфе.");
								House[PI[playerid][pPhousekey]][hGun][4] = Weap[4];
								House[PI[playerid][pPhousekey]][hGunAmmo][4] += Weap[5];
								SCM(playerid,COLOR_BLUE,"Вы положили M4 в сейф");
							}
							if(Weap[6] == 29)
							{
								if(Weap[7] + House[PI[playerid][pPhousekey]][hGunAmmo][5] > 999) return SCM(playerid,COLOR_GREY,"Нельзя ложить в сейф больше 999 патронов.");
								if(House[PI[playerid][pPhousekey]][hGunAmmo][5] + Weap[6] > 999) return SCM(playerid,COLOR_GREY,"Патроны от MP5 занимают много места в сейфе.");
								House[PI[playerid][pPhousekey]][hGun][5] = Weap[6];
								House[PI[playerid][pPhousekey]][hGunAmmo][5] += Weap[7];
								SCM(playerid,COLOR_BLUE,"Вы положили MP5 в сейф");
							}
							if(Weap[8] == 33)
							{
								if(Weap[9] + House[PI[playerid][pPhousekey]][hGunAmmo][6] > 999) return SCM(playerid,COLOR_GREY,"Нельзя ложить в сейф больше 999 патронов.");
								if(House[PI[playerid][pPhousekey]][hGunAmmo][6] + Weap[8] > 999) return SCM(playerid,COLOR_GREY,"Патроны от Rifle занимают много места в сейфе.");
								House[PI[playerid][pPhousekey]][hGun][6] = Weap[8];
								House[PI[playerid][pPhousekey]][hGunAmmo][6] += Weap[9];
								SCM(playerid,COLOR_BLUE,"Вы положили Rifle в сейф");
							}
							ResetPlayerWeapons(playerid);
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
	case 5321:
		{
			if(!response) return 1;
			new house = PI[playerid][pPhousekey];
			if(House[house][hGunAmmo][0] < strval(inputtext)) return SCM(playerid, -1, "В Вашем сейфе нет столько патронов");
			if(strval(inputtext) < 1 || strval(inputtext) > 999) return SCM(playerid, -1, "Нельзя брать меньше 1 и больше 999");
			_GiveGun(playerid, House[house][hGun][0], strval(inputtext));
			House[house][hGun][0] = 23; House[house][hGunAmmo][0] -= strval(inputtext);
			SCMF(playerid, COLOR_BLUE, "Вы успешно взяли Silenced с %i патронами", strval(inputtext));
			return 1;
		}
	case 5327:
		{
			if(!response) return 1;
			new house = PI[playerid][pPhousekey];
			if(House[house][hGunAmmo][1] < strval(inputtext)) return SCM(playerid, -1, "В Вашем сейфе нет столько патронов");
			if(strval(inputtext) < 1 || strval(inputtext) > 999) return SCM(playerid, -1, "Нельзя брать меньше 1 и больше 999");
			_GiveGun(playerid, House[house][hGun][1], strval(inputtext));
			House[house][hGun][1] = 24; House[house][hGunAmmo][1] -= strval(inputtext);
			SCMF(playerid, COLOR_BLUE, "Вы успешно взяли Deagle с %i патронами", strval(inputtext));
			return 1;
		}
	case 5322:
		{
			if(!response) return 1;
			new house = PI[playerid][pPhousekey];
			if(House[house][hGunAmmo][2] < strval(inputtext)) return SCM(playerid, -1, "В Вашем сейфу нет столько патронов");
			if(strval(inputtext) < 1 || strval(inputtext) > 999) return SCM(playerid, -1, "Нельзя брать меньше 1 и больше 999");
			_GiveGun(playerid, House[house][hGun][2], strval(inputtext));
			House[house][hGun][2] = 25; House[house][hGunAmmo][2] -= strval(inputtext);
			SCMF(playerid, COLOR_BLUE, "Вы успешно взяли Shotgun с %i патронами", strval(inputtext));
			return 1;
		}
	case 5323:
		{
			if(!response) return 1;
			new house = PI[playerid][pPhousekey];
			if(House[house][hGunAmmo][3] < strval(inputtext)) return SCM(playerid, -1, "В Вашем сейфу нет столько патронов");
			if(strval(inputtext) < 1 || strval(inputtext) > 999) return SCM(playerid, -1, "Нельзя брать меньше 1 и больше 999");
			_GiveGun(playerid, House[house][hGun][3], strval(inputtext));
			House[house][hGun][3] = 30; House[house][hGunAmmo][3] -= strval(inputtext);
			SCMF(playerid, COLOR_BLUE, "Вы успешно взяли AK-47 с %i патронами", strval(inputtext));
			return 1;
		}
	case 5325:
		{
			if(!response) return 1;
			new house = PI[playerid][pPhousekey];
			if(House[house][hGunAmmo][4] < strval(inputtext)) return SCM(playerid, -1, "В Вашем сейфе нет столько патронов");
			if(strval(inputtext) < 1 || strval(inputtext) > 999) return SCM(playerid, -1, "Нельзя брать меньше 1 и больше 999");
			_GiveGun(playerid, House[house][hGun][4], strval(inputtext));
			House[house][hGun][4] = 31; House[house][hGunAmmo][4] -= strval(inputtext);
			SCMF(playerid, COLOR_BLUE, "Вы успешно взяли M4 с %i патронами", strval(inputtext));
			return 1;
		}
	case 5326:
		{
			if(!response) return 1;
			new house = PI[playerid][pPhousekey];
			if(House[house][hGunAmmo][5] < strval(inputtext)) return SCM(playerid, -1, "В Вашем сейфе нет столько патронов");
			if(strval(inputtext) < 1 || strval(inputtext) > 999) return SCM(playerid, -1, "Нельзя брать меньше 1 и больше 999");
			_GiveGun(playerid, House[house][hGun][5], strval(inputtext));
			House[house][hGun][5] = 29; House[house][hGunAmmo][5] -= strval(inputtext);
			SCMF(playerid, COLOR_BLUE, "Вы успешно взяли MP5 с %i патронами", strval(inputtext));
			return 1;
		}
	case 5328:
		{
			if(!response) return 1;
			new house = PI[playerid][pPhousekey];
			if(House[house][hGunAmmo][6] < strval(inputtext)) return SCM(playerid, -1, "В Вашем сейфе нет столько патронов");
			if(strval(inputtext) < 1 || strval(inputtext) > 999) return SCM(playerid, -1, "Нельзя брать меньше 1 и больше 999");
			_GiveGun(playerid, House[house][hGun][6], strval(inputtext));
			House[house][hGun][6] = 33; House[house][hGunAmmo][6] -= strval(inputtext);
			SCMF(playerid, COLOR_BLUE, "Вы успешно взяли Rifle с %i патронами", strval(inputtext));
			return 1;
		}
	case 5330:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: SPDEx(playerid,5331,1,"Сейф","Укажите к-во наркотиков, которое Вы хотите взять из сейфа","Взять","Отмена");
				case 1: SPDEx(playerid,5332,1,"Сейф","Укажите к-во наркотиков, которое Вы хотите положить в сейф","Положить","Отмена");
				}
			}
			else
			{
				return true;
			}
		}
	case 5331:
		{
			if(!response) return true;
			new drug = strval(inputtext);
			new house = PI[playerid][pPhousekey];
			if(drug < 1 || drug > 500) return SCM(playerid,COLOR_GREY,"Вы не можете взять меньше 1 и больше 500 гр. наркотиков");
			else if(House[house][hNarko] < drug) return SCM(playerid,COLOR_GREY,"У Вас недостаточно наркотиков в сейфе");
			else
			{
				House[house][hNarko] -= drug;
				PI[playerid][pDrugs] += drug;
				SetHouse(House[house][hID], "hNarko", drug);
				SCMF(playerid, COLOR_BLUE, "Вы взяли %i гр. наркотиков.", strval(inputtext));
			}
		}
	case 5332:
		{
			if(response)
			{
				new drug = strval(inputtext);
				new house = PI[playerid][pPhousekey];
				if(drug < 1 || drug > 500) return SCM(playerid,COLOR_GREY,"Вы не можете положить меньше 1 и больше 500 гр. наркотиков в сейф");
				else if(PI[playerid][pDrugs] < drug) return SCM(playerid,COLOR_GREY,"У Вас недостаточно наркотиков");
				else if(House[house][hNarko] + drug > 500) return SCM(playerid,COLOR_GREY,"Недостаточно места в сейфе");
				else
				{
					House[house][hNarko] += drug;
					PI[playerid][pDrugs] -= drug;
					SetHouse(House[house][hID], "hNarko", drug);
					SCMF(playerid, COLOR_BLUE, "Вы положили %i гр. наркотиков.", strval(inputtext));
				}
			}
		}
	case 5301:
		{
			new hotel = PI[playerid][pPhotelkey];
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if(HotelInfo[hotel][oLock] == 1)
						{
							HotelInfo[hotel][oLock] = 0;
							GameTextForPlayer(playerid, "~g~Unlocked", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							CallLocalFunction("OnPlayerCommandText", "is", playerid, "/opanel");
							return true;
						}
						if(HotelInfo[hotel][oLock] == 0)
						{
							HotelInfo[hotel][oLock] = 1;
							GameTextForPlayer(playerid, "~r~Locked", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							CallLocalFunction("OnPlayerCommandText", "is", playerid, "/opanel");
							return true;
						}
					}
				case 1: { SPDEx(playerid,5033,0,"Выселение","Внимание! Вы хотите выселиться из номера отеля!\n\nЕсли Вы выселитесь, то деньги Вам не возвращаются.\nВыселиться?","Да","Нет"); }
				case 2: { SPDEx(playerid,1234,0,"Info","Вы действительно хотите продать свой транспорт\nБудет возвращено лишь 50% от стоимости траспорта.","Далее","Выйти"); }
				case 3:
					{
						if(PI[playerid][pDonateRank] >= 1)
						{
							ShowClothesShopDialogEx(playerid);
						}
						else
						{
							SCM(playerid, COLOR_GREY, "Вы не VIP игрок!");
							return true;
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
	case 115:
		{
			if(!response) return true;
			if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
			woodcutter[playerid] = true;
			Oldskin[playerid] = GetPlayerSkin(playerid);
			SetPlayerSkin(playerid, 133);
			new rand = random(sizeof(derevo));
			SetPlayerCheckpoint(playerid, derevo[rand][0], derevo[rand][1], derevo[rand][2],3.0);
			SCM(playerid, COLOR_BLUE, "{EEADDF}- {FFFFFF}Вы начали работу Лесоруба.");
			SCM(playerid, COLOR_BLUE, "{EEADDF}- {FFFFFF}На Вашей карте отмечено место для вырубки дерева.");
			ApplyAnimation(playerid,"CHAINSAW","WEAPON_csaw",4.1,1,0,0,0,1);
			ClearAnimations(playerid);
		}
	case 116:
		{
			if(!response) return true;
			woodcutter[playerid] = false;
			SetPlayerSkin(playerid,Oldskin[playerid]);
			DisablePlayerCheckpoint(playerid);
			format(YCMDstr,128, "{FFFFFF}Вы заработали{008080} $%d {FFFFFF}за вырубку{008080} %d {FFFFFF}кг древисины.",kgcutt[playerid]*5,kgcutt[playerid]);
			SCM(playerid, COLOR_SYSTEM, YCMDstr);
			GiveMoney(playerid, kgcutt[playerid]*5);
			if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
			if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
			if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid,3);
			kgcutt[playerid] = 0;
		}
	case 1948:
		{
			new newcar = GetPlayerVehicleID(playerid);
			if(response)
			{
				format(YCMDstr, 256, "{2842c7}Машина:\t\t%s\n{28c7ae}Номер модели:\t%i\n{c73628}Стоимость покупки:\t$%i{00BF00}\n\nДля покупки транспорта, нажмите \"Купить\"",VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400], GetVehicleModel(GetPlayerVehicleID(playerid)), PriceCar(newcar));
				SPDEx(playerid, 1949, 0,"{ff9900}Авторынок",YCMDstr,"Купить","Выйти");
				TogglePlayerControllable(playerid, 0);
			}
			else
			{
				format(YCMDstr, 256, "{2842c7}Машина:\t\t%s\n{28c7ae}Номер модели:\t%i\n{c73628}Стоимость покупки:\t$%i{00BF00}\n\nДля покупки транспорта, нажмите \"Купить\"",VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400], GetVehicleModel(GetPlayerVehicleID(playerid)), PriceCar(newcar));
				SPDEx(playerid, 1950, 0,"{ff9900}Авторынок",YCMDstr,"Купить","Выйти");
				TogglePlayerControllable(playerid, 0);
			}
		}
	case 1949:
		{
			if(!response) return RemovePlayerFromVehicle(playerid),TogglePlayerControllable(playerid, 1);
			if(PI[playerid][pCash] < PriceCar(GetPlayerVehicleID(playerid)))
			{
				SCMF(playerid, COLOR_WHITE, "У Вас недостаточно денег!", PriceCar(GetPlayerVehicleID(playerid)));
				RemovePlayerFromVehicleAC(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
			new vehicleid = GetPlayerVehicleID(playerid);
			if(GetPVarInt(playerid, "CarID") != GetVehicleModel(vehicleid))
			{
			    RemovePlayerFromVehicleAC(playerid);
				TogglePlayerControllable(playerid, 1);
				SCM(playerid,COLOR_GREY,"Ошибка!");
			    return true;
			}
			if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_WHITE,"Вы не в транспорте");
			if(PI[playerid][pPhousekey] == 999 && PI[playerid][pPhotelkey] == 999) return SCM(playerid, -1, "Для покупки машины нужно иметь место проживания!"), RemovePlayerFromVehicleAC(playerid),TogglePlayerControllable(playerid, 1);
			PI[playerid][pColor][0] = 0;
			PI[playerid][pColor][1] = 0;
			PI[playerid][pCar1] = GetPVarInt(playerid, "CarID");
			PI[playerid][pProcents] = 100;
			PI[playerid][pCash] -= PriceCar(GetPlayerVehicleID(playerid));
			PI[playerid][pFuelcar] = 100;
			CompVehDel(playerid);
			SCM(playerid,COLOR_LIGHTGREEN,"Поздравляем с покупкой новой машины. {FFFFFF}Обновить машину к дому: /fixcar | К отелю: /dostcar");
			RemovePlayerFromVehicleAC(playerid);
			TogglePlayerControllable(playerid, 1);
			return true;
		}
	case 1950:
		{
			if(!response) return RemovePlayerFromVehicle(playerid),TogglePlayerControllable(playerid, 1);
			if(PI[playerid][pCash] < PriceCar(GetPlayerVehicleID(playerid)))
			{
				SCMF(playerid, COLOR_WHITE, "У Вас недостаточно денег!", PriceCar(GetPlayerVehicleID(playerid)));
				RemovePlayerFromVehicleAC(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
			new vehicleid = GetPlayerVehicleID(playerid);
			if(GetPVarInt(playerid, "CarID") != GetVehicleModel(vehicleid))
			{
			    RemovePlayerFromVehicleAC(playerid);
				TogglePlayerControllable(playerid, 1);
				SCM(playerid,COLOR_GREY,"Ошибка!");
			    return true;
			}
   			if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_WHITE,"Вы не в транспорте");
			if(PI[playerid][pPhousekey] == 999 && PI[playerid][pPhotelkey] == 999) return SCM(playerid, -1, "Для покупки машины нужно иметь место проживания!"), RemovePlayerFromVehicleAC(playerid),TogglePlayerControllable(playerid, 1);
			PI[playerid][pColor1][0] = 0;
			PI[playerid][pColor1][1] = 0;
			PI[playerid][pCar2] = GetPVarInt(playerid, "CarID");
			PI[playerid][pProcents2] = 100;
			PI[playerid][pCash] -= PriceCar(GetPlayerVehicleID(playerid));
			PI[playerid][pFuelcar1] = 100;
			CompVehDel1(playerid);
			SCM(playerid,COLOR_LIGHTGREEN,"Поздравляем с покупкой новой машины. {FFFFFF}Обновить машину к дому: /fixcar | К отелю: /dostcar");
			RemovePlayerFromVehicleAC(playerid);
			TogglePlayerControllable(playerid, 1);
			return true;
		}
	case 1234:
		{
			if(response)
			{
			    if(GetPVarInt(playerid,"SellCar") == 1) return SCM(playerid,COLOR_GREY,"Вы уже продаёте транспорт игроку!");
				format(YCMDstr, 100,"[1] %s\n[2] %s",VehicleNames[PI[playerid][pCar1]-400],VehicleNames[PI[playerid][pCar2]-400]);
				SPDEx(playerid, 1235, 2,"Личный транспорт",YCMDstr,"Выбор","Отмена");
			}
			else
			{
				return true;
			}
		}
	case 1235:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if(PI[playerid][pCar1] == 462) return SCM(playerid,0xB4B5B7FF,"{FFFFFF}Вы не можете продать мопед!");
						SPDEx(playerid, 45, 0,"{FFFFFF}Продажа транспорта","{FFFFFF}Вы действительно хотите продать свой транспорт\nБудет возвращено лишь 50% от стоимости траспорта.","Выбрать","Закрыть");
					}
				case 1:
					{
						if(PI[playerid][pCar2] == 462) return SCM(playerid,0xB4B5B7FF,"{FFFFFF}Вы не можете продать мопед!");
						SPDEx(playerid, 46, 0,"{FFFFFF}Продажа транспорта","{FFFFFF}Вы действительно хотите продать свой транспорт\nБудет возвращено лишь 50% от стоимости траспорта.","Выбрать","Закрыть");
					}
				}
			}
		}
	case 45:
		{
			if(response)
			{
				new caren = PI[playerid][pCar1];
				if(caridhouse[playerid][0] == 0) return SCM(playerid,COLOR_RED, "У Вас нет автомобиля");
				switch(caren)
				{
				case 400:PI[playerid][pBank] += 82500;	case 404:PI[playerid][pBank] += 9750;
				case 589:PI[playerid][pBank] += 175000;	case 603:PI[playerid][pBank] += 197500;
				case 418:PI[playerid][pBank] += 72500;	case 466:PI[playerid][pBank] += 12000;
				case 475:PI[playerid][pBank] += 41000;	case 586:PI[playerid][pBank] += 40500;
				case 401:PI[playerid][pBank] += 32000;	case 492:PI[playerid][pBank] += 17500;
				case 516:PI[playerid][pBank] += 21500;	case 517:PI[playerid][pBank] += 11500;
				case 426:PI[playerid][pBank] += 65000;	case 526:PI[playerid][pBank] += 41000;
				case 527:PI[playerid][pBank] += 43100; 	case 542:PI[playerid][pBank] += 7500;
				case 543:PI[playerid][pBank] += 8000;	case 546:PI[playerid][pBank] += 60500;
				case 547:PI[playerid][pBank] += 62500;	case 549:PI[playerid][pBank] += 10050;
				case 567:PI[playerid][pBank] += 95000;	case 421:PI[playerid][pBank] += 62000;
				case 576:PI[playerid][pBank] += 115000; case 415:PI[playerid][pBank] += 650000;
				case 600:PI[playerid][pBank] += 9600;	case 585:PI[playerid][pBank] += 58000;
				case 533:PI[playerid][pBank] += 120000;	case 534:PI[playerid][pBank] += 140000;
				case 579:PI[playerid][pBank] += 107000;	case 602:PI[playerid][pBank] += 140000;
				case 506:PI[playerid][pBank] += 380000; case 521:PI[playerid][pBank] += 81000;
				case 468:PI[playerid][pBank] += 28000;	case 451:PI[playerid][pBank] += 1050000;
				case 402:PI[playerid][pBank] += 425000;	case 535:PI[playerid][pBank] += 12050;
				case 480:PI[playerid][pBank] += 397500;	case 581:PI[playerid][pBank] += 61500;
				case 545:PI[playerid][pBank] += 7600;	case 559:PI[playerid][pBank] += 329500;
				case 405:PI[playerid][pBank] += 51000;	case 412:PI[playerid][pBank] += 120000;
				case 422:PI[playerid][pBank] += 11850;	case 565:PI[playerid][pBank] += 321000;
				case 467:PI[playerid][pBank] += 15750;	case 474:PI[playerid][pBank] += 8650;
				case 496:PI[playerid][pBank] += 110000;	case 463:PI[playerid][pBank] += 49000;
				case 529:PI[playerid][pBank] += 18800;	case 536:PI[playerid][pBank] += 76000;
				case 540:PI[playerid][pBank] += 67000;	case 550:PI[playerid][pBank] += 63000;
				case 575:PI[playerid][pBank] += 20500;	case 560:PI[playerid][pBank] += 295000;
				case 562:PI[playerid][pBank] += 152500;	case 587:PI[playerid][pBank] += 262500;
				case 541:PI[playerid][pBank] += 775000; case 477:PI[playerid][pBank] += 405000;
				case 429:PI[playerid][pBank] += 365000; case 500:PI[playerid][pBank] += 57500;
				case 566:PI[playerid][pBank] += 83500; case 580:PI[playerid][pBank] += 125000;
				case 522:PI[playerid][pBank] += 160000; case 424:PI[playerid][pBank] += 450000;
				case 444:PI[playerid][pBank] += 575000; case 494:PI[playerid][pBank] += 750000;
				case 495:PI[playerid][pBank] += 1000000; case 553:PI[playerid][pBank] += 2500000;
				case 411:PI[playerid][pBank] += 1500000; case 571:PI[playerid][pBank] += 400000;
				case 471:PI[playerid][pBank] += 400000; case 510:PI[playerid][pBank] += 250000;
				case 483:PI[playerid][pBank] += 250000; case 476:PI[playerid][pBank] += 1500000;
				case 568:PI[playerid][pBank] += 500000; case 531:PI[playerid][pBank] += 250000;
				case 573:PI[playerid][pBank] += 2500000; case 469:PI[playerid][pBank] += 2500000;
				case 513:PI[playerid][pBank] += 1500000; case 512:PI[playerid][pBank] += 1500000;
				case 511:PI[playerid][pBank] += 1500000; case 519:PI[playerid][pBank] += 2500000;
				case 487:PI[playerid][pBank] += 1500000;
				}
				CompVehDel(playerid);
				PI[playerid][pProcents] = 100;
				format(YCMDstr, 85, "Вы продали свой автомобиль. На Ваш банковский счет были переведены денежные средства");
				SCM(playerid, COLOR_WHITE, YCMDstr);
				PI[playerid][pCar1] = 462;
				PI[playerid][pColor][0] = 0;
				PI[playerid][pColor][1] = 0;
				if(caridhouse[playerid][0] != 0) { DestroyVehicle(caridhouse[playerid][0]); caridhouse[playerid][0] = 0; }
				caridhouse[playerid][0] = CreateVehicle(PI[playerid][pCar1], 2490.7903,-2561.9753,2500.7900,89.3196, PI[playerid][pColor][0] ,PI[playerid][pColor][1], 86400);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 46:
		{
			if(response)
			{
				new caren = PI[playerid][pCar2];
				if(caridhouse[playerid][1] == 0) return SCM(playerid,COLOR_RED, "У Вас нет автомобиля");
				switch(caren)
				{
				case 400:PI[playerid][pBank] += 82500;	case 404:PI[playerid][pBank] += 9750;
				case 589:PI[playerid][pBank] += 175000;	case 603:PI[playerid][pBank] += 197500;
				case 418:PI[playerid][pBank] += 72500;	case 466:PI[playerid][pBank] += 12000;
				case 475:PI[playerid][pBank] += 41000;	case 586:PI[playerid][pBank] += 40500;
				case 401:PI[playerid][pBank] += 32000;	case 492:PI[playerid][pBank] += 17500;
				case 516:PI[playerid][pBank] += 21500;	case 517:PI[playerid][pBank] += 11500;
				case 426:PI[playerid][pBank] += 65000;	case 526:PI[playerid][pBank] += 41000;
				case 527:PI[playerid][pBank] += 43100; 	case 542:PI[playerid][pBank] += 7500;
				case 543:PI[playerid][pBank] += 8000;	case 546:PI[playerid][pBank] += 60500;
				case 547:PI[playerid][pBank] += 62500;	case 549:PI[playerid][pBank] += 10050;
				case 567:PI[playerid][pBank] += 95000;	case 421:PI[playerid][pBank] += 62000;
				case 576:PI[playerid][pBank] += 115000; case 415:PI[playerid][pBank] += 650000;
				case 600:PI[playerid][pBank] += 9600;	case 585:PI[playerid][pBank] += 58000;
				case 533:PI[playerid][pBank] += 120000;	case 534:PI[playerid][pBank] += 140000;
				case 579:PI[playerid][pBank] += 107000;	case 602:PI[playerid][pBank] += 140000;
				case 506:PI[playerid][pBank] += 380000; case 521:PI[playerid][pBank] += 81000;
				case 468:PI[playerid][pBank] += 28000;	case 451:PI[playerid][pBank] += 1050000;
				case 402:PI[playerid][pBank] += 425000;	case 535:PI[playerid][pBank] += 12050;
				case 480:PI[playerid][pBank] += 397500;	case 581:PI[playerid][pBank] += 61500;
				case 545:PI[playerid][pBank] += 7600;	case 559:PI[playerid][pBank] += 329500;
				case 405:PI[playerid][pBank] += 51000;	case 412:PI[playerid][pBank] += 120000;
				case 422:PI[playerid][pBank] += 11850;	case 565:PI[playerid][pBank] += 321000;
				case 467:PI[playerid][pBank] += 15750;	case 474:PI[playerid][pBank] += 8650;
				case 496:PI[playerid][pBank] += 110000;	case 463:PI[playerid][pBank] += 49000;
				case 529:PI[playerid][pBank] += 18800;	case 536:PI[playerid][pBank] += 76000;
				case 540:PI[playerid][pBank] += 67000;	case 550:PI[playerid][pBank] += 63000;
				case 575:PI[playerid][pBank] += 20500;	case 560:PI[playerid][pBank] += 295000;
				case 562:PI[playerid][pBank] += 152500;	case 587:PI[playerid][pBank] += 262500;
				case 541:PI[playerid][pBank] += 775000; case 477:PI[playerid][pBank] += 405000;
				case 429:PI[playerid][pBank] += 365000; case 500:PI[playerid][pBank] += 57500;
				case 566:PI[playerid][pBank] += 83500; case 580:PI[playerid][pBank] += 125000;
				case 522:PI[playerid][pBank] += 160000; case 424:PI[playerid][pBank] += 450000;
				case 444:PI[playerid][pBank] += 575000; case 494:PI[playerid][pBank] += 750000;
				case 495:PI[playerid][pBank] += 1000000; case 553:PI[playerid][pBank] += 2500000;
				case 411:PI[playerid][pBank] += 1500000; case 571:PI[playerid][pBank] += 400000;
				case 471:PI[playerid][pBank] += 400000; case 510:PI[playerid][pBank] += 250000;
				case 483:PI[playerid][pBank] += 250000; case 476:PI[playerid][pBank] += 1500000;
				case 568:PI[playerid][pBank] += 500000; case 531:PI[playerid][pBank] += 250000;
				case 573:PI[playerid][pBank] += 2500000; case 469:PI[playerid][pBank] += 2500000;
				case 513:PI[playerid][pBank] += 1500000; case 512:PI[playerid][pBank] += 1500000;
				case 511:PI[playerid][pBank] += 1500000; case 519:PI[playerid][pBank] += 2500000;
				case 487:PI[playerid][pBank] += 1500000;
				}
				CompVehDel1(playerid);
				PI[playerid][pProcents2] = 100;
				format(YCMDstr, 85, "Вы продали свой автомобиль. На Ваш банковский счет были переведены денежные средства");
				SCM(playerid, COLOR_WHITE, YCMDstr);
				PI[playerid][pCar2] = 462;
				PI[playerid][pColor1][0] = 0;
				PI[playerid][pColor1][1] = 0;
				if(caridhouse[playerid][1] != 0) { DestroyVehicle(caridhouse[playerid][1]); caridhouse[playerid][1] = 0; }
				caridhouse[playerid][1] = CreateVehicle(PI[playerid][pCar2], 2490.7903,-2561.9753,2500.7900,89.3196, PI[playerid][pColor1][0] ,PI[playerid][pColor1][1], 86400);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 1994:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: ClearAnimations(playerid);
			case 1: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE1);
			case 2: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE2);
			case 3: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE3);
			case 4: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE4);
			case 5: GoAnim(playerid,"DEALER","Dealer_idle",4.1,1,0,0,0,0,0);
			case 6: ApplyAnimation(playerid,"DEALER","Dealer_Deal",4.1,0,0,0,0,0,1);
			case 7: ApplyAnimation(playerid,"FOOD","Eat_Burger",4.1,0,0,0,0,0,1);
			case 8: ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,0,0,0,0,1);
			case 9: GoAnim(playerid,"PARK","Tai_Chi_Loop",4.1,1,0,0,0,0,0);
			case 10: GoAnim(playerid,"CRACK","Crckidle1",4.1,1,0,0,0,0,0);
			case 11: GoAnim(playerid,"CRACK","Crckidle2",4.1,1,0,0,0,0,0);
			case 12: GoAnim(playerid,"CRACK","Crckidle4",4.1,1,0,0,0,0,0);
			case 13: ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,0,0,0,0,1);
			case 14: GoAnim(playerid,"SPRAYCAN","spraycan_full",4.1,1,0,0,0,0,0);
			case 15: GoAnim(playerid,"GRAFFITI","spraycan_fire",4.1,1,0,0,0,0,0);
			case 16: GoAnim(playerid,"SMOKING","M_smkstnd_loop",4.1,1,0,0,0,0,0);
			case 17: GoAnim(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,0,0,0);
			case 18: ApplyAnimation(playerid,"SHOP","ROB_shifty",4.1,0,0,0,0,0,1);
			case 19: GoAnim(playerid,"SHOP","SHP_Rob_HandsUP",4.1,1,0,0,0,0,0);
			case 20: GoAnim(playerid,"RYDER","Ryd_Beckon_02",4.1,1,0,0,0,0,0);
			case 21: ApplyAnimation(playerid,"RIOT","Riot_Angry",4.1,0,0,0,0,0,0);
			case 22: GoAnim(playerid,"RIOT","Riot_Angry_B",4.1,1,0,0,0,0,0);
			case 23: GoAnim(playerid,"RIOT","Riot_Chant",4.1,1,1,0,0,0,0);
			case 24: GoAnim(playerid,"RIOT","Riot_Punches",4.1,1,0,0,0,0,0);
			case 25: ApplyAnimation(playerid,"PED","fucku",4.1,0,0,0,0,0,1);
			case 26: ApplyAnimation(playerid,"BAR","dnK_StndM_loop",4.1,0,0,0,0,0,1);
			case 27: GoAnim(playerid,"BD_FIRE","BD_Panic_03",4.1,1,0,0,0,0,0);
			case 28: GoAnim(playerid,"BD_FIRE","M_smklean_loop",4.1,1,0,0,0,0,0);
			case 29: GoAnim(playerid,"BEACH","bather",4.1,1,0,0,0,0,0);
			case 30: GoAnim(playerid,"BEACH","Lay_Bac_loop",4.1,1,0,0,0,0,0);
			case 31: GoAnim(playerid,"BEACH","Parksit_w_loop",4.1,1,0,0,0,0,0);
			case 32: GoAnim(playerid,"BEACH","Sitnwait_Loop_W",4.1,1,0,0,0,0,0);
			case 33: GoAnim(playerid,"BEACH","Parksit_M_loop",4.1,1,0,0,0,0,0);
			case 34: GoAnim(playerid,"benchpress","gym_bp_celebrate",4.1,1,0,0,0,0,0);
			case 35: GoAnim(playerid,"LOWRIDER","Rap_C_loop",4.1,1,0,0,0,0,0);
			case 36: GoAnim(playerid,"LOWRIDER","Rap_B_loop",4.1,1,0,0,0,0,0);
			case 37: GoAnim(playerid,"LOWRIDER","Rap_A_loop",4.1,1,0,0,0,0,0);
			case 38: GoAnim(playerid,"BSKTBALL","BBALL_idleloop",4.1,1,0,0,0,0,0);
			case 39: ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,0,0,0,0,1);
			case 40: ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,0,0,0,0,1);
			case 41: ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,0,0,0,0,1);
			case 42: GoAnim(playerid,"CAR","fixn_car_loop",4.1,1,0,0,0,0,0);
			case 43: GoAnim(playerid,"CAR_CHAT","car_talkm_loop",4.1,1,0,0,0,0,0);
			case 44: GoAnim(playerid,"COP_AMBIENT","coplook_loop",4.1,1,0,0,0,0,0);
			case 45: GoAnim(playerid,"CRACK","Bbalbat_Idle_01",4.1,1,0,0,0,0,0);
			case 46: GoAnim(playerid,"CRACK","Bbalbat_Idle_02",4.1,1,0,0,0,0,0);
			case 47: ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,0,0,0,0,1);
			case 48: ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,0,0,0,0,1);
			case 49: ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,0,0,0,0,1);
			case 50: ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,0,0,0,0,1);
			case 51: ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,0,0,0,0,1);
			case 52: ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,0,0,0,0,1);
			case 53: ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,0,0,0,0,1);
			case 54: ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,0,0,0,0,1);
			case 55: GoAnim(playerid,"GRAVEYARD","mrnF_loop",4.1,1,0,0,0,0,0);
			case 56: GoAnim(playerid,"MISC","seat_LR",4.1,1,0,0,0,0,0);
			case 57: GoAnim(playerid,"INT_HOUSE","Lou_in",4.1,0,1,1,1,1,0);
			case 58: GoAnim(playerid,"INT_OFFICE","OFF_sit_Bored_loop",4.1,1,0,0,0,0,0);
			case 59: GoAnim(playerid,"LOWRIDER","F_smklean_loop",4.1,1,0,0,0,0,0);
			case 60: ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0,1);
			case 61: GoAnim(playerid,"GANGS","LeanIn",4.1,0,1,1,1,1,0);
			case 62: GoAnim(playerid,"MISC","plyrlean_loop",4.1,1,0,0,0,0,0);
			case 63: ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
			case 64: GoAnim(playerid,"MISC","scratchballs_01",4.1,1,0,0,0,0,0);
			}
			return true;
		}
	case 8999:
		{
			if(!response) return DeletePVar(playerid, "podeezd");
			if(listitem == 0)
			{
				if(PI[playerid][pPhotelkey] != 999)
				{
					CallLocalFunction("OnPlayerCommandText", "is", playerid, "/dostcar");
				}
				else return SCM(playerid, COLOR_RED, "У Вас нет номера в отеле");
			}
			else
			{
				new i = GetPVarInt(playerid, "podeezd");
				SetPlayerPos(playerid, 2268.6372,1647.5212,1084.2344);
				SetPlayerVirtualWorld(playerid,PodeezdInfo[i][podMir][listitem]);
				SetPlayerInterior(playerid,1);
			}
			return true;
		}
	case 13997:
		{
			if(!response) return true;
			if(PI[playerid][pBSA] >= 6)
			{
				new mess[60];
				format(mess, sizeof(mess), "/kick %d %s",SpecAd[playerid],inputtext);
				CallLocalFunction("OnPlayerCommandText", "is", playerid, mess);
			}
		}
	case 13998:
		{
			if(!response) return true;
			if(PI[playerid][pBSA] >= 10)
			{
				new mess[60];
				format(mess, sizeof(mess), "/warn %d %s",SpecAd[playerid],inputtext);
				CallLocalFunction("OnPlayerCommandText", "is", playerid, mess);
			}
		}
	case 13999:
		{
			if(!response) return true;
			if(PI[playerid][pBSA] >= 13)
			{
				new mess[60];
				format(mess, sizeof(mess), "/ban %d %s",SpecAd[playerid],inputtext);
				CallLocalFunction("OnPlayerCommandText", "is", playerid, mess);
			}
		}
	case 10399:
		{
			if(response)
			{
				format(YCMDstr,60,"Вешалка 1 [%d]\nВешалка 2 [%d]\nВешалка 3 [%d]",PI[playerid][pChar][0],PI[playerid][pChar][1],PI[playerid][pChar][2]);
				if(PI[playerid][pViborChar] == listitem) return SCM(playerid,COLOR_GREY,"На Вас уже надет скин с данной вешалки"), SPDEx(playerid,10399,2, "Гардероб",YCMDstr, "Одеть", "Выход");
				PI[playerid][pViborChar] = listitem;
				SetPlayerSkin(playerid,PI[playerid][pChar][PI[playerid][pViborChar]]);
				SPDEx(playerid,10399,2, "Гардероб",YCMDstr, "Одеть", "Выход");
			}
			else
			{
				SpawnPlayer(playerid);
			}
		}
	case 10:
		{
			if(!response) return true;
			if(PI[playerid][pMuted] == 1) return SCM(playerid, 0xFF6347AA, "У Вас бан чата");
			if(GetPVarInt(playerid, "AntiReport") != 0) return SCM(playerid,COLOR_GREY,"Писать в репорт можно раз в 30 секунд");
			if(!strlen(inputtext) || strlen(inputtext) > 70) return SPDEx(playerid,10,1, "Связь с Администрацией", "Напишите вопрос/жалобу для Администрации сервера.\nПри написании жалобы на игрока, обязательно указывайте ID нарушителя и причину!", "Отправить", "Отмена");
			format(YCMDstr,128, "Жалоба от %s[%d]: %s", Name(playerid), playerid, (inputtext));
			SCM(playerid, COLOR_YELLOW, YCMDstr);
			SCM(playerid, COLOR_LIGHTRED, "Ваша жалоба была отправлена Администрации. Вам ответят в ближайшее время!");
			format(YCMDstr,128, "{FF0000}< Репорт > %s[%d]: {ffffff}%s", Name(playerid), playerid, (inputtext));
			SendAdminMessage(0x00a86bAA,YCMDstr);
			SetPVarInt(playerid,"AntiReport",30);
			return true;
		}
	case 1:
		{
			if(response)
			{
				if(!strlen(inputtext))
				{
					format(string,256, "{ffffff}Добро пожаловать на сервер {FFA500}EXSIGHT Role Play.\n\n{ffffff}Логин: {FFA500}%s\n{ffffff}Введите пароль:", Name(playerid));
					SPDEx(playerid,1,DIALOG_STYLE_PASSWORD, "Авторизация",string, "Войти", "Отмена");
					return true;
				}
				for(new i = strlen(inputtext); i != 0; --i)
				switch(inputtext[i])
				{
				case 'А'..'Я', 'а'..'я', ' ':
					return SPDEx(playerid,1,0, "Ошибка!", "{00FF21}Введенный Вами пароль содержит русские буквы.\n Смените раскладку клавиатуры!", "Повтор", "");
				}
				strmid(PI[playerid][pKey],inputtext, 0, strlen(inputtext), 32);
				SetPVarInt(playerid,"time_logged",30);
				return mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",12,playerid,"");
			}
			else
			{
				SCM(playerid, COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
				Kick(playerid);
			}
		}
	case 3439:
		{
			if(response)
			{
				if(listitem == 0)
				{
					SPDEx(playerid, 3440, 1, "Урок по изучению Box", "Введите [ID] обучаемого", "Начать", "Отмена");
					return true;
				}
				else if(listitem == 1)
				{
					SPDEx(playerid, 3441, 1, "Урок по изучению Kong Fu", "Введите [ID] обучаемого", "Начать", "Отмена");
					return true;
				}
				else if(listitem == 2)
				{
					SPDEx(playerid, 3444, 1, "Урок по изучению Kick Box", "Введите [ID] обучаемого", "Начать", "Отмена");
					return true;
				}
				else if(listitem == 3)
				{
					SPDEx(playerid, 3442, 1, "Завершить урок по Box", "Введите [ID] обучаемого", "Завершить", "Отмена");
					return true;
				}
				else if(listitem == 4)
				{
					SPDEx(playerid, 3443, 1, "Завершить урок по Kong Fu", "Введите [ID] обучаемого", "Завершить", "Отмена");
					return true;
				}
				else if(listitem == 5)
				{
					SPDEx(playerid, 3445, 1, "Завершить урок по Kick Box", "Введите [ID] обучаемого", "Завершить", "Отмена");
					return true;
				}
			}
			else
			{
				return true;
			}
		}
	case 3440:
		{
			if(response)
			{
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "[Ошибка] Человек не найден!");
				if(!PlayerToPoint(30.0,idd,768.1588,6.5715,1000.7144)) return SCM(playerid, COLOR_GRAD1, "Человек не в спортзале");
				GetPlayerName(idd, pname, sizeof(pname));
				OldSkin[idd] = GetPlayerSkin(playerid);
				SetPlayerSkin(idd,81);
				PI[idd][pBoxstyle] = 1;
				PI[idd][pKstyle] = 0;
				PI[idd][pKickstyle] = 0;
				format(YCMDstr,128, "начал урок по Box с %s",pname);
				SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
				udar[idd] = 0;
				format(YCMDstr,128, "Вы начали урок по Box с %s",pname);
				SCM(playerid, COLOR_GREEN, YCMDstr);
				SCM(idd, COLOR_GREEN, "Начните тренеровку по Box у груши слева");
				return true;
			}
			else
			{
				return true;
			}
		}
	case 3442:
		{
			if(response)
			{
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SCM(playerid, COLOR_GREY, "[Ошибка] Человек не найден!");
				if(!PlayerToPoint(30.0,idd,768.1588,6.5715,1000.7144)) return SCM(playerid, COLOR_GRAD1, "Человек не в спортзале");
				GetPlayerName(idd, pname, sizeof(pname));
				PI[idd][pBoxstyle] = 0;
				if(PI[idd][pMember] >= 1) {	SetPlayerSkin(idd,PI[idd][pModel]);}
				if(PI[idd][pMember] == 0) {	SetPlayerSkin(idd,PI[idd][pChar][PI[idd][pViborChar]]);}
				SetPlayerFightingStyle (idd, FIGHT_STYLE_NORMAL);
				format(YCMDstr,128, "завершил урок по Box с %s",pname);
				udar[idd] = 0;
				SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
				SCM(idd, COLOR_LIGHTGREEN, "Тренер завершил с Вами тренеровку по Box");
				return true;
			}
			else
			{
				return true;
			}
		}
	case 3445:
		{
			if(response)
			{
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SCM(playerid, COLOR_GREY, "[Ошибка] Человек не найден!");
				if(!PlayerToPoint(30.0,idd,768.1588,6.5715,1000.7144)) return SCM(playerid, COLOR_GRAD1, "Человек не в спортзале");
				GetPlayerName(idd, pname, sizeof(pname));
				PI[idd][pKickstyle] = 0;
				if(PI[idd][pMember] >=1) { SetPlayerSkin(idd,PI[idd][pModel]);}
				if(PI[idd][pMember] ==0) { SetPlayerSkin(idd,PI[idd][pChar][PI[idd][pViborChar]]);}
				SetPlayerFightingStyle (idd, FIGHT_STYLE_NORMAL);
				format(YCMDstr,128, "завершил урок по Kick Box с %s",idd);
				udar[idd] = 0;
				SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
				SCM(idd, COLOR_LIGHTGREEN, "Тренер завершил с Вами тренеровку по Kick Box");
				return true;
			}
			else
			{
				return true;
			}
		}
	case 3389:
		{
			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			for(new h = 1; h <= TotalBizz; h++)
			{
				if(response)
				{
					if(listitem == 0)
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет товаров");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar1]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							PI[playerid][pGolod] += 20;
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar1];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar1];
							if(PI[playerid][pGolod] > 500) PI[playerid][pGolod] = 500;
							format(YCMDstr,30, "« Сытость » пополнена до %d",PI[playerid][pGolod]);
							SCM(playerid,0xFFFFFFAA,YCMDstr);
							format(YCMDstr,20, "съел(а) бургер");
							SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
							ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
			                Musorki();
                            BenzFrac();
							return true;
						}
					}
					else if(listitem == 1)
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return	SCM(playerid, COLOR_GREY, "Нет товаров");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar2]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							PI[playerid][pGolod] += 30;
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar2];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar2];
							if(PI[playerid][pGolod] > 500) PI[playerid][pGolod] = 500;
							format(YCMDstr,30, "« Сытость » пополнена до %d",PI[playerid][pGolod]);
							SCM(playerid,0xFFFFFFAA,YCMDstr);
							format(YCMDstr,25, "съел(а) рыбный суп");
							SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
							ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
			                Musorki();
                            BenzFrac();
							return true;
						}
					}
					else if(listitem == 2)
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет товаров");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar3]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							PI[playerid][pGolod] += 40;
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar3];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar3];
							if(PI[playerid][pGolod] > 500) PI[playerid][pGolod] = 500;
							format(YCMDstr,30, "« Сытость » пополнена до %d",PI[playerid][pGolod]);
							SCM(playerid,0xFFFFFFAA,YCMDstr);
							format(YCMDstr,30, "съел(а) большой бургер");
							SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
							ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0,1);
			                Musorki();
                            BenzFrac();
							return true;
						}
					}
					else if(listitem == 3)
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет товаров");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar4]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							PI[playerid][pGolod] += 50;
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar4];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar4];
							if(PI[playerid][pGolod] > 500) PI[playerid][pGolod] = 500;
							format(YCMDstr,30, "« Сытость » пополнена до %d",PI[playerid][pGolod]);
							SCM(playerid,0xFFFFFFAA,YCMDstr);
							format(YCMDstr,20, "съел(а) котлеты");
							SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
							ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
							return true;
						}
					}
					else if(listitem == 4)
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет товаров");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar5]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							PI[playerid][pGolod] += 60;
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar5];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar5];
							if(PI[playerid][pGolod] > 500) PI[playerid][pGolod] = 500;
							format(YCMDstr,30, "« Сытость » пополнена до %d",PI[playerid][pGolod]);
							SCM(playerid,0xFFFFFFAA,YCMDstr);
							format(YCMDstr,20, "съел(а) пельмени");
							SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
							ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
							return true;
						}
					}
					else if(listitem == 5)
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1)return SCM(playerid, COLOR_GREY, "Нет товаров");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar6]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							PI[playerid][pGolod] += 70;
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar6];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar6];
							if(PI[playerid][pGolod] > 500) PI[playerid][pGolod] = 500;
							format(YCMDstr,30, "« Сытость » пополнена до %d",PI[playerid][pGolod]);
							SCM(playerid,0xFFFFFFAA,YCMDstr);
							format(YCMDstr,25, "съел(а) гамбургер");
							SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
							ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
                   			Musorki();
                            BenzFrac();
							return true;
						}
					}
				}
				else
				{
					return true;
				}
			}
		}
	case 5589:
		{
			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			for(new h = 1; h <= TotalBizz; h++)
			{
				if(response)
				{
					if(listitem == 0)
					{
						if (PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(GetPVarInt(playerid,"Number") > gettime() ) return SCM(playerid, 0xFF0000FF, "Вы только что покупали этот товар. Приходите позже.");
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет товаров");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar1]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar1];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar1];
							new randphone = 100000 + random(899999);
							PI[playerid][pPnumber] = randphone;
							format(YCMDstr,128, "Вы купили новый номер телефона. Ваш новый номер: %d", randphone);
							SCM(playerid, COLOR_BLUE, YCMDstr);
							SetPVarInt(playerid,"Number",gettime() + 300);
							return true;
						}
					}
					else if(listitem == 1)
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(GetPVarInt(playerid,"Time") > gettime() ) return SCM(playerid, 0xFF0000FF, "Вы только что покупали этот товар. Приходите позже.");
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет товаров");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar2]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar2];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar2];
							PI[playerid][pClock] = 1;
							SCM(playerid, 0x6495EDFF, "Вы купили наручные часы.");
							SCM(playerid, COLOR_WHITE, "Введите: /time.");
							SetPVarInt(playerid,"Time",gettime() + 300);
							return true;
						}
					}
					else if(listitem == 2)
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(GetPVarInt(playerid,"FM") > gettime()) return SCM(playerid, 0xFF0000FF, "Вы только что покупали этот товар. Приходите позже.");
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет товаров");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar3]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar3];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar3];
							PI[playerid][pRadio] = 1;
							SCM(playerid, 0x6495EDFF, "Вы купили плэер.");
							SCM(playerid, COLOR_WHITE, "Введите: /fm.");
							SetPVarInt(playerid,"FM",gettime() + 300);
							return true;
						}
					}
					else if(listitem == 3)
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(GetPVarInt(playerid,"Lighter") > gettime() ) return SCM(playerid, 0xFF0000FF, "Вы только что покупали этот товар. Приходите позже.");
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет товаров");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar4]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar4];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar4];
							PI[playerid][pLighter] = 1;
							SCM(playerid, 0x6495EDFF, "Вы купили зажигалку!");
							SetPVarInt(playerid,"Lighter",gettime() + 300);
							return true;
						}
					}
					else if(listitem == 4)
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(GetPVarInt(playerid,"Smoke") > gettime() ) return SCM(playerid, 0xFF0000FF, "Вы только что покупали этот товар. Приходите позже.");
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет товаров");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar5]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar5];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar5];
							PI[playerid][pCigarettes] = 20;
							SCM(playerid, 0x6495EDFF, "Вы купили пачку сигарет!");
							SCM(playerid, COLOR_WHITE, "Введите: /smoke.");
							SetPVarInt(playerid,"Smoke",gettime() + 300);
							return true;
						}
					}
					else if(listitem == 5)
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(GetPVarInt(playerid,"Book") > gettime()) return SCM(playerid, 0xFF0000FF, "Вы только что покупали этот товар. Приходите позже.");
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет товаров");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar6]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar6];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar6];
							PI[playerid][pPhoneBook] = 1;
							SCM(playerid, 0x6495EDFF, "Вы купили телефонную книгу. Теперь вы можете узнать номер любого человека!");
							SCM(playerid, COLOR_WHITE, "Введите: /number <id/name>.");
							SetPVarInt(playerid,"Book",gettime() + 300);
							return true;
						}
					}
					else if(listitem == 6)
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(GetPVarInt(playerid,"Directory") > gettime()) return SCM(playerid, 0xFF0000FF, "Вы только что покупали этот товар. Приходите позже.");
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет товаров");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar7]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar7];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar7];
							format(YCMDstr,40, "Вы купили Справочник ( /directory )");
							SCM(playerid, COLOR_BLUE, YCMDstr);
							PI[playerid][pDirectory] = 1;
							SetPVarInt(playerid,"Directory",gettime() + 300);
							return true;
						}
					}
					else if(listitem == 7)
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(GetPVarInt(playerid,"Heal") > gettime()) return SCM(playerid, 0xFF0000FF, "Вы только что покупали этот товар. Приходите позже.");
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет товаров");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar8]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							new house = PI[playerid][pPhousekey];
							if(house != 999)
							{
								House[house][hHel] += 24;
								SCM(playerid, COLOR_BLUE,"Вы купили в дом 24 аптечек");
							}
							else return true;
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar8];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar8];
							SetPVarInt(playerid,"Heal",gettime() + 300);
							return true;
						}
					}
					else if(listitem == 8)
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(GetPVarInt(playerid,"Photo") > gettime()) return SCM(playerid, 0xFF0000FF, "Вы только что покупали этот товар. Приходите позже.");
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет товаров");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar9]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_GRAD1, "Вам требуется 2 лвл");
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar9];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar9];
							_GiveGun(playerid, 43, 10);
							SCM(playerid, COLOR_BLUE, "Вы купили фотоаппарат");
							SetPVarInt(playerid,"Photo",gettime() + 300);
							return true;
						}
					}
					else if(listitem == 9)
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(GetPVarInt(playerid,"Flower") > gettime() ) return SCM(playerid, 0xFF0000FF, "Вы только что покупали этот товар. Приходите позже.");
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1)return SCM(playerid, COLOR_GREY, "Нет товаров");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar10]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_GRAD1, "Вам требуется 2 лвл");
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar10];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar10];
							PI[playerid][pFlr] = 1;
							SCM(playerid, COLOR_BLUE, "Вы купили цветы.");
							SCM(playerid, COLOR_BLUE, "Передать: /givefloor");
							SetPVarInt(playerid,"Flower",gettime() + 300);
							return true;
						}
					}
					else if(listitem == 10)
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(GetPVarInt(playerid,"Balon") > gettime() ) return SCM(playerid, 0xFF0000FF, "Вы только что покупали этот товар. Приходите позже.");
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет товаров");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar11]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_GRAD1, "Вам требуется 2 лвл");
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar11];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar11];
							_GiveGun(playerid, 41, 50);
							SCM(playerid, COLOR_BLUE, "Вы купили газовый балончик");
							SetPVarInt(playerid,"Balon",gettime() + 300);
							return true;
						}
					}
					else if(listitem == 11)
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(GetPVarInt(playerid,"Maskbuy") > gettime() ) return SCM(playerid, 0xFF0000FF, "Вы только что покупали этот товар. Приходите позже.");
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет товаров");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar12]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							if(PI[playerid][pMaska] != 0) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть маска");
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar12];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar12];
							PI[playerid][pMaska] = 1;
							SCM(playerid, 0x6495EDFF, "Вы купили маску.");
							SCM(playerid, COLOR_WHITE, "Введите: /maska.");
							SetPVarInt(playerid,"Maskbuy",gettime() + 300);
							return true;
						}
					}
				}
				else return true;
			}
		}
	case 2289:
		{
			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			for(new h = 1; h <= TotalBizz; h++)
			{
				if(response)
				{
					if(listitem == 0)
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В баре нет напитков");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar1]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							PI[playerid][pGolod] += 20;
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar1];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar1];
							if(PI[playerid][pGolod] > 500) PI[playerid][pGolod] = 500;
							format(YCMDstr,30, "« Сытость » пополнена до %d",PI[playerid][pGolod]);
							SCM(playerid,0xFFFFFFAA,YCMDstr);
							format(YCMDstr,20, "выпил(а) воды");
							SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
							ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
							return true;
						}
					}
					else if(listitem == 1)
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В баре нет напитков");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar2]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							PI[playerid][pGolod] += 30;
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar2];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar2];
							if(PI[playerid][pGolod] > 500) PI[playerid][pGolod] = 500;
							format(YCMDstr,30, "« Сытость » пополнена до %d",PI[playerid][pGolod]);
							SCM(playerid,0xFFFFFFAA,YCMDstr);
							format(YCMDstr,20, "выпил(а) соды");
							SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
							ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
							return true;
						}
					}
					else if(listitem == 2)
					{
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В баре нет напитков");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar3]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							PI[playerid][pGolod] += 40;
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar3];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar3];
							if(PI[playerid][pGolod] > 500) PI[playerid][pGolod] = 500;
							format(YCMDstr,30, "« Сытость » пополнена до %d",PI[playerid][pGolod]);
							SCM(playerid,0xFFFFFFAA,YCMDstr);
							format(YCMDstr,25, "выпил(а) кока-колы",sendername);
							SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
							ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
							return true;
						}
					}
					else if(listitem == 3)
					{
						new Float:health;
						GetPlayerHealth(playerid,health);
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В баре нет напитков");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar4]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							FL[playerid][PlayerDrunk] += 2;
							if(GetPlayerHealth(playerid, health) < 100)
							{
								if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
							}
							PI[playerid][pGolod] += 50;
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar4];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar4];
							if(PI[playerid][pGolod] > 500) PI[playerid][pGolod] = 500;
							format(YCMDstr, 30, "« Сытость » пополнена до %d",PI[playerid][pGolod]);
							SCM(playerid,0xFFFFFFAA,YCMDstr);
							format(YCMDstr,25, "выпил(а) бутылку пива",sendername);
							SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
							ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
							return true;
						}
					}
					else if(listitem == 4)
					{
						new Float:health;
						GetPlayerHealth(playerid,health);
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В баре нет напитков");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar5]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							FL[playerid][PlayerDrunk] += 2;
							if(GetPlayerHealth(playerid, health) < 100)
							{
								if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
							}
							PI[playerid][pGolod] += 60;
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar5];
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar5];
							if(PI[playerid][pGolod] > 500) PI[playerid][pGolod] = 500;
							format(YCMDstr,30, "« Сытость » пополнена до %d",PI[playerid][pGolod]);
							SCM(playerid,0xFFFFFFAA,YCMDstr);
							format(YCMDstr,25, "выпил(а) рюмку вина",sendername);
							SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
							ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
							return true;
						}
					}
					else if(listitem == 5)
					{
						new Float:health;
						GetPlayerHealth(playerid,health);
						if(PlayerToPoint(3, playerid,BizzInfo[h][bBarX], BizzInfo[h][bBarY], BizzInfo[h][bBarZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[h][bVirtualWorld])
						{
							if(BizzInfo[h][bProducts] <= 0 && BizzInfo[h][bOwned] == 1) return SCM(playerid, COLOR_GREY, "В баре нет напитков");
							if(PI[playerid][pCash] < BizzInfo[h][bTovar6]) return SCM(playerid, COLOR_GREY, "У вас нет столько денег");
							FL[playerid][PlayerDrunk] += 2;
							if(GetPlayerHealth(playerid, health) < 100)
							{
								if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
							}
							BizzInfo[h][b2Till] += BizzInfo[h][bTovar6];
							PI[playerid][pGolod] += 70;
							if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bProducts] -= 2;
							PI[playerid][pCash] -= BizzInfo[h][bTovar6];
							if(PI[playerid][pGolod] > 500) PI[playerid][pGolod] = 500;
							format(YCMDstr,30, "« Сытость » пополнена до %d",PI[playerid][pGolod]);
							SCM(playerid,0xFFFFFFAA,YCMDstr);
							format(YCMDstr,20, "выпил(а) абсент",sendername);
							SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
							ApplyAnimation(playerid, "BAR", "dnk_stndF_loop",4.1,0,0,0,0,0,1);
							return true;
						}
					}
				}
				else
				{
					return true;
				}
			}
		}
	case 2539: //Главное меню
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: SPDEx(playerid, 2539+1, 2, "Береты:", "Чёрный\r\nКрасный\r\nСиний\r\nВоенный камуфляж\r\nКрасно-оранжевый", "Одеть", "Назад");
				case 1: SPDEx(playerid, 2539+2, 2, "Кепки:", "Военный камуфляж\r\nСине-голубые разводы\r\nХиппи\r\nСерые узоры\r\nСветло-красные узоры\r\nСиняя молния\r\nРыже-жёлтые узоры\r\nЖёлтая с цветными крапушками\r\nКрасная\r\nЖёлтый сыр\r\nЧёрная\r\nТёмно-синяя\r\nЗелёная\r\nХиппи с задраным козырьком\r\nКепка буксирщика\r\nРыже-жёлтые узоры назад\r\nСиняя молния назад\r\nСине-голубые разводы назад\r\nЛеопард назад\r\nВоенный камуфляж назад", "Одеть", "Назад");
				case 2: SPDEx(playerid, 2539+3, 2, "Шляпы:", "Светло-красные узоры\r\nСерые узоры\r\nТёмно-зеленая\nЧёрная\r\nСиняя\r\nЗелёная\r\nКрасная\r\nЖёлтая\r\nЧёрная пляжная\r\nЗёланя пляжная клетка\r\nРыже-жёлтые пляжные узоры\r\nЛеопард\r\nКрасно-синяя клетка\r\nЧёрно-жёлтые разводы\r\nЧёрно-жёлтая чешуя", "Одеть", "Назад");
				case 3: SPDEx(playerid, 2539+4, 2, "Шапки:", "Санта-клаус\r\nЧёрная воровская\r\nЗелёная воровская\r\nЧёрная\r\nРыже-розовые узоры", "Одеть", "Назад");
				case 4: SPDEx(playerid, 2539+5, 2, "Маски:", "Белая хоккейная\r\nКрасная хоккейная\r\nЗелёная хоккейная\r\nЗорро\r\nБоксёрская\r\nЧерепа\r\nСерый дым\r\nЗелёный дым\r\nВоенный камуфляж\r\nРыже-розовые узоры\r\nЖёлтые треугольники\r\nСиняя молния\r\nСерые узоры\r\nЖёлтая с цветными крапушками\r\nРыжые треугольники в цветочек", "Одеть", "Назад");
				case 5: SPDEx(playerid, 2539+6, 2, "Очки:", "Красные\r\nОранжевые\r\nЗелёные\r\nСиние\r\nРозовые\r\nБелая спираль\r\nЧёрные\r\nБелые глаза\r\nШахматная клетка\r\nБез стёкл\r\nРентгеновское зрение\r\nЖёлтые прозрачные\r\nОранжевые прозрачные\r\nКрасные прозрачные\r\nСиние прозрачные\r\nЗелёные прозрачные\r\nЧёрные круглые\r\nЗелёные круглые\r\nФиолетовые круглые\r\nРозовые круглые", "Одеть", "Назад");
				case 6:
					{
						RemovePlayerAttachedObject(playerid, 0);
						RemovePlayerAttachedObject(playerid, 1);
						RemovePlayerAttachedObject(playerid, 2);
					}
				}
			}
		}
	case 2539+1: //Береты
		{
			if(response)
			{
				if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
				new skin = GetPlayerSkin(playerid);
				switch(listitem)
				{
				case 0: SetPlayerAttachedObject(playerid, 0, 18921, 2, PosX[skin][9], -0.03, 0.01, 180, 0, 30); //Beret1
				case 1: SetPlayerAttachedObject(playerid, 0, 18922, 2, PosX[skin][9], -0.03, 0.01, 180, 0, 30); //Beret2
				case 2: SetPlayerAttachedObject(playerid, 0, 18923, 2, PosX[skin][9], -0.03, 0.01, 180, 0, 30); //Beret3
				case 3: SetPlayerAttachedObject(playerid, 0, 18924, 2, PosX[skin][9], -0.03, 0.01, 180, 0, 30); //Beret4
				case 4: SetPlayerAttachedObject(playerid, 0, 18925, 2, PosX[skin][9], -0.03, 0.01, 180, 0, 30); //Beret5
				}
				SCM(playerid, COLOR_BLUE, "Используйте стрелки для редактирования позиции аксессуара.");
				EditAttachedObject(playerid, 0);
			}
			if(!response) ShowClothesShopDialogEx(playerid);
		}
	case 2539+2: //Кепки
		{
			if(response)
			{
				if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
				new skin = GetPlayerSkin(playerid);
				switch(listitem)
				{
				case 0: SetPlayerAttachedObject(playerid, 0, 18926, 2, PosX[skin][11], 0, -0.01); //Hat1
				case 1: SetPlayerAttachedObject(playerid, 0, 18927, 2, PosX[skin][11], 0, -0.01); //Hat2
				case 2: SetPlayerAttachedObject(playerid, 0, 18928, 2, PosX[skin][11], 0, -0.01); //Hat3
				case 3: SetPlayerAttachedObject(playerid, 0, 18929, 2, PosX[skin][11], 0, -0.01); //Hat4
				case 4: SetPlayerAttachedObject(playerid, 0, 18930, 2, PosX[skin][11], 0, -0.01); //Hat5
				case 5: SetPlayerAttachedObject(playerid, 0, 18931, 2, PosX[skin][11], 0, -0.01); //Hat6
				case 6: SetPlayerAttachedObject(playerid, 0, 18932, 2, PosX[skin][11], 0, -0.01); //Hat7
				case 7: SetPlayerAttachedObject(playerid, 0, 18921, 2, PosX[skin][11], 0, -0.01); //Hat8
				case 8: SetPlayerAttachedObject(playerid, 0, 18934, 2, PosX[skin][11], 0, -0.01); //Hat9
				case 9: SetPlayerAttachedObject(playerid, 0, 18935, 2, PosX[skin][11], 0, -0.01); //Hat10
				case 10: SetPlayerAttachedObject(playerid, 0, 18941, 2, PosX[skin][11], -0.03, 0.01, 180, 0, 30); //CapBack3
				case 11: SetPlayerAttachedObject(playerid, 0, 18942, 2, PosX[skin][11], -0.03, 0.01, 180, 0, 30); //CapBack4
				case 12: SetPlayerAttachedObject(playerid, 0, 18943, 2, PosX[skin][11], -0.03, 0.01, 180, 0, 30); //CapBack5
				case 13: SetPlayerAttachedObject(playerid, 0, 18960, 2, PosX[skin][8], 0, 0, 88, 75); //CapRimUp
				case 14: SetPlayerAttachedObject(playerid, 0, 18961, 2, PosX[skin][9], 0, 0, 88, 75); //CapTrucker1
				case 15: SetPlayerAttachedObject(playerid, 0, 18955, 2, PosX[skin][7], 0.02, 0, 88, 75); //CapOverEye1
				case 16: SetPlayerAttachedObject(playerid, 0, 18956, 2, PosX[skin][7], 0.02, 0, 88, 75); //CapOverEye2
				case 17: SetPlayerAttachedObject(playerid, 0, 18957, 2, PosX[skin][7], 0.02, 0, 88, 75); //CapOverEye3
				case 18: SetPlayerAttachedObject(playerid, 0, 18958, 2, PosX[skin][7], 0.02, 0, 88, 75); //CapOverEye4
				case 19: SetPlayerAttachedObject(playerid, 0, 18959, 2, PosX[skin][7], 0.02, 0, 88, 75); //CapOverEye5
				}
				SCM(playerid, COLOR_BLUE, "Используйте стрелки для редактирования позиции аксессуара.");
				EditAttachedObject(playerid, 0);
			}
			if(!response) ShowClothesShopDialogEx(playerid);
		}
	case 2539+3: //Шляпы
		{
			if(response)
			{
				if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
				new skin = GetPlayerSkin(playerid);
				switch(listitem)
				{
				case 0: SetPlayerAttachedObject(playerid, 0, 18944, 2, PosX[skin][10], 0, 0, 180, 0, 10); //HatBoater1
				case 1: SetPlayerAttachedObject(playerid, 0, 18945, 2, PosX[skin][10], 0, 0, 180, 0, 10); //HatBoater2
				case 2: SetPlayerAttachedObject(playerid, 0, 18946, 2, PosX[skin][10], 0, 0, 180, 0, 10); //HatBoater3
				case 3: SetPlayerAttachedObject(playerid, 0, 18947, 2, PosX[skin][10], 0, 0, 180, 0, 10); //HatBowler1
				case 4: SetPlayerAttachedObject(playerid, 0, 18948, 2, PosX[skin][10], 0, 0, 180, 0, 10); //HatBowler2
				case 5: SetPlayerAttachedObject(playerid, 0, 18949, 2, PosX[skin][10], 0, 0, 180, 0, 10); //HatBowler3
				case 6: SetPlayerAttachedObject(playerid, 0, 18950, 2, PosX[skin][10], 0, 0, 180, 0, 10); //HatBowler4
				case 7: SetPlayerAttachedObject(playerid, 0, 18951, 2, PosX[skin][10], 0, 0, 180, 0, 10); //HatBowler5
				case 8: SetPlayerAttachedObject(playerid, 0, 18962, 2, PosX[skin][9], 0, 0, 88, 75); //CowboyHat1
				case 9: SetPlayerAttachedObject(playerid, 0, 18967, 2, PosX[skin][6], 0.015, 0, 90, 80); //HatMan1
				case 10: SetPlayerAttachedObject(playerid, 0, 18968, 2, PosX[skin][6], 0.015, 0, 90, 80); //HatMan2
				case 11: SetPlayerAttachedObject(playerid, 0, 18969, 2, PosX[skin][6], 0.015, 0, 90, 80); //HatMan3
				case 12: SetPlayerAttachedObject(playerid, 0, 18970, 2, PosX[skin][6], 0.015, 0, 90, 80); //HatTiger
				case 13: SetPlayerAttachedObject(playerid, 0, 18971, 2, PosX[skin][6], 0.015, 0, 90, 80); //HatCool1
				case 14: SetPlayerAttachedObject(playerid, 0, 18972, 2, PosX[skin][6], 0.015, 0, 90, 80); //HatCool2
				case 15: SetPlayerAttachedObject(playerid, 0, 18973, 2, PosX[skin][6], 0.015, 0, 90, 80); //HatCool3
				}
				SCM(playerid, COLOR_BLUE, "Используйте стрелки для редактирования позиции аксессуара.");
				EditAttachedObject(playerid, 0);
			}
			if(!response) ShowClothesShopDialogEx(playerid);
		}
	case 2539+4: //Шапки
		{
			if(response)
			{
				if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
				new skin = GetPlayerSkin(playerid);
				switch(listitem)
				{
				case 0: SetPlayerAttachedObject(playerid, 0, 19064, 2, PosX[skin][10], 0, 0, 70, 94, 30, 1.2, 1.2, 1.2); //SantaHat
				case 1: SetPlayerAttachedObject(playerid, 0, 18953, 2, PosX[skin][8], -0.03, 0.00, 180, 0, 30); //CapKnit 1
				case 2: SetPlayerAttachedObject(playerid, 0, 18954, 2, PosX[skin][8], -0.03, 0.00, 180, 0, 30); //CapKnit 2
				case 3: SetPlayerAttachedObject(playerid, 0, 18964, 2, PosX[skin][6], 0.015, 0, 90, 100); //SkullyCap1
				case 4: SetPlayerAttachedObject(playerid, 0, 18966, 2, PosX[skin][6], 0.015, 0, 90, 100); //SkullyCap3
				}
				SCM(playerid, COLOR_BLUE, "Используйте стрелки для редактирования позиции аксессуара.");
				EditAttachedObject(playerid, 0);
			}
			if(!response) ShowClothesShopDialogEx(playerid);
		}
	case 2539+5: //Маски
		{
			if(response)
			{
				if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
				new skin = GetPlayerSkin(playerid);
				switch(listitem)
				{
				case 0: SetPlayerAttachedObject(playerid, 1, 19036, 2, PosX[skin][5], 0.02, 0, 90, 90); //Hockeymask1
				case 1: SetPlayerAttachedObject(playerid, 1, 19037, 2, PosX[skin][5], 0.02, 0, 90, 90); //Hockeymask2
				case 2: SetPlayerAttachedObject(playerid, 1, 19038, 2, PosX[skin][5], 0.02, 0, 90, 90); //Hockeymask3
				case 3: SetPlayerAttachedObject(playerid, 1, 18974, 2, PosX[skin][3], 0.0258, 0, 90, 90); //Zorromask
				case 4: SetPlayerAttachedObject(playerid, 1, 18952, 2, PosX[skin][4], 0.01); //Boxing
				case 5: SetPlayerAttachedObject(playerid, 1, 18911, 2, PosX[skin][0], 0.03, 0, 90, -180, -90); //Bandanna1
				case 6: SetPlayerAttachedObject(playerid, 1, 18912, 2, PosX[skin][0], 0.03, 0, 90, -180, -90); //Bandanna2
				case 7: SetPlayerAttachedObject(playerid, 1, 18913, 2, PosX[skin][0], 0.03, 0, 90, -180, -90); //Bandanna3
				case 8: SetPlayerAttachedObject(playerid, 1, 18914, 2, PosX[skin][0], 0.03, 0, 90, -180, -90); //Bandanna4
				case 9: SetPlayerAttachedObject(playerid, 1, 18915, 2, PosX[skin][0], 0.03, 0, 90, -180, -90); //Bandanna5
				case 10: SetPlayerAttachedObject(playerid, 1, 18916, 2, PosX[skin][0], 0.03, 0, 90, -180, -90); //Bandanna6
				case 11: SetPlayerAttachedObject(playerid, 1, 18917, 2, PosX[skin][0], 0.03, 0, 90, -180, -90); //Bandanna7
				case 12: SetPlayerAttachedObject(playerid, 1, 18918, 2, PosX[skin][0], 0.03, 0, 90, -180, -90); //Bandanna8
				case 13: SetPlayerAttachedObject(playerid, 1, 18919, 2, PosX[skin][0], 0.03, 0, 90, -180, -90); //Bandanna9
				case 14: SetPlayerAttachedObject(playerid, 1, 18920, 2, PosX[skin][0], 0.03, 0, 90, -180, -90); //Bandanna10
				}
				SCM(playerid, COLOR_BLUE, "Используйте стрелки для редактирования позиции аксессуара.");
				EditAttachedObject(playerid, 1);
			}
			if(!response) ShowClothesShopDialogEx(playerid);
		}
	case 2539+6: //Очки
		{
			if(response)
			{
				if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
				new skin = GetPlayerSkin(playerid);
				switch(listitem)
				{
				case 0: SetPlayerAttachedObject(playerid, 2, 19006, 2, PosX[skin][2], 0.04, 0, 88, 75); //GlassesType1
				case 1: SetPlayerAttachedObject(playerid, 2, 19007, 2, PosX[skin][2], 0.04, 0, 88, 75); //GlassesType2
				case 2: SetPlayerAttachedObject(playerid, 2, 19008, 2, PosX[skin][2], 0.04, 0, 88, 75); //GlassesType3
				case 3: SetPlayerAttachedObject(playerid, 2, 19009, 2, PosX[skin][2], 0.04, 0, 88, 75); //GlassesType4
				case 4: SetPlayerAttachedObject(playerid, 2, 19010, 2, PosX[skin][2], 0.04, 0, 88, 75); //GlassesType5
				case 5: SetPlayerAttachedObject(playerid, 2, 19011, 2, PosX[skin][2], 0.04, 0, 88, 75); //GlassesType6
				case 6: SetPlayerAttachedObject(playerid, 2, 19012, 2, PosX[skin][2], 0.04, 0, 88, 75); //GlassesType7
				case 7: SetPlayerAttachedObject(playerid, 2, 19013, 2, PosX[skin][2], 0.04, 0, 88, 75); //GlassesType8
				case 8: SetPlayerAttachedObject(playerid, 2, 19014, 2, PosX[skin][2], 0.04, 0, 88, 75); //GlassesType9
				case 9: SetPlayerAttachedObject(playerid, 2, 19015, 2, PosX[skin][2], 0.04, 0, 88, 75); //GlassesType10
				case 10: SetPlayerAttachedObject(playerid, 2, 19016, 2, PosX[skin][2], 0.04, 0, 88, 75); //GlassesType11
				case 11: SetPlayerAttachedObject(playerid, 2, 19017, 2, PosX[skin][2], 0.04, 0, 88, 75); //GlassesType12
				case 12: SetPlayerAttachedObject(playerid, 2, 19018, 2, PosX[skin][2], 0.04, 0, 88, 75); //GlassesType13
				case 13: SetPlayerAttachedObject(playerid, 2, 19019, 2, PosX[skin][2], 0.04, 0, 88, 75); //GlassesType14
				case 14: SetPlayerAttachedObject(playerid, 2, 19020, 2, PosX[skin][2], 0.04, 0, 88, 75); //GlassesType15
				case 15: SetPlayerAttachedObject(playerid, 2, 19021, 2, PosX[skin][2], 0.04, 0, 88, 75); //GlassesType16
				case 16: SetPlayerAttachedObject(playerid, 2, 19022, 2, PosX[skin][2], 0.04, 0, 88, 75); //GlassesType17
				case 17: SetPlayerAttachedObject(playerid, 2, 19023, 2, PosX[skin][2], 0.04, 0, 88, 75); //GlassesType18
				case 18: SetPlayerAttachedObject(playerid, 2, 19024, 2, PosX[skin][2], 0.04, 0, 88, 75); //GlassesType19
				case 19: SetPlayerAttachedObject(playerid, 2, 19025, 2, PosX[skin][2], 0.04, 0, 88, 75); //GlassesType20
				}
				SCM(playerid, COLOR_BLUE, "Используйте стрелки для редактирования позиции аксессуара.");
				EditAttachedObject(playerid, 2);
			}
			if(!response) ShowClothesShopDialogEx(playerid);
		}
	case 3443:
		{
			if(response)
			{
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SCM(playerid, COLOR_GREY, "[Ошибка] Человек не найден!");
				if(!PlayerToPoint(30.0,idd,768.1588,6.5715,1000.7144)) return SCM(playerid, COLOR_GRAD1, "Человек не в спортзале");
				GetPlayerName(idd, pname, sizeof(pname));
				PI[idd][pKstyle] = 0;
				if(PI[idd][pMember] >=1) { SetPlayerSkin(idd,PI[idd][pModel]);}
				if(PI[idd][pMember] ==0) { SetPlayerSkin(idd,PI[idd][pChar][PI[idd][pViborChar]]);}
				SetPlayerFightingStyle (idd, FIGHT_STYLE_NORMAL);
				format(YCMDstr,128, "завершил урок по Kong Fu с %s",idd);
				udar[idd] = 0;
				SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
				SCM(idd, COLOR_LIGHTGREEN, "Тренер завершил с Вами тренеровку по Kong Fu");
				return true;
			}
			else
			{
				return true;
			}
		}
	case 3444:
		{
			if(response)
			{
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID)
				if(idd == INVALID_PLAYER_ID) return	SCM(playerid, COLOR_GREY, "[Ошибка] Человек не найден!");
				if(!PlayerToPoint(30.0,idd,768.1588,6.5715,1000.7144)) return SCM(playerid, COLOR_GRAD1, "Человек не в спортзале");
				GetPlayerName(idd, pname, sizeof(pname));
				OldSkin[idd] = GetPlayerSkin(playerid);
				SetPlayerSkin(idd,80);
				PI[idd][pKstyle] = 0;
				PI[idd][pBoxstyle] = 0;
				PI[idd][pKickstyle] = 1;
				format(YCMDstr,128, "начал урок по Kick Box с %s",pname);
				udar[idd] = 0;
				SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
				format(YCMDstr,128, "Вы начали урок по Кик Боксу с %s",pname);
				SCM(playerid, COLOR_GREEN, YCMDstr);
				SCM(idd, COLOR_GREEN, "Начните тренеровку по Kick Box на ринге с партнёром");
				return true;
			}
			else
			{
				return true;
			}
		}
	case 3441:
		{
			if(response)
			{
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SCM(playerid, COLOR_GREY, "[Ошибка] Человек не найден!");
				if(!PlayerToPoint(30.0,idd,768.1588,6.5715,1000.7144)) return SCM(playerid, COLOR_GRAD1, "Человек не в спортзале");
				GetPlayerName(idd, pname, sizeof(pname));
				OldSkin[idd] = GetPlayerSkin(playerid);
				if(PI[playerid][pSex] == 1)
				{
					SetPlayerSkin(idd,204);
				}
				else
				{
					SetPlayerSkin(idd,203);
				}
				PI[idd][pKstyle] = 1;
				PI[idd][pBoxstyle] = 0;
				PI[idd][pKickstyle] = 0;
				format(YCMDstr,128, "начал урок по Kong Fu с %s",pname);
				udar[idd] = 0;
				SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
				format(YCMDstr,128, "Вы начали урок по Конг Фу с %s",pname);
				SCM(playerid, COLOR_GREEN, YCMDstr);
				SCM(idd, COLOR_GREEN, "Начните тренеровку по Конг Фу у груши справа");
				return true;
			}
			else
			{
				return true;
			}
		}
	case 2626:
		{
			if(response)
			{
				SPDEx(playerid,2625,DIALOG_STYLE_INPUT, "По приглашению от:", "Введите ник игрока, пригласившего Вас на сервер", "Далее", "Пропуск");
				return true;
			}
			else
			{
				return true;
			}
		}
	case 2625:
		{
			if(response)
			{
				mysql_format(DATABASE, YCMDstr, 72,"SELECT `Name` FROM `accounts` WHERE `Name` = '%s'",inputtext);
				mysql_function_query(DATABASE,YCMDstr,true,"OnMySQL_QUERY","iis",9,playerid,inputtext);
			}
			else strmid(PI[playerid][pDrug], "-", 0, strlen("-"), strlen("-")+5);
			SPDEx(playerid,4,0, " ", "Какого пола будет Ваш персонаж:\n", "Мужчина", "Женщина");
			TogglePlayerControllable(playerid, 0);
		}
	case 22572:
		{
			if(response)
			{
				if(PI[playerid][pCash] < sellgun3)
				{
					SCM(playerid,COLOR_GRAD1, "У вас недостаточно денег");
					return true;
				}
				new name[MAX_PLAYER_NAME];
				new sail[128];
				GetPlayerName(sellgun4, name, sizeof(name));
				GetPlayerName(playerid, sail, sizeof(sail));
				PI[sellgun][pCash] -= sellgun3;
				_GiveGun(sellgun, sellgun1, sellgun2);
				PI[sellgun4][pMats] -= (2*sellgun2);
				PI[sellgun4][pCash] += sellgun3;
				format(YCMDstr,128, "%s сделал оружие из материалов %s",name,sail);
				ProxDetector(10.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 9127:
		{
			if(!response) return RemovePlayerFromVehicleAC(playerid), TogglePlayerControllable(playerid, 1);
			if(PI[playerid][pCash] < 500) return SCM(playerid, COLOR_GRAD2, "У Вас нет столько денег!"), RemovePlayerFromVehicleAC(playerid), TogglePlayerControllable(playerid, 1);
			PI[playerid][pCash] -= 500;
			SetPVarInt(playerid,"rentcar_job",GetPlayerVehicleID(playerid));
			TogglePlayerControllable(playerid, 1);
			GameTextForPlayer(playerid, "~r~-$500", 5000, 1);
			if(GetPlayerVehicleID(playerid) >= taxicar[0] && GetPlayerVehicleID(playerid) <= taxicar[1]) SCM(playerid,COLOR_GREEN,"Чтобы начать рабочий день введите /fare");
			return true;
		}
	case 9128:
		{
			if(!response) return RemovePlayerFromVehicleAC(playerid), TogglePlayerControllable(playerid, 1);
			if(PI[playerid][pCash] < 50) return SCM(playerid, COLOR_GRAD2, "У Вас нет столько денег!"), RemovePlayerFromVehicleAC(playerid), TogglePlayerControllable(playerid, 1);
			PI[playerid][pCash] -= 50;
			SetPVarInt(playerid,"rentcar_job",GetPlayerVehicleID(playerid));
			TogglePlayerControllable(playerid, 1);
			GameTextForPlayer(playerid, "~r~-$50", 5000, 1);
			new sscheck = random(6);
			if(sscheck == 0) SetPlayerCheckpoint(playerid,1230.3865,-915.3129,43.0938,1.5);
			if(sscheck == 1) SetPlayerCheckpoint(playerid,1030.5369,-1363.9471,13.5732,1.5);
			if(sscheck == 2) SetPlayerCheckpoint(playerid,1007.9167,-907.3416,42.1797,1.5);
			if(sscheck == 3) SetPlayerCheckpoint(playerid,2385.2700,-1486.5580,24.0000,1.5);
			if(sscheck == 4) SetPlayerCheckpoint(playerid,782.6826,-1637.4572,13.3828,1.5);
			if(sscheck == 5) SetPlayerCheckpoint(playerid,2379.4226,-1939.8505,13.5469,1.5);
			if(GetPlayerVehicleID(playerid) >= muscar[0] && GetPlayerVehicleID(playerid) <= muscar[1])
			return true;
		}
	case 3001:
		{
			new sendername[MAX_PLAYER_NAME];
			if(response)
			{
				if(!strlen(inputtext)) return SPDEx(playerid,3001,1, "Цена за Звонки и SMS", "Введите сумму", "Готово", "Отмена");
				new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 50)
				{
					SCM(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 50!");
					SPDEx(playerid,3001,1, "Цена за Звонки и SMS", "Введите сумму", "Готово", "Отмена");
					return true;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(YCMDstr,128, "[SAN] Цена за Звонки и SMS, в размере $%d - установлена Ген. Директором %s.", moneys, sendername);
				SendFamilyMessage(9,COLOR_YELLOW2, YCMDstr);
				smspricesf = moneys;
			}
			else
			{
				return true;
			}
		}
	case 31:
		{
			new sendername[MAX_PLAYER_NAME];
			if(response)
			{
				if(!strlen(inputtext)) SPDEx(playerid,31,1, "Введите цену за 1 символ:", "Введите сумму", "Готово", "Отмена");
				new moneys;
				moneys = strval(inputtext);
				if(moneys < 1 || moneys > 500)
				{
					SCM(playerid, COLOR_GREY, "Минимальная сумма - 1, максимальная - 500!");
					SPDEx(playerid,31,1, "Введите цену за 1 символ:", "Введите сумму", "Готово", "Отмена");
					return true;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(YCMDstr,150, "Цена за символ, в размере $%d - установлена Министром Культуры %s.", moneys, sendername);
				SCMToAll(COLOR_FADE1, YCMDstr);
				addd[1] = moneys;
				return true;
			}
			else
			{
				return true;
			}
		}
	case 11518:
		{
			if(!response) return true;
			SetPVarInt(playerid, "AdvertID", listitem+1);
			SPDEx(playerid, 11519, 2, "Объявления", "1. Отправить объявление\n2. Прочитать объявление\n3. Редактировать объявление\n4. Удалить объявление\n5. Отправить администрации", "Принять", "Назад");
		}
	case 11519:
		{
			if(!response) { DeletePVar(playerid, "AdvertID"); return AdvertList(playerid); }
			new full = 0;
			switch(PI[playerid][pMember])
			{
			case 9: full = 1;
			}
			switch(listitem)
			{
			case 0:
				{
					new nameee[MAX_PLAYER_NAME];
					GetPlayerName(playerid,nameee,sizeof(nameee));
					format(YCMDstr, 200, "{66ff00}Объявление: %s. Прислал: %s. Тел: %i",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adPhone]);
					SCMToAll(COLOR_ADDNEWS, YCMDstr);
					switch(PI[playerid][pMember])
					{
					case 9:
						{
							format(YCMDstr, 76, "        {34c924}Отредактировал сотрудник SA News: %s", nameee);
							SCMToAll(COLOR_ADDNEWS, YCMDstr);
						}
					}
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++)
					{
						AdvertInfo[i][full][adPhone] = AdvertInfo[i+1][full][adPhone];
						strmid(AdvertInfo[i][full][adText],AdvertInfo[i+1][full][adText],0,strlen(AdvertInfo[i+1][full][adText]), 50);
						strmid(AdvertInfo[i][full][adName],AdvertInfo[i+1][full][adName],0,strlen(AdvertInfo[i+1][full][adName]), 50);
					}
					TOTALADVERT[full]--;
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
			case 1:
				{
					format(YCMDstr, 172, "Текст: %s. Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName]);
					SPDEx(playerid, 11520, 0, "Объявления", YCMDstr, "Назад", "");
				}
			case 2:
				{
					format(YCMDstr, 172, "Текст: %s. Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName]);
					SPDEx(playerid, 11521, 1, "Объявления", YCMDstr, "Принять", "Назад");
				}
			case 3:
				{
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++)
					{
						AdvertInfo[i][full][adPhone] = AdvertInfo[i+1][full][adPhone];
						strmid(AdvertInfo[i][full][adText],AdvertInfo[i+1][full][adText],0,strlen(AdvertInfo[i+1][full][adText]), 50);
						strmid(AdvertInfo[i][full][adName],AdvertInfo[i+1][full][adName],0,strlen(AdvertInfo[i+1][full][adName]), 50);
					}
					TOTALADVERT[full]--;
					SCM(playerid, COLOR_GREEN, "Объявление удалено");
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
			case 4:
				{
					new nameee[MAX_PLAYER_NAME];
					GetPlayerName(playerid,nameee,sizeof(nameee));
					format(YCMDstr, 227, "[AD] Объявление: %s. Прислал: %s (Отправил из SAN: %s)",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName], nameee);
					SendAdminMessage(COLOR_LIGHTRED, YCMDstr);
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++)
					{
						AdvertInfo[i][full][adPhone] = AdvertInfo[i+1][full][adPhone];
						strmid(AdvertInfo[i][full][adText],AdvertInfo[i+1][full][adText],0,strlen(AdvertInfo[i+1][full][adText]), 50);
						strmid(AdvertInfo[i][full][adName],AdvertInfo[i+1][full][adName],0,strlen(AdvertInfo[i+1][full][adName]), 50);
					}
					TOTALADVERT[full]--;
					SCM(playerid, COLOR_LIGHTRED, "Объявление отправлено администрации");
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
			}
		}
	case 11520: SPDEx(playerid, 11519, 2, "Объявления", " [1] Отправить объявление\n [2] Прочитать объявление\n [3] Редактировать объявление\n [4] Удалить объявление\n [5] Отправить администрации", "Принять", "Назад");
	case 11521:
		{
			if(!response) return SPDEx(playerid, 11519, 2, "Объявления", " [1] Отправить объявление\n [2] Прочитать объявление\n [3] Редактировать объявление\n [4] Удалить объявление\n [5] Отправить администрации", "Принять", "Назад");
			new full = 0;
			switch(PI[playerid][pMember])
			{
			case 9: full = 1;
			}
			if(!strlen(inputtext))
			{
				format(YCMDstr, 128, "Текст: %s. Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adName]);
				return SPDEx(playerid, 11521, 1, "Объявления", YCMDstr, "Принять", "Назад");
			}
			for(new i = strlen(inputtext); i != 0; --i)
			switch(inputtext[i])
			{
			case '{', '}':
				return SPDEx(playerid,5,0,"Ошибка!","Текст содержит символы HTML кода!","Повтор","");
			}
			if(strlen(inputtext) >= 80) return SCM(playerid, COLOR_GREY,"Сократите количество вводимых символов.");
			strmid(AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][adText], inputtext, 0, 128, 128);
			SCM(playerid, COLOR_LIGHTGREEN, "Объявление отредактировано и сохранено");
			SPDEx(playerid, 11519, 2, "Объявления", " [1] Отправить объявление\n [2] Прочитать объявление\n [3] Редактировать объявление\n [4] Удалить объявление\n [5] Отправить администрации", "Принять", "Назад");
		}
	case 2223:
		{
			if(response)
			{
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new newcar = GetPlayerVehicleID(playerid);
				switch(listitem)
				{
				case 0:
					{
						if(newcar >= cnncar[0] && newcar <= cnncar[1] || PlayerToPoint(30.0,playerid,2321.1382,-95.4250,1056.5680))
						{
							if(FL[playerid][PEfir] != 999)
							{
								FL[playerid][PEfir] = 999;
								format(YCMDstr, 128, "%s начал(а) прямой эфир", sendername);
								SendFamilyMessage(9,COLOR_GREEN, YCMDstr);
								return true;
							}
							else return SCM(playerid, COLOR_WHITE, "Вы уже в эфире");
						}
						else return SCM(playerid, COLOR_GREY, "Вы не в репортёрской машине / вертолёте / офисе!");
					}
				case 1:
					{
						if(FL[playerid][PEfir] != 255)
						{
							FL[playerid][PEfir] = 255;
							format(YCMDstr,128, "%s вышел(а) из прямого эфира", sendername);
							SendFamilyMessage(9,COLOR_GREEN, YCMDstr);
							return true;
						}
						else return SCM(playerid, COLOR_GRAD1, "Вы не в эфире");
					}
				case 2:
					{
						format(YCMDstr,128, "%s начал(а) приём звонков/sms от слушателей", sendername);
						SendFamilyMessage(9,COLOR_GREEN, YCMDstr);
						smssf = true;
						return true;
					}
				case 3:
					{
						format(YCMDstr,128, "%s завершил(а) приём звонков/sms от слушателей", sendername);
						SendFamilyMessage(9,COLOR_GREEN, YCMDstr);
						smssf = false;
						return true;
					}
				case 4: if(PI[playerid][pLeader] == 9) SPDEx(playerid,3001,1, "Цена за звонки и SMS", "Введите сумму", "Готово", "Отмена");
				case 5: { AdvertList(playerid); }
				}
			}
			return true;
		}
	case 10092:
		{
			if(response)
			{
				FL[playerid][useguns] = 1;
				SPDEx(playerid, 10098, 2, "Выберите работу", "- Таксист [с 1 LvL]\n- Мусорщик [с 1 LvL]\n- Уборщик улиц [с 1 LvL]\n- Механик [с 2 LvL]\n- Тренер [с 3 LvL]\n- Развозчик товаров [с 4 LvL]\n- Развозчик бензина [с 6 лвл]", "Устроиться", "Выход");
				return true;
			}
			else
			{
				return true;
			}
		}
	case 70:
		{
			if(response)
			{
				for(new i = 1; i <= TotalHouse; i++)
				{
					if(PlayerToPoint(3, playerid,House[i][hExitx], House[i][hExity], House[i][hExitz]))
					{
						if(GetPlayerVirtualWorld(playerid) == i+50)
						{
							SetPlayerInterior(playerid,0);
							SetPlayerVirtualWorld(playerid,0);
							SetPlayerPos(playerid,House[i][hEntrancex],House[i][hEntrancey],House[i][hEntrancez]);
							PI[playerid][pInt] = 0;
							PI[playerid][pLocal] = 255;
							return true;
						}
					}
				}
			}
			else
			{
			    new house = PI[playerid][pPhousekey];
			    if(House[house][hGarage] == 0) return SCM(playerid,COLOR_WHITE,"У Вас нет гаража");
				if(GetPlayerVirtualWorld(playerid) != house+50) return SCM(playerid,COLOR_GREY,"Войти в гараж можно только в своём доме.");
				SetPlayerInterior(playerid, 1);
				SetPlayerVirtualWorld(playerid, house+50);
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), house+50);
				SetPlayerFacingAngle(playerid, 88.0212);
				SetPlayerPos(playerid,2495.1804,-2565.7500,2501.0859);
				return true;
			}
		}
	case 76:
		{
			if(response)
			{
				SetPlayerSkin(playerid,InviteSkin[playerid]);
				PI[playerid][pMember] = FL[playerid][InviteOffer];
				PI[playerid][pRank] = 1;
				PI[playerid][pJob] = 0;
				PI[playerid][pModel] = InviteSkin[playerid];
				SetPlayerToTeamColor(playerid);
				return true;
			}
			else
			{
				InviteSkin[playerid] = 0;
				FL[playerid][InviteOffer] = INVALID_PLAYER_ID;
				return true;
			}
		}
	case 10023:
		{
			if(!response) return true;
			if(PI[playerid][pCash] < 500) return SCM(playerid, COLOR_GREY, "Недостаточно денег!");
			GameTextForPlayer(playerid, "~r~-500$", 5000, 1);
			PI[playerid][pCash] -= 500;
			CarLesson[playerid] = 1;
			SCM(playerid, COLOR_GREY, "Отправляйтесь на парковку и сядьте в свободный автомобиль");
		}
	case 10024:
		{
			if(!response) return true;
			if(PI[playerid][pCash] < 1000) return SCM(playerid, COLOR_GREY, "Недостаточно денег!");
			format(YCMDstr,256, "Ваш экзамен начался. Пройдите к причалу и сядьте в свободную лодку.\n\nДалее Вам будет показан маршрут, по которому Вы должны будете проехать.\n - Если во время экзамена лодка будет повреждена, экзамен будет завершен.");
			SPDEx(playerid,10028,0, "Морская школа",YCMDstr, "Ок", "Отмена");
			GameTextForPlayer(playerid, "~r~-$1000", 5000, 1);
			PI[playerid][pCash] -= 1000;
			BoatLesson[playerid] = 1;
		}
	case 10025:
		{
			if(!response) return true;
			if(PI[playerid][pCash] < 2000) return SCM(playerid, COLOR_GREY, "Недостаточно денег!");
			format(YCMDstr,256, "Ваш экзамен начался. Пройдите на стоянку и сядьте в свободный Аэроплан.\n\nДалее Вам будет показан маршрут, по которому Вы должны будете лететь.\n - Если во время экзамена аэроплан будет поврежден, экзамен будет завершен.");
			SPDEx(playerid,10029,0, "Школа пилотов",YCMDstr, "Готово", "Отмена");
			GameTextForPlayer(playerid, "~r~-$2000", 5000, 1);
			PI[playerid][pCash] -= 2000;
			FlyLesson[playerid] = 1;
		}
	case 11516:
		{
			if(response)
			{
				taxiexpp[GetPVarInt(playerid, "Taxist")] ++;
				DeletePVar(playerid, "Taxist");
			}
			else
			{
				DeletePVar(playerid, "Taxist");
			}
		}
	case 10098:
		{
			if(response)
			{
				FL[playerid][useguns] = 0;
				if(PI[playerid][pMember] != 0) return SCM(playerid, COLOR_GRAD1, "Вы состоите в организации");
				if(listitem == 0)
				{
					if(PI[playerid][pLevel] < 1) return SCM(playerid, COLOR_GRAD1, "Вам требуется 1 лвл");
					PI[playerid][pJob] = 4;
					SCM(playerid, 0x6495EDFF, "Вас успешно приняли на работу Водителя такси");
					SCM(playerid, 0x6495EDFF, "Отправляйтесь в таксопарк ( /gps -> Работа -> Таксопарк )");
					SCM(playerid, 0x6495EDFF, "Команды: /fare - начать/закончить работу водителя такси");
					return true;
				}
				else if(listitem == 1)
				{
					if(PI[playerid][pLevel] < 1) return SCM(playerid, COLOR_GRAD1, "Вам требуется 1 лвл");
					PI[playerid][pJob] = 11;
					SCM(playerid, 0x6495EDFF, "Вас успешно приняли на работу Мусорщика");
					SCM(playerid, 0x6495EDFF, "Отправляйтесь в Los Santos ( /gps -> Работа -> Мусорщик )");
					SCM(playerid, 0x6495EDFF, "Команды: /loadmus - загрузить мусор /unloadmus - разгрузить мусор на свалку");
					return true;
				}
				else if(listitem == 2)
				{
					if(PI[playerid][pLevel] < 1) return	SCM(playerid, COLOR_GRAD1, "Вам требуется 1 лвл");
					PI[playerid][pJob] = 19;
					SCM(playerid, 0x6495EDFF, "Вас успешно приняли на работу Уборщика улиц");
					SCM(playerid, 0x6495EDFF, "Отправляйтесь в San Fierro ( /gps -> Работа -> Уборщик улиц в СФ )");
					return true;
				}
				else if(listitem == 3)
				{
					if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_GRAD1, "Вам требуется 2 лвл");
					PI[playerid][pJob] = 2;
					SCM(playerid, 0x6495EDFF, "Вас успешно приняли на работу Механика");
					SCM(playerid, 0x6495EDFF, "Отправляйтесь в Автопарк ( /gps -> Работа -> Стоянка механиков )");
					SCM(playerid, 0x6495EDFF, "Команды: /mcontract - заключить контракт с заправкой, /repair - починить, /refill - заправить");
					return true;
				}
				else if(listitem == 4)
				{
					if(PI[playerid][pLevel] < 3) return	SCM(playerid, COLOR_GRAD1, "Вам требуется 3 лвл");
					PI[playerid][pJob] = 6;
					SCM(playerid, 0x6495EDFF, "Вас успешно приняли на работу Тренера");
					SCM(playerid, 0x6495EDFF, "Отправляйтесь в СпортЗал ЛС ( /gps -> Работа -> Тренер спортзала )");
					SCM(playerid, 0x6495EDFF, "Команды: /fgstyle - обучение стилям боя");
					return true;
				}
				else if(listitem == 5)
				{
					if(PI[playerid][pLevel] < 4) return	SCM(playerid, COLOR_GRAD1, "Вам требуется 4 лвл");
					PI[playerid][pJob] = 7;
					SCM(playerid, 0x6495EDFF, "Вас успешно приняли на работу развозчика товаров.");
					SCM(playerid, 0x6495EDFF, "[1]Возьмите грузовик. Мы указали Вам это место на карте.");
					SCM(playerid, 0x6495EDFF, "[2]Команды: /plist - посмотреть список заказов");
					SetPlayerCheckpoint(playerid, -491.0780,-523.9517,25.5178, 8);
					return true;
				}
				else if(listitem == 6)
				{
					if(PI[playerid][pLevel] < 6) return	SCM(playerid, COLOR_GRAD1, "Вам требуется 6 лвл");
					PI[playerid][pJob] = 8;
					SCM(playerid, 0x6495EDFF, "Вас успешно приняли на работу развозчика бензина.");
					SCM(playerid, 0x6495EDFF, "[1]Возьмите грузовик. Мы указали Вам это место на карте.");
					SCM(playerid, 0x6495EDFF, "[2]Команда: /flist - посмотреть список заказов");
					SetPlayerCheckpoint(playerid, -999.8867,-696.2427,32.0078, 8);
					return true;
				}
			}
			else
			{
				FL[playerid][useguns] = 0;
				return true;
			}
		}
	case 1010:
		{
			if(PI[playerid][pMember] > 0)
			{
				if(response)
				{
					if(FormaFrac[playerid] > 0) return SCM(playerid, COLOR_GREY, "Вы уже надели форму!");
					SCM(playerid, COLOR_BLUE, "Рабочий день начат");
					SetPlayerSkin(playerid, PI[playerid][pModel]);
					SetPlayerToTeamColor(playerid);
					FormaFrac[playerid] = PI[playerid][pMember];
					return true;
				}
				else
				{
					if(FormaFrac[playerid] == 0) return SCM(playerid, COLOR_GREY, "Вы не надевали форму!");
					SCM(playerid, COLOR_BLUE, "Рабочий день окончен");
					SetPlayerSkin(playerid, PI[playerid][pChar][PI[playerid][pViborChar]]);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					FormaFrac[playerid] = 0;
					SetPVarInt(playerid, "forma", 0);
					if(FL[playerid][Operation] == false)
					{
						SetPlayerArmour(playerid,0);
						_ResetGun(playerid);
					}
				}
			}
		}
    case 5521:
		{
			if(!response) return true;
			new sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(FL[playerid][HealOffer], giveplayer, sizeof(giveplayer));
			if(PI[playerid][pCash] < 500) return SCM(FL[playerid][HealOffer], COLOR_GREY, "У этого человека нет столько денег на руках!");
			PI[FL[playerid][HealOffer]][pCash] += 500;
			PI[playerid][pCash] -= 500;
			format(YCMDstr, 128,"Медик провёл с Вами сеанс от наркозависимости за $500");
			SCM(playerid, 0x6ab1ffaa, YCMDstr);
			format(YCMDstr, 128,"Вы провели сеанс с %s от наркозависимости. Стоимость: $500", Name(playerid));
			SCM(FL[playerid][HealOffer], 0x6ab1ffaa, YCMDstr);
			seans[playerid] = 1;
			PI[playerid][pNarcoLomka] = 0;
			PI[playerid][pAddiction] -= 1000;
			if(PI[playerid][pAddiction] < 500) PI[playerid][pAddiction] = 0;
		}
	case 5522:
		{
			if(!response) return true;
			new Float:tempheal, sendername[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME];
			GetPlayerHealth(playerid,tempheal);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(FL[playerid][HealOffer], giveplayer, sizeof(giveplayer));
			if(tempheal >= 100.0) return SCM(FL[playerid][HealOffer], COLOR_GRAD1, "Этот человек здоров!");
			if(tempheal >= 100.0) return SCM(playerid, COLOR_GRAD1, "Вы не нуждаетесь в медицинской помощи!");
			if(PI[playerid][pCash] < FL[playerid][HealPrice]) return SCM(FL[playerid][HealOffer], COLOR_GREY, "У этого человека нет столько денег на руках!");
			PI[FL[playerid][HealOffer]][pCash] += FL[playerid][HealPrice];
			PI[playerid][pCash] -= FL[playerid][HealPrice];
			format(YCMDstr, 128,"Медик вылечил Вас за $%d", FL[playerid][HealPrice]);
			SCM(playerid, 0x6ab1ffaa, YCMDstr);
			format(YCMDstr, 128,"Вы вылечили %s за $%d", Name(playerid), FL[playerid][HealPrice]);
			SCM(FL[playerid][HealOffer], 0x6ab1ffaa, YCMDstr);
			PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
			format(YCMDstr,128, "~g~+100hp~n~~r~-$%d", FL[playerid][HealPrice]);
			GameTextForPlayer(playerid, YCMDstr, 5000, 1);
			format(YCMDstr,128, "~g~+100hp~n~~g~+$%d", FL[playerid][HealPrice]);
			GameTextForPlayer(FL[playerid][HealOffer], YCMDstr, 5000, 1);
			SetPlayerHealthAC(playerid, 100);
			SetPVarInt(playerid, "startaddiction", 0);
			PI[playerid][pNarcoLomka] = 0;
			PI[playerid][pHospital] = 0;
			PI[playerid][pHospLS] = 0;
			PI[playerid][pHospSF] = 0;
		}
	case 12:
		{
			if(response)
			{
				FL[playerid][PEfir] = 999;
				FL[playerid][Pefir] = 0;
				new rulesdialogg[1324];
				format(rulesdialogg,sizeof(rulesdialogg), "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
				RulesMSGG[0],RulesMSGG[1],RulesMSGG[2],RulesMSGG[3],RulesMSGG[4],RulesMSGG[5],RulesMSGG[6],RulesMSGG[7],RulesMSGG[8],RulesMSGG[9],RulesMSGG[10],RulesMSGG[11],RulesMSGG[12],RulesMSGG[13],RulesMSGG[14],RulesMSGG[15],RulesMSGG[16],RulesMSGG[17],RulesMSGG[18],RulesMSGG[19],RulesMSGG[20],RulesMSGG[21]);
				SPDEx(playerid,1945,0, "{FFFF00}[2/3] Правила сервера", rulesdialogg, "Согласен", "Выйти");
				return true;
			}
			else
			{
				SCM(playerid, COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
				Kick(playerid);
			}
		}
	case 1945:
		{
			if(response)
			{
				if(strlen(inputtext) > 5 && strfind(inputtext, "@", true) != -1 && strfind(inputtext, ".", true) != -1)
				{
					SPDEx(playerid,2625,DIALOG_STYLE_INPUT, "По приглашению от:", "Введите ник игрока, пригласившего Вас на сервер", "Далее", "Пропуск");
				}
				else
				{
					SPDEx(playerid,2625,DIALOG_STYLE_INPUT, "По приглашению от:", "Введите ник игрока, пригласившего Вас на сервер", "Далее", "Пропуск");
				}
			}
			else
			{
				SPDEx(playerid,2625,DIALOG_STYLE_INPUT, "По приглашению от:", "Введите ник игрока, пригласившего Вас на сервер", "Далее", "Пропуск");
			}
			return true;
		}
	case 7779:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:	SPDEx(playerid, 100, 1, "Отобрать водительские права", "Введите [ID] человека", "Отобрать", "Отмена");
				case 1:	SPDEx(playerid, 103, 1, "Отобрать лицензию на полёты", "Введите [ID] человека", "Отобрать", "Отмена");
				case 2:	SPDEx(playerid, 105, 1, "Отобрать лицензию на вождение водного транспорта", "Введите [ID] человека", "Отобрать", "Отмена");
				case 3:	SPDEx(playerid, 106, 1, "Отобрать лицензию на оружие", "Введите [ID] человека", "Отобрать", "Отмена");
				case 4:	SPDEx(playerid, 108, 1, "Отобрать наркотики", "Введите [ID] человека", "Отобрать", "Отмена");
				case 5:	SPDEx(playerid, 109, 1, "Отобрать оружие", "Введите [ID] человека", "Отобрать", "Отмена");
				case 6: SPDEx(playerid, 110, 1, "Отобрать материалы", "Введите [ID] человека", "Отобрать", "Отмена");
				}
			}
			else
			{
				return true;
			}
		}
	case 100:
		{
			if(response)
			{
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SCM(playerid, COLOR_GREY, "[Ошибка] Человек не найден!");
				if(!ProxDetectorS(8.0, playerid, idd)) return	SCM(playerid, COLOR_GREY, "[Ошибка] Не рядом с вами!");
				GetPlayerName(idd, pname, sizeof(pname));
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(YCMDstr,128, "%s забрал у вас водительские права.", sendername);
				SCM(idd, 0x6495EDFF, YCMDstr);
				PI[idd][pCarLic] = 0;
				format(YCMDstr,128, "Вы забрали водительские права у %s.",pname,idd);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 103:
		{
			if(response)
			{
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SCM(playerid, COLOR_GREY, "[Ошибка] Человек не найден!");
				if(!ProxDetectorS(8.0, playerid, idd)) return SCM(playerid, COLOR_GREY, "[Ошибка] Не рядом с вами!");
				GetPlayerName(idd, pname, sizeof(pname));
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(YCMDstr,128, "%s забрал у вас лицензию на полёты", sendername);
				SCM(idd, 0x6495EDFF, YCMDstr);
				PI[idd][pFlyLic] = 0;
				format(YCMDstr,128, "Вы забрали  лицензию на полёты у %s.",pname,idd);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 105:
		{
			if(response)
			{
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SCM(playerid, COLOR_GREY, "[Ошибка] Человек не найден!");
				if(!ProxDetectorS(8.0, playerid, idd)) return SCM(playerid, COLOR_GREY, "[Ошибка] Не рядом с вами!");
				GetPlayerName(idd, pname, sizeof(pname));
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(YCMDstr,128, "%s забрал у вас лицензию на водный транспорт", sendername);
				SCM(idd, 0x6495EDFF, YCMDstr);
				PI[idd][pBoatLic] = 0;
				format(YCMDstr,128, "Вы забрали лицензию водный транспорт у %s.",pname,idd);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 106:
		{
			if(response)
			{
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SCM(playerid, COLOR_GREY, "[Ошибка] Человек не найден!");
				if(!ProxDetectorS(8.0, playerid, idd)) return SCM(playerid, COLOR_GREY, "[Ошибка] Не рядом с вами!");
				GetPlayerName(idd, pname, sizeof(pname));
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(YCMDstr,128, "%s забрал у вас лицензию на оружие", sendername);
				SCM(idd, 0x6495EDFF, YCMDstr);
				PI[idd][pGunLic] = 0;
				format(YCMDstr,128, "Вы забрали лицензию на оружие у %s.",pname,idd);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 108:
		{
			if(response)
			{
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SCM(playerid, COLOR_GREY, "[Ошибка] Человек не найден!");
				if(!ProxDetectorS(8.0, playerid, idd)) return SCM(playerid, COLOR_GREY, "[Ошибка] Не рядом с вами!");
				GetPlayerName(idd, pname, sizeof(pname));
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(YCMDstr,128, "%s забрал у вас все наркотики", sendername);
				SCM(idd, 0x6495EDFF, YCMDstr);
				PI[idd][pDrugs] = 0;
				format(YCMDstr,128, "Вы забрали наркотики у %s.",pname,idd);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 109:
		{
			if(response)
			{
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return	SCM(playerid, COLOR_GREY, "[Ошибка] Человек не найден!");
				if(!ProxDetectorS(8.0, playerid, idd)) return SCM(playerid, COLOR_GREY, "[Ошибка] Не рядом с вами!");
				GetPlayerName(idd, pname, sizeof(pname));
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(YCMDstr,128, "%s забрал у вас оружие", sendername);
				SCM(idd, 0x6495EDFF, YCMDstr);
				_ResetGun(idd);
				format(YCMDstr,128, "Вы забрали оружие у %s.",pname,idd);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 110:
		{
			if(response)
			{
				new pname[MAX_PLAYER_NAME];
				new idd = strval(inputtext);
				if(idd == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "[Ошибка] Человек не найден!");
				if(!ProxDetectorS(8.0, playerid, idd)) return SCM(playerid, COLOR_GREY, "[Ошибка] Не рядом с вами!");
				GetPlayerName(idd, pname, sizeof(pname));
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(YCMDstr,128, "%s забрал у вас материалы", sendername);
				SCM(idd, 0x6495EDFF, YCMDstr);
				PI[idd][pMats] = 0;
				format(YCMDstr,128, "Вы забрали материалы у %s.",pname,idd);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 1100:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: PlayAudioStreamForPlayer(playerid, "http://montecarlo.hostingradio.ru/montecarlo128.mp3");
				case 1: PlayAudioStreamForPlayer(playerid, "http://chanson.hostingradio.ru:8041/chanson256.mp3");
				case 2: PlayAudioStreamForPlayer(playerid, "http://emgregion.hostingradio.ru:8064/moscow.retrofm.mp3");
				case 3: PlayAudioStreamForPlayer(playerid, "http://emgregion.hostingradio.ru:8064/moscow.europaplus.mp3");
				case 4: StopAudioStreamForPlayer(playerid);
				}
			}
			return true;
		}
	case 9956:
		{
			if(response)
			{
				if(listitem == 0)
				{
					new online = 0;
					for(new idx=0, i=0; idx<cvector_size(players); idx++)
					{
						i = cvector_get(players, idx);
						if(PI[i][pJob] == 4) online++;
					}
					if(online == 0)
					{
						SCM(playerid, COLOR_GREY, "В данный момент нет таксистов на дежурстве!");
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
						return true;
					}
					format(YCMDstr, 190, " - Диспетчер: Человек нуждается в такси!{ffffff} ( Введите: /accept taxi, чтобы принять вызов )");
					SendJobMessage(4, COLOR_RED, YCMDstr);
					SCM(playerid, COLOR_RED, "- Диспетчер: ваше сообщение доставлено, подождите пока примут вызов");
					TaxiCall = playerid;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return true;
				}
				else if(listitem == 1)
				{
					new online = 0;
					for(new idx=0, i=0; idx<cvector_size(players); idx++)
					{
						i = cvector_get(players, idx);
						if(PI[i][pMember] == 4 && FormaFrac[i] == 4 || PI[i][pMember] == 8 && FormaFrac[i] == 8) online++;
					}
					if(online == 0)
					{
						SCM(playerid, COLOR_GREY, "В данный момент нет медиков на дежурстве!");
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
						return true;
					}
					format(YCMDstr,128, " - Диспетчер: Человек нуждается в медицинской помощи!{ffffff} ( Введите: /accept medic, чтобы принять вызов )");
					SendRadioMessage(4, COLOR_RED, YCMDstr);
					SendRadioMessage(8, COLOR_RED, YCMDstr);
					SCM(playerid, COLOR_RED, "- Диспетчер: Ваше сообщение доставлено, подождите пока примут вызов");
					MedicCall = playerid;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return true;
				}
				else if(listitem == 2)
				{
					new online = 0;
					for(new idx=0, i=0; idx<cvector_size(players); idx++)
					{
						i = cvector_get(players, idx);
						if(PI[i][pJob] == 2) online++;
					}
					if(online == 0)
					{
						SCM(playerid, COLOR_GREY, "В данный момент нет механиков на дежурстве!");
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
						return true;
					}
					format(YCMDstr,128, " - Диспетчер: Человек нуждается в помощи механика!{ffffff} ( Введите: /accept mechanic, чтобы принять вызов )");
					SendJobMessage(2, COLOR_RED, YCMDstr);
					SCM(playerid, COLOR_RED, "- Диспетчер: Ваше сообщение доставлено, подождите пока примут вызов");
					MechanicCall = playerid;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return true;
				}
				else if(listitem == 3)
				{
					new online = 0;
					for(new idx=0, i=0; idx<cvector_size(players); idx++)
					{
						i = cvector_get(players, idx);
						if(PI[i][pMember] == 21 && FormaFrac[i] == 21 || PI[i][pMember] == 10 && FormaFrac[i] == 10 || PI[i][pMember] == 1 && FormaFrac[i] == 1) online++;
					}
					if(online == 0)
					{
						SCM(playerid, COLOR_GREY, "В данный момент нет полицейских на дежурстве!");
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
						return true;
					}
					format(YCMDstr,128, " - Диспетчер: Человек нуждается в помощи полицейских!{ffffff} ( Введите: /accept police, чтобы принять вызов )");
					SendRadioMessage(1, COLOR_RED, YCMDstr);
					SendRadioMessage(10, COLOR_RED, YCMDstr);
					SendRadioMessage(21, COLOR_RED, YCMDstr);
					SCM(playerid, COLOR_RED, "- Диспетчер: Ваше сообщение доставлено, подождите пока примут вызов");
					PoliceCall = playerid;
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					return true;
				}
			}
			else
			{
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			}
			return true;
		}
	case 2330:// Общак байкеров
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "- Положить\n- Взять");
					SPDEx(playerid,551,2,"Деньги",YCMDstr,"Дальше","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "- Положить\n- Взять");
					SPDEx(playerid,552,2,"Наркотики",YCMDstr,"Дальше","Отмена");
				}
				if(listitem == 2)
				{
					format(YCMDstr,128, "- Положить\n- Взять");
					SPDEx(playerid,553,2,"Материалы",YCMDstr,"Дальше","Отмена");
				}
			}
		}
	case 551:// Деньги
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "{ffffff}Введите сумму денег которую Вы хотите положить в общак!");
					SPDEx(playerid,290,1,"- Положить в общак",YCMDstr,"Положить","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "{ffffff}Введите сумму денег которую Вы хотите взять!");
					SPDEx(playerid,291,1,"- Взять с общака",YCMDstr,"Взять","Отмена");
				}
			}
		}
	case 290:
		{
			if(response)
			{
				new cashdeposit = strval(inputtext);
				if(PI[playerid][pMember] == 23 || PI[playerid][pLeader] == 23)
				{
					if(cashdeposit > GetPlayerMoney(playerid) || cashdeposit < 1) return SCM(playerid, COLOR_GRAD2, "Неверное колличество!");
					else
					{
						if(FracBank[0][fsklbiker] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом байкеров");
						GiveMoney(playerid,- cashdeposit);
						format(YCMDstr,128, "Вы положили $%d в общак байкеров!", cashdeposit);
						SCM(playerid, COLOR_YELLOW, YCMDstr);
						new babki = FracBank[0][fMMoney] + cashdeposit;
						FracBank[0][fMMoney] = babki;
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_YELLOW, "Вы не состоите в байкерах/Вы не лидер");
					return 1;
				}
			}
		}
	case 291:
		{
			if(response)
			{
				new cashdeposit = strval(inputtext);
				if(PI[playerid][pLeader] == 23)
				{
					if(cashdeposit > FracBank[0][fMMoney] || cashdeposit < 1) return SCM(playerid, COLOR_GRAD2, "Неверное колличество!");
					else
					{
						if(FracBank[0][fsklbiker] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом байкеров");
						GiveMoney(playerid, cashdeposit);
						format(YCMDstr,128, "Вы взяли $%d с общака байкеров!", cashdeposit);
						SCM(playerid, COLOR_YELLOW, YCMDstr);
						new babki = FracBank[0][fMMoney] - cashdeposit;
						FracBank[0][fMMoney] = babki;
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_YELLOW, "Вы не состоите в Байкерах/Вы не лидер");
					return 1;
				}
			}
		}
	case 552:// Нарко
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "{ffffff}Введите кол-во которое Вы хотите положить");
					SPDEx(playerid,990,1,"- Положить в общак",YCMDstr,"Положить","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "{ffffff}Введите кол-во которое Вы хотите взять");
					SPDEx(playerid,991,1,"- Взять с общака",YCMDstr,"Взять","Отмена");
				}
			}
		}
	case 990:
		{
			if(response)
			{
				new dr = strval(inputtext);
				if(PI[playerid][pMember] == 23 || PI[playerid][pLeader] == 23)
				{
					if(dr > PI[playerid][pDrugs] || dr < 1) return SCM(playerid, COLOR_GRAD2, "Вы не имеете так много грамм нарко!");
					else
					{
						if(FracBank[0][fsklbiker] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом байкеров");
						PI[playerid][pDrugs] -= dr;
						format(YCMDstr,128, "Вы положили %d грамм в общак байкеров!", dr);
						SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
						new nark = FracBank[0][fMDrugs] + dr;
						FracBank[0][fMDrugs] = nark;
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_YELLOW, "Вы не состоите в байкерах!");
					return 1;
				}
			}
		}
	case 991:
		{
			if(response)
			{
				new dr = strval(inputtext);
				if(PI[playerid][pMember] == 23 || PI[playerid][pLeader] == 23)
				{
					if(PI[playerid][pRank] < 1) return SCM(playerid,COLOR_GREY,"У Вас слишком маленький ранг!");
					if(dr > FracBank[0][fMDrugs] || dr < 1) return SCM(playerid, COLOR_GRAD2, "В общаке нет столько нарко!");
					else
					{
						if(FracBank[0][fsklbiker] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом байкеров");
						if(PI[playerid][pDrugs] >= 400) return SCM(playerid,COLOR_GRAD1,"Нельзя взять больше нарко!");
						if(dr < 1 || dr > 100) { SCM(playerid, COLOR_GREY, "Нельзя брать меньше 1 и больше 100 нарко"); return true; }
						format(YCMDstr,128, "Вы взяли %d грамм с общака байкеров!", dr);
						SCM(playerid, COLOR_YELLOW, YCMDstr);
						new nark = FracBank[0][fMDrugs] - dr;
						FracBank[0][fMDrugs] = nark;
						PI[playerid][pDrugs] += dr;
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_YELLOW, "Вы не состоите в байкерах!");
					return 1;
				}
			}
		}
	case 553:// Материаллы
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr, 128, "{ffffff}Введите кол-во которое Вы хотите положить!");
					SPDEx(playerid,490,1,"- Положить в общак",YCMDstr,"Положить","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "{ffffff}Введите кол-во которое Вы хотите взять!");
					SPDEx(playerid,491,1,"- Взять с общака",YCMDstr,"Взять","Отмена");
				}
			}
		}
	case 490:
		{
			if(response)
			{
				new mt = strval(inputtext);
				if(PI[playerid][pMember] == 23 || PI[playerid][pLeader] == 23)
				{
					if(mt > PI[playerid][pMats] || mt < 1) return SCM(playerid, COLOR_YELLOW, "Вы не имеете так много материалов!");
					else
					{
						if(FracBank[0][fsklbiker] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом байкеров");
						PI[playerid][pMats] -= mt;
						format(YCMDstr,128, "Вы положили %d материалов в общак байкеров!", mt);
						SCM(playerid, COLOR_YELLOW, YCMDstr);
						new mat = FracBank[0][fMMats] + mt;
						FracBank[0][fMMats] = mat;
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_YELLOW, "Вы не состоите в байкерах!");
					return 1;
				}
			}
		}
	case 491:
		{
			if(response)
			{
				new mt = strval(inputtext);
				if(PI[playerid][pMember] == 23 || PI[playerid][pLeader] == 23)
				{
					if(PI[playerid][pRank] < 1) return SCM(playerid,COLOR_GREY,"У Вас слишком маленький ранг!");
					if (mt > FracBank[0][fMMats] || mt < 1) return SCM(playerid, COLOR_GRAD2, "В Общаке нет столько материалов!");
					else
					{
						if(FracBank[0][fsklbiker] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом байкеров");
						if(PI[playerid][pMats] > 500) return SCM(playerid,COLOR_GRAD1,"Нельзя взять больше материалов!");
						if(mt < 1 || mt > 500) return SCM(playerid, COLOR_GREY, "Нельзя брать меньше 1 и больше 500 материалов");
						format(YCMDstr,128, "Вы взяли %d материалов с общака байкеров!", mt);
						SCM(playerid, COLOR_YELLOW, YCMDstr);
						new mat = FracBank[0][fMMats] - mt;
						FracBank[0][fMMats] = mat;
						PI[playerid][pMats] += mt;
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_YELLOW, "Вы не состоите в байкерах!");
					return 1;
				}
			}
		}
	case 5220:// Общак Грув
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "- Положить\n- Взять");
					SPDEx(playerid,151,2,"- Деньги",YCMDstr,"Дальше","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "- Положить\n- Взять");
					SPDEx(playerid,152,2,"- Наркотики",YCMDstr,"Дальше","Отмена");
				}
				if(listitem == 2)
				{
					format(YCMDstr,128, "- Положить\n- Взять");
					SPDEx(playerid,153,2,"- Материалы",YCMDstr,"Дальше","Отмена");}
			}
		}
	case 151:// Деньги
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "{ffffff}Введите сумму денег которую Вы хотите положить в общак!");
					SPDEx(playerid,890,1,"- Положить в общак",YCMDstr,"Положить","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "{ffffff}Введите сумму денег которую Вы хотите взять!");
					SPDEx(playerid,891,1,"- Взять с общака",YCMDstr,"Взять","Отмена");
				}
			}
		}
	case 890:
		{
			if(response)
			{
				new cashdeposit = strval(inputtext);
				if(cashdeposit > GetPlayerMoney(playerid) || cashdeposit < 1) return SCM(playerid, COLOR_GRAD2, "Неверное колличество!");
				else
				{
					if(FracBank[0][fsklgrove] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
					GiveMoney(playerid,- cashdeposit);
					format(YCMDstr,128, "Вы положили $%d в общак банды!", cashdeposit);
					SCM(playerid, COLOR_YELLOW, YCMDstr);
					new babki = FracBank[0][fGMoney] + cashdeposit;
					FracBank[0][fGMoney] = babki;
					return 1;
				}
			}
		}
	case 891:
		{
			if(response)
			{
				new cashdeposit = strval(inputtext);
				if(PI[playerid][pLeader] == 15)
				{
					if(cashdeposit > FracBank[0][fGMoney] || cashdeposit < 1) return SCM(playerid, COLOR_GRAD2, "Неверное колличество!");
					else
					{
						if(FracBank[0][fsklgrove] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
						GiveMoney(playerid, cashdeposit);
						format(YCMDstr,128, "Вы взяли $%d с общака банды!", cashdeposit);
						SCM(playerid, COLOR_YELLOW, YCMDstr);
						new babki = FracBank[0][fGMoney] - cashdeposit;
						FracBank[0][fGMoney] = babki;
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_YELLOW, "Вы не состоите в Банде/Вы не лидер");
					return 1;
				}
			}
		}
	case 152:// Наркотики
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "{ffffff}Введите кол-во которое Вы хотите положить");
					SPDEx(playerid,690,1,"- Положить в Общак",YCMDstr,"Положить","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "{ffffff}Введите кол-во которое Вы хотите взять");
					SPDEx(playerid,691,1,"- Взять с общака",YCMDstr,"Взять","Отмена");
				}
			}
		}
	case 690:
		{
			if(response)
			{
				new dr = strval(inputtext);
				if(dr > PI[playerid][pDrugs] || dr < 1) return SCM(playerid, COLOR_GRAD2, "Вы не имеете так много грамм нарко!");
				else
				{
					if(FracBank[0][fsklgrove] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
					PI[playerid][pDrugs] -= dr;
					format(YCMDstr,128, "Вы положили %d грамм в общак банды!", dr);
					SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
					new nark = FracBank[0][fGDrugs] + dr;
					FracBank[0][fGDrugs] = nark;
					return 1;
				}
			}
		}
	case 691:
		{
			if(response)
			{
				new dr = strval(inputtext);
				if(PI[playerid][pMember] == 15 || PI[playerid][pLeader] == 15)
				{
					if(PI[playerid][pRank] < 2) return SCM(playerid,COLOR_GREY,"У Вас слишком маленький ранг!");
					if (dr > FracBank[0][fGDrugs] || dr < 1) return SCM(playerid, COLOR_GRAD2, "В общаке нет столько нарко!");
					else
					{
						if(FracBank[0][fsklgrove] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
						if(PI[playerid][pDrugs] >= 400) return SCM(playerid,COLOR_GRAD1,"Нельзя взять больше нарко!");
						if(dr < 1 || dr > 100) return SCM(playerid, COLOR_GREY, "Нельзя брать меньше 1 и больше 100 нарко");
						format(YCMDstr,128, "Вы взяли %d грамм с общака банды!", dr);
						SCM(playerid, COLOR_YELLOW, YCMDstr);
						new nark = FracBank[0][fGDrugs] - dr;
						FracBank[0][fGDrugs] = nark;
						PI[playerid][pDrugs] += dr;
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_YELLOW, "Вы не состоите в этой банде!");
					return 1;
				}
			}
		}
	case 153:// Материаллы
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "{ffffff}Введите кол-во которое Вы хотите положить!");
					SPDEx(playerid,590,1,"- Положить в Общак",YCMDstr,"Положить","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "{ffffff}Введите кол-во которое Вы хотите взять!");
					SPDEx(playerid,591,1,"- Взять с общака",YCMDstr,"Взять","Отмена");
				}
			}
		}
	case 590:
		{
			if(response)
			{
				new mt = strval(inputtext);
				if(mt > PI[playerid][pMats] || mt < 1) return SCM(playerid, COLOR_YELLOW, "Вы не имеете так много материалов!");
				else
				{
					if(FracBank[0][fsklgrove] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
					PI[playerid][pMats] -= mt;
					format(YCMDstr,128, "Вы положили %d материалов в общак банды!", mt);
					SCM(playerid, COLOR_YELLOW, YCMDstr);
					new mat = FracBank[0][fGMats] + mt;
					FracBank[0][fGMats] = mat;
					return 1;
				}
			}
		}
	case 591:
		{
			if(response)
			{
				new mt = strval(inputtext);
				if(PI[playerid][pMember] == 15 || PI[playerid][pLeader] == 15)
				{
					if(PI[playerid][pRank] < 2) return SCM(playerid,COLOR_GREY,"У Вас слишком маленький ранг!");
					if (mt > FracBank[0][fGMats] || mt < 1) return SCM(playerid, COLOR_GRAD2, "В Общаке нет столько материалов!");
					else
					{
						if(FracBank[0][fsklgrove] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
						if(PI[playerid][pMats] > 500) return SCM(playerid,COLOR_GRAD1,"Нельзя взять больше материалов!");
						if(mt < 1 || mt > 500) return SCM(playerid, COLOR_GREY, "Нельзя брать меньше 1 и больше 500 материалов");
						format(YCMDstr,128, "Вы взяли %d материалов с общака!", mt);
						SCM(playerid, COLOR_YELLOW, YCMDstr);
						new mat = FracBank[0][fGMats] - mt;
						FracBank[0][fGMats] = mat;
						PI[playerid][pMats] += mt;
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_YELLOW, "Вы не состоите в этой банде!");
					return 1;
				}
			}
		}
	case 7220:// Общак Вагос
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "- Положить\n- Взять");
					SPDEx(playerid,160,2,"- Деньги",YCMDstr,"Дальше","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "- Положить\n- Взять");
					SPDEx(playerid,170,2,"- Наркотики",YCMDstr,"Дальше","Отмена");
				}
				if(listitem == 2)
				{
					format(YCMDstr,128, "- Положить\n- Взять");
					SPDEx(playerid,180,2,"- Материалы",YCMDstr,"Дальше","Отмена");}
			}
		}
	case 160:// Деньги
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "{ffffff}Введитк кол-во денег которое Вы хотите положить!");
					SPDEx(playerid,1611,1,"- Положить в общак",YCMDstr,"Положить","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "{ffffff}Введите кол-во денег которое Вы хотите взять!");
					SPDEx(playerid,162,1,"- Взять с общака",YCMDstr,"Взять","Отмена");
				}
			}
		}
	case 1611:
		{
			if(response)
			{
				new cashdeposit = strval(inputtext);
				if(cashdeposit > GetPlayerMoney(playerid) || cashdeposit < 1) return SCM(playerid, COLOR_GRAD2, "Вы не имеете так много денег!");
				else
				{
					if(FracBank[0][fsklvagos] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
					GiveMoney(playerid,- cashdeposit);
					format(YCMDstr,128, "Вы положили $%d в общак банды!", cashdeposit);
					SCM(playerid, COLOR_YELLOW, YCMDstr);
					new babki = FracBank[0][fVMoney] + cashdeposit;
					FracBank[0][fVMoney] = babki;
					return 1;
				}
			}
		}
	case 162:
		{
			if(response)
			{
				new cashdeposit = strval(inputtext);
				if(PI[playerid][pLeader] == 13)
				{
					if(cashdeposit > FracBank[0][fVMoney] || cashdeposit < 1) return SCM(playerid, COLOR_GRAD2, "В Общаке нет столько денег!");
					else
					{
						if(FracBank[0][fsklvagos] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
						GiveMoney(playerid, cashdeposit);
						format(YCMDstr,128, "Вы взяли $%d с общака банды!", cashdeposit);
						SCM(playerid, COLOR_YELLOW, YCMDstr);
						new babki = FracBank[0][fVMoney] - cashdeposit;
						FracBank[0][fVMoney] = babki;
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_RED, "Вы не состоите в этой банде!");
					return 1;
				}
			}
		}
	case 170:// Наркотики
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "{ffffff}Количество нарко");
					SPDEx(playerid,171,1,"- Положить в общак",YCMDstr,"Положить","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "{ffffff}Взять нарко");
					SPDEx(playerid,172,1,"- Взять со склада",YCMDstr,"Взять","Отмена");
				}
			}
		}
	case 171:
		{
			if(response)
			{
				new dr = strval(inputtext);
				if(dr > PI[playerid][pDrugs] || dr < 1) return SCM(playerid, COLOR_GRAD2, "Вы не имеете так много грамм нарко!");
				else
				{
					if(FracBank[0][fsklvagos] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
					PI[playerid][pDrugs] -= dr;
					format(YCMDstr,128, "Вы положили %d грамм в общак банды!", dr);
					SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
					new nark = FracBank[0][fVDrugs] + dr;
					FracBank[0][fVDrugs] = nark;
					return 1;
				}
			}
		}
	case 172:
		{
			if(response)
			{
				new dr = strval(inputtext);
				if(PI[playerid][pMember] == 13 || PI[playerid][pLeader] == 13)
				{
					if(PI[playerid][pRank] < 2) return SCM(playerid,COLOR_GREY,"У Вас слишком маленький ранг!");
					if (dr > FracBank[0][fVDrugs] || dr < 1) return SCM(playerid, COLOR_GRAD2, "В общаке нет столько нарко!");
					else
					{
						if(FracBank[0][fsklvagos] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
						if(PI[playerid][pDrugs] >= 400) return SCM(playerid,COLOR_GRAD1,"Нельзя взять больше нарко!");
						if(dr < 1 || dr > 100) return SCM(playerid, COLOR_GREY, "Нельзя брать меньше 1 и больше 100 нарко");
						format(YCMDstr,128, "Вы взяли %d грамм с общака банды!", dr);
						SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
						new nark = FracBank[0][fVDrugs] - dr;
						FracBank[0][fVDrugs] = nark;
						PI[playerid][pDrugs] += dr;
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_RED, "Вы не состоите в этой банде!");
					return 1;
				}
			}
		}
	case 180:// Материаллы
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "{ffffff}Количество материалов");
					SPDEx(playerid,181,1,"- Положить Общак",YCMDstr,"Положить","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "{ffffff}Взять материалы");
					SPDEx(playerid,182,1,"- Взять с общака",YCMDstr,"Взять","Отмена");
				}
			}
		}
	case 181:
		{
			if(response)
			{
				new mt = strval(inputtext);
				if(mt > PI[playerid][pMats] || mt < 1) return SCM(playerid, COLOR_GRAD2, "Вы не имеете так много материалов!");
				else
				{
					if(FracBank[0][fsklvagos] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
					PI[playerid][pMats] -= mt;
					format(YCMDstr, 128, "Вы положили %d материалов в общак банды!", mt);
					SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
					new mat = FracBank[0][fVMats] + mt;
					FracBank[0][fVMats] = mat;
					return 1;
				}
			}
		}
	case 182:
		{
			if(response)
			{
				new mt = strval(inputtext);
				if(PI[playerid][pMember] == 13 || PI[playerid][pLeader] == 13)
				{
					if(PI[playerid][pRank] < 2) return SCM(playerid,COLOR_GREY,"У Вас слишком маленький ранг!");
					if (mt > FracBank[0][fVMats] || mt < 1) return SCM(playerid, COLOR_GRAD2, "В Общаке нет столько материалов!");
					else
					{
						if(FracBank[0][fsklvagos] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
						if(PI[playerid][pMats] > 500) return SCM(playerid,COLOR_GRAD1,"Нельзя взять больше материалов!");
						if(mt < 1 || mt > 500) return SCM(playerid, COLOR_GREY, "Нельзя брать меньше 1 и больше 500 материалов");
						format(YCMDstr,128, "Вы взяли %d материалов с общака банды!", mt);
						SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
						new mat = FracBank[0][fVMats] - mt;
						FracBank[0][fVMats] = mat;
						PI[playerid][pMats] += mt;
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_RED, "Вы не состоите в этой банде!");
					return 1;
				}
			}
		}
	case 8220:// Общак Азтек
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "- Положить\n- Взять");
					SPDEx(playerid,8222,2,"- Деньги",YCMDstr,"Дальше","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "- Положить\n- Взять");
					SPDEx(playerid,8223,2,"- Наркотики",YCMDstr,"Дальше","Отмена");
				}
				if(listitem == 2)
				{
					format(YCMDstr,128, "- Положить\n- Взять");
					SPDEx(playerid,8224,2,"- Материалы",YCMDstr,"Дальше","Отмена");}
			}
		}
	case 8222:// Деньги
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "{ffffff}Введите сумму денег которую Вы хотите положить");
					SPDEx(playerid,9001,1,"- Положить в общак",YCMDstr,"Положить","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "{ffffff}Введите сумму денег которую Вы хотите взять");
					SPDEx(playerid,9002,1,"- Взять с общака",YCMDstr,"Взять","Отмена");
				}
			}
		}
	case 9001:
		{
			if(response)
			{
				new cashdeposit = strval(inputtext);
				if(cashdeposit > GetPlayerMoney(playerid) || cashdeposit < 1) return SCM(playerid, COLOR_GRAD2, "Вы не имеете так много денег!");
				else
				{
					if(FracBank[0][fsklaztec] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
					GiveMoney(playerid,- cashdeposit);
					format(YCMDstr,128, "Вы положили $%d в общак банды!", cashdeposit);
					SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
					new babki = FracBank[0][fCMoney] + cashdeposit;
					FracBank[0][fCMoney] = babki;
					return 1;
				}
			}
		}
	case 9002:
		{
			if(response)
			{
				new cashdeposit = strval(inputtext);
				if(PI[playerid][pLeader] == 17)
				{
					if(cashdeposit > FracBank[0][fCMoney] || cashdeposit < 1) return SCM(playerid, COLOR_YELLOW, "В Общаке нет столько денег!");
					else
					{
						if(FracBank[0][fsklaztec] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
						GiveMoney(playerid, cashdeposit);
						format(YCMDstr,128, "Вы взяли $%d с общакa банды!", cashdeposit);
						SCM(playerid, COLOR_YELLOW, YCMDstr);
						new babki = FracBank[0][fCMoney] - cashdeposit;
						FracBank[0][fCMoney] = babki;
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_YELLOW, "Вы не состоите в этой банде!");
					return 1;
				}
			}
		}
	case 8223:// Наркотики
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "{ffffff}Количество нарко");
					SPDEx(playerid,9003,1,"- Положить общак",YCMDstr,"Положить","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "{ffffff}Взять нарко");
					SPDEx(playerid,9044,1,"- Взять с общака",YCMDstr,"Взять","Отмена");
				}
			}
		}
	case 9003:
		{
			if(response)
			{
				new dr = strval(inputtext);
				if (dr > PI[playerid][pDrugs] || dr < 1) return SCM(playerid, COLOR_GRAD2, "Вы не имеете так много грамм нарко! ");
				else
				{
					if(FracBank[0][fsklaztec] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
					PI[playerid][pDrugs] -= dr;
					format(YCMDstr,128, "Вы положили %d грамм в общак банды!", dr);
					SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
					new nark = FracBank[0][fCDrugs] + dr;
					FracBank[0][fCDrugs] = nark;
					return 1;
				}
			}
		}
	case 9044:
		{
			if(response)
			{
				new dr = strval(inputtext);
				if(PI[playerid][pMember] == 17 || PI[playerid][pLeader] == 17)
				{
					if(PI[playerid][pRank] < 2) return SCM(playerid,COLOR_GREY,"У Вас слишком маленький ранг!");
					if (dr > FracBank[0][fCDrugs] || dr < 1) return SCM(playerid, COLOR_GRAD2, "В общяке нет столько нарко!");
					else
					{
						if(FracBank[0][fsklaztec] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
						if(PI[playerid][pDrugs] >= 400) return SCM(playerid,COLOR_GRAD1,"Нельзя взять больше нарко!");
						if(dr < 1 || dr > 100) return SCM(playerid, COLOR_GREY, "Нельзя брать меньше 1 и больше 100 нарко");
						format(YCMDstr,128, "Вы взяли %d грамм с общака банды!", dr);
						SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
						new nark = FracBank[0][fCDrugs] - dr;
						FracBank[0][fCDrugs] = nark;
						PI[playerid][pDrugs] += dr;
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_RED, "Вы не состоите в этой банде!");
					return 1;
				}
			}
		}
	case 8224:// Материаллы
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "{ffffff}Количество материалов");
					SPDEx(playerid,9004,1,"- Отдать общаку Aztec",YCMDstr,"Положить","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "{ffffff}Взять материалы");
					SPDEx(playerid,9005,1,"- Взять со склада Aztec",YCMDstr,"Взять","Отмена");
				}
			}
		}
	case 9004:
		{
			if(response)
			{
				new mt = strval(inputtext);
				if(mt > PI[playerid][pMats] || mt < 1) return SCM(playerid, COLOR_GRAD2, "Вы не имеете так много материалов!");
				else
				{
					if(FracBank[0][fsklaztec] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
					PI[playerid][pMats] -= mt;
					format(YCMDstr,128, "Вы положили %d материалов в общак банды!", mt);
					SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
					new mat = FracBank[0][fCMats] + mt;
					FracBank[0][fCMats] = mat;
					return 1;
				}
			}
		}
	case 9005:
		{
			if(response)
			{
				new mt = strval(inputtext);
				if(PI[playerid][pMember] == 17 || PI[playerid][pLeader] == 17)
				{
					if(PI[playerid][pRank] < 2) return SCM(playerid,COLOR_GREY,"У Вас слишком маленький ранг!");
					if(mt > FracBank[0][fCMats] || mt < 1) return SCM(playerid, COLOR_GRAD2, "В Общаке нет столько материалов!");
					else
					{
						if(FracBank[0][fsklaztec] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
						if(PI[playerid][pMats] > 500) return SCM(playerid,COLOR_GRAD1,"Нельзя взять больше материалов!");
						if(mt < 1 || mt > 500) return SCM(playerid, COLOR_GREY, "Нельзя брать меньше 1 и больше 500 материалов");
						format(YCMDstr,128, "Вы взяли %d материалов с общака банды!", mt);
						SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
						new mat = FracBank[0][fCMats] - mt;
						FracBank[0][fCMats] = mat;
						PI[playerid][pMats] += mt;
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_RED, "Вы не состоите в этой банде!");
					return 1;
				}
			}
		}
	case 9330:// Общак Рифа
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "- Положить\n- Взять");
					SPDEx(playerid,9331,2,"- Деньги",YCMDstr,"Дальше","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "- Положить\n- Взять");
					SPDEx(playerid,9450,2,"- Наркотики",YCMDstr,"Дальше","Отмена");
				}
				if(listitem == 2)
				{
					format(YCMDstr,128, "- Положить\n- Взять");
					SPDEx(playerid,9540,2,"- Материалы",YCMDstr,"Дальше","Отмена");}
			}
		}
	case 9331:// Деньги
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "{ffffff}Сумма денег");
					SPDEx(playerid,9332,1,"- Положить в общак Rifa",YCMDstr,"Положить","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "{ffffff}Взять деньги");
					SPDEx(playerid,9333,1,"- Взять с общака Rifa",YCMDstr,"Взять","Отмена");
				}
			}
		}
	case 9332:
		{
			if(response)
			{
				new cashdeposit = strval(inputtext);
				if(cashdeposit > GetPlayerMoney(playerid) || cashdeposit < 1) return SCM(playerid, COLOR_GRAD2, "Вы не имеете так много денег!");
				else
				{
					if(FracBank[0][fsklrifa] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
					GiveMoney(playerid,- cashdeposit);
					format(YCMDstr,128, "Вы положили $%d в общак банды!", cashdeposit);
					SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
					new babki = FracBank[0][fRMoney] + cashdeposit;
					FracBank[0][fRMoney] = babki;
					return 1;
				}
			}
		}
	case 9333:
		{
			if(response)
			{
				new cashdeposit = strval(inputtext);
				if(PI[playerid][pLeader] == 18)
				{
					if(cashdeposit > FracBank[0][fRMoney] || cashdeposit < 1) return SCM(playerid, COLOR_GRAD2, "В Общаке нет столько денег!");
					else
					{
						if(FracBank[0][fsklrifa] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
						GiveMoney(playerid, cashdeposit);
						format(YCMDstr,128, "Вы взяли $%d с общака банды!", cashdeposit);
						SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
						new babki = FracBank[0][fRMoney] - cashdeposit;
						FracBank[0][fRMoney] = babki;
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_RED, "Вы не состоите в этой банде!");
					return 1;
				}
			}
		}
	case 9450:// Наркотики
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "{ffffff}Количество нарко");
					SPDEx(playerid,9451,1,"- Положить в общак",YCMDstr,"Положить","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "{ffffff}Взять нарко");
					SPDEx(playerid,9452,1,"- Взять с общака",YCMDstr,"Взять","Отмена");
				}
			}
		}
	case 9451:
		{
			if(response)
			{
				new dr = strval(inputtext);
				if (dr > PI[playerid][pDrugs] || dr < 1) return SCM(playerid, COLOR_GRAD2, "Вы не имеете так много грамм нарко! ");
				else
				{
					if(FracBank[0][fsklrifa] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
					PI[playerid][pDrugs] -= dr;
					format(YCMDstr,128, "Вы положили %d грамм в общак банды!", dr);
					SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
					new nark = FracBank[0][fRDrugs] + dr;
					FracBank[0][fRDrugs] = nark;
					return 1;
				}
			}
		}
	case 9452:
		{
			if(response)
			{
				new dr = strval(inputtext);
				if(PI[playerid][pMember] == 18 || PI[playerid][pLeader] == 18)
				{
					if(PI[playerid][pRank] < 2) return SCM(playerid,COLOR_GREY,"У Вас слишком маленький ранг!");
					if(dr > FracBank[0][fRDrugs] || dr < 1) return SCM(playerid, COLOR_GRAD2, "В общяке нет столько нарко!");
					else
					{
						if(FracBank[0][fsklrifa] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
						if(PI[playerid][pDrugs] >= 400) return SCM(playerid,COLOR_GRAD1,"Нельзя взять больше нарко!");
						if(dr < 1 || dr > 100) return SCM(playerid, COLOR_GREY, "Нельзя брать меньше 1 и больше 100 нарко");
						format(YCMDstr,128, "Вы взяли %d грамм с общака банды!", dr);
						SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
						new nark = FracBank[0][fRDrugs] - dr;
						FracBank[0][fRDrugs] = nark;
						PI[playerid][pDrugs] += dr;
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_RED, "Вы не состоите в этой банде!");
					return 1;
				}
			}
		}
	case 9540:// Материаллы
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "{ffffff}Количество материалов");
					SPDEx(playerid,9541,1,"- Положить в общак",YCMDstr,"Положить","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "{ffffff}Взять материалы");
					SPDEx(playerid,9542,1,"-  Взять с общака",YCMDstr,"Взять","Отмена");
				}
			}
		}
	case 9541:
		{
			if(response)
			{
				new mt = strval(inputtext);
				if(mt > PI[playerid][pMats] || mt < 1) return SCM(playerid, COLOR_GRAD2, "Вы не имеете так много материалов!");
				else
				{
					if(FracBank[0][fsklrifa] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
					PI[playerid][pMats] -= mt;
					format(YCMDstr,128, "Вы положили %d материалов в общак банды!", mt);
					SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
					new mat = FracBank[0][fRMats] + mt;
					FracBank[0][fRMats] = mat;
					return 1;
				}
			}
		}
	case 9542:
		{
			if(!response) return true;
			new mt = strval(inputtext);
			if(PI[playerid][pMember] != 18 || PI[playerid][pLeader] != 18) return SCM(playerid,COLOR_RED, "Вы не состоите в этой банде!");
			if(PI[playerid][pRank] < 2) return SCM(playerid,COLOR_GREY,"У Вас слишком маленький ранг!");
			if(mt > FracBank[0][fRMats] || mt < 1) return SCM(playerid, COLOR_GRAD2, "В Общаке нет столько материалов!");
			if(FracBank[0][fsklrifa] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
			if(PI[playerid][pMats] > 500) return SCM(playerid,COLOR_GRAD1,"Нельзя взять больше материалов!");
			if(mt < 1 || mt > 500) return SCM(playerid, COLOR_GREY, "Нельзя брать меньше 1 и больше 500 материалов");
			format(YCMDstr,128, "Вы взяли %d материалов с общака банды!", mt);
			SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
			new mat = FracBank[0][fRMats] - mt;
			FracBank[0][fRMats] = mat;
			PI[playerid][pMats] += mt;
		}
	case 8000:
		{
		    if(!response) return true;
		    new actplayerid = GetPVarInt(playerid,"actplayerid");
			new my_ID = GetPVarInt(playerid,"my_ID");
		    switch(listitem)
		    {
		        case 0: { PI[actplayerid][pModel] = 284; SetPlayerSkin(actplayerid,284); }
		        case 1: { PI[actplayerid][pModel] = 280; SetPlayerSkin(actplayerid,69); }
		        case 2: { PI[actplayerid][pModel] = 281; SetPlayerSkin(actplayerid,281); }
		        case 3: { PI[actplayerid][pModel] = 282; SetPlayerSkin(actplayerid,282); }
		        case 4: { PI[actplayerid][pModel] = 265; SetPlayerSkin(actplayerid,265); }
		        case 5: { PI[actplayerid][pModel] = 266; SetPlayerSkin(actplayerid,266); }
		        case 6: { PI[actplayerid][pModel] = 285; SetPlayerSkin(actplayerid,285); }
		        case 7: { PI[actplayerid][pModel] = 288; SetPlayerSkin(actplayerid,288); }
		        case 8: { PI[actplayerid][pModel] = 76; SetPlayerSkin(actplayerid,76); }
		 	}
		 	format(YCMDstr, 69, " %s выдал Вам новую форму",Name(my_ID));
			SCM(actplayerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 69, " Вы выдали новую форму сотруднику ",Name(actplayerid));
			SCM(my_ID, COLOR_BLUE, YCMDstr);
 		}
	case 8001:
		{
		    if(!response) return true;
		    new actplayerid = GetPVarInt(playerid,"actplayerid");
		    new my_ID = GetPVarInt(playerid,"my_ID");
		    switch(listitem)
		    {
		        case 0: { PI[actplayerid][pModel] = 163; SetPlayerSkin(actplayerid,163); }
		        case 1: { PI[actplayerid][pModel] = 164; SetPlayerSkin(actplayerid,164); }
		        case 2: { PI[actplayerid][pModel] = 286; SetPlayerSkin(actplayerid,286); }
		        case 3: { PI[actplayerid][pModel] = 285; SetPlayerSkin(actplayerid,285); }
		        case 4: { PI[actplayerid][pModel] = 165; SetPlayerSkin(actplayerid,165); }
		        case 5: { PI[actplayerid][pModel] = 166; SetPlayerSkin(actplayerid,166); }
		        case 6: { PI[actplayerid][pModel] = 141; SetPlayerSkin(actplayerid,141); }
		 	}
		 	format(YCMDstr, 69, " %s выдал Вам новую форму",Name(my_ID));
			SCM(actplayerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 69, " Вы выдали новую форму сотруднику ",Name(actplayerid));
			SCM(my_ID, COLOR_BLUE, YCMDstr);
 		}
	case 8002:
		{
		    if(!response) return true;
		    new actplayerid = GetPVarInt(playerid,"actplayerid");
		    new my_ID = GetPVarInt(playerid,"my_ID");
		    switch(listitem)
		    {
		        case 0: { PI[actplayerid][pModel] = 287; SetPlayerSkin(actplayerid,287); }
		        case 1: { PI[actplayerid][pModel] = 179; SetPlayerSkin(actplayerid,179); }
		        case 2: { PI[actplayerid][pModel] = 191; SetPlayerSkin(actplayerid,191); }
		 	}
		 	format(YCMDstr, 69, " %s выдал Вам новую форму",Name(my_ID));
			SCM(actplayerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 69, " Вы выдали новую форму сотруднику ",Name(actplayerid));
			SCM(my_ID, COLOR_BLUE, YCMDstr);
 		}
	case 8003:
		{
		    if(!response) return true;
		    new actplayerid = GetPVarInt(playerid,"actplayerid");
		    new my_ID = GetPVarInt(playerid,"my_ID");
		    switch(listitem)
		    {
		        case 0: { PI[actplayerid][pModel] = 124; SetPlayerSkin(actplayerid,124); }
		        case 1: { PI[actplayerid][pModel] = 240; SetPlayerSkin(actplayerid,240); }
		        case 2: { PI[actplayerid][pModel] = 126; SetPlayerSkin(actplayerid,126); }
		        case 3: { PI[actplayerid][pModel] = 223; SetPlayerSkin(actplayerid,223); }
		        case 4: { PI[actplayerid][pModel] = 113; SetPlayerSkin(actplayerid,113); }
		        case 5: { PI[actplayerid][pModel] = 43; SetPlayerSkin(actplayerid,43); }
		        case 6: { PI[actplayerid][pModel] = 214; SetPlayerSkin(actplayerid,214); }
		 	}
		 	format(YCMDstr, 69, " %s выдал Вам новую форму",Name(my_ID));
			SCM(actplayerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 69, " Вы выдали новую форму сотруднику ",Name(actplayerid));
			SCM(my_ID, COLOR_BLUE, YCMDstr);
 		}
	case 8004:
		{
		    if(!response) return true;
		    new actplayerid = GetPVarInt(playerid,"actplayerid");
		    new my_ID = GetPVarInt(playerid,"my_ID");
		    switch(listitem)
		    {
		        case 0: { PI[actplayerid][pModel] = 121; SetPlayerSkin(actplayerid,121); }
		        case 1: { PI[actplayerid][pModel] = 122; SetPlayerSkin(actplayerid,122); }
		        case 2: { PI[actplayerid][pModel] = 123; SetPlayerSkin(actplayerid,123); }
		        case 3: { PI[actplayerid][pModel] = 120; SetPlayerSkin(actplayerid,120); }
		        case 4: { PI[actplayerid][pModel] = 208; SetPlayerSkin(actplayerid,208); }
		        case 5: { PI[actplayerid][pModel] = 117; SetPlayerSkin(actplayerid,117); }
		        case 6: { PI[actplayerid][pModel] = 186; SetPlayerSkin(actplayerid,186); }
		        case 7: { PI[actplayerid][pModel] = 169; SetPlayerSkin(actplayerid,169); }
		 	}
		 	format(YCMDstr, 69, " %s выдал Вам новую форму",Name(my_ID));
			SCM(actplayerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 69, " Вы выдали новую форму сотруднику ",Name(actplayerid));
			SCM(my_ID, COLOR_BLUE, YCMDstr);
 		}
	case 8005:
		{
		    if(!response) return true;
		    new actplayerid = GetPVarInt(playerid,"actplayerid");
		    new my_ID = GetPVarInt(playerid,"my_ID");
		    switch(listitem)
		    {
		        case 0: { PI[actplayerid][pModel] = 274; SetPlayerSkin(actplayerid,121); }
		        case 1: { PI[actplayerid][pModel] = 276; SetPlayerSkin(actplayerid,276); }
		        case 2: { PI[actplayerid][pModel] = 275; SetPlayerSkin(actplayerid,275); }
		        case 3: { PI[actplayerid][pModel] = 219; SetPlayerSkin(actplayerid,219); }
		 	}
		 	format(YCMDstr, 69, " %s выдал Вам новую форму",Name(my_ID));
			SCM(actplayerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 69, " Вы выдали новую форму сотруднику ",Name(actplayerid));
			SCM(my_ID, COLOR_BLUE, YCMDstr);
 		}
	case 8006:
		{
		    if(!response) return true;
		    new actplayerid = GetPVarInt(playerid,"actplayerid");
		    new my_ID = GetPVarInt(playerid,"my_ID");
		    switch(listitem)
		    {
		        case 0: { PI[actplayerid][pModel] = 250; SetPlayerSkin(actplayerid,121); }
		        case 1: { PI[actplayerid][pModel] = 170; SetPlayerSkin(actplayerid,276); }
		        case 2: { PI[actplayerid][pModel] = 188; SetPlayerSkin(actplayerid,275); }
		        case 3: { PI[actplayerid][pModel] = 217; SetPlayerSkin(actplayerid,219); }
		        case 4: { PI[actplayerid][pModel] = 240; SetPlayerSkin(actplayerid,219); }
		        case 5: { PI[actplayerid][pModel] = 261; SetPlayerSkin(actplayerid,219); }
		        case 6: { PI[actplayerid][pModel] = 211; SetPlayerSkin(actplayerid,219); }
		 	}
		 	format(YCMDstr, 69, " %s выдал Вам новую форму",Name(my_ID));
			SCM(actplayerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 69, " Вы выдали новую форму сотруднику ",Name(actplayerid));
			SCM(my_ID, COLOR_BLUE, YCMDstr);
 		}
   case 8007:
		{
		    if(!response) return true;
		    new actplayerid = GetPVarInt(playerid,"actplayerid");
		    new my_ID = GetPVarInt(playerid,"my_ID");
		    switch(listitem)
		    {
		        case 0: { PI[actplayerid][pModel] = 103; SetPlayerSkin(actplayerid,103); }
		        case 1: { PI[actplayerid][pModel] = 104; SetPlayerSkin(actplayerid,104); }
		        case 2: { PI[actplayerid][pModel] = 102; SetPlayerSkin(actplayerid,102); }
		        case 3: { PI[actplayerid][pModel] = 195; SetPlayerSkin(actplayerid,195); }
		 	}
		 	format(YCMDstr, 69, " %s выдал Вам новую форму",Name(my_ID));
			SCM(actplayerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 69, " Вы выдали новую форму сотруднику ",Name(actplayerid));
			SCM(my_ID, COLOR_BLUE, YCMDstr);
 		}
	case 8008:
		{
		    if(!response) return true;
		    new actplayerid = GetPVarInt(playerid,"actplayerid");
		    new my_ID = GetPVarInt(playerid,"my_ID");
		    switch(listitem)
		    {
		        case 0: { PI[actplayerid][pModel] = 108; SetPlayerSkin(actplayerid,108); }
		        case 1: { PI[actplayerid][pModel] = 109; SetPlayerSkin(actplayerid,109); }
		        case 2: { PI[actplayerid][pModel] = 110; SetPlayerSkin(actplayerid,110); }
		        case 3: { PI[actplayerid][pModel] = 56; SetPlayerSkin(actplayerid,56); }
		 	}
		 	format(YCMDstr, 69, " %s выдал Вам новую форму",Name(my_ID));
			SCM(actplayerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 69, " Вы выдали новую форму сотруднику ",Name(actplayerid));
			SCM(my_ID, COLOR_BLUE, YCMDstr);
 		}
	case 8009:
		{
		    if(!response) return true;
		    new actplayerid = GetPVarInt(playerid,"actplayerid");
		    new my_ID = GetPVarInt(playerid,"my_ID");
		    switch(listitem)
		    {
		        case 0: { PI[actplayerid][pModel] = 112; SetPlayerSkin(actplayerid,112); }
		        case 1: { PI[actplayerid][pModel] = 111; SetPlayerSkin(actplayerid,111); }
		        case 2: { PI[actplayerid][pModel] = 127; SetPlayerSkin(actplayerid,127); }
		        case 3: { PI[actplayerid][pModel] = 125; SetPlayerSkin(actplayerid,125); }
		        case 4: { PI[actplayerid][pModel] = 46; SetPlayerSkin(actplayerid,46); }
		        case 5: { PI[actplayerid][pModel] = 98; SetPlayerSkin(actplayerid,98); }
		        case 6: { PI[actplayerid][pModel] = 272; SetPlayerSkin(actplayerid,272); }
		        case 7: { PI[actplayerid][pModel] = 263; SetPlayerSkin(actplayerid,263); }
		 	}
		 	format(YCMDstr, 69, " %s выдал Вам новую форму",Name(my_ID));
			SCM(actplayerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 69, " Вы выдали новую форму сотруднику ",Name(actplayerid));
			SCM(my_ID, COLOR_BLUE, YCMDstr);
 		}
	case 8010:
		{
		    if(!response) return true;
		    new actplayerid = GetPVarInt(playerid,"actplayerid");
		    new my_ID = GetPVarInt(playerid,"my_ID");
		    switch(listitem)
		    {
		        case 0: { PI[actplayerid][pModel] = 105; SetPlayerSkin(actplayerid,105); }
		        case 1: { PI[actplayerid][pModel] = 106; SetPlayerSkin(actplayerid,106); }
		        case 2: { PI[actplayerid][pModel] = 107; SetPlayerSkin(actplayerid,107); }
		        case 3: { PI[actplayerid][pModel] = 271; SetPlayerSkin(actplayerid,271); }
		        case 4: { PI[actplayerid][pModel] = 65; SetPlayerSkin(actplayerid,65); }
		 	}
		 	format(YCMDstr, 69, " %s выдал Вам новую форму",Name(my_ID));
			SCM(actplayerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 69, " Вы выдали новую форму сотруднику ",Name(actplayerid));
			SCM(my_ID, COLOR_BLUE, YCMDstr);
 		}
	case 8011:
		{
		    if(!response) return true;
		    new actplayerid = GetPVarInt(playerid,"actplayerid");
		    new my_ID = GetPVarInt(playerid,"my_ID");
		    switch(listitem)
		    {
		        case 0: { PI[actplayerid][pModel] = 114; SetPlayerSkin(actplayerid,114); }
		        case 1: { PI[actplayerid][pModel] = 115; SetPlayerSkin(actplayerid,115); }
		        case 2: { PI[actplayerid][pModel] = 116; SetPlayerSkin(actplayerid,116); }
		        case 3: { PI[actplayerid][pModel] = 193; SetPlayerSkin(actplayerid,193); }
		 	}
		 	format(YCMDstr, 69, " %s выдал Вам новую форму",Name(my_ID));
			SCM(actplayerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 69, " Вы выдали новую форму сотруднику ",Name(actplayerid));
			SCM(my_ID, COLOR_BLUE, YCMDstr);
 		}
	case 8012:
		{
		    if(!response) return true;
		    new actplayerid = GetPVarInt(playerid,"actplayerid");
		    new my_ID = GetPVarInt(playerid,"my_ID");
		    switch(listitem)
		    {
		        case 0: { PI[actplayerid][pModel] = 175; SetPlayerSkin(actplayerid,175); }
		        case 1: { PI[actplayerid][pModel] = 174; SetPlayerSkin(actplayerid,174); }
		        case 2: { PI[actplayerid][pModel] = 173; SetPlayerSkin(actplayerid,173); }
		        case 3: { PI[actplayerid][pModel] = 226; SetPlayerSkin(actplayerid,226); }
		 	}
		 	format(YCMDstr, 69, " %s выдал Вам новую форму",Name(my_ID));
			SCM(actplayerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 69, " Вы выдали новую форму сотруднику ",Name(actplayerid));
			SCM(my_ID, COLOR_BLUE, YCMDstr);
 		}
	case 8013:
		{
		    if(!response) return true;
		    new actplayerid = GetPVarInt(playerid,"actplayerid");
		    new my_ID = GetPVarInt(playerid,"my_ID");
		    switch(listitem)
		    {
		        case 0: { PI[actplayerid][pModel] = 163; SetPlayerSkin(actplayerid,163); }
		        case 1: { PI[actplayerid][pModel] = 98; SetPlayerSkin(actplayerid,98); }
		        case 2: { PI[actplayerid][pModel] = 57; SetPlayerSkin(actplayerid,57); }
		        case 3: { PI[actplayerid][pModel] = 187; SetPlayerSkin(actplayerid,187); }
		        case 4: { PI[actplayerid][pModel] = 227; SetPlayerSkin(actplayerid,227); }
		        case 5: { PI[actplayerid][pModel] = 17; SetPlayerSkin(actplayerid,17); }
		        case 6: { PI[actplayerid][pModel] = 255; SetPlayerSkin(actplayerid,255); }
		        case 7: { PI[actplayerid][pModel] = 228; SetPlayerSkin(actplayerid,228); }
		        case 8: { PI[actplayerid][pModel] = 147; SetPlayerSkin(actplayerid,147); }
		        case 9: { PI[actplayerid][pModel] = 150; SetPlayerSkin(actplayerid,150); }
		 	}
		 	format(YCMDstr, 69, " %s выдал Вам новую форму",Name(my_ID));
			SCM(actplayerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 69, " Вы выдали новую форму сотруднику ",Name(actplayerid));
			SCM(my_ID, COLOR_BLUE, YCMDstr);
 		}
	case 8014:
		{
		    if(!response) return true;
		    new actplayerid = GetPVarInt(playerid,"actplayerid");
		    new my_ID = GetPVarInt(playerid,"my_ID");
		    switch(listitem)
		    {
		        case 0: { PI[actplayerid][pModel] = 254; SetPlayerSkin(actplayerid,254); }
		        case 1: { PI[actplayerid][pModel] = 248; SetPlayerSkin(actplayerid,248); }
		        case 2: { PI[actplayerid][pModel] = 181; SetPlayerSkin(actplayerid,181); }
		        case 3: { PI[actplayerid][pModel] = 100; SetPlayerSkin(actplayerid,100); }
		        case 4: { PI[actplayerid][pModel] = 298; SetPlayerSkin(actplayerid,298); }
		 	}
		 	format(YCMDstr, 69, " %s выдал Вам новую форму",Name(my_ID));
			SCM(actplayerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 69, " Вы выдали новую форму сотруднику ",Name(actplayerid));
			SCM(my_ID, COLOR_BLUE, YCMDstr);
 		}
	case 8015:
		{
		    if(!response) return true;
		    new actplayerid = GetPVarInt(playerid,"actplayerid");
		    new my_ID = GetPVarInt(playerid,"my_ID");
		    switch(listitem)
		    {
		        case 0: { PI[actplayerid][pModel] = 27; SetPlayerSkin(actplayerid,27); }
		        case 1: { PI[actplayerid][pModel] = 258; SetPlayerSkin(actplayerid,258); }
		        case 2: { PI[actplayerid][pModel] = 71; SetPlayerSkin(actplayerid,71); }
		        case 3: { PI[actplayerid][pModel] = 119; SetPlayerSkin(actplayerid,119); }
		        case 4: { PI[actplayerid][pModel] = 153; SetPlayerSkin(actplayerid,153); }
		        case 5: { PI[actplayerid][pModel] = 69; SetPlayerSkin(actplayerid,69); }
		 	}
		 	format(YCMDstr, 69, " %s выдал Вам новую форму",Name(my_ID));
			SCM(actplayerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 69, " Вы выдали новую форму сотруднику ",Name(actplayerid));
			SCM(my_ID, COLOR_BLUE, YCMDstr);
 		}
  	case 4500:
		{
			if(!response) return true;
			{
				if(listitem == 0)
				{
					new one_level[1300];
					strcat(one_level,"{FFFFFF}- {0dbaff}/alogin {FFFFFF}- авторизация админом\n");
					strcat(one_level,"{FFFFFF}- {0dbaff}/connect {FFFFFF}- коннект лист\n");
					strcat(one_level,"{FFFFFF}- {0dbaff}/achat {FFFFFF}- прослушка чата фракций\n");
					strcat(one_level,"{FFFFFF}- {0dbaff}/spawn {FFFFFF}- заспавнится\n");
					strcat(one_level,"{FFFFFF}- {0dbaff}/togphone {FFFFFF}- выключить телефон\n");
					strcat(one_level,"{FFFFFF}- {0dbaff}/pm {FFFFFF}- ответить на репорт\n");
					strcat(one_level,"{FFFFFF}- {0dbaff}/a {FFFFFF}- админ чат\n");
					strcat(one_level,"{FFFFFF}- {0dbaff}/demorgan {FFFFFF}- посадить игрока в деморган\n");
					strcat(one_level,"{FFFFFF}- {0dbaff}/slap {FFFFFF}- подкинуть игрока\n");
					strcat(one_level,"{FFFFFF}- {0dbaff}/hp {FFFFFF}- пополнить себе хп\n");
					strcat(one_level,"{FFFFFF}- {0dbaff}/givecopkeys {FFFFFF}- выдать пропуск в полицейский участок\n");
					strcat(one_level,"{FFFFFF}- {0dbaff}/mute {FFFFFF}- выдать бан чата игроку\n");
					strcat(one_level,"{FFFFFF}- {0dbaff}/freeze {FFFFFF}- заморозить игрока\n");
					strcat(one_level,"{FFFFFF}- {0dbaff}/unfreeze {FFFFFF}- разморозить игрока\n");
					strcat(one_level,"{FFFFFF}- {0dbaff}/mutelist {FFFFFF}- список игроков с бан чатом\n");
					strcat(one_level,"{FFFFFF}- {0dbaff}/demlist {FFFFFF}- список игроков в ДеМоргане\n");
					strcat(one_level,"{FFFFFF}- {0dbaff}/unprison {FFFFFF}- вытащить игрока с места заключения\n");
					strcat(one_level,"{FFFFFF}- {0dbaff}/geton {FFFFFF}- узнать когда игрок заходил на сервер\n");
					strcat(one_level,"{FFFFFF}- {0dbaff}/admins {FFFFFF}- список админов онлайн\n");
					strcat(one_level,"{FFFFFF}- {0dbaff}/sps {FFFFFF}- перезаспавнить игрока (если застрял и т.п.)\n");
					strcat(one_level,"{FFFFFF}- {0dbaff}/untie {FFFFFF}- развязать игрока\n");
					SPDEx(playerid,4502,0, "1 уровень",one_level, "Отмена", "");
				}
				if(listitem == 1)
				{
					new two_level[550];
					strcat(two_level,"{FFFFFF}- {0dbaff}/getstats {FFFFFF}- узнать статистику игрока\n");
					strcat(two_level,"{FFFFFF}- {0dbaff}/offgs {FFFFFF}- узнать Offline статистику игрока\n");
					strcat(two_level,"{FFFFFF}- {0dbaff}/recon {FFFFFF}- следить за игроком\n");
					strcat(two_level,"{FFFFFF}- {0dbaff}/goto {FFFFFF}- телепорт к игроку\n");
					strcat(two_level,"{FFFFFF}- {0dbaff}/gm {FFFFFF}- проверить игроку на ГМ\n");
					strcat(two_level,"{FFFFFF}- {0dbaff}/offdem {FFFFFF}- посадить игрока в деморган в Offline\n");
					strcat(two_level,"{FFFFFF}- {0dbaff}/offmute {FFFFFF}- выдать мут в Offline\n");
					strcat(two_level,"{FFFFFF}- {0dbaff}/alock {FFFFFF}- открыть/закрыть любой транспорт\n");
					strcat(two_level,"{FFFFFF}- {0dbaff}/smson {FFFFFF}- прослушка смс сообщений игроков\n");
					strcat(two_level,"{FFFFFF}- {0dbaff}/weap {FFFFFF}- узнать какое оружие у игрока\n");
					strcat(two_level,"{FFFFFF}- {0dbaff}/delgun {FFFFFF}- удалить оружие у игрока\n");
					strcat(two_level,"{FFFFFF}- {0dbaff}/spcard {FFFFFF}- заспавнить транспорт в радиусе\n");
					SPDEx(playerid,4502,0, "2 уровень",two_level, "Отмена", "");
				}
				if(listitem == 2)
				{
					new three_level[160];
					strcat(three_level,"{FFFFFF}- {0dbaff}/skin {FFFFFF}- изменить свой скин\n");
					strcat(three_level,"{FFFFFF}- {0dbaff}/tp {FFFFFF}- телепорт лист\n");
					strcat(three_level,"{FFFFFF}- {0dbaff}/gethere {FFFFFF}- телепортировать к себе игрока");
					SPDEx(playerid,4502,0, "3 уровень",three_level, "Отмена", "");
				}
				if(listitem == 3)
				{
					new four_level[430];
					strcat(four_level,"{FFFFFF}- {0dbaff}/spcar {FFFFFF}- заспавнить любую машину на место спавна\n");
					strcat(four_level,"{FFFFFF}- {0dbaff}/getip {FFFFFF}- узнать IP игрока\n");
					strcat(four_level,"{FFFFFF}- {0dbaff}/pgetip {FFFFFF}- список игроков на сервере с одного IP адреса\n");
					strcat(four_level,"{FFFFFF}- {0dbaff}/agetip {FFFFFF}- узнать IP по нику\n");
					strcat(four_level,"{FFFFFF}- {0dbaff}/agetipreg {FFFFFF}- узнать регистрационный IP игрока\n");
					strcat(four_level,"{FFFFFF}- {0dbaff}/getakkip {FFFFFF}- список аккаунтов по IP\n");
					SPDEx(playerid,4502,0, "4 уровень",four_level, "Отмена", "");
				}
				if(listitem == 4)
				{
					new five_level[430];
					strcat(five_level,"{FFFFFF}- {0dbaff}/fuellr {FFFFFF}- заправить транспорт в радиусе\n");
					strcat(five_level,"{FFFFFF}- {0dbaff}/ram {FFFFFF}- зайти в любой дом\n");
					strcat(five_level,"{FFFFFF}- {0dbaff}/givegun {FFFFFF}- выдать оружие игроку\n");
					strcat(five_level,"{FFFFFF}- {0dbaff}/veh {FFFFFF}- создать транспорт\n");
					strcat(five_level,"{FFFFFF}- {0dbaff}/delveh {FFFFFF}- удалить созданный транспорт\n");
					strcat(five_level,"{FFFFFF}- {0dbaff}/giveveh {FFFFFF}- создать несколько транспортов\n");
					strcat(five_level,"{FFFFFF}- {0dbaff}/awarehouse {FFFFFF}- состояние складов фракций\n");
					SPDEx(playerid,4502,0, "5 уровень",five_level, "Отмена", "");
				}
				if(listitem == 5)
				{
					new six_level[430];
					strcat(six_level,"{FFFFFF}- {0dbaff}/uval {FFFFFF}- уволить игрока с фракции\n");
					strcat(six_level,"{FFFFFF}- {0dbaff}/kick {FFFFFF}- кикнуть игрока\n");
					strcat(six_level,"{FFFFFF}- {0dbaff}/skick {FFFFFF}- тихий кик\n");
					strcat(six_level,"{FFFFFF}- {0dbaff}/biz {FFFFFF}- телепорт к бизнесу по ид\n");
					strcat(six_level,"{FFFFFF}- {0dbaff}/fuelall {FFFFFF}- заправить весь транспорт\n");
					SPDEx(playerid,4502,0, "6 уровень",six_level, "Отмена", "");
				}
				if(listitem == 6)
				{
					new seven_level[600];
					strcat(seven_level,"{FFFFFF}- {0dbaff}/agl {FFFFFF}- выдать лицензии игроку\n");
					strcat(seven_level,"{FFFFFF}- {0dbaff}/hbject {FFFFFF}- прикрепить объект к игроку\n");
					strcat(seven_level,"{FFFFFF}- {0dbaff}/hdel {FFFFFF}- удалить созданный объект на игроке\n");
					strcat(seven_level,"{FFFFFF}- {0dbaff}/hobjectedit {FFFFFF}- редактировать созданный объект на игроке\n");
					strcat(seven_level,"{FFFFFF}- {0dbaff}/spcars {FFFFFF}- заспавнить все машины\n");
					strcat(seven_level,"{FFFFFF}- {0dbaff}/о {FFFFFF}- ООС чат\n");
					strcat(seven_level,"{FFFFFF}- {0dbaff}/house {FFFFFF}- телепорт к дому по ид\n");
					strcat(seven_level,"{FFFFFF}- {0dbaff}/mp {FFFFFF}- меню мероприятий\n");
					strcat(seven_level,"{FFFFFF}- {0dbaff}/bizmafia {FFFFFF}- установить крышу бизнеса\n");
					SPDEx(playerid,4502,0, "7 уровень",seven_level, "Отмена", "");
				}
				if(listitem == 7)
				{
					new eight_level[144];
					strcat(eight_level,"{FFFFFF}- {0dbaff}/mark {FFFFFF}- установить точку телепорта\n");
					strcat(eight_level,"{FFFFFF}- {0dbaff}/gotomark {FFFFFF}- телепорт к заданной точке\n");
					SPDEx(playerid,4502,0, "8 уровень",eight_level, "Отмена", "");
				}
				if(listitem == 8)
				{
					new nine_level[60];
					strcat(nine_level,"{FFFFFF}- {0dbaff}/getskill {FFFFFF}- просмотр скиллов у игрока\n");
					SPDEx(playerid,4502,0, "9 уровень",nine_level, "Отмена", "");
				}
				if(listitem == 9)
				{
					new ten_level[430];
					strcat(ten_level,"{FFFFFF}- {0dbaff}/sethp {FFFFFF}- установить хп игроку\n");
					strcat(ten_level,"{FFFFFF}- {0dbaff}/warn {FFFFFF}- выдать варн\n");
					strcat(ten_level,"{FFFFFF}- {0dbaff}/offwarn {FFFFFF}- выдать варн в Offline\n");
					strcat(ten_level,"{FFFFFF}- {0dbaff}/gzcolor {FFFFFF}- покрасить гангзону\n");
					strcat(ten_level,"{FFFFFF}- {0dbaff}/bizmafia {FFFFFF}- установить крышу в бизнесе\n");
					SPDEx(playerid,4502,0, "10 уровень",ten_level, "Отмена", "");
				}
				if(listitem == 10)
				{
					new eleven_level[1100];
					strcat(eleven_level,"{FFFFFF}- {0dbaff}/object {FFFFFF}- создание объекта\n");
					strcat(eleven_level,"{FFFFFF}- {0dbaff}/destroyobject {FFFFFF}- удалить созданный объект\n");
					strcat(eleven_level,"{FFFFFF}- {0dbaff}/editobject {FFFFFF}- редактировать созданный объект\n");
					strcat(eleven_level,"{FFFFFF}- {0dbaff}/weather {FFFFFF}- установить погоду \n");
					strcat(eleven_level,"{FFFFFF}- {0dbaff}/setname {FFFFFF}- сменить ник игроку\n");
					strcat(eleven_level,"{FFFFFF}- {0dbaff}/setmats {FFFFFF}- установить кол-во материалов в фракциях\n");
					strcat(eleven_level,"{FFFFFF}- {0dbaff}/unleader {FFFFFF}- снять лидера\n");
					strcat(eleven_level,"{FFFFFF}- {0dbaff}/makeleader {FFFFFF}- выдать лидерку\n");
					strcat(eleven_level,"{FFFFFF}- {0dbaff}/offleader {FFFFFF}- снять лидерку Offline\n");
					strcat(eleven_level,"{FFFFFF}- {0dbaff}/rasform {FFFFFF}- рассформировать фракцию\n");
					strcat(eleven_level,"{FFFFFF}- {0dbaff}/unwarn {FFFFFF}- снять варн\n");
					strcat(eleven_level,"{FFFFFF}- {0dbaff}/ban {FFFFFF}- забанить игрока\n");
					strcat(eleven_level,"{FFFFFF}- {0dbaff}/sban {FFFFFF}- тихий бан\n");
					strcat(eleven_level,"{FFFFFF}- {0dbaff}/offban {FFFFFF}- забанить игрока в Offline\n");
					strcat(eleven_level,"{FFFFFF}- {0dbaff}/banip {FFFFFF}- забанить IP\n");
					strcat(eleven_level,"{FFFFFF}- {0dbaff}/offleader {FFFFFF}- снять лидерку Offline\n");
					strcat(eleven_level,"{FFFFFF}- {0dbaff}/offundem {FFFFFF}- выпустить оффлайн игрока\n");
					strcat(eleven_level,"{FFFFFF}- {0dbaff}/blacklist {FFFFFF}- добавить ник в ЧСЛ\n");
					SPDEx(playerid,4502,0, "11 уровень",eleven_level, "Отмена", "");
    			}
				if(listitem == 11)
				{
					new twelve_level[350];
					strcat(twelve_level,"{FFFFFF}- {0dbaff}/setklass {FFFFFF}- установить класс дома\n");
					strcat(twelve_level,"{FFFFFF}- {0dbaff}/getschet {FFFFFF}- узнать счёт дома\n");
					strcat(twelve_level,"{FFFFFF}- {0dbaff}/unban {FFFFFF}- разбанить игрока\n");
					strcat(twelve_level,"{FFFFFF}- {0dbaff}/unbanip {FFFFFF}- разбанить IP \n");
					strcat(twelve_level,"{FFFFFF}- {0dbaff}/tskin {FFFFFF}- выдать временный скин игроку\n");
					SPDEx(playerid,4502,0, "12 уровень",twelve_level, "Отмена", "");
    			}
    			if(listitem == 12)
				{
					new thirten_level[1500];
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/saveall {FFFFFF}- сохранить все\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/servergmx {FFFFFF}- рестарт сервера\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/payday {FFFFFF}- сделать PayDay\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/askin {FFFFFF}- изменить постоянный скин игроку \n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/setstat {FFFFFF}- изменение статистики игрока\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/setschet {FFFFFF}- установвить домашний счетn");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/setcost {FFFFFF}- установить цену за дом\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/setmcost {FFFFFF}- установить цену автомастерской\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/sethousepos {FFFFFF}- изменить положение дома\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/sethousecarpos {FFFFFF}- установить спавн личного т/с возле дома\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/setnomerpos {FFFFFF}- изменить положение квартиры\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/sethotelcarpos {FFFFFF}- установить спавн личного т/с у отеля\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/addgarage {FFFFFF}- добавить гараж в дом\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/addnomer {FFFFFF}- добавить номер\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/settime {FFFFFF}- установить время\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/givemoney {FFFFFF}- выдать наличку\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/givedonate {FFFFFF}- выдать донат\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/money {FFFFFF}- выдать деньги в банкn");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/delpersona {FFFFFF}- удалить аккаунт\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/asellbiz {FFFFFF}- продать бизнес в гос.\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/asellmast {FFFFFF}- продать мастерскую в гос.\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/asellhouse {FFFFFF}- продать дом в гос.\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/setskill {FFFFFF}- установить скиллы игроку\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/givedonate {FFFFFF}- выдать донат\n");
					strcat(thirten_level,"{FFFFFF}- {0dbaff}/tpcor {FFFFFF}- телепорт по заданным координатам");
					SPDEx(playerid,4502,0, "13 уровень",thirten_level, "Отмена", "");
    			}
			}
		}
	case 1140:// Общак Баллас
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "- Положить\n- Взять");
					SPDEx(playerid,1141,2,"- Деньги",YCMDstr,"Дальше","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "- Положить\n- Взять");
					SPDEx(playerid,1143,2,"- Наркотики",YCMDstr,"Дальше","Отмена");
				}
				if(listitem == 2)
				{
					format(YCMDstr,128, "- Положить\n- Взять");
					SPDEx(playerid,1146,2,"- Материалы",YCMDstr,"Дальше","Отмена");}
			}
		}
	case 1141:// Деньги
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "{ffffff}Сумма денег");
					SPDEx(playerid,1142,1,"Положить в общак",YCMDstr,"Положить","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "{ffffff}Взять деньги");
					SPDEx(playerid,11433,1,"Взять с общака",YCMDstr,"Взять","Отмена");
				}
			}
		}
	case 1142:
		{
			if(response)
			{
				new cashdeposit = strval(inputtext);
				if(cashdeposit > GetPlayerMoney(playerid) || cashdeposit < 1) return SCM(playerid, COLOR_GRAD2, "Вы не имеете так много денег!");
				else
				{
					if(FracBank[0][fsklballas] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
					GiveMoney(playerid,- cashdeposit);
					format(YCMDstr,128, "Вы положили $%d в общак банды!", cashdeposit);
					SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
					new babki = FracBank[0][fBMoney] + cashdeposit;
					FracBank[0][fBMoney] = babki;
					return 1;
				}
			}
		}
	case 11433:
		{
			if(response)
			{
				new cashdeposit = strval(inputtext);
				if(PI[playerid][pLeader] == 12)
				{
					if(cashdeposit > FracBank[0][fBMoney] || cashdeposit < 1) return SCM(playerid, COLOR_GRAD2, "В Общаке нет столько денег! ");
					else
					{
						if(FracBank[0][fsklballas] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
						GiveMoney(playerid, cashdeposit);
						format(YCMDstr,128, "Вы взяли $%d с общака банды!", cashdeposit);
						SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
						new babki = FracBank[0][fBMoney] - cashdeposit;
						FracBank[0][fBMoney] = babki;
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_RED, "Вы не состоите в этой банде!");
					return 1;
				}
			}
		}
	case 1143:// Наркотики
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "{ffffff}Количество нарко");
					SPDEx(playerid,1144,1,"Положить в общак",YCMDstr,"Положить","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "{ffffff}Взять нарко");
					SPDEx(playerid,1145,1,"Взять с общака",YCMDstr,"Взять","Отмена");
				}
			}
		}
	case 1144:
		{
			if(response)
			{
				new dr = strval(inputtext);
				if(dr > PI[playerid][pDrugs] || dr < 1) return SCM(playerid, COLOR_GRAD2, "Вы не имеете так много грамм нарко!");
				else
				{
					if(FracBank[0][fsklballas] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
					PI[playerid][pDrugs] -= dr;
					format(YCMDstr,128, "Вы положили %d грамм в общак банды!", dr);
					SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
					new nark = FracBank[0][fBDrugs] + dr;
					FracBank[0][fBDrugs] = nark;
					return 1;
				}
			}
		}
	case 1145:
		{
			if(response)
			{
				new dr = strval(inputtext);
				if(PI[playerid][pMember] == 12 || PI[playerid][pLeader] == 12)
				{
					if(PI[playerid][pRank] < 2) return SCM(playerid,COLOR_GREY,"У Вас слишком маленький ранг!");
					if (dr > FracBank[0][fBDrugs] || dr < 1) return SCM(playerid, COLOR_GRAD2, "В общяке нет столько нарко!");
					else
					{
						if(FracBank[0][fsklballas] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
						if(PI[playerid][pDrugs] >= 400) return SCM(playerid,COLOR_GRAD1,"Нельзя взять больше нарко!");
						if(dr < 1 || dr > 100) return SCM(playerid, COLOR_GREY, "Нельзя брать меньше 1 и больше 100 нарко");
						format(YCMDstr,128, "Вы взяли %d грамм с общака банды!", dr);
						SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
						new nark = FracBank[0][fBDrugs] - dr;
						FracBank[0][fBDrugs] = nark;
						PI[playerid][pDrugs] += dr;
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_RED, "Вы не состоите в этой банде!");
					return 1;
				}
			}
		}
	case 1146:// Материаллы
		{
			if(response)
			{
				if(listitem == 0)
				{
					format(YCMDstr,128, "{ffffff}Количество материалов");
					SPDEx(playerid,1147,1,"Положить в общак",YCMDstr,"Положить","Отмена");
				}
				if(listitem == 1)
				{
					format(YCMDstr,128, "{ffffff}Взять материалы");
					SPDEx(playerid,1148,1,"Взять с общака",YCMDstr,"Взять","Отмена");
				}
			}
		}
	case 1147:
		{
			if(response)
			{
				new mt = strval(inputtext);
				if (mt > PI[playerid][pMats] || mt < 1) return SCM(playerid, COLOR_GRAD2, "Вы не имеете так много материалов!");
				else
				{
					if(FracBank[0][fsklballas] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
					PI[playerid][pMats] -= mt;
					format(YCMDstr,128, "Вы положили %d материалов в общак банды!", mt);
					SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
					new mat = FracBank[0][fBMats] + mt;
					FracBank[0][fBMats] = mat;
					return 1;
				}
			}
		}
	case 1148:
		{
			if(response)
			{
				new mt = strval(inputtext);
				if(PI[playerid][pMember] == 12 || PI[playerid][pLeader] == 12)
				{
					if(PI[playerid][pRank] < 2) return SCM(playerid,COLOR_GREY,"У Вас слишком маленький ранг!");
					if(mt > FracBank[0][fBMats] || mt < 1) return SCM(playerid, COLOR_GRAD2, "В Общаке нет столько материалов!");
					else
					{
						if(FracBank[0][fsklballas] != 0) return SCM(playerid,COLOR_GRAD1, "Общак закрыт Лидером/Замом банды");
						if(PI[playerid][pMats] > 500) return SCM(playerid,COLOR_GRAD1,"Нельзя взять больше материалов!");
						if(mt < 1 || mt > 500) return SCM(playerid, COLOR_GREY, "Нельзя брать меньше 1 и больше 500 материалов");
						format(YCMDstr,128, "Вы взяли %d материалов с общака банды!", mt);
						SCM(playerid, COLOR_LIGHTBLUE, YCMDstr);
						new mat = FracBank[0][fBMats] - mt;
						FracBank[0][fBMats] = mat;
						PI[playerid][pMats] += mt;
						return 1;
					}
				}
				else
				{
					SCM(playerid,COLOR_RED, "Вы не состоите в этой банде!");
					return 1;
				}
			}
		}
	case 5454:
		{
			if(response)
			{
				if(listitem == 0)
				{
					new giveplayer[MAX_PLAYER_NAME];
					SCM(playerid, COLOR_YELLOW2, "Таксисты:");
					for(new idx=0, i=0; idx<cvector_size(players); idx++)
					{
						i = cvector_get(players, idx);
						if(PI[i][pJob] != 4 || (!PI[i][pLogin])) continue;
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(YCMDstr,128, "Таксист: %s Тел: %d", giveplayer, PI[i][pPnumber]);
						SCM(playerid, COLOR_WHITE, YCMDstr);
					}
				}
				else if(listitem == 1)
				{
					mysql_format(DATABASE,YCMDstr,82,"SELECT * FROM `accounts` WHERE `pLeader` != 0 ORDER BY  `accounts`.`pLeader` DESC",playerid);
					mysql_function_query(DATABASE,YCMDstr,true,"Leaders","i",playerid);
				}
				else if(listitem == 2)
				{
					new giveplayer[MAX_PLAYER_NAME];
					SCM(playerid, COLOR_YELLOW2, "Механики:");
					for(new idx=0, i=0; idx<cvector_size(players); idx++)
					{
						i = cvector_get(players, idx);
						if(PI[i][pJob] != 2) continue;
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(YCMDstr,128, " %s Тел: %d", giveplayer, PI[i][pPnumber]);
						SCM(playerid, COLOR_WHITE, YCMDstr);
					}
				}
				else if(listitem == 3)
				{
					new giveplayer[MAX_PLAYER_NAME];
					SCM(playerid, COLOR_YELLOW2, "Медики:");
					for(new idx=0, i=0; idx<cvector_size(players); idx++)
					{
						i = cvector_get(players, idx);
						if(PI[i][pMember] == 4 && PI[i][pLogin] == 1 || PI[i][pMember] == 8 && PI[i][pLogin] == 1)
						{
							GetPlayerName(i, giveplayer, sizeof(giveplayer));
							format(YCMDstr,128, " %s Тел: %d", giveplayer, PI[i][pPnumber]);
							SCM(playerid, COLOR_WHITE, YCMDstr);
						}
					}
				}
				else if(listitem == 4)
				{
					new giveplayer[MAX_PLAYER_NAME];
					SCM(playerid, COLOR_YELLOW2, "Тренеры:");
					for(new idx=0, i=0; idx<cvector_size(players); idx++)
					{
						i = cvector_get(players, idx);
						if(PI[i][pJob] != 6 || (!PI[i][pLogin])) continue;
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(YCMDstr,128, " %s Тел: %d", giveplayer, PI[i][pPnumber]);
						SCM(playerid, COLOR_WHITE, YCMDstr);
					}
				}
				else if(listitem == 5)
				{
					new giveplayer[MAX_PLAYER_NAME];
					SCM(playerid, COLOR_YELLOW2, "Развозчики товаров:");
					for(new idx=0, i=0; idx<cvector_size(players); idx++)
					{
						i = cvector_get(players, idx);
						if(PI[i][pJob] != 7 || (!PI[i][pLogin])) continue;
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(YCMDstr,128, " %s Тел: %d", giveplayer, PI[i][pPnumber]);
						SCM(playerid, COLOR_WHITE, YCMDstr);
					}
				}
				else if(listitem == 6)
				{
					new giveplayer[MAX_PLAYER_NAME];
					SCM(playerid, COLOR_YELLOW2, "Развозчики топлива:");
					for(new idx=0, i=0; idx<cvector_size(players); idx++)
					{
						i = cvector_get(players, idx);
						if(PI[i][pJob] != 8 || (!PI[i][pLogin])) continue;
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(YCMDstr,128, " %s Тел: %d", giveplayer, PI[i][pPnumber]);
						SCM(playerid, COLOR_WHITE, YCMDstr);
					}
				}
			}
			else
			{
				return true;
			}
		}
	case 8240:
		{
			if(response)
			{
				SetPlayerInterior(playerid,7);
				SetPlayerVirtualWorld(playerid, 15);
				SetPlayerPos(playerid,302.3128,-140.9305,1004.0625);
				SetPlayerFacingAngle(playerid, 318.5262);
				return true;
			}
			else
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid,2278.3853,2460.9187,38.6837);
				SetPlayerFacingAngle(playerid, 357.9236);
				return true;
			}
		}
	case 8241:
		{
			if(response)
			{
				SetPlayerInterior(playerid,7);
				SetPlayerVirtualWorld(playerid, 15);
				SetPlayerPos(playerid,302.3128,-140.9305,1004.0625);
				SetPlayerFacingAngle(playerid, 318.5262);
				return true;
			}
			else
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid,2294.0447,2468.8052,10.8203);
				SetPlayerFacingAngle(playerid, 90.8629);
				return true;
			}
		}
	case 2013:
		{
			if(response)
			{
				new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
				SPDEx(playerid, 2013, 2, "Взять оружие со склада", listitems, "Выбрать", "Отмена");
				if(listitem == 0)
				{
					if(FracBank[0][fyakuzamats] <= 50)return SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 24; ammo = 50;
					FracBank[0][fyakuzamats] -= 50;
				}
				else if(listitem == 1)
				{
					if(FracBank[0][fyakuzamats] <= 100)return SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 25; ammo = 15;
					FracBank[0][fyakuzamats] -= 100;
				}
				else if(listitem == 2)
				{
					if(FracBank[0][fyakuzamats] <= 50)return SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 33; ammo = 10;
					FracBank[0][fyakuzamats] -= 50;
				}
				else if(listitem == 3)
				{
					if(FracBank[0][fyakuzamats] <= 500)return SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 31; ammo = 100;
					FracBank[0][fyakuzamats] -= 500;
				}
				else if(listitem == 4)
				{
					if(FracBank[0][fyakuzamats] <= 500)return SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 30; ammo = 100;
					FracBank[0][fyakuzamats] -= 500;
				}
				else if(listitem == 5)
				{
					if(FracBank[0][fyakuzamats] <= 400)return SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 29; ammo = 200;
					FracBank[0][fyakuzamats] -= 400;
				}
				else if(listitem == 6)
				{
					if(FracBank[0][fyakuzamats] <= 50)return SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 23; ammo = 100;
					FracBank[0][fyakuzamats] -= 50;
				}
				_GiveGun(FL[playerid][getgunsid], gun, ammo);
				SCM(playerid, 0x6495EDFF,"Вы взяли оружие со склада");
				if(FL[playerid][getgunsid] == playerid) format(YCMDstr, 128, "%s взял(а) оружие со склада",Name(playerid));
				else format(YCMDstr,128, "%s взял(а) оружие со склада и передал %s",Name(playerid),Name(FL[playerid][getgunsid]));
				ProxDetector(20.0, playerid, YCMDstr,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 2014:
		{
			if(response)
			{
				new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
				SPDEx(playerid, 2014, 2, "Взять оружие со склада", listitems, "Выбрать", "Отмена");
				if(listitem == 0)
				{
					if(FracBank[0][flcnmats] <= 50) return  SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 24; ammo = 50;
					FracBank[0][flcnmats] -= 50;
				}
				else if(listitem == 1)
				{
					if(FracBank[0][flcnmats] <= 50)  return  SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 25; ammo = 15;
					FracBank[0][flcnmats] -= 50;
				}
				else if(listitem == 2)
				{
					if(FracBank[0][flcnmats] <= 100)  return  SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 33; ammo = 10;
					FracBank[0][flcnmats] -= 100;
				}
				else if(listitem == 3)
				{
					if(FracBank[0][flcnmats] <= 500)  return  SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 31; ammo = 100;
					FracBank[0][flcnmats] -= 500;
				}
				else if(listitem == 4)
				{
					if(FracBank[0][flcnmats] <= 500)  return  SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 30; ammo = 100;
					FracBank[0][flcnmats] -= 500;
				}
				else if(listitem == 5)
				{
					if(FracBank[0][flcnmats] <= 400)  return  SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 29; ammo = 200;
					FracBank[0][flcnmats] -= 400;
				}
				else if(listitem == 6)
				{
					if(FracBank[0][flcnmats] <= 100)  return  SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 23; ammo = 100;
					FracBank[0][flcnmats] -= 100;
				}
				_GiveGun(FL[playerid][getgunsid], gun, ammo);
				SCM(playerid, 0x6495EDFF,"Вы взяли оружие со склада");
				if(FL[playerid][getgunsid] == playerid) format(YCMDstr, 128, "%s взял(а) оружие со склада",Name(playerid));
				else format(YCMDstr,128, "%s взял(а) оружие со склада и передал %s",Name(playerid),Name(FL[playerid][getgunsid]));
				ProxDetector(20.0, playerid, YCMDstr,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 2015:
		{
			if(response)
			{
				new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
				SPDEx(playerid, 2015, 2, "Взять оружие со склада", listitems, "Выбрать", "Отмена");
				if(listitem == 0)
				{
					if(FracBank[0][frmmats] <= 70) return  SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 24; ammo = 50;
					FracBank[0][frmmats] -= 70;
				}
				else if(listitem == 1)
				{
					if(FracBank[0][frmmats] <= 50)  return  SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 25; ammo = 15;
					FracBank[0][frmmats] -= 50;
				}
				else if(listitem == 2)
				{
					if(FracBank[0][frmmats] <= 100)  return  SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 33; ammo = 10;
					FracBank[0][frmmats] -= 100;
				}
				else if(listitem == 3)
				{
					if(FracBank[0][frmmats] <= 500)  return  SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 31; ammo = 100;
					FracBank[0][frmmats] -= 500;
				}
				else if(listitem == 4)
				{
					if(FracBank[0][frmmats] <= 500)  return  SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 30; ammo = 100;
					FracBank[0][frmmats] -= 500;
				}
				else if(listitem == 5)
				{
					if(FracBank[0][frmmats] <= 400)  return  SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 29; ammo = 200;
					FracBank[0][frmmats] -= 400;
				}
				else if(listitem == 6)
				{
					if(FracBank[0][frmmats] <= 100)  return  SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 23; ammo = 100;
					FracBank[0][frmmats] -= 100;
				}
				_GiveGun(FL[playerid][getgunsid], gun, ammo);
				SCM(playerid, 0x6495EDFF,"Вы взяли оружие со склада");
				if(FL[playerid][getgunsid] == playerid) format(YCMDstr, 128, "%s взял(а) оружие со склада",Name(playerid));
				else format(YCMDstr,128, "%s взял(а) оружие со склада и передал %s",Name(playerid),Name(FL[playerid][getgunsid]));
				ProxDetector(20.0, playerid, YCMDstr,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 2016:
		{
			if(response)
			{
				new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t\t\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
				SPDEx(playerid, 2016, 2, "Взять оружие со склада", listitems, "Выбрать", "Отмена");
				if(listitem == 0)
				{
					if(FracBank[0][fMMats] <= 50)return SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 24; ammo = 50;
					FracBank[0][fMMats] -= 50;
				}
				else if(listitem == 1)
				{
					if(FracBank[0][fMMats] <= 100)return SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 25; ammo = 15;
					FracBank[0][fMMats] -= 100;
				}
				else if(listitem == 2)
				{
					if(FracBank[0][fMMats] <= 50)return SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 33; ammo = 10;
					FracBank[0][fMMats] -= 50;
				}
				else if(listitem == 3)
				{
					if(FracBank[0][fMMats] <= 500)return SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 31; ammo = 100;
					FracBank[0][fMMats] -= 500;
				}
				else if(listitem == 4)
				{
					if(FracBank[0][fMMats] <= 500)return SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 30; ammo = 100;
					FracBank[0][fMMats] -= 500;
				}
				else if(listitem == 5)
				{
					if(FracBank[0][fMMats] <= 400)return SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 29; ammo = 200;
					FracBank[0][fMMats] -= 400;
				}
				else if(listitem == 6)
				{
					if(FracBank[0][fMMats] <= 50)return SCM(playerid,COLOR_GRAD1, "На складе нет материалов!");
					gun = 23; ammo = 100;
					FracBank[0][fMMats] -= 50;
				}
				_GiveGun(FL[playerid][getgunsid], gun, ammo);
				SCM(playerid, 0x6495EDFF,"Вы взяли оружие со склада");
				if(FL[playerid][getgunsid] == playerid) format(YCMDstr, 128, "%s взял(а) оружие со склада",Name(playerid));
				else format(YCMDstr,128, "%s взял(а) оружие со склада и передал %s",Name(playerid),Name(FL[playerid][getgunsid]));
				ProxDetector(20.0, playerid, YCMDstr,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 9889:
		{
			if(response)
			{
				new arid = GetArendCarID(GetPlayerVehicleID(playerid));
				if(arid != -1)
				{
					if(GetPVarInt(playerid, "ArendKey") == -1)
					{
						if(ArendInfo[arid][aPlayerID] == INVALID_PLAYER_ID || !IsPlayerConnected(ArendInfo[arid][aPlayerID]))
						{
							if(GetPlayerMoney(playerid) >= ArendInfo[arid][aCost])
							{
								SetPVarInt(playerid, "ArendKey", arid);
								PI[playerid][pCash] -= ArendInfo[arid][aCost];
								FracBank[0][fKazna] += ArendInfo[arid][aCost];
								ArendInfo[arid][aPlayerID] = playerid;
								Fuell[GetPlayerVehicleID(playerid)] = 100;
								SCM(playerid,COLOR_PURPLE,"|Успешно| {FFFFFF} Вы арендовали этот Транспорт");
								SPDEx(playerid, 0, 0, "Вы успешно арендовали транспортное средство", "{FFFFFF}Список доступных комманд:\n\n{9ACD32}/unrent{FFFFFF} - Отказаться от аренды.\n{9ACD32}/lock3{FFFFFF} - Закрыть/Открыть т/с.", "Закрыть", "");
								TogglePlayerControllable(playerid, 1);
							}
							else
							{
								SCM(playerid, 0xAFAFAFFF, "У вас не хватает денег");
								RemovePlayerFromVehicle(playerid);
								TogglePlayerControllable(playerid, 1);
							}
						}
						else
						{
							SCM(playerid, 0xAFAFAFFF, "Этот транспорт уже арендуют:");
							RemovePlayerFromVehicle(playerid);
							TogglePlayerControllable(playerid, 1);
						}
					}
					else
					{
						SCM(playerid,0xAFAFAFFF,"Вы уже арендуете транспорт");
						RemovePlayerFromVehicle(playerid);
						TogglePlayerControllable(playerid, 1);
					}
				}
			}
			else
			{
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
			}
			return 1;
		}
	case 5343:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
				    if(Teleport == 0)
				    {
				        GetPlayerPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]);
				        TeleportInfo[0] = GetPlayerInterior(playerid);
				        TeleportInfo[1] = GetPlayerVirtualWorld(playerid);
				        Teleport = 1;
						SCM(playerid, COLOR_GREY, "- Что бы закрыть телепорт, введите: /mp и нажмите < Установить/Убрать точку телепорта >");
				        format(YCMDstr, sizeof(YCMDstr), "Администратор %s[%d] установил точку телепорта (/tpmp). {00FF00}Телепорт включен!", Name(playerid), playerid);
				        SCMToAll(COLOR_GREY, YCMDstr);
				        return true;
				    }
				    else
				    {
				        format(YCMDstr, sizeof(YCMDstr), "Администратор %s[%d] удалил точку телепорта. {FF0000}Телепорт отключен!", Name(playerid), playerid);
				        SCMToAll(COLOR_GREY, YCMDstr);
				        Teleport = 0;
				        return true;
				    }
				}
			case 1: SPDEx(playerid, 5346, 1,"Выдача оружия", "{FFFFFF}Введите id оружия и патроны\n{FFFFFF}Пример: {FF0000}31,500\n{FFFFFF}Где {FF0000}31 m4 {FFFFFF}а {FF0000}500 патроны", "Выдать", "Закрыть");
			case 2:
				{
					for(new i, j = GetMaxPlayers(); i != j; i++)
					{
						SetPlayerHealthAC(playerid, 100);
						if(GetDistanceBetweenPlayers(playerid,i) < 50 && playerid != i)
						{
							SetPlayerHealthAC(i, 100);
							SCM(i, COLOR_YELLOW, "Администратор выдал Вам жизни");
						}
					}
				}
			case 3:
				{
					for(new i, j = GetMaxPlayers(); i != j; i++)
					{
						SetPlayerArmour(playerid, 100);
						if(GetDistanceBetweenPlayers(playerid,i) < 50 && playerid != i)
						{
							SetPlayerArmour(i, 100);
							SCM(i, COLOR_YELLOW, "Администратор выдал Вам бронь");
						}
					}
				}
			case 4:
				{
					for(new i, j = GetMaxPlayers(); i != j; i++)
					{
						if(GetDistanceBetweenPlayers(playerid,i) < 50 && playerid != i)
						{
							_ResetGun(i);
							SCM(i, COLOR_YELLOW, "Администратор забрал у Вас оружие");
						}
					}
				}
			case 5: SPDEx(playerid, 5345, 1,"Раздать скин", "Чтобы выдать временный скин игрокам - введите ID скина", "Выдать", "Закрыть");
			}
		}
    case 5345:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return SPDEx(playerid, 5345, 1,"Раздать скин", "Чтобы выдать временный скин игрокам - введите ID скина", "Выдать", "Закрыть");
			if(strval(inputtext) < 0 || strval(inputtext) > 299) return SCM(playerid, COLOR_GREY, "Нельзя меньше 0 и больше 299");
			for(new i, j = GetMaxPlayers(); i != j; i++)
			{
				if(GetDistanceBetweenPlayers(playerid,i) < 50 && playerid != i)
				{
					SetPlayerSkin(i, strval(inputtext));
					SCM(i, COLOR_YELLOW, "Администратор выдал Вам временный скин");
				}
			}
		}
	case 5346:
		{
			if(response)
			{
				if(!strlen(inputtext)) return SPDEx(playerid, 5346, 1,"Выдача оружия", "Введите id оружия и патроны\nПример: {FFFFFF}31,500\nГде 31 m4 а 500 патроны", "Выдать", "Закрыть");
				else if(strfind(inputtext,",", true) != -1)
				{
					new razdel[2][64];
					split(inputtext, razdel, ',');
					for(new i, j = GetMaxPlayers(); i != j; i++)
					{
						_GiveGun(playerid, strval(razdel[0]), strval(razdel[1]));
						if(GetDistanceBetweenPlayers(playerid,i) < 50 && playerid != i)
						{
							_GiveGun(i, strval(razdel[0]), strval(razdel[1]));
							SCM(i, COLOR_YELLOW, "Администратор выдал Вам оружие");
						}
					}
				}
			}
		}
	case 5347:
		{
			if(!response) return 1;
			new price, till, p = PI[playerid][pPbiskey];
			if(GetPVarInt(playerid,"Zakaz") != 0) return SCM(playerid, COLOR_RED,"Вы уже совершали заказ. Ожидайте выполнения заказа.");
			if(BizzInfo[p][bProducts] >= 19999) return SCM(playerid,COLOR_GRAD1, "В бизнесе уже достаточно товаров!");
			if(sscanf(inputtext, "p<,>ii",till,price)) return SPDEx(playerid, 5347, 1, "Топливо", "{ffffff}Введите кол-во литров топлива и оплату (через запятую):\n\nНа {8d8dff}1{ffffff} литр топлива приходится {8d8dff}$0,5{ffffff}\n\n", "Принять", "Отмена");
			if(till < 50 || till > 20000-BizzInfo[p][bProducts])
			{
				SCM(playerid, COLOR_GREY, "Кол-во топлива от 50 до 20000!");
				return SPDEx(playerid, 5347, 1, "Топливо", "{ffffff}Введите кол-во литров топлива и оплату (через запятую):\n\nНа {8d8dff}1{ffffff} литр топлива приходится {8d8dff}$0,5{ffffff}\n\n", "Принять", "Отмена");
			}
			if(price < 1000 || price > 10000)
			{
				SCM(playerid, COLOR_GREY, "Цена за работу от 1000 до 10000!");
				return SPDEx(playerid, 5347, 1, "Топливо", "{ffffff}Введите кол-во литров топлива и оплату (через запятую):\n\nНа {8d8dff}1{ffffff} литр топлива приходится {8d8dff}$0,5{ffffff}\n\n", "Принять", "Отмена");
			}
			if(PI[playerid][pBank] < price+till)
			{
				SPDEx(playerid, 5347, 1, "Топливо", "{ffffff}Введите кол-во литров топлива и оплату (через запятую):\n\nНа {8d8dff}1{ffffff} литр топлива приходится {8d8dff}$0,5{ffffff}\n\n", "Принять", "Отмена");
				return SCM(playerid, COLOR_GREY, "На вашем счету недостаточно денег!");
			}
			new online = 0;
			for(new idx=0, i=0; idx<cvector_size(players); idx++)
			{
				i = cvector_get(players, idx);
				if(PI[i][pJob] == 8) online++;
			}
			if(online == 0)
			{
				SCM(playerid, COLOR_GREY, "В данный момент нет развозчиков топлива в сети!");
				return true;
			}
			format(YCMDstr,  128, "Поступил новый заказ от %s. Используйте: /flist", Name(playerid));
			SendJobMessage(8, COLOR_RED, YCMDstr);
			TOTALFUEL++;
			strmid(FuelInfo[TOTALFUEL][pName],Name(playerid),0,strlen(Name(playerid)),MAX_PLAYER_NAME);
			FuelInfo[TOTALFUEL][pPrice] = price;
			FuelInfo[TOTALFUEL][pTill] = till;
			FuelInfo[TOTALFUEL][pBizzid] = p;
			FuelInfo[TOTALFUEL][pStatus] = false;
			SetPVarInt(playerid, "Zakaz", 1);
			PI[playerid][pBank] -= price;
			format(YCMDstr, 128, "Вы заказали %i литров топлива, оплата $%i. Остаток на счете: $%i", till, price, PI[playerid][pBank]);
			SCM(playerid,COLOR_BLUE,YCMDstr);
		}
	case 5348:
		{
			if(!response) return 1;
			new strin[256];
			SetPVarInt(playerid, "FuelID", listitem+1);
			strin = "";
			format(strin, 256, "{ffffff}Номер заказа {8D8DFF}\t\t№%i %s\n\n{ffffff}Заказал:\t\t{8D8DFF}%s\n{ffffff}Куда:\t\t\t{8D8DFF}%s\n{ffffff}Количество:\t\t{8D8DFF}%i {ffffff}литров топлива\n{ffffff}Оплата:\t\t{8D8DFF}$%i{ffffff}",
			listitem+1, (!FuelInfo[listitem+1][pStatus]) ? ("{8D8DFF}(Доступен)") : ("{FF6347}(Выполняется)"), FuelInfo[listitem+1][pName], BizzInfo[FuelInfo[listitem+1][pBizzid]][bMessage],FuelInfo[listitem+1][pTill], FuelInfo[listitem+1][pPrice]);
			SPDEx(playerid, 5349, 0, "Заказ", strin, "Принять", "Назад");
		}
	case 5349:
		{
			if(!response) return FuelList(playerid),DeletePVar(playerid, "FuelID");
			new trailcarid = GetVehicleTrailer(GetPlayerVehicleID(playerid));
			if(GetVehicleModel(trailcarid) != 584)
			{
				SCM(playerid, COLOR_GREEN, "У Вас нет прицепа, езжайте на завод");
				return true;
			}
			new strin[128];
			if(strcmp(FuelInfo[GetPVarInt(playerid, "FuelID")][pName], Name(playerid), true) == 0) { DeletePVar(playerid, "FuelID"); FuelList(playerid); return SCM(playerid, COLOR_GREY, "Ты не можешь выполнить свой заказ!"); }
			if(FuelInfo[GetPVarInt(playerid, "FuelID")][pStatus] == true) { SCM(playerid, COLOR_GREY, "Заказ уже выполняется кем-либо!"); DeletePVar(playerid, "FuelID"); return FuelList(playerid); }
			new Float:VPos[3], i = FuelInfo[GetPVarInt(playerid, "FuelID")][pBizzid];
			format(YCMDstr, 128, "Вы приняли заказ от %s.", FuelInfo[GetPVarInt(playerid, "FuelID")][pName]);
			SCM(playerid,COLOR_ORANGE,YCMDstr);
			GetPlayerPos(playerid,VPos[0],VPos[1],VPos[2]);
			DisablePlayerRaceCheckpoint(playerid);
			FuelInfo[GetPVarInt(playerid, "FuelID")][pStatus] = true;
			SetPlayerRaceCheckpoint(playerid, 1, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ], 0.0,0.0,0.0,6);
			format(YCMDstr, 128, "На карте отмечен: %s. Расстояние: %.1f метров",BizzInfo[i][bMessage],GetDistanceBetweenPoints(VPos[0], VPos[1], VPos[2], BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]));
			SCM(playerid,COLOR_RED,YCMDstr);
			strin = "";
			format(strin, 128, "{CC3333}Топлива: {ffffff}%i / 20000{CC3333} литров", FuelInfo[GetPVarInt(playerid, "FuelID")][pTill]);
			FuelInfo[GetPVarInt(playerid, "FuelID")][pText3D] = Create3DTextLabel(strin, 0xffffffff, 0.0, 0.0, 0.0, 30.0, 0, 1);
			Attach3DTextLabelToVehicle(FuelInfo[GetPVarInt(playerid, "FuelID")][pText3D], GetPlayerVehicleID(playerid), 0, -1.0, 2.0);
		}
	case 5350:
		{
			if(!response) return true;
			new till = strval(inputtext);
			new v = PI[playerid][pPbiskey];
			if(GetPVarInt(playerid,"Zakaz") != 0) return SCM(playerid, COLOR_RED,"Вы уже совершали заказ. Ожидайте выполнения заказа.");
			if(BizzInfo[v][bProducts] >= 1999) return SCM(playerid,COLOR_GRAD1, "В бизнесе уже достаточно товаров!");
			if(till < 50 || till > 2000-BizzInfo[v][bProducts])
			{
				SCM(playerid, COLOR_GREY, "Кол-во товаров от 50 до 2000!");
				return SPDEx(playerid, 5350, 1, "Товары", "{ffffff}Введите кол-во товаров и оплату (через запятую):\n\nНа {8D8DFF}50{ffffff} единиц продукции приходиться {8D8DFF}$5 {ffffff}\n\n", "Принять", "Отмена");
			}
			if(PI[playerid][pBank] < till*5) return SCM(playerid, COLOR_GREY, "На Вашем счету в банке не хватает денег!");
			new online = 0;
			for(new idx=0, i=0; idx<cvector_size(players); idx++)
			{
				i = cvector_get(players, idx);
				if(PI[i][pJob] == 7) online++;
			}
			if(online == 0)
			{
				SCM(playerid, COLOR_GREY, "В данный момент нет развозчиков товаров в сети!");
				return true;
			}
			format(YCMDstr, 128, "Поступил новый заказ от %s. Используйте: /plist", Name(playerid));
			SendJobMessage(7, COLOR_RED, YCMDstr);
			TOTALPRODUCT++;
			strmid(ProductInfo[TOTALPRODUCT][pName],Name(playerid),0,strlen(Name(playerid)),MAX_PLAYER_NAME);
			ProductInfo[TOTALPRODUCT][pPrice] = till*5;
			ProductInfo[TOTALPRODUCT][pTill] = till;
			ProductInfo[TOTALPRODUCT][pBizzid] = v;
			ProductInfo[TOTALPRODUCT][pStatus] = false;
			SetPVarInt(playerid, "Zakaz", 1);
			PI[playerid][pBank] -= v;
			format(YCMDstr, 128, "Вы заказали %i товаров. Снято с банковского счёта: $%i.", till, ProductInfo[TOTALPRODUCT][pPrice]);
			SCM(playerid,COLOR_BLUE,YCMDstr);
		}
	case 5351:
		{
			if(!response) return true;
			SetPVarInt(playerid, "ProductID", listitem+1);
			new strin[256];
			strin = "";
			format(strin, 256, "{ffffff}Номер заказа {8D8DFF}\t\t№%i %s\n\n{ffffff}Заказал:\t\t{8D8DFF}%s\n{ffffff}Куда:\t\t\t{8D8DFF}%s\n{ffffff}Количество:\t\t{8D8DFF}%i {ffffff}товаров\n{ffffff}Оплата:\t\t{8D8DFF}$2000{ffffff}",
			listitem+1, (!ProductInfo[listitem+1][pStatus]) ? ("{8D8DFF}(Доступен)") : ("{FF6347}(Выполняется)"), ProductInfo[listitem+1][pName], BizzInfo[ProductInfo[listitem+1][pBizzid]][bMessage],ProductInfo[listitem+1][pTill]);
			SPDEx(playerid, 5352, 0, "Заказ", strin, "Принять", "Назад");
		}
	case 5352:
		{
			if(!response)  return ProductList(playerid), DeletePVar(playerid, "ProductID");
			new strin[50];
			if(strcmp(ProductInfo[GetPVarInt(playerid, "ProductID")][pName], Name(playerid), true) == 0) { DeletePVar(playerid, "ProductID"); ProductList(playerid); return SCM(playerid, COLOR_GREY, "Ты не можешь выполнить свой заказ!"); }
			if(ProductInfo[GetPVarInt(playerid, "ProductID")][pStatus] == true) { SCM(playerid, COLOR_GREY, "Заказ уже выполняется кем-либо!"); DeletePVar(playerid, "ProductID"); return ProductList(playerid); }
			new Float:VPos[3], i = ProductInfo[GetPVarInt(playerid, "ProductID")][pBizzid];
			format(YCMDstr, 128, "Вы приняли заказ от %s.", ProductInfo[GetPVarInt(playerid, "ProductID")][pName]);
			SCM(playerid,COLOR_GREEN,YCMDstr);
			GetPlayerPos(playerid, VPos[0], VPos[1], VPos[2]);
			DisablePlayerRaceCheckpoint(playerid);
			ProductInfo[GetPVarInt(playerid, "ProductID")][pStatus] = true;
			SetPlayerRaceCheckpoint(playerid, 1, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ], 0.0,0.0,0.0,6);
			format(YCMDstr, 128, "На карте отмечен: %s. Расстояние: %.1f метров",BizzInfo[i][bMessage],GetDistanceBetweenPoints(VPos[0], VPos[1], VPos[2], BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]));
			SCM(playerid,COLOR_GREEN,YCMDstr);
			strin = "";
			format(strin, 50, "{CC3333}Товаров: {ffffff}%i", ProductInfo[GetPVarInt(playerid, "ProductID")][pTill]);
			ProductInfo[GetPVarInt(playerid, "ProductID")][pText3D] = Create3DTextLabel(strin, 0xffffffff, 0.0, 0.0, 0.0, 30.0, 0, 1);
			Attach3DTextLabelToVehicle(ProductInfo[GetPVarInt(playerid, "ProductID")][pText3D], GetPlayerVehicleID(playerid), 0, -1.0, 0.5);
		}
	case 5576:
		{
			if(!response || !GetPVarInt(playerid,"RStol") || PlayRoulette[GetPVarInt(playerid,"RStol")] || GetPVarInt(playerid,"RStavka")) return true;
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1,5,12: { if(strval(inputtext) < 500 || strval(inputtext) > 5000 || PI[playerid][pCash] < strval(inputtext)) return SPDEx(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 500 вирт\nМаксимальняа ставка: 5000 вирт\nВведите сумму:","Играть","Закрыть"); }
			case 2,7,10: { if(strval(inputtext) < 2000 || strval(inputtext) > 20000 || PI[playerid][pCash] < strval(inputtext)) return SPDEx(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 2000 вирт\nМаксимальняа ставка: 20000 вирт\nВведите сумму:","Играть","Закрыть"); }
			case 3,8,11: { if(strval(inputtext) < 5000 || strval(inputtext) > 50000 || PI[playerid][pCash] < strval(inputtext)) return SPDEx(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 5000 вирт\nМаксимальняа ставка: 50000 вирт\nВведите сумму:","Играть","Закрыть"); }
			case 4,6,9: { if(strval(inputtext) < 10000 || strval(inputtext) > 100000 || PI[playerid][pCash] < strval(inputtext)) return SPDEx(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 10000 вирт\nМаксимальняа ставка: 100000 вирт\nВведите сумму:","Играть","Закрыть"); }
			}
			SetPVarInt(playerid,"RStavka",strval(inputtext));
			GetCasinoNumber(playerid);
			PI[playerid][pCash] -= strval(inputtext);
			DestroyObject(GetPVarInt(playerid,"RObj"));
			new obj = CreateObject(random(3) + 1930,GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"),0.00,0.00,0.00);
			SetPVarInt(playerid,"RObj",obj);
			new str[40];
			if(GetPVarInt(playerid,"RNumber_") > 4)
			{
				switch(GetPVarInt(playerid,"RNumber"))
				{
				case 116, 118, 120: str = "3 to 1"; case 121: str = "1 st 12";
				case 122: str = "2 nd 12"; case 123: str = "3 rd 12";
				case 124: str = "1 to 18"; case 125: str = "Even";
				case 126: str = "Red"; case 127: str = "Black";
				case 128: str = "Odd"; case 129: str = "19 to 36";
				}
			}
			else GetPVarString(playerid,"RNumbers",str,sizeof(str));
			format(string,256,"~<~~>~~up~~down~~n~~g~Money: %i~n~~y~Bet: %s",GetPVarInt(playerid,"RStavka"),str);
			return PlayerTextDrawSetString(playerid,RouletteText[playerid],string);
		}
	case 5490:
		{
			if(!response) return true;
			if(PlayRoulette[GetPVarInt(playerid,"RStol")] == false) PI[playerid][pCash] += GetPVarInt(playerid,"RStavka");
			DestroyObject(GetPVarInt(playerid,"RObj"));
			DeletePVar(playerid,"RObj");
			DeletePVar(playerid,"RStavka");
			DeletePVar(playerid,"RStol");
			DeletePVar(playerid,"RX");
			DeletePVar(playerid,"RY");
			DeletePVar(playerid,"RZ");
			DeletePVar(playerid,"RXONE");
			DeletePVar(playerid,"RYONE");
			DeletePVar(playerid,"RZONE");
			DeletePVar(playerid,"RNumber");
			DeletePVar(playerid,"RNumbers");
			DeletePVar(playerid,"RNumber_");
			PlayerTextDrawHide(playerid,RouletteText[playerid]);
			TogglePlayerControllable(playerid, true);
			SetCameraBehindPlayer(playerid);
			return true;
		}
	case 10000:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SPDEx(playerid,10001, 2, "Гос. Организации", "[1] LSPD\n[2] FBI\n[3] Армия ВМФ\n[4] Мед. Центр СФ\n[5] Мед. Центр ЛС\n[6] SA News\n[7] SFPD\n[8] Армия СВ\n[9] LVPD\n[10] Адм. Президента\n[11] Завод К.А.С.С\n[12] Тюрьма", "Выбрать", "Назад");
			case 1: SPDEx(playerid,10002, 2, "Работа", "[1] Центр занятости\n[2] Грузчик\n[3] Развозчик бензина\n[4] Развозчик продуктов\n[5] Уборщик улиц в СФ\n[6] Таксопарк\n[7] Стоянка механиков\n[8] Тренер спортзала\n[9] Лесоруб\n[10] Мусорщик\n[11] Свалка ЛС", "Выбрать", "Назад");
			case 2: SPDEx(playerid,10003, 2, "Транспортные школы", "[1] Автошкола\n[2] Морская школа\n[3] Школа пилотов", "Выбрать", "Назад");
			case 3: SPDEx(playerid,10004, 2, "Мафии", "[1] La Cosa Nostra\n[2] Russian Mafia\n[3] Yakuza", "Выбрать", "Назад");
			case 4: SPDEx(playerid,10005, 2, "Банды", "[1] Varrios Los Aztecas Gang\n[2] Los Santos Vagos Gang\n[3] Grove Street Gang\n[4] The Ballas Gang\n[5] The Rifa Gang\n[6] Байкеры", "Выбрать", "Назад");
			case 5: SPDEx(playerid,10006, 2, "Развлечения", "[1] Казино 4 Дракона\n[2] Казино Калигула\n[3] Спортзал\n[4] Клуб Alhambra\n[5] Клуб Fargs\n[6] Стриптиз клуб PigPen\n[7] Стриптиз клуб Jizzy\n[8] Стриптиз клуб Misty\n[9] The Grove Street Bar\n[10] Mars Bar", "Выбрать", "Назад");
			case 6: SPDEx(playerid,10007, 2, "Банки", "[1] Банк LS\n[2] Банк SF", "Выбрать", "Назад");
			case 7: SPDEx(playerid,10008, 2, "Автосалоны", "[1] Автосалон A класс\n[2] Автосалон B класс\n[3] Автосалон С класс\n[4] Автосалон Nope класс\n[5] Мотосалон", "Выбрать", "Назад");
			case 8: SPDEx(playerid,10009, 2, "Автомастерские", "[1] Автомастерская в Гетто\n[2] Автомастерская LS\n[3] Автомастерская SF\n[4] Автомастерская LV", "Выбрать", "Назад");
			case 9: SPDEx(playerid,10010, 2, "Магазины оружия", "[1] Магазин оружия LS\n[2] Магазин оружия SF\n[3] Магазин оружия LV\n[4] Магазин оружия в гетто", "Выбрать", "Назад");
			case 10: SPDEx(playerid,10011, 2, "Магазины одежды", "[1] Магазин одежды LS\n[2] Магазин одежды SF\n[3] Магазин одежды LV", "Выбрать", "Назад");
			case 11: SPDEx(playerid,10012, 2, "Отели", "[1] Отель LS\n[2] Отель в Гетто\n[3] Отель SF\n[4] Отель LV", "Выбрать", "Назад");
			case 12:
				{
					SetPlayerCheckpoint(playerid, 1166.7882,1373.5579,10.6719,8);
					FL[playerid][CP] = 777;
					SCM(playerid, COLOR_WHITE, "{9ACD32}[ GPS: Военкомат ] {FFFFFF}Место на карте помечено красной меткой");
					PlayerPlaySound(playerid, 4602, 0.0, 0.0, 0.0);
				}
			case 13:
				{
					SetPlayerCheckpoint(playerid, 2757.8845,-2513.8445,13.6427,8);
					FL[playerid][CP] = 777;
					SCM(playerid, COLOR_WHITE, "{9ACD32}[ GPS: Приём металла ] {FFFFFF}Место на карте помечено красной меткой");
					PlayerPlaySound(playerid, 4602, 0.0, 0.0, 0.0);
				}
			case 14: SPDEx(playerid,10013, 2, "Бизнесы", "[1] Заправки\n[2] Закусочные\n[3] Магазины 24/7", "Выбрать", "Назад");
			case 15: SPDEx(playerid,10017, 2, "Аренда транспорта", "[1] Аренда транспорта LS\n[2] Аренда транспорта SF", "Выбрать", "Назад");
			case 16:
				{
					SetPlayerCheckpoint(playerid, -1989.8961,1117.8936,54.4688,8);
					FL[playerid][CP] = 777;
					SCM(playerid, COLOR_WHITE, "{9ACD32}[ GPS: Церковь СФ ] {FFFFFF}Место на карте помечено красной меткой");
					PlayerPlaySound(playerid, 4602, 0.0, 0.0, 0.0);
				}
			case 17: SPDEx(playerid,10018, 2, "Плантации", "[1] Плантация №1\n[2] Плантация №2", "Выбрать", "Назад");
			}
		}
	case 10001:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SetPlayerCheckpoint(playerid, 1546.1973,-1675.2933,13.5618,8);
			case 1: SetPlayerCheckpoint(playerid, 1041.3071,1016.2233,11.0000,8);
			case 2: SetPlayerCheckpoint(playerid, -1529.6700,489.3321,7.1797,8);
			case 3: SetPlayerCheckpoint(playerid, -2664.6521,633.8802,14.4531,8);
			case 4: SetPlayerCheckpoint(playerid, 1178.2673,-1323.2823,14.1116,8);
			case 5: SetPlayerCheckpoint(playerid, -2521.1414,-620.8623,132.7226,8);
			case 6: SetPlayerCheckpoint(playerid, -1568.6824,662.3685,7.1875,8);
			case 7: SetPlayerCheckpoint(playerid, 89.2794,1920.8210,17.9122,8);
			case 8: SetPlayerCheckpoint(playerid, 2336.1372,2457.5476,14.9688,8);
			case 9: SetPlayerCheckpoint(playerid, 1481.2246,-1750.1477,15.4516,8);
			case 10: SetPlayerCheckpoint(playerid, 2493.1787,2773.9641,10.8071,8);
			case 11: SetPlayerCheckpoint(playerid, -301.9925,1501.7336,75.5774,8);
			}
			FL[playerid][CP] = 777;
			SCM(playerid, COLOR_WHITE, "{9ACD32}[ GPS: Гос. Организации ] {FFFFFF}Место на карте помечено красной меткой");
			PlayerPlaySound(playerid, 4602, 0.0, 0.0, 0.0);
		}
	case 10002:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SetPlayerCheckpoint(playerid, 1414.5551,-1702.4343,13.5395,8);
			case 1: SetPlayerCheckpoint(playerid, 2134.8369,-2276.8743,20.6719,8);
			case 2: SetPlayerCheckpoint(playerid, -1038.7529,-587.3921,32.0078,8);
			case 3: SetPlayerCheckpoint(playerid, -501.4049,-489.3826,25.5234,8);
			case 4: SetPlayerCheckpoint(playerid, -2095.9927,84.9679,35.3134,8);
			case 5: SetPlayerCheckpoint(playerid, 1087.9541,-1755.2340,13.3767,8);
			case 6: SetPlayerCheckpoint(playerid, 1639.4775,-1098.4001,23.9063,8);
			case 7: SetPlayerCheckpoint(playerid, 2225.9268,-1723.9700,13.5606,8);
			case 8: SetPlayerCheckpoint(playerid, -758.1893,-125.8942,65.7936,8);
			case 9: SetPlayerCheckpoint(playerid, 2437.1738,-2090.6555,13.5469,8);
			case 10: SetPlayerCheckpoint(playerid, 2183.1965,-1993.3499,14.1243,8);
			}
			FL[playerid][CP] = 777;
			SCM(playerid, COLOR_WHITE, "{9ACD32}[ GPS: Работа ] {FFFFFF}Место на карте помечено красной меткой");
			PlayerPlaySound(playerid, 4602, 0.0, 0.0, 0.0);
		}
	case 10003:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SetPlayerCheckpoint(playerid, -2026.5718,-98.9135,35.1641,8);
			case 1: SetPlayerCheckpoint(playerid, -2238.3364,2352.9585,4.9801,8);
			case 2: SetPlayerCheckpoint(playerid, 1319.1598,1251.4583,10.8203,8);
			}
			FL[playerid][CP] = 777;
			SCM(playerid, COLOR_WHITE, "{9ACD32}[ GPS: Транспортные школы ] {FFFFFF}Место на карте помечено красной меткой");
			PlayerPlaySound(playerid, 4602, 0.0, 0.0, 0.0);
		}
	case 10004:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SetPlayerCheckpoint(playerid, 1452.1350,751.4467,11.0234,8);
			case 1: SetPlayerCheckpoint(playerid, 941.0253,1733.1410,8.8516,8);
			case 2: SetPlayerCheckpoint(playerid, 1458.8167,2773.4338,10.8203,8);
			}
			FL[playerid][CP] = 777;
			SCM(playerid, COLOR_WHITE, "{9ACD32}[ GPS: Мафии ] {FFFFFF}Место на карте помечено красной меткой");
			PlayerPlaySound(playerid, 4602, 0.0, 0.0, 0.0);
		}
	case 10005:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SetPlayerCheckpoint(playerid, 2768.2532,-1945.2729,13.3533,8);
			case 1: SetPlayerCheckpoint(playerid, 2779.7588,-1615.9271,10.9219,8);
			case 2: SetPlayerCheckpoint(playerid, 2494.4004,-1661.6005,13.3359,8);
			case 3: SetPlayerCheckpoint(playerid, 2016.4124,-1271.3573,23.9844,8);
			case 4: SetPlayerCheckpoint(playerid, 2185.7969,-1809.1614,13.3747,8);
			case 5: SetPlayerCheckpoint(playerid, 681.6204,-473.3593,16.5363,8);
			}
			FL[playerid][CP] = 777;
			SCM(playerid, COLOR_WHITE, "{9ACD32}[ GPS: Банды ] {FFFFFF}Место на карте помечено красной меткой");
			PlayerPlaySound(playerid, 4602, 0.0, 0.0, 0.0);
		}
	case 10006:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SetPlayerCheckpoint(playerid, 2021.2626,1007.7176,10.8203,8);
			case 1: SetPlayerCheckpoint(playerid, 2195.6450,1677.1702,12.3672,8);
			case 2: SetPlayerCheckpoint(playerid, 2228.2612,-1723.3582,13.5527,8);
			case 3: SetPlayerCheckpoint(playerid, 1833.9481,-1682.4626,13.4520,8);
			case 4: SetPlayerCheckpoint(playerid, 1022.4164,-1123.4575,23.8701,8);
			case 5: SetPlayerCheckpoint(playerid, 2421.5073,-1221.9119,25.3894,8);
			case 6: SetPlayerCheckpoint(playerid, -2622.5547,1409.7776,7.1016,8);
			case 7: SetPlayerCheckpoint(playerid, -2244.8176,-88.2025,35.3203,8);
			case 8: SetPlayerCheckpoint(playerid, 2307.7188,-1644.0880,14.8270,8);
			case 9: SetPlayerCheckpoint(playerid, -88.2290,1378.3267,10.2734,8);
			}
			FL[playerid][CP] = 777;
			SCM(playerid, COLOR_WHITE, "{9ACD32}[ GPS: Развлечения ] {FFFFFF}Место на карте помечено красной меткой");
			PlayerPlaySound(playerid, 4602, 0.0, 0.0, 0.0);
		}
	case 10007:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SetPlayerCheckpoint(playerid, 1495.1060,-1280.8997,14.5827,8);
			case 1: SetPlayerCheckpoint(playerid, -2159.1455,252.1535,35.3203,8);
			}
			FL[playerid][CP] = 777;
			SCM(playerid, COLOR_WHITE, "{9ACD32}[ GPS: Банки ] {FFFFFF}Место на карте помечено красной меткой");
			PlayerPlaySound(playerid, 4602, 0.0, 0.0, 0.0);
		}
	case 10008:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SetPlayerCheckpoint(playerid, 2467.4814,1323.0344,10.6826,8);
			case 1: SetPlayerCheckpoint(playerid, -1641.2035,1203.4517,7.2441,8);
			case 2: SetPlayerCheckpoint(playerid, -1980.7369,288.0329,35.1612,8);
			case 3: SetPlayerCheckpoint(playerid, 557.2538,-1256.7982,17.2422,8);
			case 4: SetPlayerCheckpoint(playerid, 2125.5046,-1123.5510,25.4334,8);
			}
			FL[playerid][CP] = 777;
			SCM(playerid, COLOR_WHITE, "{9ACD32}[ GPS: Автосалоны ] {FFFFFF}Место на карте помечено красной меткой");
			PlayerPlaySound(playerid, 4602, 0.0, 0.0, 0.0);
		}
	case 10009:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SetPlayerCheckpoint(playerid, 2520.0493,-1532.8918,23.4946,8);
			case 1: SetPlayerCheckpoint(playerid, -46.2246,-1132.6191,1.0781,8);
			case 2: SetPlayerCheckpoint(playerid, -2053.8171,75.0147,28.3906,8);
			case 3: SetPlayerCheckpoint(playerid, 1530.5007,998.0905,10.8203,8);
			}
			FL[playerid][CP] = 777;
			SCM(playerid, COLOR_WHITE, "{9ACD32}[ GPS: Автомастерские ] {FFFFFF}Место на карте помечено красной меткой");
			PlayerPlaySound(playerid, 4602, 0.0, 0.0, 0.0);
		}
	case 10010:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SetPlayerCheckpoint(playerid, 1366.6362,-1279.6069,13.5469,8);
			case 1: SetPlayerCheckpoint(playerid, -2625.7771,210.8378,4.6197,8);
			case 2: SetPlayerCheckpoint(playerid, 2157.0203,943.2742,10.8203,8);
			case 3: SetPlayerCheckpoint(playerid, 2291.9756,-1725.1893,13.5469,8);
			}
			FL[playerid][CP] = 777;
			SCM(playerid, COLOR_WHITE, "{9ACD32}[ GPS: Магазины оружия ] {FFFFFF}Место на карте помечено красной меткой");
			PlayerPlaySound(playerid, 4602, 0.0, 0.0, 0.0);
		}
	case 10011:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SetPlayerCheckpoint(playerid, 457.4492,-1501.4225,31.0386,8);
			case 1: SetPlayerCheckpoint(playerid, -1884.0984,864.2416,35.1719,8);
			case 2: SetPlayerCheckpoint(playerid, 2090.7805,2222.3018,10.8203,8);
			}
			FL[playerid][CP] = 777;
			SCM(playerid, COLOR_WHITE, "{9ACD32}[ GPS: Магазины одежды ] {FFFFFF}Место на карте помечено красной меткой");
			PlayerPlaySound(playerid, 4602, 0.0, 0.0, 0.0);
		}
	case 10012:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SetPlayerCheckpoint(playerid, 329.6043,-1517.2578,35.8672,8);
			case 1: SetPlayerCheckpoint(playerid, 2226.4436,-1160.1378,25.7662,8);
			case 2: SetPlayerCheckpoint(playerid, -1754.1951,956.9241,24.8828,8);
			case 3: SetPlayerCheckpoint(playerid, 2021.3402,1913.0995,12.3109,8);
			}
			FL[playerid][CP] = 777;
			SCM(playerid, COLOR_WHITE, "{9ACD32}[ GPS: Отели ] {FFFFFF}Место на карте помечено красной меткой");
			PlayerPlaySound(playerid, 4602, 0.0, 0.0, 0.0);
		}
	case 10013:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SPDEx(playerid,10014, 2, "Заправки", "[1] Idelwood Gas\n[2] Mullholand Gas\n[3] Easter Gas\n[4] Flint Gas\n[5] Come-A-Lot Gas\n[6] Fort Carson Gas\n[7] Doherty Gas\n[8] Dilimore Gas\n[9] Gasso Gas\n[10] BoneCounty Gas\n[11] Prickle Gas\n[12] Emerland Gas\n[13] ElGuetra Gas\n[14] Livonto Gas\n[15] Chiliad Gas", "Выбрать", "Назад");
			case 1: SPDEx(playerid,10015, 2, "Закусочные", "[1] Vinewood Burger\n[2] Marina Burger\n[3] Idlewood Pizza\n[4] Downtown Cluc\n[5] Marina Cluc\n[6] East Cluc\n[7] WillowField Cluc\n[8] Flats Cluc\n[9] Financial Pizza\n[10] BigSpread Cluc\n[11] Romillio Bar\n[12] Fast Burger\n[13] Garsia Cluc\n[14] Junior Burger\n[15] Alegia Burger\n[16] Tione Cluc\n[17] Jiovanny Burger\n[18] Sale Burger\n[19] Stacked Pizza", "Выбрать", "Назад");
			case 2: SPDEx(playerid,10016, 2, "Магазины 24/7", "[1] Idelwood 24/7\n[2] Flint 24/7\n[3] Easter 24/7\n[4] Mullholand 24/7\n[5] Redsands West 24/7\n[6] Julious 24/7\n[7] Whetstone 24/7", "Выбрать", "Назад");
			}
		}
	case 10014:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SetPlayerCheckpoint(playerid, 1941.7981,-1769.3301,13.6406,8);
			case 1: SetPlayerCheckpoint(playerid, 1003.7600,-936.1100,42.3281,8);
			case 2: SetPlayerCheckpoint(playerid, -1676.8800,411.8920,7.1797,8);
			case 3: SetPlayerCheckpoint(playerid, -91.3459,-1169.9000,2.4206,8);
			case 4: SetPlayerCheckpoint(playerid, 2112.9299,919.8760,10.8203,8);
			case 5: SetPlayerCheckpoint(playerid, 70.5145,1218.4600,18.8126,8);
			case 6: SetPlayerCheckpoint(playerid, -2026.7700,156.7340,29.0391,8);
			case 7: SetPlayerCheckpoint(playerid, 1381.6600,458.7670,19.9906,8);
			case 8: SetPlayerCheckpoint(playerid, 655.242,-564.98,16.3359,8);
			case 9: SetPlayerCheckpoint(playerid, -1329.09,2677.41,50.0625,8);
			case 10: SetPlayerCheckpoint(playerid, 2146.25,2747.76,10.8203,8);
			case 11: SetPlayerCheckpoint(playerid, 2641.86,1106.11,10.8203,8);
			case 12: SetPlayerCheckpoint(playerid, 2202.43,2474.29,10.8203,8);
			case 13: SetPlayerCheckpoint(playerid, 1595.19,2199.15,10.8203,8);
			case 14: SetPlayerCheckpoint(playerid, -2403.7542,-596.3151,132.6566,8);
			}
			FL[playerid][CP] = 777;
			SCM(playerid, COLOR_WHITE, "{9ACD32}[ GPS: Заправки ] {FFFFFF}Место на карте помечено красной меткой");
			PlayerPlaySound(playerid, 4602, 0.0, 0.0, 0.0);
		}
	case 10015:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SetPlayerCheckpoint(playerid, 1199.1522,-922.1633,43.0286,8);
			case 1: SetPlayerCheckpoint(playerid, 814.8859,-1616.7090,13.6415,8);
			case 2: SetPlayerCheckpoint(playerid, 2101.9094,-1807.2585,13.5547,8);
			case 3: SetPlayerCheckpoint(playerid, -1816.4523,615.2299,35.1719,8);
			case 4: SetPlayerCheckpoint(playerid, 923.1395,-1353.6587,13.3773,8);
			case 5: SetPlayerCheckpoint(playerid, 2423.0576,-1508.6707,23.9922,8);
			case 6: SetPlayerCheckpoint(playerid, 2397.9424,-1895.7648,13.3828,8);
			case 7: SetPlayerCheckpoint(playerid, -2672.5471,263.1331,4.6328,8);
			case 8: SetPlayerCheckpoint(playerid, -1805.7511,942.8463,24.8906,8);
			case 9: SetPlayerCheckpoint(playerid, 203.5411,-204.5820,1.5781,8);
			case 10: SetPlayerCheckpoint(playerid, 1879.1965,2339.4971,10.9799,8);
			case 11: SetPlayerCheckpoint(playerid, 1160.8527,2070.3801,10.8203,8);
			case 12: SetPlayerCheckpoint(playerid, 2172.5276,2793.4739,10.8203,8);
			case 13: SetPlayerCheckpoint(playerid, -2152.4739,-2463.0659,30.8438,8);
			case 14: SetPlayerCheckpoint(playerid, 1363.6118,250.2632,19.5669,8);
			case 15: SetPlayerCheckpoint(playerid, 171.9245,1174.2725,14.7578,8);
			case 16: SetPlayerCheckpoint(playerid, -2336.1619,-166.8482,35.5547,8);
			case 17: SetPlayerCheckpoint(playerid, -1911.9634,828.3435,35.1973,8);
			case 18: SetPlayerCheckpoint(playerid, 2331.8088,75.0362,26.6210,8);
			}
			FL[playerid][CP] = 777;
			SCM(playerid, COLOR_WHITE, "{9ACD32}[ GPS: Закусочные ] {FFFFFF}Место на карте помечено красной меткой");
			PlayerPlaySound(playerid, 4602, 0.0, 0.0, 0.0);
		}
	case 10016:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SetPlayerCheckpoint(playerid, 1931.6998,-1776.0905,13.3828,8);
			case 1: SetPlayerCheckpoint(playerid, -80.7860,-1168.8107,2.2002,8);
			case 2: SetPlayerCheckpoint(playerid, -1673.5793,429.6263,7.1797,8);
			case 3: SetPlayerCheckpoint(playerid, 997.7670,-920.6755,42.1797,8);
			case 4: SetPlayerCheckpoint(playerid, 1600.5183,2220.1372,11.0625,8);
			case 5: SetPlayerCheckpoint(playerid, 2637.5125,1127.0229,11.1797,8);
			case 6: SetPlayerCheckpoint(playerid, -1570.3353,-2728.6848,48.7435,8);
			}
			FL[playerid][CP] = 777;
			SCM(playerid, COLOR_WHITE, "{9ACD32}[ GPS: Магазины 24/7 ] {FFFFFF}Место на карте помечено красной меткой");
			PlayerPlaySound(playerid, 4602, 0.0, 0.0, 0.0);
		}
	case 10017:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SetPlayerCheckpoint(playerid, 215.7379,-1439.5547,13.2126,8);
			case 1: SetPlayerCheckpoint(playerid, -1873.3438,-131.0595,11.8984,8);
			}
			FL[playerid][CP] = 777;
			SCM(playerid, COLOR_WHITE, "{9ACD32}[ GPS: Аренда транспорта ] {FFFFFF}Место на карте помечено красной меткой");
			PlayerPlaySound(playerid, 4602, 0.0, 0.0, 0.0);
		}
	case 10018:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: SetPlayerCheckpoint(playerid, -117.6330,-2.0081,2.6663,8);
			case 1: SetPlayerCheckpoint(playerid, 1941.9686,167.4404,36.8384,8);
			}
			FL[playerid][CP] = 777;
			SCM(playerid, COLOR_WHITE, "{9ACD32}[ GPS: Плантации ] {FFFFFF}Место на карте помечено красной меткой");
			PlayerPlaySound(playerid, 4602, 0.0, 0.0, 0.0);
		}
	case 8810:
		{
			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						format(YCMDstr,128, "Баланс Вашего счёта: $%d\nВведите нужную Вам сумму", PI[playerid][pBank]);
						SPDEx(playerid,8814,1, "Снятие со счёта",YCMDstr, "Готово", "Назад");
						return true;
					}
				case 1:
					{
						format(YCMDstr,128, "Баланс Вашего счёта: $%d\nВведите нужную Вам сумму", PI[playerid][pBank]);
						SPDEx(playerid,8816,1, "Положить на счёт",YCMDstr, "Готово", "Назад");
						return true;
					}
				case 2:
					{
						format(YCMDstr,128, " Имя: %s\n Счёт в банке: $%d", sendername, PI[playerid][pBank]);
						SPDEx(playerid, 8817, 2, "Информация", YCMDstr, "Готово", "Назад");
						return true;
					}
				case 3:
					{
						if(PI[playerid][pPbiskey] == 255) return SCM(playerid, COLOR_GREY, "Вы не бизнесмен!");
						SPDEx(playerid,2929,1, "Перевод на счёт бизнеса", "Введите сумму, которую Вы хотите перевести", "Готово", "Отмена");
						return true;
					}
				case 4:
					{
						if(PI[playerid][pPviskey] == 255) return SCM(playerid, COLOR_GREY, "Вы не владеете Автомастерской!");
						SPDEx(playerid,3939,1, "Перевод на счёт Автомастерской", "Введите сумму, которую Вы хотите перевести", "Готово", "Отмена");
						return true;
					}
				case 5:
					{
						new schet = PI[playerid][pStraf] * 1000;
						format(string,sizeof(string),"Стоимость оплаты штрафов состовляет: [%d]\nКол-во квитанций: [%d]", schet,PI[playerid][pStraf]);
						SPDEx(playerid,3940,0,"Оплата штрафов",string,"Оплатить","Позже");
						return 1;
					}
				case 6:
					{
						if(PI[playerid][pLevel] < 3) return SCM(playerid, COLOR_LIGHTRED, "У Вас должен быть 3 уровень");
						if(PI[playerid][pBSA] >= 1) return SCM(playerid, COLOR_LIGHTRED, "Администратор не может передавать деньги");
						if(GetPVarInt(playerid,"Prodaet") == 1) return SCM(playerid,COLOR_GREY,"Во время покупки имущества - запрещено пользоваться банковскими услугами!");
						if(PI[playerid][pPayDayHad] < 5) return SCM(playerid, COLOR_GRAD1, "Вы должны отыграть 5 часов!");
						SPDEx(playerid, 2930, 2, "INFO", "Совершить перевод средств?", "Да", "Нет");
						return 1;
					}
                case 7:
					{
						SPDEx(playerid,9524,2, "Настройка PIN-Code", "[1] Установить PIN-Code\n[2] Отключить PIN-Code", "Готово", "Назад");
						return true;
					}
				}
			}
			else
			{
				GameTextForPlayer(playerid, "~g~Good Luck", 1000, 1);
				return true;
			}
		}
	case 2930:
		{
			if(!response) return 1;
			new pname[MAX_PLAYER_NAME], lname[MAX_PLAYER_NAME];
			new idd = strval(inputtext);
			new cash = strval(inputtext);
			if(sscanf(inputtext, "p<,>ui",idd,cash)) return SPDEx(playerid, 2930, 1, "Перевод", "{ffffff}Введите ID игрока и сумму перевода (через запятую)", "Ок", "Отмена");
			if(!IsPlayerConnected(idd)) return SCM(playerid, COLOR_GREY, "Игрока нет в сети");
			if(cash < 1 || cash > 100000)
			{
				SCM(playerid, COLOR_GREY, "Сумма перевода от $1 до $100.000");
				return SPDEx(playerid, 5347, 1, "Перевод", "{ffffff}Введите ID игрока и сумму перевода (через запятую)", "Ок", "Отмена");
			}
			if(cash > 0 && PI[playerid][pBank] >= cash)
			{
				GetPlayerName(idd, pname, sizeof(pname));
				PI[playerid][pBank] -= cash;
				PI[idd][pBank] += cash;
				format(YCMDstr,128, "Вы совершили денежный перевод игроку %s[%d]. Сумма: $%d",pname, idd, cash);
				SCM(playerid, COLOR_YELLOW, YCMDstr);
				GetPlayerName(playerid, lname, sizeof(lname));
				format(YCMDstr,128, "SMS: %s отправил Вам денежный перевод. Сумма: $%d.",lname, cash);
				SCM(idd, COLOR_YELLOW, YCMDstr);
				PlayerPlaySound(idd, 1052, 0.0, 0.0, 0.0);
			}
		}
	case 2929:
		{
			if(response)
			{
				if(!strlen(inputtext)) return SCM(playerid, COLOR_GREY, "Ошибка!");
				if(!strlen(inputtext)) return SPDEx(playerid, 2929, 1,"Перевод денег на счет бизнеса",YCMDstr,"Готово","Отмена");
				if(strval(inputtext) < 1000 || strval(inputtext) > 50000)
				{
					SCM(playerid, 0xAFAFAFAA, "Минимальная сумма 1000, максимальная - 50.000!");
					format(YCMDstr,128, "Введите сумму, которую Вы хотите положить на счет бизнеса");
					SPDEx(playerid, 2929, 1,"Перевод на счет бизнеса",YCMDstr,"Готово","Отмена");
					return true;
				}
				if(PI[playerid][pBank] < strval(inputtext)) return	SCM(playerid, 0xB4B5B7FF, "У Вас нет столько денег!");
				if(BizzInfo[PI[playerid][pPbiskey]][bTill]+strval(inputtext)>50000) return SCM(playerid,COLOR_GREY,"Нельзя пополнять счет бизнеса более чем на 50 тысяч.");
				if(PI[playerid][pPbiskey] < 100)
				{
					PI[playerid][pBank] -= strval(inputtext);
					BizzInfo[PI[playerid][pPbiskey]][bTill] += strval(inputtext);
					format(YCMDstr,128, "Вы положили на счёт Вашего бизнеса $%d", strval(inputtext));
					SCM(playerid, 0x6495EDFF, YCMDstr);
					SetPlayerChatBubble(playerid, "положил на счёт бизнеса",0xC2A2DAAA,30.0,10000);
				}
				return true;
			}
			else return true;
		}
	case 3939:
		{
			if(response)
			{
				if(!strlen(inputtext)) return SCM(playerid, COLOR_GREY, "Ошибка!");
				if(!strlen(inputtext)) return SPDEx(playerid, 3939, 1,"Перевод денег на счет Автомастерской",YCMDstr,"Готово","Отмена");
				if(strval(inputtext) < 1000 || strval(inputtext) > 50000)
				{
					SCM(playerid, 0xAFAFAFAA, "Минимальная сумма 1000, максимальная - 50.000!");
					format(YCMDstr,128, "Введите сумму, которую Вы хотите положить на счет Автомастерской");
					SPDEx(playerid, 3939, 1,"Перевод на счет Автомастерской",YCMDstr,"Готово","Отмена");
					return true;
				}
				if(PI[playerid][pBank] < strval(inputtext)) return	SCM(playerid, 0xB4B5B7FF, "У Вас нет столько денег!");
				if(AvtoMInfo[PI[playerid][pPviskey]][vTill]+strval(inputtext)>50000) return SCM(playerid,COLOR_GREY,"Нельзя пополнять счет мастерской более чем на 50 тысяч.");
				if(PI[playerid][pPviskey] < 100)
				{
					PI[playerid][pBank] -= strval(inputtext);
					AvtoMInfo[PI[playerid][pPviskey]][vTill] += strval(inputtext);
					format(YCMDstr,128, "Вы положили на счёт Автомастерской $%d", strval(inputtext));
					SCM(playerid, 0x6495EDFF, YCMDstr);
				}
				return true;
			}
			else return true;
		}
	case 3940:
		{
			if(response)
			{
				new schet = PI[playerid][pStraf] * 1000;
				if(PI[playerid][pCash] < schet) return SCM(playerid,0xFA8072AA,"У Вас недостаточно при себе денег.");
				PI[playerid][pCash] -= schet;
				SCM(playerid,0x6495EDAA,"Вы оплатили все квитанции штрафов.");
				PI[playerid][pStraf] = 0;
			}
		}
	case 8816:
		{
			if(response)
			{
				new summa;
				if(!strlen(inputtext))
				{
					format(YCMDstr,128, "Баланс вашего счёта: $%d.\nВведите нужную вам сумму", PI[playerid][pBank]);
					SPDEx(playerid,8816,1, "Положить на счёт",YCMDstr, "Готово", "Отмена");
				}
				summa = strval(inputtext);
				if(PI[playerid][pCash] < summa) return SCM(playerid, COLOR_GRAD1, "У вас нет столько денег!");
				if(summa < 1 || summa > 1000000) { SCM(playerid, COLOR_GREY, "Нельзя положить больше $1000000!"); return true; }
				SCM(playerid, COLOR_GRAD1, "---------===[ ЧЕК ]===---------");
				format(YCMDstr,128, "Старый баланс: $%d", PI[playerid][pBank]);
				SCM(playerid, COLOR_GREY, YCMDstr);
				PI[playerid][pCash] -=summa;
				PI[playerid][pBank] += summa;
				format(YCMDstr,128, "Переведено: $%d",summa);
				SCM(playerid, COLOR_GRAD4, YCMDstr);
				format(YCMDstr,128, "Новый баланс: $%d", PI[playerid][pBank]);
				SCM(playerid, COLOR_WHITE, YCMDstr);
				return true;
			}
		}
	case 8814:
		{
			if(response)
			{
				new summa;
				if(!strlen(inputtext))
				{
					format(YCMDstr,256, "Баланс вашего счёта: $%d\nВведите нужную вам сумму", PI[playerid][pBank]);
					SPDEx(playerid,8814,1, "Снятие со счёта",YCMDstr, "Готово", "Назад");
				}
				summa = strval(inputtext);
				if(PI[playerid][pBank] < summa) return SCM(playerid, COLOR_GRAD1, "У вас нет столько денег!");
				if(summa < 1 || summa > 1000000) { SCM(playerid, COLOR_GREY, "Нельзя снять более 1000000!"); return true; }
				SCM(playerid, COLOR_GRAD1, "---------===[ ЧЕК ]===---------");
				format(YCMDstr,128, "Старый баланс: $%d", PI[playerid][pBank]);
				SCM(playerid, COLOR_GREY, YCMDstr);
				PI[playerid][pCash] +=summa;
				PI[playerid][pBank] -= summa;
				format(YCMDstr,128, "Снято: $%d",summa);
				SCM(playerid, COLOR_GRAD4, YCMDstr);
				format(YCMDstr,128, "Новый баланс: $%d", PI[playerid][pBank]);
				SCM(playerid, COLOR_WHITE, YCMDstr);
				return true;
			}
		}
	case 8900:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						format(YCMDstr,128, "Баланс вашего счёта: $%d", PI[playerid][pBank]);
						SPDEx(playerid,8904,2,YCMDstr, " [1] $500\n [2] $1000\n [3] $5000\n [4] $10000\n [5] $20000\n [6] $50000\n [7] $100000", "Готово", "Назад");
						return true;
					}
				case 1:
					{
						new sendername[MAX_PLAYER_NAME];
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(YCMDstr,128, "{FFFFFF}Чек:\nКлиент: %s\nБаланс: $%d", sendername, PI[playerid][pBank]);
						SPDEx(playerid,8905,0, "Банкомат",YCMDstr, "Назад", "");
						return true;
					}
				case 2:
					{
						if(PI[playerid][pPhousekey] == 999) return SCM(playerid, COLOR_GREY, "Вы не имеете недвижимость");
						SPDEx(playerid,9521,1, "Домашний счёт", "Введите сумму, которую Вы хотите положить", "Готово", "Отмена");
						return true;
					}
				case 3:
					{
						if(PI[playerid][pPhotelkey] == 999) return SCM(playerid, COLOR_GREY, "Вы не имеете номера в отеле");
						SPDEx(playerid,9522,1, "Квартплата", "Введите сумму, которую Вы хотите положить", "Готово", "Отмена");
						return true;
					}
				case 4:
					{
						SPDEx(playerid,9523,1, "Мобильный счёт", "Введите сумму, которую Вы хотите положить", "Готово", "Отмена");
						return true;
					}
				}
			}
			else
			{
				GameTextForPlayer(playerid, "~g~Good Luck", 1000, 1);
				return true;
			}
		}
	case 1323:
		{
			if(!response) return true;
			{
				switch(listitem)
				{
				case 0:
					{
						if(PI[playerid][pPassport] != 0) return SCM(playerid,COLOR_GREY,"У Вас уже есть паспорт.");
						if(PI[playerid][pLevel] > 1)
						{
							if(PI[playerid][pCash] < 100) return SCM(playerid,COLOR_GREY,"Недостаточно денег");
							PI[playerid][pCash] -= 100;
							GameTextForPlayer(playerid, "~r~-$100", 5000, 1);
						}
						SCM(playerid,COLOR_GREY,"Вам выдали паспорт. Используйте: /showpass id");
						PI[playerid][pPassport] = 1;
						return true;
					}
				case 1:
					{
						if(PI[playerid][pCash] < 4000) return SCM(playerid,COLOR_GREY,"Недостаточно денег");
						if(PI[playerid][pPbiskey] == 255) return SCM(playerid, COLOR_GREY, "У Вас нет бизнеса!");
						if(BizzInfo[PI[playerid][pPbiskey]][pBizLic] == 1) return SCM(playerid, COLOR_GREY, "У Вас уже есть лицензия на бизнес!");
						BizzInfo[PI[playerid][pPbiskey]][pBizLic] = 1;
						PI[playerid][pCash] -= 4000;
						SCM(playerid,COLOR_GREY,"Вы получили лицензию на бизнес.");
						GameTextForPlayer(playerid, "~r~-$4000", 5000, 1);
						return true;
					}
				}
			}
		}
	case 8455:
		{
			if(response)
			{
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(PI[playerid][pCash] < strlen(ReportQ[playerid])*addd[1]) return SCM(playerid, COLOR_WHITE,  "У Вас недостаточно денег");
				if(TOTALADVERT[1] >= 15) return SCM(playerid,COLOR_GREY,"Список объявлений заполнен. Попробуйте подать объявление позже.");
				PI[playerid][pCash] -= strlen(ReportQ[playerid])*addd[1];
				FracBank[0][fSfnews] += strlen(ReportQ[playerid])*addd[1];
				TOTALADVERT[1] ++;
				AdvertInfo[TOTALADVERT[1]][1][adPhone] = PI[playerid][pPnumber];
				strmid(AdvertInfo[TOTALADVERT[1]][1][adText],ReportQ[playerid],0,128,128);
				strmid(AdvertInfo[TOTALADVERT[1]][1][adName],sendername,0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
				format(YCMDstr,128, "~r~-$%d", strlen(ReportQ[playerid])*addd[1]);
				GameTextForPlayer(playerid, YCMDstr, 5000, 1);
				SCM(playerid, COLOR_WHITE, "Ваше объявление будет подано после проверки");
			}
			else
			{
				return true;
			}
		}
	case 8904:
		{
			if(response)
			{
				if(listitem == 0) { money = 500; }
				else if(listitem == 1) { money = 1000; }
				else if(listitem == 2) { money = 5000; }
				else if(listitem == 3) { money = 10000; }
				else if(listitem == 4) { money = 20000; }
				else if(listitem == 5) { money = 50000; }
				else if(listitem == 6) { money = 100000; }
				if (money > PI[playerid][pBank])
				{
					SPDEx(playerid, 1210, 0, "Банкомат", "На вашем счету недостаточно денег!", "Назад", "");
					return true;
				}
				PI[playerid][pCash] += money;
				PI[playerid][pBank] = PI[playerid][pBank]-money;
				format(YCMDstr, 128, "Вы сняли со счёта: $%d. Остаток: $%d", money,PI[playerid][pBank]);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				format(YCMDstr,128, "~b~+%d", money);
				GameTextForPlayer(playerid, YCMDstr, 3000, 1);
				return true;
			}
			else
			{
				new listitems[] = "{ff0000} [1] {ffffff}Снять наличные\n{ff0000} [2] {ffffff}Баланс\n{ff0000} [3] {ffffff}Домашний счёт\n{ff0000} [4] {ffffff}Квартплата\n{ff0000} [5] {ffffff}Пополнить счёт телефона";
				SPDEx(playerid, 8900, 2, "Банкомат", listitems, "Далее", "Выход");
				return true;
			}
		}
	case 8905:
		{
			if(response)
			{
				new listitems[] = "{ff0000} [1] {ffffff}Снять наличные\n{ff0000} [2] {ffffff}Баланс\n{ff0000} [3] {ffffff}Домашний счёт\n{ff0000} [4] {ffffff}Квартплата\n{ff0000} [5] {ffffff}Пополнить счёт телефона";
				SPDEx(playerid, 8900, 2, "Банкомат", listitems, "Далее", "Выход");
				return true;
			}
		}
	case 9521:
		{
			if(response)
			{
				if(!strlen(inputtext)) return SCM(playerid, COLOR_GREY, "Ошибка!");
				if(strval(inputtext) < 1000 || strval(inputtext) > 60000)
				{
					SCM(playerid, 0xAFAFAFAA, "Минимальная сумма $1000, максимальная - $60.000!");
					format(YCMDstr,128, "Введите сумму, которую Вы хотите положить на счёт дома");
					SPDEx(playerid, 9521, 1,"Домашний счёт",YCMDstr,"Готово","Отмена");
					return true;
				}
				if(PI[playerid][pBank] < strval(inputtext)) return	SCM(playerid, 0xB4B5B7FF, "У Вас нет столько денег на банковском счету!");
				if(House[PI[playerid][pPhousekey]][hTakings]+strval(inputtext)>60000) return SCM(playerid,COLOR_GREY,"Нельзя пополнять домашний счёт более чем на 60 тысяч.");
				if(PI[playerid][pPhousekey] != 999)
				{
					PI[playerid][pBank] -= strval(inputtext);
					House[PI[playerid][pPhousekey]][hTakings] += strval(inputtext);
					if(House[PI[playerid][pPhousekey]][hTakings] > 60000) House[PI[playerid][pPhousekey]][hTakings] = 60000;
					format(YCMDstr,128, "Вы положили на счёт Вашего дома $%d", strval(inputtext));
					SCM(playerid, 0x6495EDFF, YCMDstr);
					SetPlayerChatBubble(playerid, "пополнил домашний счёт",0xC2A2DAAA,30.0,10000);
				}
				return true;
			}
			else return true;
		}
	case 9522:
		{
			if(response)
			{
				if(!strlen(inputtext)) return SCM(playerid, COLOR_GREY, "Ошибка!");
				if(strval(inputtext) < 1000 || strval(inputtext) > 15000)
				{
					SCM(playerid, 0xAFAFAFAA, "Минимальная сумма $1000, максимальная - $15.000!");
					format(YCMDstr,128, "Введите сумму, которую Вы хотите положить на квартплату");
					SPDEx(playerid, 9522, 1,"Квартплата",YCMDstr,"Готово","Отмена");
					return true;
				}
				if(PI[playerid][pBank] < strval(inputtext)) return	SCM(playerid, 0xB4B5B7FF, "У Вас нет столько денег на банковском счету!");
				if(HotelInfo[PI[playerid][pPhotelkey]][oTakings]+strval(inputtext)>15000) return SCM(playerid,COLOR_GREY,"Нельзя совершать квартплату более чем на 15 тысяч.");
				if(PI[playerid][pPhotelkey] != 999)
				{
					PI[playerid][pBank] -= strval(inputtext);
					HotelInfo[PI[playerid][pPhotelkey]][oTakings] += strval(inputtext);
					if(HotelInfo[PI[playerid][pPhotelkey]][oTakings] > 15000) HotelInfo[PI[playerid][pPhotelkey]][oTakings] = 15000;
					format(YCMDstr,128, "Вы положили на счёт номера отеля $%d", strval(inputtext));
					SCM(playerid, 0x6495EDFF, YCMDstr);
					SetPlayerChatBubble(playerid, "пополнил квартплату",0xC2A2DAAA,30.0,10000);
				}
				return true;
			}
			else return true;
		}
    case 9524:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0: SPDEx(playerid, 9161, 1, "Установка PIN-Code", "{FFFFFF}Введите Ваш новый PIN-Code", "Принять", "Отмена");
			case 1:
				{
				    if(PI[playerid][pPinStat] == 0) return SCM(playerid, COLOR_GREY, "У Вас не включена проверка PIN-Code!");
					SPDEx(playerid, 9162, 1, "Отключение PIN-Code", "{FFFFFF}Введите Ваш персональный PIN-Code", "Принять", "Отмена");
				}
			}
		}
    case 9161:
		{
			if(!response) return true;
			if(!strlen(inputtext)) return SPDEx(playerid,9161,1, "Установка PIN-Code", "{FFFFFF}Введите Ваш новый PIN-Code", "Принять", "Отмена");
			for(new i = strlen(inputtext)-1; i != -1; i--)
			{
   				switch(inputtext[i])
			    {
       				case '0'..'9': continue;
			        default: return SCM(playerid, 0xFF0000FF, "Ввести можно только цифры");
			    }
			}
			if(strlen(inputtext) != 4)
			{
				SCM(playerid,COLOR_GREY,"Код должен состоять из 4-х цифр");
				return SPDEx(playerid,9161,1,"Установка PIN-Code","{FFFFFF}Введите Ваш новый PIN-Code","Принять","Отмена");
			}
			new code = strval(inputtext);
			SetPVarInt(playerid,"PinCode",code);
			SPDEx(playerid,9163,1,"Установка PIN-Code","{FFFFFF}Введите новый PIN-Code еще раз","Изменить","Отмена");
		}
    case 9163:
		{
			if(!response) return true;
			if(strlen(inputtext) != 4)
			{
				SCM(playerid,COLOR_GREY,"Код должен состоять из 4-х цифр");
				return SPDEx(playerid,9161,1,"Установка PIN-Code","{FFFFFF}Введите Ваш новый PIN-Code","Принять","Отмена");
			}
			new code = strval(inputtext);
			if(code != GetPVarInt(playerid,"PinCode"))
			{
				SCM(playerid,COLOR_GREY,"Коды не совпадают");
				return SPDEx(playerid,9161,1,"Установка PIN-Code","{FFFFFF}Введите Ваш новый PIN-Code","Принять","Отмена");
			}
			PI[playerid][pPinCode] = code;
			mysql_format(DATABASE, YCMDstr, 97, "UPDATE `accounts` SET pPinStat = '1', pPinCode = '%d' WHERE Name = '%s'",code,Name(playerid));
			mysql_function_query(DATABASE,YCMDstr,false,"","");
			PI[playerid][pPinStat] = 1;
			SCM(playerid,COLOR_GREY,"Теперь при пользовании банковскими услугами - Вам нужно вводить PIN-Code.");
			format(YCMDstr, 70,"Ваш PIN-Code: %d. Сделайте Screenshot или запишите чтобы не забыть.",code);
			SCM(playerid,COLOR_REDD,YCMDstr);
		}
    case 9162:
		{
			if(!response) return true;
			if(PI[playerid][pPinCode] == strval(inputtext))
			{
				PI[playerid][pPinStat] = 0;
				SCM(playerid,COLOR_GREY,"Проверка PIN-Code успешно отключена!");
			}
			else SCM(playerid,COLOR_GREY,"Неправильный PIN-Code!");
		}
	case 9523:
		{
			if(response)
			{
				if(!strlen(inputtext)) return SCM(playerid, COLOR_GREY, "Ошибка!");
				if(strval(inputtext) < 100 || strval(inputtext) > 10000)
				{
					SCM(playerid, 0xAFAFAFAA, "Минимальная сумма $100, максимальная - $10.000!");
					format(YCMDstr,128, "Введите сумму, которую Вы хотите положить на мобильный счёт");
					SPDEx(playerid, 9523, 1,"Мобильный счёт",YCMDstr,"Готово","Отмена");
					return true;
				}
				if(PI[playerid][pBank] < strval(inputtext)) return	SCM(playerid, 0xB4B5B7FF, "У Вас нет столько денег на банковском счету!");
				if(PI[playerid][pMobile]+strval(inputtext)>10000) return SCM(playerid,COLOR_GREY,"Нельзя совершать пополнение более чем на 10 тысяч.");
				PI[playerid][pBank] -= strval(inputtext);
				PI[playerid][pMobile] += strval(inputtext);
				format(YCMDstr,128, "Вы положили на мобильный счёт $%d", strval(inputtext));
				SCM(playerid, 0x6495EDFF, YCMDstr);
				SetPlayerChatBubble(playerid, "пополнил мобильный счёт",0xC2A2DAAA,30.0,10000);
			}
			return true;
		}
	case 5032:
		{
			new house = PI[playerid][pPhousekey];
			if(response)
			{
				if(house == 999) return SCM(playerid,COLOR_GREY,"У Вас нет дома");
				if(GetPVarInt(playerid,"SellHouse") == 1) return SCM(playerid,COLOR_GREY,"Вы уже продаёте дом игроку!");
				House[house][hHel] = 0;
				House[house][hLock] = 1;
				House[house][hOwned] = 0;
				for(new i = 0; i != 7; i++) House[house][hGun][i] = 0, House[house][hGunAmmo][i] = 0;
				if(caridhouse[playerid][0] != 0) { DestroyVehicle(caridhouse[playerid][0]); caridhouse[playerid][0] = 0; }
				if(caridhouse[playerid][1] != 0) { DestroyVehicle(caridhouse[playerid][1]); caridhouse[playerid][1] = 0; }
				strmid(House[house][hOwner], "The State", 0, strlen("The State"), 15);
				PI[playerid][pCash] += House[house][hValue];
				format(YCMDstr,128, "Дом продан за $%d", House[house][hValue]);
				SCM(playerid, COLOR_WHITE, YCMDstr);
				format(YCMDstr,128, "Наличные: %d", PI[playerid][pCash]);
				SCM(playerid, COLOR_WHITE, YCMDstr);
				PI[playerid][pPhousekey] = 999;
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid,House[house][hEntrancex],House[house][hEntrancey],House[house][hEntrancez]);
				PI[playerid][pInt] = 0;
				BuyHouse(house);
				SaveMySQL(3,house);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 5033:
		{
			new hotel = PI[playerid][pPhotelkey];
			if(response)
			{
				if(hotel == 999) return SCM(playerid,COLOR_GREY,"У Вас нет номера в отеле!");
				HotelInfo[hotel][oLock] = 1;
				HotelInfo[hotel][oOwned] = 0;
				if(caridhouse[playerid][0] != 0) { DestroyVehicle(caridhouse[playerid][0]); caridhouse[playerid][0] = 0; }
				if(caridhouse[playerid][1] != 0) { DestroyVehicle(caridhouse[playerid][1]); caridhouse[playerid][1] = 0; }
				strmid(HotelInfo[hotel][oOwner], "The State", 0, strlen("The State"), 15);
				format(YCMDstr,128, "Вы были выселены из номера отеля");
				SCM(playerid, COLOR_WHITE, YCMDstr);
				PI[playerid][pPhotelkey] = 999;
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid, 0);
				PI[playerid][pInt] = 0;
				BuyHotel(hotel);
				SaveMySQL(4,hotel);
				SpawnPlayer(playerid);
				return true;
			}
			else
			{
				return true;
			}
		}
	case 4423:
		{
			if(response)
			{
				if(PI[playerid][pMember] != 0) return SCM(playerid,COLOR_GRAD1, "Вы состоите во фракции");
				if(Works[playerid] == true) return SCM(playerid,COLOR_GRAD1, "Вы уже устроились");
				Works[playerid] = true; FL[playerid][JobAmmount] = 0; JobCP[playerid] = 1;
				PI[playerid][pJob] = 12;
				SetPlayerCheckpoint(playerid,2230.3528,-2286.1353,14.3751,1.5);
				new skin = random(2);
				if(skin == 1) SetPlayerSkin(playerid,260);
				else SetPlayerSkin(playerid,16);
				SCM(playerid,COLOR_GREEN, "Отправляйтесь носить мешки!");
			}
			else
			{
				if(Works[playerid] == false) return SCM(playerid,COLOR_GRAD1, "Вы не устроены на работу");
				if(FL[playerid][JobAmmount] != 0) return SCM(playerid,COLOR_WHITE, "Вы должны получить зарплату в офисе");
				SCM(playerid,COLOR_GREEN, "Рабочий день завершён!");
				Works[playerid] = false; FL[playerid][JobAmmount] = 0; JobCP[playerid] = 0; FL[playerid][Employer] = 999;
				SetPlayerSkin(playerid,PI[playerid][pChar][PI[playerid][pViborChar]]);
				DisablePlayerCheckpoint(playerid);
				mesh[playerid] = 999;
				usemesh[playerid] = 0;
				return true;
			}
		}
	case 4425:
		{
			if(response)
			{
				if(GetPVarInt(playerid,"seit") == 1) return SCM(playerid,COLOR_GREY,"Ты уже выбрал место, куда засеять наркоту");
				switch(listitem)
				{
				case 0:
					{
						if(NarkoInfo[1][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[1][nX],NarkoInfo[1][nY],NarkoInfo[1][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 1:
					{
						if(NarkoInfo[2][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[2][nX],NarkoInfo[2][nY],NarkoInfo[2][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 2:
					{
						if(NarkoInfo[3][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[3][nX],NarkoInfo[3][nY],NarkoInfo[3][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 3:
					{
						if(NarkoInfo[4][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[4][nX],NarkoInfo[4][nY],NarkoInfo[4][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 4:
					{
						if(NarkoInfo[5][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[5][nX],NarkoInfo[5][nY],NarkoInfo[5][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 5:
					{
						if(NarkoInfo[6][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[6][nX],NarkoInfo[6][nY],NarkoInfo[6][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 6:
					{
						if(NarkoInfo[7][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[7][nX],NarkoInfo[7][nY],NarkoInfo[7][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 7:
					{
						if(NarkoInfo[8][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[8][nX],NarkoInfo[8][nY],NarkoInfo[8][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 8:
					{
						if(NarkoInfo[9][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[9][nX],NarkoInfo[9][nY],NarkoInfo[9][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 9:
					{
						if(NarkoInfo[10][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[10][nX],NarkoInfo[10][nY],NarkoInfo[10][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 10:
					{
						if(NarkoInfo[11][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[11][nX],NarkoInfo[11][nY],NarkoInfo[11][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 11:
					{
						if(NarkoInfo[12][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[12][nX],NarkoInfo[12][nY],NarkoInfo[12][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 12:
					{
						if(NarkoInfo[13][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[13][nX],NarkoInfo[13][nY],NarkoInfo[13][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 13:
					{
						if(NarkoInfo[14][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[14][nX],NarkoInfo[14][nY],NarkoInfo[14][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 14:
					{
						if(NarkoInfo[15][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[15][nX],NarkoInfo[15][nY],NarkoInfo[15][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 15:
					{
						if(NarkoInfo[16][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[16][nX],NarkoInfo[16][nY],NarkoInfo[16][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 16:
					{
						if(NarkoInfo[17][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[17][nX],NarkoInfo[17][nY],NarkoInfo[17][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 17:
					{
						if(NarkoInfo[18][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[18][nX],NarkoInfo[18][nY],NarkoInfo[18][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 18:
					{
						if(NarkoInfo[19][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[19][nX],NarkoInfo[19][nY],NarkoInfo[19][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 19:
					{
						if(NarkoInfo[20][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[20][nX],NarkoInfo[20][nY],NarkoInfo[20][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 20:
					{
						if(NarkoInfo[21][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[21][nX],NarkoInfo[21][nY],NarkoInfo[21][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 21:
					{
						if(NarkoInfo[22][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[22][nX],NarkoInfo[22][nY],NarkoInfo[22][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 22:
					{
						if(NarkoInfo[23][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[23][nX],NarkoInfo[23][nY],NarkoInfo[23][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 23:
					{
						if(NarkoInfo[24][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[24][nX],NarkoInfo[24][nY],NarkoInfo[24][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				}
			}
			return true;
		}
	case 4426:
		{
			if(response)
			{
				if(GetPVarInt(playerid,"seit") == 1) return SCM(playerid,COLOR_GREY,"Ты уже выбрал место, куда засеять наркоту");
				switch(listitem)
				{
				case 0:
					{
						if(NarkoInfo[25][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[25][nX],NarkoInfo[25][nY],NarkoInfo[25][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 1:
					{
						if(NarkoInfo[26][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[26][nX],NarkoInfo[26][nY],NarkoInfo[26][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 2:
					{
						if(NarkoInfo[27][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[27][nX],NarkoInfo[27][nY],NarkoInfo[27][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 3:
					{
						if(NarkoInfo[28][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[28][nX],NarkoInfo[28][nY],NarkoInfo[28][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 4:
					{
						if(NarkoInfo[29][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[29][nX],NarkoInfo[29][nY],NarkoInfo[29][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 5:
					{
						if(NarkoInfo[30][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[30][nX],NarkoInfo[30][nY],NarkoInfo[30][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 6:
					{
						if(NarkoInfo[31][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[31][nX],NarkoInfo[31][nY],NarkoInfo[31][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 7:
					{
						if(NarkoInfo[32][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[32][nX],NarkoInfo[32][nY],NarkoInfo[32][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 8:
					{
						if(NarkoInfo[33][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[33][nX],NarkoInfo[33][nY],NarkoInfo[33][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 9:
					{
						if(NarkoInfo[34][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[34][nX],NarkoInfo[34][nY],NarkoInfo[34][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 10:
					{
						if(NarkoInfo[35][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[35][nX],NarkoInfo[35][nY],NarkoInfo[35][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 11:
					{
						if(NarkoInfo[36][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[36][nX],NarkoInfo[36][nY],NarkoInfo[36][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 12:
					{
						if(NarkoInfo[37][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[37][nX],NarkoInfo[37][nY],NarkoInfo[37][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 13:
					{
						if(NarkoInfo[38][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[38][nX],NarkoInfo[38][nY],NarkoInfo[38][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 14:
					{
						if(NarkoInfo[39][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[39][nX],NarkoInfo[39][nY],NarkoInfo[39][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 15:
					{
						if(NarkoInfo[40][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[40][nX],NarkoInfo[40][nY],NarkoInfo[40][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 16:
					{
						if(NarkoInfo[41][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[41][nX],NarkoInfo[41][nY],NarkoInfo[41][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 17:
					{
						if(NarkoInfo[42][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[42][nX],NarkoInfo[42][nY],NarkoInfo[42][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 18:
					{
						if(NarkoInfo[43][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[43][nX],NarkoInfo[43][nY],NarkoInfo[43][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 19:
					{
						if(NarkoInfo[44][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[44][nX],NarkoInfo[44][nY],NarkoInfo[44][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 20:
					{
						if(NarkoInfo[45][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[45][nX],NarkoInfo[45][nY],NarkoInfo[45][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 21:
					{
						if(NarkoInfo[46][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[46][nX],NarkoInfo[46][nY],NarkoInfo[46][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 22:
					{
						if(NarkoInfo[47][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[47][nX],NarkoInfo[47][nY],NarkoInfo[47][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				case 23:
					{
						if(NarkoInfo[48][nZasev] == 1) { SCM(playerid,COLOR_BLUE,"Место уже засеяно, выбирай другое"); SetPVarInt(playerid, "seit", 0); return true; }
						SetPlayerCheckpoint(playerid,NarkoInfo[48][nX],NarkoInfo[48][nY],NarkoInfo[48][nZ],2.0); SetPVarInt(playerid, "seit", 1);
					}
				}
			}
			return true;
		}
	case 5523:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						SetPlayerSkin(playerid, PI[playerid][pModel]);
						FormaFrac[playerid] = PI[playerid][pMember];
						SetPlayerToTeamColor(playerid);
						SCM(playerid, COLOR_BLUE, "Вы сняли маскировку");
					}
				case 1:
					{
						SetPlayerColor(playerid, TEAM_HIT_COLOR);
						SCM(playerid,COLOR_WHITE, "Вы одели маскировку в мафию LCN");
						SetPlayerArmour(playerid, 0);
						switch(PI[playerid][pSex])
						{
						case 1: SetPlayerSkin(playerid,223);
						case 2: SetPlayerSkin(playerid,214);
						}
					}
				case 2:
					{
						SetPlayerColor(playerid, TEAM_HIT_COLOR);
						SCM(playerid,COLOR_WHITE, "Вы одели маскировку в мафию Yakuza");
						SetPlayerArmour(playerid, 0);
						switch(PI[playerid][pSex])
						{
						case 1: SetPlayerSkin(playerid,123);
						case 2: SetPlayerSkin(playerid,169);
						}
					}
				case 3:
					{
						SetPlayerColor(playerid, TEAM_HIT_COLOR);
						SCM(playerid,COLOR_WHITE, "Вы одели маскировку в мафию Russian Mafia");
						SetPlayerArmour(playerid, 0);
						switch(PI[playerid][pSex])
						{
						case 1: SetPlayerSkin(playerid,111);
						case 2: SetPlayerSkin(playerid,263);
						}
					}
				case 4:
					{
						SetPlayerColor(playerid, TEAM_HIT_COLOR);
						SCM(playerid,COLOR_WHITE, "Вы одели маскировку в банду The Vagos Gang");
						SetPlayerArmour(playerid, 0);
						switch(PI[playerid][pSex])
						{
						case 1: SetPlayerSkin(playerid,109);
						case 2: SetPlayerSkin(playerid,190);
						}
					}
				case 5:
					{
						SetPlayerColor(playerid, TEAM_HIT_COLOR);
						SCM(playerid,COLOR_WHITE, "Вы одели маскировку в банду The Ballas Gang");
						SetPlayerArmour(playerid, 0);
						switch(PI[playerid][pSex])
						{
						case 1: SetPlayerSkin(playerid,104);
						case 2: SetPlayerSkin(playerid,195);
						}
					}
				case 6:
					{
						SetPlayerColor(playerid, TEAM_HIT_COLOR);
						SCM(playerid,COLOR_WHITE, "Вы одели маскировку в банду The Grove Street Gang");
						SetPlayerArmour(playerid, 0);
						switch(PI[playerid][pSex])
						{
						case 1: SetPlayerSkin(playerid,107);
						case 2: SetPlayerSkin(playerid,65);
						}
					}
				case 7:
					{
						SetPlayerColor(playerid, TEAM_HIT_COLOR);
						SCM(playerid,COLOR_WHITE, "Вы одели маскировку в банду The Rifa Gang");
						SetPlayerArmour(playerid, 0);
						switch(PI[playerid][pSex])
						{
						case 1: SetPlayerSkin(playerid,174);
						case 2: SetPlayerSkin(playerid,226);
						}
					}
				case 8:
					{
						SetPlayerColor(playerid, TEAM_HIT_COLOR);
						SCM(playerid,COLOR_WHITE, "Вы одели маскировку в банду The Aztecas Gang");
						SetPlayerArmour(playerid, 0);
						switch(PI[playerid][pSex])
						{
						case 1: SetPlayerSkin(playerid,115);
						case 2: SetPlayerSkin(playerid,193);
						}
					}
				case 9:
					{
						SetPlayerColor(playerid, TEAM_HIT_COLOR);
						SCM(playerid,COLOR_WHITE, "Вы одели маскировку в Байкеры");
						SetPlayerArmour(playerid, 0);
						switch(PI[playerid][pSex])
						{
						case 1: SetPlayerSkin(playerid,254);
						case 2: SetPlayerSkin(playerid,298);
						}
					}
				case 10:
					{
						SetPlayerColor(playerid, TEAM_HIT_COLOR);
						SCM(playerid,COLOR_WHITE, "Вы одели маскировку в Гражданин 1");
						SetPlayerArmour(playerid, 0);
						switch(PI[playerid][pSex])
						{
						case 1: SetPlayerSkin(playerid,2);
						case 2: SetPlayerSkin(playerid,85);
						}
					}
				case 11:
					{
						SetPlayerColor(playerid, TEAM_HIT_COLOR);
						SCM(playerid,COLOR_WHITE, "Вы одели маскировку в Гражданин 2");
						SetPlayerArmour(playerid, 0);
						switch(PI[playerid][pSex])
						{
						case 1: SetPlayerSkin(playerid,66);
						case 2: SetPlayerSkin(playerid,90);
						}
					}
				}
			}
		}
	case 19:
		{
			if(response)
			{
				if(PI[playerid][pMember] != 0) return SCM(playerid,COLOR_GRAD1, "Вы состоите во фракции");
				if(PI[playerid][pJob] == 7) return SCM(playerid,COLOR_GRAD1, "Вы уже устроились");
				SetPlayerSkin(playerid,27);
				PI[playerid][pJob] = 7;
				SCM(playerid,COLOR_GREEN, "Принимайте заказы от заказчиков, и зарабатывайте деньги");
				SCM(playerid,COLOR_WHITE, "Более подробно о работе можно узнать в INFO");
			}
			else
			{
				if(PI[playerid][pJob] == 0) return SCM(playerid,COLOR_GRAD1, "Вы не брали работу");
				SCM(playerid,COLOR_YELLOW, "Рабочий день завершён");
				SetPlayerSkin(playerid,PI[playerid][pChar][PI[playerid][pViborChar]]);
				PI[playerid][pJob] = 0;
				return true;
			}
		}
	case 2:
		{
			if(response)
			{
				if(!strlen(inputtext))
				{
					format(YCMDstr,256, "Приветствуем Вас на сервере {FFA500}EXSIGHT Role Play.\n{ffffff}Для игры на нашем сервере нужно пройти регистрацию.\nДля прохождения регистрации, Вам нужно ввести Ваш пароль в данное окно\n\n{ffffff}Логин: {FFA500}%s\n{ffffff}Введите пароль:", Name(playerid));
					SPDEx(playerid,2,1, "{FFFF00}Регистрация",YCMDstr, "Готово", "Отмена");
					return true;
				}
				if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 10)
				{
					return SPDEx(playerid,2,0, "Ошибка!", "{FF6347}Длина пароля должна быть от 6 до 10 символов", "Повтор", "");
				}
				for(new i = strlen(inputtext); i != 0; --i)
				switch(inputtext[i])
				{
				case 'А'..'Я', 'а'..'я', ' ':
					return SPDEx(playerid,2,0, "Ошибка!", "{00FF21}Введенный вами пароль содержит русские буквы.\n Смените раскладку клавиатуры!", "Повтор", "");
				}
				if(!IsText(inputtext)) return SPDEx(playerid,2,0, "Ошибка!", "{00FF21}Введенный вами пароль не содержит требуемых символов.\n Измените пароль!", "Повтор", "");
				strmid(PI[playerid][pKey],inputtext, 0, strlen(inputtext), 32);
				PlayerPlaySound(playerid, 1183, 0.0, 0.0, 0.0);
				new rulesdialog[1300];
				format(rulesdialog,sizeof(rulesdialog), "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
				RulesMSG[0],RulesMSG[1],RulesMSG[2],RulesMSG[3],RulesMSG[4],RulesMSG[5],RulesMSG[6],RulesMSG[7],RulesMSG[8],RulesMSG[9],RulesMSG[10],RulesMSG[11],RulesMSG[12],RulesMSG[13],RulesMSG[14],RulesMSG[15],RulesMSG[16]);
				SPDEx(playerid,12,0, "{FFFF00}[1/4] Правила сервера", rulesdialog, "Согласен", "Выйти");
				return true;
			}
			else
			{
				SCM(playerid, COLOR_LIGHTRED, "Для выхода из игры используйте /q(uit)");
				Kick(playerid);
			}
		}
    case 9898:
		{
			if(response)
			{
				for(new i = 0; i <= TotalBizz; i++)
				{
					if(PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) && BizzInfo[i][bType] != 4)
					{
						if(PI[playerid][pCash] < BizzInfo[i][bEntranceCost]) return SCM(playerid, COLOR_GRAD1, "У Вас нет столько денег.");
						PI[playerid][pCash] -= BizzInfo[i][bEntranceCost];
						BizzInfo[i][b2Till] += BizzInfo[i][bEntranceCost];
						SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
						SetPlayerPos(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
						PI[playerid][pInt] = BizzInfo[i][bInterior];
						SetPlayerVirtualWorld(playerid,BizzInfo[i][bVirtualWorld]);
						FL[playerid][enterbiz] = i;
						return true;
					}
				}
			}
			else return true;
		}
	case 82:
		{
			if(!response)
			{
				SCMF(sellerbiz[playerid],COLOR_RED,"%s отказался от покупки Вашего бизнеса",Name(playerid));
				forwho[sellerbiz[playerid]] = INVALID_PLAYER_ID;
				sellerbiz[playerid] = INVALID_PLAYER_ID;
				bizcost[playerid] = 0;
				DeletePVar(playerid, "Prodaet");
				DeletePVar(sellerbiz[playerid], "ProdaetBiz");
				return true;
			}
			if(PI[playerid][pBank] < bizcost[playerid])
			{
				SCM(playerid, COLOR_GREY, "У Вас нет столько денег на банковском счёте");
				SCM(sellerbiz[playerid], COLOR_GREY, "У игрока нет столько денег на банковском счёте");
				forwho[sellerbiz[playerid]] = INVALID_PLAYER_ID;
				sellerbiz[playerid] = INVALID_PLAYER_ID;
				bizcost[playerid] = 0;
				DeletePVar(playerid, "Prodaet");
				DeletePVar(sellerbiz[playerid], "ProdaetBiz");
				return true;
			}
			SCMF(sellerbiz[playerid],COLOR_WHITE,"Вы продали свой бизнес за {FFFF00}$%d",bizcost[playerid]);
			SCMF(playerid,COLOR_WHITE,"Вы купили бизнес стоимостью {FFFF00}$%d",bizcost[playerid]);
			strmid(BizzInfo[PI[sellerbiz[playerid]][pPbiskey]][bOwner], Name(playerid), 0, strlen(Name(playerid)), 255);
			mysql_format(DATABASE, YCMDstr, 128, "UPDATE `"TABLE_BIZZ"` SET bOwner = '%i' WHERE bID = '%i'",Name(playerid),PI[sellerbiz[playerid]][pPbiskey]);
			mysql_function_query(DATABASE,YCMDstr,false,"","");
			PI[playerid][pBank] -= bizcost[playerid];
			PI[sellerbiz[playerid]][pBank] += bizcost[playerid];
			PI[playerid][pPbiskey] = PI[sellerbiz[playerid]][pPbiskey];
			PI[sellerbiz[playerid]][pPbiskey] = 255;
			forwho[sellerbiz[playerid]] = INVALID_PLAYER_ID;
			sellerbiz[playerid] = INVALID_PLAYER_ID;
			bizcost[playerid] = 0;
			DeletePVar(playerid, "Prodaet");
			DeletePVar(sellerbiz[playerid], "ProdaetBiz");
			UpdateBizInfo(PI[playerid][pPbiskey]);
			SaveMySQL(2,PI[playerid][pPbiskey]);
			return true;
		}
	case 10075:
		{
			if(response)
			{
				for(new i = 1; i <= TotalHouse; i++)
				{
					if(PlayerToPoint(3, playerid,House[i][hEntrancex], House[i][hEntrancey], House[i][hEntrancez]))
					{
						if(PI[playerid][pPhousekey] == i || House[i][hLock] == 0)
						{
							SetPlayerInterior(playerid,House[i][hInt]);
							SetPlayerVirtualWorld(playerid,i+50);
							SetPlayerPos(playerid,House[i][hExitx],House[i][hExity],House[i][hExitz]);
							PI[playerid][pInt] = House[i][hInt];
							PI[playerid][pLocal] = i;
							return true;
						}
						else
						{
							GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
	case 10076:
		{
			if(response)
			{
				for(new i = 1; i <= TotalHotel; i++)
				{
					if (PlayerToPoint(3, playerid,HotelInfo[i][oEntrancex], HotelInfo[i][oEntrancey], HotelInfo[i][oEntrancez]) && GetPlayerVirtualWorld(playerid) == HotelInfo[i][oVirt])
					{
						if(PI[playerid][pPhotelkey] == i || HotelInfo[i][oLock] == 0)
						{
							SetPlayerInterior(playerid,HotelInfo[i][oInt]);
							SetPlayerVirtualWorld(playerid,i+9999);
							SetPlayerPos(playerid,HotelInfo[i][oExitx],HotelInfo[i][oExity],HotelInfo[i][oExitz]);
							PI[playerid][pInt] = HotelInfo[i][oInt];
							PI[playerid][pLocal] = i;
							return true;
						}
						else
						{
							GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
	case 9828:
		{
			if(response)
			{
				new sendername[MAX_PLAYER_NAME];
				new Float:oldposx, Float:oldposy, Float:oldposz;
				GetPlayerName(playerid, playername, sizeof(playername));
				GetPlayerPos(playerid, oldposx, oldposy, oldposz);
				if(PI[playerid][pPbiskey] != 255) return SCM(playerid, COLOR_WHITE, "У Вас уже есть бизнес, введите /sellbiz чтобы его продать.");
				for(new b = 1; b <= TotalBizz; b++)
				{
					if(PlayerToPoint(5.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bOwned] == 0)
					{
						if(PI[playerid][pBank] > BizzInfo[b][bBuyPrice])
						{
							PI[playerid][pPbiskey] = b;
							BizzInfo[b][bOwned] = 1;
							BizzInfo[b][bLocked] = 0;
							BizzInfo[b][bTovar1] = 10;
							BizzInfo[b][bTovar2] = 10;
							BizzInfo[b][bTovar3] = 10;
							BizzInfo[b][bTovar4] = 10;
							BizzInfo[b][bTovar5] = 10;
							BizzInfo[b][bTovar6] = 10;
							BizzInfo[b][bTovar7] = 10;
							BizzInfo[b][bTovar8] = 10;
							BizzInfo[b][bTovar9] = 10;
							BizzInfo[b][bTovar10] = 10;
							BizzInfo[b][bTovar11] = 10;
							BizzInfo[b][bTovar12] = 10;
							BizzInfo[b][bTovar13] = 10;
							BizzInfo[b][bTovar14] = 10;
							BizzInfo[b][bTill] = 0;
							BizzInfo[b][b2Till] = 0;
							BizzInfo[b][pBizLic] = 0;
							PI[playerid][pJob] = 0;
							BizzInfo[b][bProducts] = 0;
							BizzInfo[b][bLockTime] = 0;
							BizzInfo[b][bEntranceCost] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							strmid(BizzInfo[b][bOwner], sendername, 0, strlen(sendername), 32);
							PI[playerid][pBank] -= BizzInfo[b][bBuyPrice];
							PI[playerid][pLocal] = b+99;
							SCM(playerid, COLOR_GREEN, "Бизнес приобретён");
							SCM(playerid, COLOR_GREEN, "Управление бизнесом /bpanel");
							if(BizzInfo[b][bType] == 1) format(YCMDstr, 128, "{FF4500}%s\n{008000}Владелец: %s\n{008080}Цена за вход: $%d\n\n{3CB371}Нажмите {00FF7F}<Alt> {3CB371}чтобы войти", BizzInfo[b][bMessage], BizzInfo[b][bOwner], BizzInfo[b][bEntranceCost]);
							if(BizzInfo[b][bType] == 2 || BizzInfo[b][bType] == 3 || BizzInfo[b][bType] == 5) format(YCMDstr, 128, "{FF4500}%s\n{008000}Владелец: %s\n\n{3CB371}Нажмите {00FF7F}<Alt> {3CB371}чтобы войти", BizzInfo[b][bMessage], BizzInfo[b][bOwner]);
							if(BizzInfo[b][bType] == 4) format(YCMDstr,128, "{FF4500}%s\n{008000}Владелец: %s\n{008080}Цена бензина: $%d", BizzInfo[b][bMessage], BizzInfo[b][bOwner], BizzInfo[b][bTovar14]);
							Update3DTextLabelText(BizzInfo[b][bLabel], 0x00D900FF, YCMDstr);
							SaveMySQL(2,b);
							return true;
						}
						else
						{
							SCM(playerid, COLOR_WHITE, "На Вашем счету в банке нет столько денег!");
							return true;
						}
					}
				}
				return true;
			}
			else
			{
				return true;
			}
		}
	case 9838:
		{
			if(response)
			{
				new sendername[MAX_PLAYER_NAME];
				new Float:oldposx, Float:oldposy, Float:oldposz;
				GetPlayerName(playerid, playername, sizeof(playername));
				GetPlayerPos(playerid, oldposx, oldposy, oldposz);
				if(PI[playerid][pPviskey] != 255) return SCM(playerid, COLOR_WHITE, "У Вас уже есть Автомастерская, введите /sellmast чтобы её продать.");
				for(new v = 1; v <= TotalMast; v++)
				{
					if(PlayerToPoint(5.0, playerid, AvtoMInfo[v][vEntranceX], AvtoMInfo[v][vEntranceY], AvtoMInfo[v][vEntranceZ]) && AvtoMInfo[v][vOwned] == 0)
					{
						if(PI[playerid][pBank] > AvtoMInfo[v][vBuyPrice])
						{
							PI[playerid][pPviskey] = v;
							AvtoMInfo[v][vOwned] = 1;
							AvtoMInfo[v][vLocked] = 0;
							AvtoMInfo[v][vTill] = 0;
							AvtoMInfo[v][v2Till] = 0;
							PI[playerid][pJob] = 0;
							AvtoMInfo[v][vProducts] = 0;
							AvtoMInfo[v][vLockTime] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							strmid(AvtoMInfo[v][vOwner], sendername, 0, strlen(sendername), 32);
							PI[playerid][pBank] -= AvtoMInfo[v][vBuyPrice];
							SCM(playerid, COLOR_GREEN, "АвтоМастерская приобретена");
							SCM(playerid, COLOR_GREEN, "Управление Автомастерской /mpanel");
							format(YCMDstr,128, "%s\nВладелец:\n %s", AvtoMInfo[v][vMessage], AvtoMInfo[v][vOwner]);
							Update3DTextLabelText(AvtoMInfo[v][vLabel], 0x38FFD7FF, YCMDstr);
							SaveMySQL(6,v);
							return true;
						}
						else
						{
							SCM(playerid, COLOR_WHITE, "На Вашем счету в банке нет столько денег!");
							return true;
						}
					}
				}
				return true;
			}
			else
			{
				return true;
			}
		}
	case 10026:
		{
			if(response)
			{
				for(new i = 1; i <= TotalHouse; i++)
				{
					if (PlayerToPoint(3, playerid,House[i][hEntrancex], House[i][hEntrancey], House[i][hEntrancez]))
					{
						if(PI[playerid][pPhousekey] == i || House[i][hLock] == 0)
						{
							SetPlayerInterior(playerid,House[i][hInt]);
							SetPlayerVirtualWorld(playerid,i+50);
							SetPlayerPos(playerid,House[i][hExitx],House[i][hExity],House[i][hExitz]);
							PI[playerid][pInt] = House[i][hInt];
							PI[playerid][pLocal] = i;
							return true;
						}
						else
						{
							GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
	case 10027:
		{
			if(response)
			{
				for(new i = 1; i <= TotalHotel; i++)
				{
					if (PlayerToPoint(3, playerid,HotelInfo[i][oEntrancex], HotelInfo[i][oEntrancey], HotelInfo[i][oEntrancez]) && GetPlayerVirtualWorld(playerid) == HotelInfo[i][oVirt])
					{
						if(PI[playerid][pPhotelkey] == i || HotelInfo[i][oLock] == 0)
						{
							SetPlayerInterior(playerid,HotelInfo[i][oInt]);
							SetPlayerVirtualWorld(playerid,i+9999);
							SetPlayerPos(playerid,HotelInfo[i][oExitx],HotelInfo[i][oExity],HotelInfo[i][oExitz]);
							PI[playerid][pInt] = HotelInfo[i][oInt];
							PI[playerid][pLocal] = i;
							return true;
						}
						else
						{
							GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
	case 4:
		{
			if(response)
			{
				PI[playerid][pSex] = 1;
				PI[playerid][pTut] = 0;
			}
			else
			{
				PI[playerid][pSex] = 2;
				PI[playerid][pTut] = 0;
			}
			SetPVarInt(playerid,"Register",1);
			SpawnPlayer(playerid);
			ResetPlayerWeapons(playerid);
			if(PI[playerid][pSex] == 1 && PI[playerid][pTut] == 0) return ChosePlayerSkin(playerid);
			else if(PI[playerid][pSex] == 2 && PI[playerid][pTut] == 0) return ChosePlayerSkin(playerid);
		}
	case 1996:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if(PI[playerid][pDonatemoney] < 100) return SPDEx(playerid,10111,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 100 доната )", "Закрыть", "");
						PI[playerid][pAddiction] = 0;
						PI[playerid][pDonatemoney] -= 100;
						SPDEx(playerid,10111,0, "Меню: {ffffff}Заказ","Вы приобрели: Нулевая наркозависимость {ffffff}( -100 доната )", "Закрыть", "");
					}
				case 1:
					{
						if(PI[playerid][pDonateRank] >= 3) return SCM(playerid,COLOR_GREY,"У Вас VIP статус");
						if(PI[playerid][pDonatemoney] < 100) return SPDEx(playerid,10111,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 100 доната )", "Закрыть", "");
						PI[playerid][pDonateRank] += 3;
						PI[playerid][pDonatemoney] -= 100;
						SPDEx(playerid,10111,0, "Меню: {ffffff}Заказ","Вы приобрели: VIP статус {ffffff}( -100 доната )", "Закрыть", "");
					}
				case 2:
					{
						if(PI[playerid][pDonatemoney] < 100) return SPDEx(playerid,10111,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 100 доната )", "Закрыть", "");
						PI[playerid][pGunSkill][0] = 100;
						PI[playerid][pGunSkill][1] = 100;
						PI[playerid][pGunSkill][2] = 100;
						PI[playerid][pGunSkill][3] = 100;
						PI[playerid][pGunSkill][4] = 100;
						PI[playerid][pGunSkill][5] = 100;
						PI[playerid][pDonatemoney] -= 100;
						SPDEx(playerid,10111,0, "Меню: {ffffff}Заказ","Вы приобрели: Получить все навыки владения оружием {ffffff}( -100 доната )", "Закрыть", "");
					}
				case 3:
					{
						if(PI[playerid][pDonatemoney] < 50) return SPDEx(playerid,10111,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 100 доната )", "Закрыть", "");
						PI[playerid][pBoxSkill] = 5000;
						PI[playerid][pKickboxSkill] = 5000;
						PI[playerid][pKongfuSkill] = 5000;
						PI[playerid][pDonatemoney] -= 50;
						SPDEx(playerid,10111,0, "Меню: {ffffff}Заказ","Вы приобрели: Получить все стили боя {ffffff}( -50 доната )", "Закрыть", "");
					}
				case 4:
					{
						if(PI[playerid][pWarns] == 0) return SCM(playerid,COLOR_GREY,"У Вас нет варнов");
						if(PI[playerid][pDonatemoney] < 70) return SPDEx(playerid,10111,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 70 доната )", "Закрыть", "");
						PI[playerid][punWarns] = 0;
						PI[playerid][punWarnstime] = 0;
						PI[playerid][pWarns] = 0;
						PI[playerid][pDonatemoney] -= 70;
						SPDEx(playerid,10111,0, "Меню: {ffffff}Заказ","Вы приобрели: Снять все варны {ffffff}( 70 доната )", "Закрыть", "");
					}
				case 5:
					{
						if(PI[playerid][pDonatemoney] < 100) return SPDEx(playerid,10111,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 100 доната )", "Закрыть", "");
						PI[playerid][pVoenBil] = 1;
						PI[playerid][pVbiltime] = 24;
						PI[playerid][pDonatemoney] -= 100;
						SPDEx(playerid,10111,0, "Меню: {ffffff}Заказ","Вы приобрели: Военный билет {ffffff}( 100 доната )", "Закрыть", "");
					}
				case 6:
					{
						if(PI[playerid][pLeader] != 0) return SCM(playerid, COLOR_GREY, "Вы лидер!");
						if(PI[playerid][pMember] == 0) return SCM(playerid,COLOR_GRAD1, "Вы не состоите во фракции");
						if(PI[playerid][pDonatemoney] < 2) return SPDEx(playerid,19994,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 5 доната )", "Закрыть", "");
						PI[playerid][pMember] = 0;
						PI[playerid][pRank] = 0;
						PI[playerid][pLeader] = 0;
						PI[playerid][pJob] = 0;
						SetPlayerArmour(playerid,0);
						FormaFrac[playerid] = 0;
						SetPlayerColor(playerid, TEAM_HIT_COLOR);
						SetPlayerSkin(playerid, PI[playerid][pChar][PI[playerid][pViborChar]]);
						PI[playerid][pDonatemoney]-=2;
						SCM(playerid, COLOR_BLUE, "Вы были уволены по собственному желанию");
						SCM(playerid, 0x6495EDFF, "Теперь вы снова гражданский");
						SPDEx(playerid,19994,0, "Меню: {ffffff}Заказ","Вы уволились самостоятельно {ffffff}( 2 Доната )", "Закрыть", "");
					}
				case 7:
					{
						if(PI[playerid][pDonatemoney] < 50) return SPDEx(playerid,10112,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 50 доната )", "Закрыть", "");
						PI[playerid][pZakonp] = 100;
						PI[playerid][pDonatemoney] -= 50;
						SPDEx(playerid,10111,0, "Меню: {ffffff}Заказ","Вы приобрели: 100 Законопослушности {ffffff}( -50 доната )", "Закрыть", "");
					}
				case 8:
					{
						if(PI[playerid][pDonatemoney] < 40) return SPDEx(playerid,10113,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 40 доната )", "Закрыть", "");
						SetPlayerWantedLevel(playerid, 0);
						PI[playerid][pWantedLevel] = 0;
						PI[playerid][pDonatemoney] -= 40;
						SPDEx(playerid,10111,0, "Меню: {ffffff}Заказ","Вы сняли весь розыск себе {ffffff}( -40 доната )", "Закрыть", "");
					}
				}
			}
		}
	case 1997:
		{
			if(response)
			{
				if(strval(inputtext) < 0) return SCM(playerid,-1,"Неверная сумма");
				if(PI[playerid][pDonatemoney] < strval(inputtext)) return SPDEx(playerid,10111,0, "Меню: {ffffff}Заказ","Недостаточно доната", "Закрыть", "");
				PI[playerid][pDonatemoney] -= strval(inputtext);
				PI[playerid][pCash] += strval(inputtext)*5000;
				format(YCMDstr,128,"Вы приобрели: $%d за %d доната",strval(inputtext)*5000,strval(inputtext));
				SPDEx(playerid,10111,0, "Меню: {ffffff}Заказ",YCMDstr, "Закрыть", "");
			}
		}
	case 1998:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if(PI[playerid][pDonatemoney] < 90) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 90 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 90;
						PI[playerid][pCar1] = 424;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}BF Injection [ID 424]", "Закрыть", "");
					}
                case 1:
					{
						if(PI[playerid][pDonatemoney] < 115) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 115 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 115;
						PI[playerid][pCar1] = 444;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Monster [ID 444]", "Закрыть", "");
					}
                case 2:
					{
						if(PI[playerid][pDonatemoney] < 115) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 115 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 115;
						PI[playerid][pCar1] = 556;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Monster <A> [ID 556]", "Закрыть", "");
					}
                case 3:
					{
						if(PI[playerid][pDonatemoney] < 115) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 115 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 115;
						PI[playerid][pCar1] = 557;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Monster <B> [ID 557]", "Закрыть", "");
					}
                case 4:
					{
						if(PI[playerid][pDonatemoney] < 150) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 150 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 150;
						PI[playerid][pCar1] = 494;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Hotring Racer [ID 494]", "Закрыть", "");
					}
                case 5:
					{
						if(PI[playerid][pDonatemoney] < 150) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 150 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 150;
						PI[playerid][pCar1] = 502;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Hotring Racer A [ID 502]", "Закрыть", "");
					}
                case 6:
					{
						if(PI[playerid][pDonatemoney] < 150) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 150 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 150;
						PI[playerid][pCar1] = 503;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Hotring Racer B [ID 503]", "Закрыть", "");
					}
                case 7:
					{
						if(PI[playerid][pDonatemoney] < 300) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 300 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 300;
						PI[playerid][pCar1] = 495;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Sandking [ID 495]", "Закрыть", "");
					}
                case 8:
					{
						if(PI[playerid][pDonatemoney] < 100) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 100 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 100;
						PI[playerid][pCar1] = 568;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Bandito [ID 568]", "Закрыть", "");
					}
                case 9:
					{
						if(PI[playerid][pDonatemoney] < 300) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 300 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 300;
						PI[playerid][pCar1] = 411;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Infernus [ID 411]", "Закрыть", "");
					}
                case 10:
					{
						if(PI[playerid][pDonatemoney] < 80) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 80 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 80;
						PI[playerid][pCar1] = 571;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Kart [ID 571]", "Закрыть", "");
					}
                case 11:
					{
						if(PI[playerid][pDonatemoney] < 80) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 80 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 80;
						PI[playerid][pCar1] = 471;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Quad Bike [ID 471]", "Закрыть", "");
					}
                case 12:
					{
						if(PI[playerid][pDonatemoney] < 50) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 50 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 50;
						PI[playerid][pCar1] = 510;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Mountain Bike [ID 510]", "Закрыть", "");
					}
                case 13:
					{
						if(PI[playerid][pDonatemoney] < 50) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 50 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 50;
						PI[playerid][pCar1] = 509;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Bike [ID 509]", "Закрыть", "");
					}
                case 14:
					{
						if(PI[playerid][pDonatemoney] < 50) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 50 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 50;
						PI[playerid][pCar1] = 483;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Camper [ID 483]", "Закрыть", "");
					}
                case 15:
					{
						if(PI[playerid][pDonatemoney] < 100) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 100 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 100;
						PI[playerid][pCar1] = 555;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Windsor [ID 555]", "Закрыть", "");
					}
                case 16:
					{
						if(PI[playerid][pDonatemoney] < 50) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 50 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 50;
						PI[playerid][pCar1] = 531;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Tractor [ID 531]", "Закрыть", "");
					}
                case 17:
					{
						if(PI[playerid][pDonatemoney] < 500) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 500 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 500;
						PI[playerid][pCar1] = 573;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Dune [ID 573]", "Закрыть", "");
					}
                case 18:
					{
						if(PI[playerid][pDonatemoney] < 200) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 200 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 200;
						PI[playerid][pCar1] = 508;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Journey [ID 508]", "Закрыть", "");
					}
                case 19:
					{
						if(PI[playerid][pDonatemoney] < 500) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 500 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 500;
						PI[playerid][pCar1] = 409;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Stretch [ID 409]", "Закрыть", "");
					}
                case 20:
					{
						if(PI[playerid][pDonatemoney] < 200) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 200 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 200;
						PI[playerid][pCar1] = 434;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Hotknife [ID 434]", "Закрыть", "");
					}
				}
			}
		}
    case 1999:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if(PI[playerid][pDonatemoney] < 90) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 90 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 90;
						PI[playerid][pCar2] = 424;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}BF Injection [ID 424]", "Закрыть", "");
					}
                case 1:
					{
						if(PI[playerid][pDonatemoney] < 115) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 115 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 115;
						PI[playerid][pCar2] = 444;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Monster [ID 444]", "Закрыть", "");
					}
                case 2:
					{
						if(PI[playerid][pDonatemoney] < 115) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 115 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 115;
						PI[playerid][pCar2] = 556;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Monster <A> [ID 556]", "Закрыть", "");
					}
                case 3:
					{
						if(PI[playerid][pDonatemoney] < 115) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 115 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 115;
						PI[playerid][pCar2] = 557;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Monster <B> [ID 557]", "Закрыть", "");
					}
                case 4:
					{
						if(PI[playerid][pDonatemoney] < 150) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 150 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 150;
						PI[playerid][pCar2] = 494;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Hotring Racer [ID 494]", "Закрыть", "");
					}
                case 5:
					{
						if(PI[playerid][pDonatemoney] < 150) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 150 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 150;
						PI[playerid][pCar2] = 502;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Hotring Racer A [ID 502]", "Закрыть", "");
					}
                case 6:
					{
						if(PI[playerid][pDonatemoney] < 150) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 150 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 150;
						PI[playerid][pCar2] = 503;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Hotring Racer B [ID 503]", "Закрыть", "");
					}
                case 7:
					{
						if(PI[playerid][pDonatemoney] < 300) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 300 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 300;
						PI[playerid][pCar2] = 495;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Sandking [ID 495]", "Закрыть", "");
					}
                case 8:
					{
						if(PI[playerid][pDonatemoney] < 100) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 100 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 100;
						PI[playerid][pCar2] = 568;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Bandito [ID 568]", "Закрыть", "");
					}
                case 9:
					{
						if(PI[playerid][pDonatemoney] < 300) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 300 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 300;
						PI[playerid][pCar2] = 411;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Infernus [ID 411]", "Закрыть", "");
					}
                case 10:
					{
						if(PI[playerid][pDonatemoney] < 80) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 80 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 80;
						PI[playerid][pCar2] = 571;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Kart [ID 571]", "Закрыть", "");
					}
                case 11:
					{
						if(PI[playerid][pDonatemoney] < 80) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 80 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 80;
						PI[playerid][pCar2] = 471;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Quad Bike [ID 471]", "Закрыть", "");
					}
                case 12:
					{
						if(PI[playerid][pDonatemoney] < 50) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 50 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 50;
						PI[playerid][pCar2] = 510;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Mountain Bike [ID 510]", "Закрыть", "");
					}
                case 13:
					{
						if(PI[playerid][pDonatemoney] < 50) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 50 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 50;
						PI[playerid][pCar2] = 509;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Bike [ID 509]", "Закрыть", "");
					}
                case 14:
					{
						if(PI[playerid][pDonatemoney] < 50) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 50 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 50;
						PI[playerid][pCar2] = 483;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Camper [ID 483]", "Закрыть", "");
					}
                case 15:
					{
						if(PI[playerid][pDonatemoney] < 100) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 100 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 100;
						PI[playerid][pCar2] = 555;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Windsor [ID 555]", "Закрыть", "");
					}
                case 16:
					{
						if(PI[playerid][pDonatemoney] < 50) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 50 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 50;
						PI[playerid][pCar2] = 531;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Tractor [ID 531]", "Закрыть", "");
					}
                case 17:
					{
						if(PI[playerid][pDonatemoney] < 500) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 500 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 500;
						PI[playerid][pCar2] = 573;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Dune [ID 573]", "Закрыть", "");
					}
                case 18:
					{
						if(PI[playerid][pDonatemoney] < 200) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 200 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 200;
						PI[playerid][pCar2] = 508;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Journey [ID 508]", "Закрыть", "");
					}
                case 19:
					{
						if(PI[playerid][pDonatemoney] < 500) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 500 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 500;
						PI[playerid][pCar2] = 409;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Stretch [ID 409]", "Закрыть", "");
					}
                case 20:
					{
						if(PI[playerid][pDonatemoney] < 200) return SPDEx(playerid,19995,0, "Меню: {ffffff}Заказ","Недостаточно доната{ffffff} ( Необходимо 200 доната )", "Закрыть", "");
                        PI[playerid][pDonatemoney] -= 200;
						PI[playerid][pCar2] = 434;
						SPDEx(playerid,19995,0, "Меню: {ffffff}Донат","Поздравляем с покупкой {FFFF00}Hotknife [ID 434]", "Закрыть", "");
					}
				}
			}
		}
	case 5524:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if(PI[playerid][pDonatemoney] < 200) return SPDEx(playerid,18995,0, "Меню: {ffffff}Покупка","Недостаточно доната{ffffff} ( Необходимо 200 доната )", "Закрыть", "");
						PI[playerid][pCar3] = 469 ;
						PI[playerid][pDonatemoney]-=200;
						SPDEx(playerid,18995,0, "Меню: {ffffff}Покупка","Поздравляем с покупкой {FFFF00}Sparrow [ID 469]", "Закрыть", "");
					}
				case 1:
					{
						if(PI[playerid][pDonatemoney] < 300) return SPDEx(playerid,18995,0, "Меню: {ffffff}Покупка","Недостаточно доната{ffffff} ( Необходимо 300 доната )", "Закрыть", "");
						PI[playerid][pCar3] = 476 ;
						PI[playerid][pDonatemoney]-=300;
						SPDEx(playerid,18995,0, "Меню: {ffffff}Покупка","Поздравляем с покупкой {FFFF00}Rustler [ID 476]", "Закрыть", "");
					}
				case 2:
					{
						if(PI[playerid][pDonatemoney] < 300) return SPDEx(playerid,18995,0, "Меню: {ffffff}Покупка","Недостаточно доната{ffffff} ( Необходимо 300 доната )", "Закрыть", "");
						PI[playerid][pCar3] = 487 ;
						PI[playerid][pDonatemoney]-=300;
						SPDEx(playerid,18995,0, "Меню: {ffffff}Покупка","Поздравляем с покупкой {FFFF00}Maverick [ID 487]", "Закрыть", "");
					}
				case 3:
					{
						if(PI[playerid][pDonatemoney] < 300) return SPDEx(playerid,18995,0, "Меню: {ffffff}Покупка","Недостаточно доната{ffffff} ( Необходимо 300 доната )", "Закрыть", "");
						PI[playerid][pCar3] = 511 ;
						PI[playerid][pDonatemoney]-=300;
						SPDEx(playerid,18995,0, "Меню: {ffffff}Покупка","Поздравляем с покупкой {FFFF00}Beagle [ID 511]", "Закрыть", "");
					}
				case 4:
					{
						if(PI[playerid][pDonatemoney] < 300) return SPDEx(playerid,18995,0, "Меню: {ffffff}Покупка","Недостаточно доната{ffffff} ( Необходимо 300 доната )", "Закрыть", "");
						PI[playerid][pCar3] = 513 ;
						PI[playerid][pDonatemoney]-=300;
						SPDEx(playerid,18995,0, "Меню: {ffffff}Покупка","Поздравляем с покупкой {FFFF00}Stuntplane [ID 513]", "Закрыть", "");
					}
				case 5:
					{
						if(PI[playerid][pDonatemoney] < 500) return SPDEx(playerid,18995,0, "Меню: {ffffff}Покупка","Недостаточно доната{ffffff} ( Необходимо 500 доната )", "Закрыть", "");
						PI[playerid][pCar3] = 519 ;
						PI[playerid][pDonatemoney]-=500;
						SPDEx(playerid,18995,0, "Меню: {ffffff}Покупка","Поздравляем с покупкой {FFFF00}Shamal [ID 519]", "Закрыть", "");
					}
				case 6:
					{
						if(PI[playerid][pDonatemoney] < 500) return SPDEx(playerid,18995,0, "Меню: {ffffff}Покупка","Недостаточно доната{ffffff} ( Необходимо 500 доната )", "Закрыть", "");
						PI[playerid][pCar3] = 553 ;
						PI[playerid][pDonatemoney]-=500;
						SPDEx(playerid,18995,0, "Меню: {ffffff}Покупка","Поздравляем с покупкой {FFFF00}Nevada [ID 553]", "Закрыть", "");
					}
				}
			}
		}
	case 5525:
		{
			if(response)
			{
				if(IsADonatAir(playerid) == 0) return SCM(playerid, COLOR_GREY, "У Вас нет личного воздушного транспорта");
				if(PI[playerid][pCash] < 500) return SCM(playerid, 0xB4B5B7FF, "У Вас недостаточно денег.");
				if(caridhouse[playerid][2] != 0) DestroyVehicle(caridhouse[playerid][2]), caridhouse[playerid][2] = 0;
				new spair = random(5);
				if(spair == 0) caridhouse[playerid][2] = CreateVehicle(PI[playerid][pCar3], -1302.9093,21.7795,14.3244,133.2244, PI[playerid][pColor3][0] ,PI[playerid][pColor3][1], 86400);
				if(spair == 1) caridhouse[playerid][2] = CreateVehicle(PI[playerid][pCar3], -1292.2683,9.0690,14.3142,133.8005, PI[playerid][pColor3][0] ,PI[playerid][pColor3][1], 86400);
				if(spair == 2) caridhouse[playerid][2] = CreateVehicle(PI[playerid][pCar3], -1278.2917,-5.5040,14.3066,133.8009, PI[playerid][pColor3][0] ,PI[playerid][pColor3][1], 86400);
				if(spair == 3) caridhouse[playerid][2] = CreateVehicle(PI[playerid][pCar3], -1264.3618,-20.0313,14.3145,133.7993, PI[playerid][pColor3][0] ,PI[playerid][pColor3][1], 86400);
				if(spair == 4) caridhouse[playerid][2] = CreateVehicle(PI[playerid][pCar3], -1250.8683,-33.7455,14.3241,133.8056, PI[playerid][pColor3][0] ,PI[playerid][pColor3][1], 86400);
				LockCar(caridhouse[playerid][2]);
				PI[playerid][pCash] -= 500;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
		}
	case 5526:
		{
			if(response)
			{
				if(IsADonatAir(playerid) == 0) return SCM(playerid, COLOR_GREY, "У Вас нет личного воздушного транспорта");
				if(PI[playerid][pCash] < 500) return SCM(playerid, 0xB4B5B7FF, "У Вас недостаточно денег.");
				if(caridhouse[playerid][2] != 0) DestroyVehicle(caridhouse[playerid][2]), caridhouse[playerid][2] = 0;
				new spair = random(5);
				if(spair == 0) caridhouse[playerid][2] = CreateVehicle(PI[playerid][pCar3], 1967.4945,-2307.6577,13.7246,177.1467, PI[playerid][pColor3][0] ,PI[playerid][pColor3][1], 86400);
				if(spair == 1) caridhouse[playerid][2] = CreateVehicle(PI[playerid][pCar3], 1950.7294,-2306.8218,13.8110,177.1467, PI[playerid][pColor3][0] ,PI[playerid][pColor3][1], 86400);
				if(spair == 2) caridhouse[playerid][2] = CreateVehicle(PI[playerid][pCar3], 1938.2407,-2306.1990,13.8753,177.1467, PI[playerid][pColor3][0] ,PI[playerid][pColor3][1], 86400);
				if(spair == 3) caridhouse[playerid][2] = CreateVehicle(PI[playerid][pCar3], 1920.8439,-2305.3325,13.9649,177.1467, PI[playerid][pColor3][0] ,PI[playerid][pColor3][1], 86400);
				if(spair == 4) caridhouse[playerid][2] = CreateVehicle(PI[playerid][pCar3], 1919.1781,-2338.7529,14.1205,177.1467, PI[playerid][pColor3][0] ,PI[playerid][pColor3][1], 86400);
				LockCar(caridhouse[playerid][2]);
				PI[playerid][pCash] -= 500;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
		}
	case 5527:
		{
			if(response)
			{
				if(IsADonatAir(playerid) == 0) return SCM(playerid, COLOR_GREY, "У Вас нет личного воздушного транспорта");
				if(PI[playerid][pCash] < 500) return SCM(playerid, 0xB4B5B7FF, "У Вас недостаточно денег.");
				if(caridhouse[playerid][2] != 0) DestroyVehicle(caridhouse[playerid][2]), caridhouse[playerid][2] = 0;
				new spair = random(5);
				if(spair == 0) caridhouse[playerid][2] = CreateVehicle(PI[playerid][pCar3], 1371.3842,1238.8339,10.9971,0.1829, PI[playerid][pColor3][0] ,PI[playerid][pColor3][1], 86400);
				if(spair == 1) caridhouse[playerid][2] = CreateVehicle(PI[playerid][pCar3], 1390.9904,1239.0217,11.0353,0.1824, PI[playerid][pColor3][0] ,PI[playerid][pColor3][1], 86400);
				if(spair == 2) caridhouse[playerid][2] = CreateVehicle(PI[playerid][pCar3], 1421.4728,1240.3662,11.1428,0.5775, PI[playerid][pColor3][0] ,PI[playerid][pColor3][1], 86400);
				if(spair == 3) caridhouse[playerid][2] = CreateVehicle(PI[playerid][pCar3], 1450.2970,1228.0957,10.9929,1.8310, PI[playerid][pColor3][0] ,PI[playerid][pColor3][1], 86400);
				if(spair == 4) caridhouse[playerid][2] = CreateVehicle(PI[playerid][pCar3], 1476.1619,1228.3085,10.9992,0.6360, PI[playerid][pColor3][0] ,PI[playerid][pColor3][1], 86400);
				LockCar(caridhouse[playerid][2]);
				PI[playerid][pCash] -= 500;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
		}
	case 1993:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						format(YCMDstr,256,"{FFFF00}Информация о аккаунте:\n\n{ffffff}\tИгровой ник: %s\n\tДонат: %d\n",Name(playerid),PI[playerid][pDonatemoney]);
						SPDEx(playerid,10111,0, "Меню: {ffffff}Донат",YCMDstr, "Закрыть", "");
					}
				case 1:
					{
						SPDEx(playerid,1995,0, "Меню: {ffffff}Донат","Покупка доната осуществляется у Администрации\nв группе ВКонтакте: vk.com/gta_exsight", "Скрыть", "");
					}
				case 2:
					{
						new sctring[357];
						format(sctring, sizeof(string), "- Нулевая наркозависимость {00BFFF}[100 Донат]\n\
														- VIP статус {00BFFF}[100 Донат]\n\
														- Получить все скиллы {00BFFF}[100 Донат]\n\
														- Получить все стили боя {00BFFF}[50 Донат]\n\
														- Снять все варны {00BFFF}[70 Донат]\n\
														- Получить военный билет {00BFFF}[100 Донат]\n\
														- Уволится из фракции {00BFFF}[2 Донат]\n\
														- Максимальная законопослушность {00BFFF}[50 Донат]\n\
														- Убрать розыск {00BFFF}[60 Донат]");
						strcat(sctring,string);
						SPDEx(playerid,1996,2, "Меню: {ffffff}Донат",sctring, "Выбор", "Отмена");
					}
				case 3: SPDEx(playerid,1997,1, "Меню: {ffffff}Донат","{FFFF00}Обмен доната на доллары.{ffffff} Курс: 1 Донат - $5.000\n\nВведите кол-во доната которые хотите обменять на доллары:", "Обменять", "Отмена");
				case 4:
					{
						new sctring[806];
						format(string, sizeof(string), "- BF Injection [ID 424] {00BFFF}[90 Донат]\n\
														- Monster [ID 444] {00BFFF}[115 Донат]\n\
														- Monster <A> [ID 556] {00BFFF}[115 Донат]\n\
														- Monster <B> [ID 557] {00BFFF}[115 Донат]\n\
														- Hotring Racer [ID 494] {00BFFF}[150 Донат]\n\
														- Hotring Racer A [ID 502] {00BFFF}[150 Донат]\n\
														- Hotring Racer B [ID 503] {00BFFF}[150 Донат]\n\
														- Sandking [ID 495] {00BFFF}[300 Донат]\n");
						strcat(sctring,string);
						format(string, sizeof(string), "- Bandito [ID 568] {00BFFF}[100 Донат]\n\
														- Infernus [ID 411] {00BFFF}[300 Донат]\n\
														- Kart [ID 571] {00BFFF}[80 Донат]\n\
														- Quad Bike [ID 471] {00BFFF}[80 Донат]\n\
														- Mountain Bike [ID 510] {00BFFF}[50 Донат]\n\
														- Bike [ID 509] {00BFFF}[50 Донат]\n\
														- Camper [ID 483] {00BFFF}[50 Донат]\n\
														- Windsor [ID 555] {00BFFF}[100 Донат]\n");
						strcat(sctring,string);
						format(string, sizeof(string), "- Tractor [ID 531] {00BFFF}[50 Донат]\n\
														- Dune [ID 573] {00BFFF}[500 Донат]\n\
														- Journey [ID 508] {00BFFF}[200 Донат]\n\
														- Stretch [ID 409] {00BFFF}[500 Донат]\n\
														- Hotknife [ID 434] {00BFFF}[200 Донат]");
						strcat(sctring,string);
						SPDEx(playerid,1998,2, "Меню: {ffffff}Донат",sctring, "Выбор", "Отмена");
					}
                case 5:
					{
						new sctring[806];
						format(string, sizeof(string), "- BF Injection [ID 424] {00BFFF}[90 Донат]\n\
														- Monster [ID 444] {00BFFF}[115 Донат]\n\
														- Monster <A> [ID 556] {00BFFF}[115 Донат]\n\
														- Monster <B> [ID 557] {00BFFF}[115 Донат]\n\
														- Hotring Racer [ID 494] {00BFFF}[150 Донат]\n\
														- Hotring Racer A [ID 502] {00BFFF}[150 Донат]\n\
														- Hotring Racer B [ID 503] {00BFFF}[150 Донат]\n\
														- Sandking [ID 495] {00BFFF}[300 Донат]\n");
						strcat(sctring,string);
						format(string, sizeof(string), "- Bandito [ID 568] {00BFFF}[100 Донат]\n\
														- Infernus [ID 411] {00BFFF}[300 Донат]\n\
														- Kart [ID 571] {00BFFF}[80 Донат]\n\
														- Quad Bike [ID 471] {00BFFF}[80 Донат]\n\
														- Mountain Bike [ID 510] {00BFFF}[50 Донат]\n\
														- Bike [ID 509] {00BFFF}[50 Донат]\n\
														- Camper [ID 483] {00BFFF}[50 Донат]\n\
														- Windsor [ID 555] {00BFFF}[100 Донат]\n");
						strcat(sctring,string);
						format(string, sizeof(string), "- Tractor [ID 531] {00BFFF}[50 Донат]\n\
														- Dune [ID 573] {00BFFF}[500 Донат]\n\
														- Journey [ID 508] {00BFFF}[200 Донат]\n\
														- Stretch [ID 409] {00BFFF}[500 Донат]\n\
														- Hotknife [ID 434] {00BFFF}[200 Донат]");
						strcat(sctring,string);
						SPDEx(playerid,1999,2, "Меню: {ffffff}Донат",sctring, "Выбор", "Отмена");
					}
				}
			}
		}
    case 720:
        {
            if(!response) return true;
            if(response)
            {
	            SetPlayerPos(playerid, TeleportFloat[0]+ random(3), TeleportFloat[1]+ random(3), TeleportFloat[2]+ random(3));
	            SetPlayerInterior(playerid, TeleportInfo[0]);
	            SetPlayerVirtualWorld(playerid, TeleportInfo[1]);
        	}
        }
    case 722:
	    {
	     	if(!response) return true;
	     	new String[350];
	     	if(response)
	      	{
	      		switch(listitem)
				{
				case 0:
					{
					    if(PI[playerid][pQuest][0] == 1) return SCM(playerid,COLOR_GREY,"Достижение < Документы > уже выполнено!");
					    strcat(String, "Чтобы иметь возможность вступить в гос. организацию - Вам нужны будут документы.\n\n");
						strcat(String, "Задание: Получите паспорт.\nНаграда: $1.000, 1 EXP");
						SPDEx(playerid, 723, 0, "Документы", String, "Назад", "");
					}
				case 1:
					{
					    if(PI[playerid][pQuest][1] == 1) return SCM(playerid,COLOR_GREY,"Достижение < Покупатель > уже выполнено!");
						strcat(String, "Задание: Купите все самое необходимое в магазине 24/7.\nНаграда: $1.000, 1 EXP\nПодсказка: Плэер, Телефонная книга, Справочник, Часы.");
						SPDEx(playerid, 723, 0, "Покупатель", String, "Назад", "");
					}
				case 2:
					{
					    if(PI[playerid][pQuest][2] == 1) return SCM(playerid,COLOR_GREY,"Достижение < Водитель > уже выполнено!");
					    strcat(String, "Чтобы не иметь ограничения на пользование т/с, необходимо иметь на это лицензию.\n");
						strcat(String, "Не стоит забывать что потерять лицензию так же легко как и получить.\n\n");
						strcat(String, "Задание: Получите лицензию на т/с в автошколе.\nНаграда: $1.500, 1 EXP");
						SPDEx(playerid, 723, 0, "Водитель", String, "Назад", "");
					}
				case 3:
					{
					    if(PI[playerid][pQuest][3] == 1) return SCM(playerid,COLOR_GREY,"Достижение < Моряк > уже выполнено!");
					    strcat(String, "Чтобы не иметь ограничения на пользование водного транспорта, необходимо иметь на это лицензию.\n");
						strcat(String, "Не стоит забывать что потерять лицензию так же легко как и получить.\n\n");
						strcat(String, "Задание: Получите лицензию на водный транспорт в морской школе.\nНаграда: $1.500, 1 EXP");
						SPDEx(playerid, 723, 0, "Моряк", String, "Назад", "");
					}
				case 4:
					{
					    if(PI[playerid][pQuest][4] == 1) return SCM(playerid,COLOR_GREY,"Достижение < Лётчик > уже выполнено!");
					    strcat(String, "Чтобы не иметь ограничения на пользование воздушного транспорта, необходимо иметь на это лицензию.\n");
						strcat(String, "Не стоит забывать что потерять лицензию так же легко как и получить.\n\n");
						strcat(String, "Задание: Получите лицензию на воздушный транспорт в школе пилотов.\nНаграда: $2.000, 2 EXP");
						SPDEx(playerid, 723, 0, "Лётчик", String, "Назад", "");
					}
				case 5:
					{
					    if(PI[playerid][pQuest][5] == 1) return SCM(playerid,COLOR_GREY,"Достижение < Стрелок > уже выполнено!");
					    strcat(String, "Для выживания в этом опасном мире многим требуется оружие,\n");
						strcat(String, "но увы не каждый умеет правильно с ним обращаться.\n\n");
						strcat(String, "Задание: Поднимите уровень владения всем оружием до 100 процентов.\nНаграда: $5.000, 3 EXP");
						SPDEx(playerid, 723, 0, "Стрелок", String, "Назад", "");
					}
				case 6:
					{
					    if(PI[playerid][pQuest][6] == 1) return SCM(playerid,COLOR_GREY,"Достижение < Оружейник > уже выполнено!");
					    strcat(String, "Чтобы не иметь ограничения на пользование оружием, необходимо иметь на это лицензию.\n");
						strcat(String, "Не стоит забывать что потерять лицензию так же легко как и получить.\n\n");
						strcat(String, "Задание: Получите лицензию на оружие у офицера SAPD.\nНаграда: $2.500, 2 EXP");
						SPDEx(playerid, 723, 0, "Оружейник", String, "Назад", "");
					}
				case 7:
					{
					    if(PI[playerid][pQuest][7] == 1) return SCM(playerid,COLOR_GREY,"Достижение < Личный т/с > уже выполнено!");
					    strcat(String, "Автомобиль нужен всем - это способ самоутверждения,\n");
						strcat(String, "это возможность сорваться куда угодно, не завися от общественного транспорта.\n\n");
						strcat(String, "Задание: Купите личный т/с.\nНаграда: $3.000, 2 EXP");
						SPDEx(playerid, 723, 0, "Личный т/с", String, "Назад", "");
					}
				case 8:
					{
					    if(PI[playerid][pQuest][8] == 1) return SCM(playerid,COLOR_GREY,"Достижение < Военный билет > уже выполнено!");
					    strcat(String, "Для дальнейшей службы в SAPD и FBI - Вам нужен военный билет.\n\n");
						strcat(String, "Задание: Получите военный билет в Армии.\nНаграда: $10.000, 3 EXP");
						SPDEx(playerid, 723, 0, "Военный билет", String, "Назад", "");
					}
				case 9:
					{
					    if(PI[playerid][pQuest][9] == 1) return SCM(playerid,COLOR_GREY,"Достижение < Мед. Карта > уже выполнено!");
					    strcat(String, "Для службы в Гос. структурах - Вам обязательно нужна мед. карта.\n\n");
					    strcat(String, "Задание: Получите мед. карту в Мед. Центре SA.\nНаграда: $2.500, 2 EXP");
						SPDEx(playerid, 723, 0, "Мед. Карта", String, "Назад", "");
					}
				case 10:
					{
					    if(PI[playerid][pQuest][10] == 1) return SCM(playerid,COLOR_GREY,"Достижение < Бизнесмен > уже выполнено!");
					    strcat(String, "Каждый человек мечтает заниматься тем, чем ему по душе\n");
						strcat(String, "и получать за это деньги. Если тебе интересна предпринимательская\n");
						strcat(String, "деятельность направленная на систематическое получение прибыли от продаж,\n");
						strcat(String, "то ты идешь по верному пути!\n\n");
					    strcat(String, "Задание: Купите бизнес.\nНаграда: $8.000, 3 EXP");
						SPDEx(playerid, 723, 0, "Бизнесмен", String, "Назад", "");
					}
				case 11:
					{
					    if(PI[playerid][pQuest][11] == 1) return SCM(playerid,COLOR_GREY,"Достижение < Глава > уже выполнено!");
					    strcat(String, "Карьерный рост - вот что интересует сейчас современного человека.\n");
					    strcat(String, "Если Вам не нравится работать на своего начальника,\n");
					    strcat(String, "то надо не начальника искать нового, а менять свою жизнь в целом!\n\n");
						strcat(String, "Задание: Станьте лидером фракции.\nНаграда: $50.000, 4 EXP");
						SPDEx(playerid, 723, 0, "Глава", String, "Назад", "");
					}
				case 12:
					{
					    if(PI[playerid][pQuest][12] == 1) return SCM(playerid,COLOR_GREY,"Достижение < Семья > уже выполнено!");
					    strcat(String, "Семья является важнейшей общественной ценностью,\n");
						strcat(String, "главным социальным институтом, основной ячейкой общества.\n\n");
						strcat(String, "В семье человек получает поддержку, приобретает единомышленника,\n");
						strcat(String, "близкого или в этом случаем даже родного человека, который всегда рядом\n");
						strcat(String, "и готов помочь и выслушать тебя в трудную минуту.\n\n");
						strcat(String, "Задание: Создайте семью.\nНаграда: $30.000, 5 EXP");
						SPDEx(playerid, 723, 0, "Семья", String, "Назад", "");
					}
				case 13:
					{
					    if(PI[playerid][pQuest][13] == 1) return SCM(playerid,COLOR_GREY,"Достижение < Дом > уже выполнено!");
					    strcat(String, "Задание: Купите дом.\nНаграда: $15.000, 3 EXP");
						SPDEx(playerid, 723, 0, "Дом", String, "Назад", "");
					}
				case 14:
					{
					    if(PI[playerid][pQuest][14] == 1) return SCM(playerid,COLOR_GREY,"Достижение < Свадьба > уже выполнено!");
					    strcat(String, "Что может быть лучше, чем сочетание двух любящих сердец.\n");
					    strcat(String, "Брак – это очень важный шаг в жизни, после которого люди создают семью.\n\n");
					    strcat(String, "Задание: Найдите свою вторую половинку и устройте свадьбу.\nНаграда: $50.000, 3 EXP");
						SPDEx(playerid, 723, 0, "Дом", String, "Назад", "");
					}
				case 15:
					{
					    if(PI[playerid][pQuest][15] == 1) return SCM(playerid,COLOR_GREY,"Достижение < Законник > уже выполнено!");
					    strcat(String, "Быть законопослушным гражданином - значит выполнять законы государства.\n\n");
					    strcat(String, "Задание: Получите 100 процентов законопослушности.\nНаграда: $30.000, 4 EXP");
						SPDEx(playerid, 723, 0, "Дом", String, "Назад", "");
					}
				case 16:
					{
					    if(PI[playerid][pQuest][16] == 1) return SCM(playerid,COLOR_GREY,"Достижение < Боец > уже выполнено!");
					    strcat(String, "Задание: Изучите все стили боя в спортзале ЛС.\nНаграда: $30.000, 3 EXP");
						SPDEx(playerid, 723, 0, "Дом", String, "Назад", "");
					}
				}
			}
		}
    case 723:
		{
			if(!response) return true;
			CallLocalFunction("OnPlayerCommandText", "is", playerid, "/quest");
   		}
	case 993:
		{
			if(response)
			{
				new temp[32];
				mysql_real_escape_string(inputtext, temp);
				for(new f = 1; f != family_count; f++ )
				{
					if(strfind(temp, family_info[f][f_name],true) != -1)
					{
						SCM(playerid,COLOR_GREY,"Семья с таким названием уже существует");
						return SPDEx(playerid,993,DIALOG_STYLE_INPUT,"{FFD300}Создание семьи","\n{6495ED}Внимание! Вы хотите создать семью.\nЕсли Вы создадите семью, у Вас снимет - 500 доната.\n\nВведите название семьи.","Создать","Отмена");
					}
					break;
				}
				mysql_format(DATABASE,YCMDstr, 256, "INSERT INTO `"TABLE_FAMILY"` (`f_id`, `f_name`, `f_creator`, `f_creating_data` ) VALUES ( '%i', '%s', '%s', NOW( ))", family_count+1,temp, Name(playerid));
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				player_family[playerid] = family_count + 1;
				family_info[player_family[playerid]][f_id] = family_count + 1;
				format(family_info[player_family[playerid]][f_name], 32 , temp);
				format(family_info[player_family[playerid]][f_creator], MAX_PLAYER_NAME, Name(playerid));
				family_info[player_family[playerid]][f_chat_color] = 0;
				family_info[player_family[playerid]][f_online] = 1;
				PI[playerid][pFLeader] = 1;
				PI[playerid][pDonatemoney] -= 500;
				new year, month,day;
				getdate(year, month, day);
				format(family_info[player_family[playerid]][f_creating_data], 32,"%02d/%02d/%d",year, month, day);
				SCMF(playerid, -1, "Поздравляем! Вы создали семью {2E8B57}%s{FFFFFF}. Чтобы открыть меню семьи введите {2E8B57}/family",temp);
				mysql_format(DATABASE,YCMDstr,128, "UPDATE `"TABLE_FAMILY"` SET `f_chat_color` = '%i' WHERE `f_id` = '%i' LIMIT 1",family_info[player_family[playerid]][f_chat_color],player_family[playerid]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				family_count ++;
			}
			else
			{
				return true;
			}
		}
	case 994:
		{
			if(!response) return true;
			switch(listitem)
			{
			case 0:
				{
					new dialog_string[302];
					new fam_id = player_family[playerid];
					format(dialog_string,sizeof(dialog_string),"{FFFFFF}Семья {CC0066}%s\n{ffffff}Онлайн: {CC0066}%d\n{ffffff}Дата создания: {CC0066}%s{ffffff}\nСоздатель семьи: {CC0066}%s",
					family_info[fam_id][f_name],family_info[fam_id][f_online],family_info[fam_id][f_creating_data],family_info[fam_id][f_creator]);
					SPDEx(playerid,995,0,"{FFD300}Информация о семье",dialog_string,"Назад","");
				}
			case 1:
				{
					new fam = player_family[playerid];
				 	mysql_format(DATABASE,YCMDstr,49,"SELECT * FROM `accounts` WHERE `pFamily` = '%i'",fam);
					mysql_function_query(DATABASE,YCMDstr,true,"OffFamily","i",playerid);
				}
			case 2:
				{
					if(PI[playerid][pFLeader] == 1) return SCM(playerid,0xB4B5B7FF,"{FFFFFF}Вы создатель семьи!");
					format(YCMDstr,128,"[Family: %s] %s[%i] покинул семью!",family_info[player_family[playerid]][f_name],Name(playerid), playerid);
					family_message(player_family[playerid], -1, YCMDstr);
					family_info[player_family[playerid]][f_online] -= 1;
					player_family[playerid] = 0;
					mysql_format(DATABASE,YCMDstr,84, "UPDATE accounts SET pFamily = '%i' WHERE Name = '%s' LIMIT 1",player_family[playerid],Name(playerid));
					mysql_function_query(DATABASE,YCMDstr,false,"","");
				}
			case 3:
				{
					if(PI[playerid][pFLeader] != 1) return SCM(playerid,0xB4B5B7FF,"{FFFFFF}Вы не создатель семьи!");
					format(YCMDstr,128,"{%s}Красный\n{%s}Розовый\n{%s}Желтый\n{%s}Оранжевый\n{%s}Зелёный",family_chat_color [ 0 ],family_chat_color [ 1 ],family_chat_color [ 2 ],family_chat_color [ 3 ],family_chat_color [ 4 ]);
					SPDEx(playerid,997,2,"{FFD300}Цвет чата",YCMDstr,"Выбрать","Отмена");
				}
			case 4:
				{
					if(PI[playerid][pFLeader] != 1) return SCM(playerid,0xB4B5B7FF,"{FFFFFF}Вы не создатель семьи!");
					SPDEx(playerid,987,DIALOG_STYLE_INPUT,"{FFD300}Название семьи","\n{2325ED}Введите новое название для Вашей семьи.","Ok","Отмена");
				}
            case 5:
				{
					if(PI[playerid][pFLeader] != 1) return SCM(playerid,0xB4B5B7FF,"{FFFFFF}Вы не создатель семьи!");
					SCM(playerid,COLOR_GREEN,"Внимание! Если член Вашей семьи Online - игрок не уволится!");
					SPDEx(playerid, 1562, 1, "Исключение игрока", "Введите ник игрока которого Вы хотите исключить из семьи:", "Ок", "Отмена");
					
				}
			}
		}
    case 1562:
		{
			if(!response) return true;
			mysql_format(DATABASE,YCMDstr,144,"SELECT * FROM `accounts` WHERE `Name`='%s'",inputtext);
			mysql_function_query(DATABASE,YCMDstr,true,"OffMembFam","i",playerid);
		}
	case 987:
		{
			if(response)
			{
				new temp[32];
				mysql_real_escape_string(inputtext, temp);
				for(new f = 1; f != family_count; f++ )
				{
					if(strfind(temp, family_info[f][f_name],true) != -1)
					{
						SCM(playerid,COLOR_GREY,"Семья с таким названием уже существует");
						return SPDEx(playerid,987,DIALOG_STYLE_INPUT,"{FFD300}Название семьи","\n{2325ED}Введите новое название для Вашей семьи.","Ok","Отмена");
					}
					break;
				}
				for(new i = strlen(inputtext); i != 0; --i)
				switch(inputtext[i])
				{
				case '{', '}':
					return SPDEx(playerid,5,0,"Ошибка!","Текст содержит символы HTML кода!","Повтор","");
				}
				SCMF(playerid, -1, "Название семьи изменено! Новое название Вашей семьи - {2E8B57}%s{FFFFFF}.",temp);
				mysql_format(DATABASE,YCMDstr,128, "UPDATE "TABLE_FAMILY" SET `f_name` = '%s' WHERE `f_id` = '%i' LIMIT 1",temp,player_family[playerid]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				strmid(family_info[player_family[playerid]][f_name],inputtext, 0, strlen(inputtext), 32);
			}
			else
			{
				return true;
			}
		}
	case 995:
		{
			SPDEx(playerid,994,2,"{FFD300}Меню семьи","{FFFFFF}Информация о семье\n- Состав семьи\n{8B0000}- Покинуть семью{FFFFFF}\n- Изменить цвет рации семьи\n- Изменить название семьи","Выбрать","Отмена");
		}
	case 996:
		{
			SPDEx(playerid,994,2,"{FFD300}Меню семьи","{FFFFFF}Информация о семье\n- Состав семьи\n{8B0000}- Покинуть семью{FFFFFF}\n- Изменить цвет рации семьи\n- Изменить название семьи","Выбрать","Отмена");
		}
	case 997:
		{
			if(!response)return SPDEx(playerid,994,2,"{FFD300}Меню семьи","{FFFFFF}Информация о семье\n- Состав семьи\n{8B0000}- Покинуть семью{FFFFFF}\n- Изменить цвет рации семьи\n- Изменить название семьи","Выбрать","Отмена");
			family_info[player_family[playerid]][f_chat_color] = listitem;
			SPDEx(playerid,994,2,"{FFD300}Меню семьи","{FFFFFF}Информация о семье\n- Состав семьи\n{8B0000}- Покинуть семью{FFFFFF}\n- Изменить цвет рации семьи\n- Изменить название семьи","Выбрать","Отмена");
			SCM(playerid, -1,"Цвет чата семьи изменён!");
			mysql_format(DATABASE,YCMDstr,128, "UPDATE "TABLE_FAMILY" SET `f_chat_color` = '%i' WHERE `f_id` = '%i' LIMIT 1",family_info[player_family[playerid]][f_chat_color],player_family[playerid]);
			mysql_function_query(DATABASE,YCMDstr,false,"","");
		}
	case 999:
		{
			if( !response )return true;
			if(IsPlayerConnected(playerid))
			{
				player_family[playerid] = GetPVarInt(playerid,"family_id");
				DeletePVar(playerid,"family_id");
				format(YCMDstr,128,"{%s}[Семья < %s >] %s присоединился к семье!",family_chat_color[family_info[player_family[playerid]][f_chat_color]],family_info[player_family[playerid]][f_name],Name(playerid));
				family_message(player_family[playerid],-1, YCMDstr);
				family_info[player_family[playerid]][f_online] += 1;
				mysql_format(DATABASE,YCMDstr,84, "UPDATE accounts SET pFamily = '%i' WHERE Name = '%s' LIMIT 1",player_family[playerid],Name(playerid));
				mysql_function_query(DATABASE,YCMDstr,false,"","");
			}
		}
	case 1001:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if(PI[playerid][pCash] < 10000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
						SetPlayerPos(playerid,2259.3828,-1135.8741,1050.6403);
						SetPlayerCameraPos(playerid,2261.1230,-1135.6309,1050.6328);
						SetPlayerCameraLookAt(playerid,2262.6829,-1137.0769,1050.6328);
						SetPlayerInterior(playerid,10);
						SPDEx(playerid, 121, 0, "» Одна комната","Желаете купить этот интерьер? \nСтоимость: $10000", "Купить", "Отмена");
						return true;
					}
				case 1:
					{
						if(PI[playerid][pCash] < 50000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
						SetPlayerPos(playerid,2365.2178,-1135.5986,1050.8826);
						SetPlayerCameraPos(playerid,2365.1047,-1133.2961,1050.8750);
						SetPlayerCameraLookAt(playerid,2365.1936,-1131.4917,1050.8750);
						SetPlayerInterior(playerid,8);
						SPDEx(playerid, 122, 0, "» Стеклянный пол","Желаете купить этот интерьер? \nСтоимость: $50000", "Купить", "Отмена");
						return true;
					}
				case 2:
					{
						if(PI[playerid][pCash] < 12000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
						SetPlayerPos(playerid,2468.8435,-1698.3057,1013.5078);
						SetPlayerCameraPos(playerid,2455.8164,-1698.0116,1013.5078);
						SetPlayerCameraLookAt(playerid,2453.2153,-1700.2203,1013.5078);
						SetPlayerInterior(playerid,2);
						SPDEx(playerid, 123, 0, "» Райдер","Желаете купить этот интерьер? \nСтоимость: $12000", "Купить", "Отмена");
						return true;
					}
				case 3:
					{
						if(PI[playerid][pCash] < 10000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
						SetPlayerPos(playerid,223.2013,1287.0765,1082.1406);
						SetPlayerCameraPos(playerid,222.3556,1288.6327,1082.1328);
						SetPlayerCameraLookAt(playerid,223.6444,1289.9885,1082.1406);
						SetPlayerInterior(playerid,1);
						SPDEx(playerid, 124, 0, "» Две комнаты","Желаете купить этот интерьер? \nСтоимость: $10000", "Купить", "Отмена");
						return true;
					}
				case 4:
					{
						if(PI[playerid][pCash] < 20000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
						SetPlayerPos(playerid,387.2249,1471.7581,1080.1875);
						SetPlayerCameraPos(playerid,384.1584,1469.4055,1080.1875);
						SetPlayerCameraLookAt(playerid,382.5762,1466.9497,1080.1875);
						SetPlayerInterior(playerid,15);
						SPDEx(playerid, 125, 0, "» Белый потолок","Желаете купить этот интерьер? \nСтоимость: $20000", "Купить", "Отмена");
						return true;
					}
				case 5:
					{
						if(PI[playerid][pCash] < 80000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
						SetPlayerPos(playerid,2324.3396,-1149.5469,1050.7101);
						SetPlayerCameraPos(playerid,2324.3916,-1146.6423,1050.7101);
						SetPlayerCameraLookAt(playerid,2324.3916,-1143.6837,1050.4922);
						SetPlayerInterior(playerid,12);
						SPDEx(playerid, 126, 0, "» Две лестницы","Желаете купить этот интерьер? \nСтоимость: $80000", "Купить", "Отмена");
						return true;
					}
				case 6:
					{
						if(PI[playerid][pCash] < 70000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
						SetPlayerPos(playerid,2317.8601,-1026.7656,1050.2178);
						SetPlayerCameraPos(playerid,2319.5598,-1026.4406,1050.2109);
						SetPlayerCameraLookAt(playerid,2319.5864,-1024.7773,1050.2109);
						SetPlayerInterior(playerid,9);
						SPDEx(playerid, 127, 0, "» Красная лестница","Желаете купить этот интерьер? \nСтоимость: $70000", "Купить", "Отмена");
						return true;
					}
				case 7:
					{
						if(PI[playerid][pCash] < 65000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
						SetPlayerPos(playerid,2270.4187,-1210.5034,1047.5625);
						SetPlayerCameraPos(playerid,2260.6729,-1210.4651,1049.0234);
						SetPlayerCameraLookAt(playerid,2259.6389,-1210.4709,1049.0234);
						SetPlayerInterior(playerid,10);
						SPDEx(playerid, 128, 0, "» Летний","Желаете купить этот интерьер? \nСтоимость: $65000", "Купить", "Отмена");
						return true;
					}
				case 8:
					{
						if(PI[playerid][pCash] < 100000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
						SetPlayerPos(playerid,225.7475,1021.4439,1084.0177);
						SetPlayerCameraPos(playerid,224.8252,1024.4148,1084.0078);
						SetPlayerCameraLookAt(playerid,228.0808,1026.6305,1084.0110);
						SetPlayerInterior(playerid,7);
						SPDEx(playerid, 129, 0, "» Большой ВВ","Желаете купить этот интерьер? \nСтоимость: $100000", "Купить", "Отмена");
						return true;
					}
				case 9:
					{
						if(PI[playerid][pCash] < 75000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
						SetPlayerPos(playerid,226.2957,1114.2869,1080.9929);
						SetPlayerCameraPos(playerid,228.3534,1114.2202,1080.9922);
						SetPlayerCameraLookAt(playerid,231.5845,1114.1322,1080.9922);
						SetPlayerInterior(playerid,5);
						SPDEx(playerid, 130, 0, "» Два этажа","Желаете купить этот интерьер? \nСтоимость: $75000", "Купить", "Отмена");
						return true;
					}
				case 10:
					{
						if(PI[playerid][pCash] < 60000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
						SetPlayerPos(playerid,234.2044,1063.7230,1084.2123);
						SetPlayerCameraPos(playerid,234.1626,1066.4489,1084.2083);
						SetPlayerCameraLookAt(playerid,234.2789,1069.1172,1084.1937);
						SetPlayerInterior(playerid,6);
						SPDEx(playerid, 131, 0, "» Синее дерево","Желаете купить этот интерьер? \nСтоимость: $60000", "Купить", "Отмена");
						return true;
					}
				case 11:
					{
						if(PI[playerid][pCash] < 10000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
						SetPlayerPos(playerid,243.7187,305.0296,999.1484);
						SetPlayerCameraPos(playerid,246.8718,305.9422,999.1484);
						SetPlayerCameraLookAt(playerid,246.8948,304.2566,999.1484);
						SetPlayerInterior(playerid,1);
						SPDEx(playerid, 132, 0, "» Холостяк","Желаете купить этот интерьер? \nСтоимость: $10000", "Купить", "Отмена");
						return true;
					}
				case 12:
					{
						if(PI[playerid][pCash] < 10000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
						SetPlayerPos(playerid,266.5009,304.9631,999.1484);
						SetPlayerCameraPos(playerid,267.8341,303.8611,999.1484);
						SetPlayerCameraLookAt(playerid,269.5865,304.7736,999.1484);
						SetPlayerInterior(playerid,2);
						SPDEx(playerid, 133, 0, "» Игрушки","Желаете купить этот интерьер? \nСтоимость: $10000", "Купить", "Отмена");
						return true;
					}
				case 13:
					{
						if(PI[playerid][pCash] < 10000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
						SetPlayerPos(playerid,422.5713,2536.4736,10.0000);
						SetPlayerCameraPos(playerid,420.7117,2536.7595,10.0000);
						SetPlayerCameraLookAt(playerid,418.5104,2536.8518,10.0000);
						SetPlayerInterior(playerid,10);
						SPDEx(playerid, 134, 0, "» Лётчик","Желаете купить этот интерьер? \nСтоимость: $10000", "Купить", "Отмена");
						return true;
					}
				case 14:
					{
						if(PI[playerid][pCash] < 85000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
						SetPlayerPos(playerid,140.2182,1365.9233,1083.8594);
						SetPlayerCameraPos(playerid,140.1612,1368.7655,1083.8634);
						SetPlayerCameraLookAt(playerid,140.1788,1370.9518,1083.8656);
						SetPlayerInterior(playerid,5);
						SPDEx(playerid, 135, 0, "» Замок","Желаете купить этот интерьер? \nСтоимость: $95000", "Купить", "Отмена");
						return true;
					}
				case 15:
					{
						if(PI[playerid][pCash] < 95000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
						SetPlayerPos(playerid,2237.5803,-1081.6458,1049.0234);
						SetPlayerCameraPos(playerid,2242.7432,-1066.5254,1050.7188);
						SetPlayerCameraLookAt(playerid,2242.6006,-1075.3800,1048.7886);
						SetPlayerInterior(playerid,2);
						SPDEx(playerid, 136, 0, "» Плитка","Желаете купить этот интерьер? \nСтоимость: $85000", "Купить", "Отмена");
						return true;
					}
				}
			}
			else { return true; }
		}
	case 121:// Одна комната
		{
			if(response)
			{
				if(PI[playerid][pCash] < 10000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
				new bouse = PI[playerid][pPhousekey];
				if(bouse == 999 || strcmp(Name(playerid), House[PI[playerid][pPhousekey]][hOwner], true) == -1) return true;
				House[bouse][hInt] = 10;
				House[bouse][hExitx] = 2259.3828;
				House[bouse][hExity] = -1135.8741;
				House[bouse][hExitz] = 1050.6403;
				PI[playerid][pCash] -= 10000;
				SCM(playerid, COLOR_GREEN, "- Поздравляем! Вы изменили свой интерьер дома.");
				SaveMySQL(3,bouse);
				SpawnPlayer(playerid);
				return true;
			}
			else
			{
				SpawnPlayer(playerid);
				return true;
			}
		}
	case 122:// Стеклянный пол
		{
			if(response)
			{
				if(PI[playerid][pCash] < 50000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
				new bouse = PI[playerid][pPhousekey];
				if(bouse == 999 || strcmp(Name(playerid), House[PI[playerid][pPhousekey]][hOwner], true) == -1) return true;
				House[bouse][hInt] = 8;
				House[bouse][hExitx] = 2365.2178;
				House[bouse][hExity] = -1135.5986;
				House[bouse][hExitz] = 1050.8826;
				PI[playerid][pCash] -= 50000;
				SCM(playerid, COLOR_GREEN, "- Поздравляем! Вы изменили свой интерьер дома.");
				SaveMySQL(3,bouse);
				SpawnPlayer(playerid);
				return true;
			}
			else
			{
				SpawnPlayer(playerid);
				return true;
			}
		}
	case 123:// Райдер
		{
			if(response)
			{
				if(PI[playerid][pCash] < 12000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
				new bouse = PI[playerid][pPhousekey];
				if(bouse == 999 || strcmp(Name(playerid), House[PI[playerid][pPhousekey]][hOwner], true) == -1) return true;
				House[bouse][hInt] = 2;
				House[bouse][hExitx] = 2468.8435;
				House[bouse][hExity] = -1698.3057;
				House[bouse][hExitz] = 1013.5078;
				PI[playerid][pCash] -= 12000;
				SCM(playerid, COLOR_GREEN, "- Поздравляем! Вы изменили свой интерьер дома.");
				SaveMySQL(3,bouse);
				SpawnPlayer(playerid);
				return true;
			}
			else
			{
				SpawnPlayer(playerid);
				return true;
			}
		}
	case 124:// Две комнаты
		{
			if(response)
			{
				if(PI[playerid][pCash] < 10000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
				new bouse = PI[playerid][pPhousekey];
				if(bouse == 999 || strcmp(Name(playerid), House[PI[playerid][pPhousekey]][hOwner], true) == -1) return true;
				House[bouse][hInt] = 1;
				House[bouse][hExitx] = 223.2013;
				House[bouse][hExity] = 1287.0765;
				House[bouse][hExitz] = 1082.1406;
				PI[playerid][pCash] -= 10000;
				SCM(playerid, COLOR_GREEN, "- Поздравляем! Вы изменили свой интерьер дома.");
				SaveMySQL(3,bouse);
				SpawnPlayer(playerid);
				return true;
			}
			else
			{
				SpawnPlayer(playerid);
				return true;
			}
		}
	case 125:// Белый потолок
		{
			if(response)
			{
				if(PI[playerid][pCash] < 20000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
				new bouse = PI[playerid][pPhousekey];
				if(bouse == 999 || strcmp(Name(playerid), House[PI[playerid][pPhousekey]][hOwner], true) == -1) return true;
				House[bouse][hInt] = 15;
				House[bouse][hExitx] = 387.2249;
				House[bouse][hExity] = 1471.7581;
				House[bouse][hExitz] = 1080.1875;
				PI[playerid][pCash] -= 20000;
				SCM(playerid, COLOR_GREEN, "- Поздравляем! Вы изменили свой интерьер дома.");
				SaveMySQL(3,bouse);
				SpawnPlayer(playerid);
				return true;
			}
			else
			{
				SpawnPlayer(playerid);
				return true;
			}
		}
	case 126:// Две лестницы
		{
			if(response)
			{
				if(PI[playerid][pCash] < 80000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
				new bouse = PI[playerid][pPhousekey];
				if(bouse == 999 || strcmp(Name(playerid), House[PI[playerid][pPhousekey]][hOwner], true) == -1) return true;
				House[bouse][hInt] = 12;
				House[bouse][hExitx] = 2324.3396;
				House[bouse][hExity] = -1149.5469;
				House[bouse][hExitz] = 1050.7101;
				PI[playerid][pCash] -= 80000;
				SCM(playerid, COLOR_GREEN, "- Поздравляем! Вы изменили свой интерьер дома.");
				SaveMySQL(3,bouse);
				SpawnPlayer(playerid);
				return true;
			}
			else
			{
				SpawnPlayer(playerid);
				return true;
			}
		}
	case 127:// Красная лестница
		{
			if(response)
			{
				if(PI[playerid][pCash] < 70000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
				new bouse = PI[playerid][pPhousekey];
				if(bouse == 999 || strcmp(Name(playerid), House[PI[playerid][pPhousekey]][hOwner], true) == -1) return true;
				House[bouse][hInt] = 9;
				House[bouse][hExitx] = 2317.8601;
				House[bouse][hExity] = -1026.7656;
				House[bouse][hExitz] = 1050.2178;
				PI[playerid][pCash] -= 70000;
				SCM(playerid, COLOR_GREEN, "- Поздравляем! Вы изменили свой интерьер дома.");
				SaveMySQL(3,bouse);
				SpawnPlayer(playerid);
				return true;
			}
			else
			{
				SpawnPlayer(playerid);
				return true;
			}
		}
	case 128:// Летний
		{
			if(response)
			{
				if(PI[playerid][pCash] < 65000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
				new bouse = PI[playerid][pPhousekey];
				if(bouse == 999 || strcmp(Name(playerid), House[PI[playerid][pPhousekey]][hOwner], true) == -1) return true;
				House[bouse][hInt] = 10;
				House[bouse][hExitx] = 2270.4187;
				House[bouse][hExity] = -1210.5034;
				House[bouse][hExitz] = 1047.5625;
				PI[playerid][pCash] -= 65000;
				SCM(playerid, COLOR_GREEN, "- Поздравляем! Вы изменили свой интерьер дома.");
				SaveMySQL(3,bouse);
				SpawnPlayer(playerid);
				return true;
			}
			else
			{
				SpawnPlayer(playerid);
				return true;
			}
		}
	case 129:// Большой ВВ
		{
			if(response)
			{
				if(PI[playerid][pCash] < 100000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
				new bouse = PI[playerid][pPhousekey];
				if(bouse == 999 || strcmp(Name(playerid), House[PI[playerid][pPhousekey]][hOwner], true) == -1) return true;
				House[bouse][hInt] = 7;
				House[bouse][hExitx] = 225.7475;
				House[bouse][hExity] = 1021.4439;
				House[bouse][hExitz] = 1084.0177;
				PI[playerid][pCash] -= 100000;
				SCM(playerid, COLOR_GREEN, "- Поздравляем! Вы изменили свой интерьер дома.");
				SaveMySQL(3,bouse);
				SpawnPlayer(playerid);
				return true;
			}
			else
			{
				SpawnPlayer(playerid);
				return true;
			}
		}
	case 130:// Два этажа
		{
			if(response)
			{
				if(PI[playerid][pCash] < 75000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
				new bouse = PI[playerid][pPhousekey];
				if(bouse == 999 || strcmp(Name(playerid), House[PI[playerid][pPhousekey]][hOwner], true) == -1) return true;
				House[bouse][hInt] = 5;
				House[bouse][hExitx] = 226.2957;
				House[bouse][hExity] = 1114.2869;
				House[bouse][hExitz] = 1080.9929;
				PI[playerid][pCash] -= 75000;
				SCM(playerid, COLOR_GREEN, "- Поздравляем! Вы изменили свой интерьер дома.");
				SaveMySQL(3,bouse);
				SpawnPlayer(playerid);
				return true;
			}
			else
			{
				SpawnPlayer(playerid);
				return true;
			}
		}
	case 131:// Синее дерево
		{
			if(response)
			{
				if(PI[playerid][pCash] < 60000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
				new bouse = PI[playerid][pPhousekey];
				if(bouse == 999 || strcmp(Name(playerid), House[PI[playerid][pPhousekey]][hOwner], true) == -1) return true;
				House[bouse][hInt] = 6;
				House[bouse][hExitx] = 234.2044;
				House[bouse][hExity] = 1063.7230;
				House[bouse][hExitz] = 1084.2123;
				PI[playerid][pCash] -= 60000;
				SCM(playerid, COLOR_GREEN, "- Поздравляем! Вы изменили свой интерьер дома.");
				SaveMySQL(3,bouse);
				SpawnPlayer(playerid);
				return true;
			}
			else
			{
				SpawnPlayer(playerid);
				return true;
			}
		}
	case 132:// Холостяк
		{
			if(response)
			{
				if(PI[playerid][pCash] < 10000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
				new bouse = PI[playerid][pPhousekey];
				if(bouse == 999 || strcmp(Name(playerid), House[PI[playerid][pPhousekey]][hOwner], true) == -1) return true;
				House[bouse][hInt] = 1;
				House[bouse][hExitx] = 243.7187;
				House[bouse][hExity] = 305.0296;
				House[bouse][hExitz] = 999.1484;
				PI[playerid][pCash] -= 10000;
				SCM(playerid, COLOR_GREEN, "- Поздравляем! Вы изменили свой интерьер дома.");
				SaveMySQL(3,bouse);
				SpawnPlayer(playerid);
				return true;
			}
			else
			{
				SpawnPlayer(playerid);
				return true;
			}
		}
	case 133:// Игрушки
		{
			if(response)
			{
				if(PI[playerid][pCash] < 10000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
				new bouse = PI[playerid][pPhousekey];
				if(bouse == 999 || strcmp(Name(playerid), House[PI[playerid][pPhousekey]][hOwner], true) == -1) return true;
				House[bouse][hInt] = 2;
				House[bouse][hExitx] = 266.5009;
				House[bouse][hExity] = 304.9631;
				House[bouse][hExitz] = 999.1484;
				PI[playerid][pCash] -= 10000;
				SCM(playerid, COLOR_GREEN, "- Поздравляем! Вы изменили свой интерьер дома.");
				SaveMySQL(3,bouse);
				SpawnPlayer(playerid);
				return true;
			}
			else
			{
				SpawnPlayer(playerid);
				return true;
			}
		}
	case 134:// Лётчик
		{
			if(response)
			{
				if(PI[playerid][pCash] < 10000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
				new bouse = PI[playerid][pPhousekey];
				if(bouse == 999 || strcmp(Name(playerid), House[PI[playerid][pPhousekey]][hOwner], true) == -1) return true;
				House[bouse][hInt] = 10;
				House[bouse][hExitx] = 422.5713;
				House[bouse][hExity] = 2536.4736;
				House[bouse][hExitz] = 10.0000;
				PI[playerid][pCash] -= 10000;
				SCM(playerid, COLOR_GREEN, "- Поздравляем! Вы изменили свой интерьер дома.");
				SaveMySQL(3,bouse);
				SpawnPlayer(playerid);
				return true;
			}
			else
			{
				SpawnPlayer(playerid);
				return true;
			}
		}
	case 135:// Замок
		{
			if(response)
			{
				if(PI[playerid][pCash] < 95000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
				new bouse = PI[playerid][pPhousekey];
				if(bouse == 999 || strcmp(Name(playerid), House[PI[playerid][pPhousekey]][hOwner], true) == -1) return true;
				House[bouse][hInt] = 5;
				House[bouse][hExitx] = 140.2182;
				House[bouse][hExity] = 1365.9233;
				House[bouse][hExitz] = 1083.8594;
				PI[playerid][pCash] -= 95000;
				SCM(playerid, COLOR_GREEN, "- Поздравляем! Вы изменили свой интерьер дома.");
				SaveMySQL(3,bouse);
				SpawnPlayer(playerid);
				return true;
			}
			else
			{
				SpawnPlayer(playerid);
				return true;
			}
		}
	case 136:// Плитка
		{
			if(response)
			{
				if(PI[playerid][pCash] < 85000) return SCM(playerid, COLOR_WHITE, "недостаточно денег.");
				new bouse = PI[playerid][pPhousekey];
				if(bouse == 999 || strcmp(Name(playerid), House[PI[playerid][pPhousekey]][hOwner], true) == -1) return true;
				House[bouse][hInt] = 2;
				House[bouse][hExitx] = 2237.5803;
				House[bouse][hExity] = -1081.6458;
				House[bouse][hExitz] = 1049.0234;
				PI[playerid][pCash] -= 85000;
				SCM(playerid, COLOR_GREEN, "- Поздравляем! Вы изменили свой интерьер дома.");
				SaveMySQL(3,bouse);
				SpawnPlayer(playerid);
				return true;
			}
			else
			{
				SpawnPlayer(playerid);
				return true;
			}
		}
	case 2001:
		{
			if(response == 1)
			{
				switch(listitem)
				{
				case 0: SetPlayerColor(playerid,0x73926DFF);// Правительство
				case 1: SetPlayerColor(playerid,0x0000FFFF);// SAPD
				case 2: SetPlayerColor(playerid,0x4F4F4FFF);// FBI
				case 3: SetPlayerColor(playerid,0x804000FF);// Авианосец
				case 4: SetPlayerColor(playerid,0x808000FF);// Сух.Войска
				case 5: SetPlayerColor(playerid,0xBE4141FF);// Мед. Центр ЛС
				case 6: SetPlayerColor(playerid,0xBC6443FF);// Мед. Центр СФ
				case 7: SetPlayerColor(playerid,0xFFFF82AA);// Завод К.А.С.С
				case 8: SetPlayerColor(playerid,0xEB4318FF);// Мафия LCN
				case 9: SetPlayerColor(playerid,0xFF0000FF);// Мафия Yakuza
				case 10: SetPlayerColor(playerid,0x788873FF);// Русская Мафия
				case 11: SetPlayerColor(playerid,0x800080FF);// Баллас
				case 12: SetPlayerColor(playerid,0xF2D00DFF);// Вагос
				case 13: SetPlayerColor(playerid,0x008000FF);// Грув
				case 14: SetPlayerColor(playerid,0x07F1F8FF);// Ацтек
				case 15: SetPlayerColor(playerid,0x008080FF);// Рифа
				case 16: SetPlayerColor(playerid,0x58633DFF);// Байкеры
				case 17: SetPlayerColor(playerid,0x80FF00FF);// SA News
				}
			}
			else
			{
				return true;
			}
		}
	case 11:
		{
			if(response)
			{
				if(!strlen(inputtext)) return SPDEx(playerid,11,DIALOG_STYLE_INPUT, "Смена пароля", "Чтобы не подвергнуть аккаунт взлому, рекомедуем придумать трудный пароль.\nСодержащий набор букв и цифр", "Сменить", "Назад");
				if(strlen(inputtext) < 6 || strlen(inputtext) > 16) return SPDEx(playerid,11,0,"Ошибка!","{FF6347}Длина пароля должна быть от 6 до 16","Повтор","");
				mysql_format(DATABASE, YCMDstr, 104, "UPDATE `accounts` SET pKey = '%s' WHERE Name = '%s'",inputtext,Name(playerid));
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				format(string, 128, "Ваш новый пароль: %s", inputtext);
				SCM(playerid, COLOR_GREEN, string);
				SCM(playerid, COLOR_GREEN, "Мы рекомендуем Вам сделать скриншот. Клавиша F8");
				return true;
			}
			else return CallLocalFunction("OnPlayerCommandText", "is", playerid, "/mm");
		}
	case 9652:
		{
			if(response)
			{
				new car = GetPlayerVehicleID(playerid);
				if(car >= benzovozcar[0] && car <= benzovozcar[1])
				{
					if(PI[playerid][pCash] <= 500)
					{
						SCM(playerid, COLOR_WHITE, "недостаточно денег");
						RemovePlayerFromVehicleAC(playerid);
						TogglePlayerControllable(playerid, 1);
						return true;
					}
					PI[playerid][pCash] -= 500;
					TogglePlayerControllable(playerid, 1);
					SCM(playerid, COLOR_WHITE, "Вы арендовали грузовик!");
					return true;
				}
				else if(car >= comptruckcar[0] && car <= comptruckcar[1])
				{
					if(PI[playerid][pCash] < 100)
					{
						SCM(playerid, COLOR_WHITE, "недостаточно денег");
						RemovePlayerFromVehicleAC(playerid);
						TogglePlayerControllable(playerid, 1);
						return true;
					}
					PI[playerid][pCash] -= 100;
					TogglePlayerControllable(playerid, 1);
					SCM(playerid, COLOR_WHITE, "Вы арендовали грузовик!");
					return true;
				}
			}
			else
			{
				RemovePlayerFromVehicleAC(playerid);
				TogglePlayerControllable(playerid, 1);
				return true;
			}
		}
	case 9653:
		{
			if(!response) return true;
			if(FormaFrac[playerid] == 19 || GetPVarInt(playerid,"proverkaforma") == 1)
			{
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SCM(playerid,COLOR_GREY, "Вы не в матовозе!");
				switch(listitem)
				{
				case 0:
					{
						SCM(playerid,COLOR_GREEN, "Склад СВ указан на карте в виде красного маркера");
						SetPlayerRaceCheckpoint(playerid, 2,330.9580,1959.9169,17.7910,0.0,0.0,0.0, 6.0);
						SetPVarInt(playerid, "loading_mats", 1);
						return true;
					}
				case 1:
					{
						if(!PlayerToPoint(15.0,playerid,330.9580,1959.9169,17.7910)) return	SCM(playerid,COLOR_GREY, "Вы не у разгрузочной зоны!");
						new tmpcar = GetPlayerVehicleID(playerid);
						if(MatArmy[tmpcar-gunscar[0]][mArLoad] <= 0) return SCM(playerid, COLOR_GRAD1, "В матовозе нет оружия!");
						FracBank[0][farmmatbi] += MatArmy[tmpcar-gunscar[0]][mArLoad];
						MatArmy[tmpcar-gunscar[0]][mArLoad] = 0;
						format(YCMDstr, 128, "Оружие выгружено! В грузовике: %d/10000", MatArmy[tmpcar-gunscar[0]][mArLoad]);
						SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
						return true;
					}
				case 2:
					{
						SetPlayerRaceCheckpoint(playerid, 2,-1601.8774,309.4032,7.1875,0.0,0.0,0.0, 6.0);
						SCM(playerid, COLOR_WHITE, "Склад ВМФ указан на карте в виде красного маркера");
						SetPVarInt(playerid, "loading_mats", 2);
						return true;
					}
				case 3:
					{
						SetPlayerRaceCheckpoint(playerid, 2,1529.6000,-1691.2000,13.3828,0.0,0.0,0.0, 6.0);
						SCM(playerid, COLOR_WHITE, "Склад LSPD указан на карте в виде красного маркера");
						SetPVarInt(playerid, "loading_mats", 3);
						return true;
					}
				case 4:
					{
						SetPlayerRaceCheckpoint(playerid, 2,1024.7892,1186.2866,10.7782,0.0,0.0,0.0, 6.0);
						SCM(playerid, COLOR_WHITE, "Склад FBI указан на карте в виде красного маркера");
						SetPVarInt(playerid, "loading_mats", 4);
						return true;
					}
				case 5:
					{
						SetPlayerRaceCheckpoint(playerid, 2,-1607.2913,683.5955,-5.2422,0.0,0.0,0.0, 6.0);
						SCM(playerid, COLOR_WHITE, "Склад SFPD указан на карте в виде красного маркера");
						SetPVarInt(playerid, "loading_mats", 5);
						return true;
					}
				case 6:
					{
						SetPlayerRaceCheckpoint(playerid, 2,2292.0837,2458.9941,10.8203,0.0,0.0,0.0, 6.0);
						SCM(playerid, COLOR_WHITE, "Склад LVPD указан на карте в виде красного маркера");
						SetPVarInt(playerid, "loading_mats", 6);
						return true;
					}
				case 7:
					{
						new listitems[] = "[1] Разгрузка в Ballas\n[2] Разгрузка в Vagos\n[3] Разгрузка в Grove\n[4] Разгрузка в Aztecas\n[5] Разгрузка в Rifa";
						SPDEx(playerid, 3232, 2, "Развозка материалов бандам", listitems, "Выбрать", "Отмена");
						return true;
					}
				case 8:
					{
						SetPlayerRaceCheckpoint(playerid, 2,681.7425,-441.0584,16.3359,0.0,0.0,0.0, 6.0);
						SCM(playerid, COLOR_WHITE, "Склад байкеров указан на карте в виде красного маркера");
						SetPVarInt(playerid, "loading_mats", 7);
						return true;
					}
				case 9:
					{
						new listitems[] = "[1] Разгрузка в LCN\n[2] Разгрузка в Yakuza\n[3] Разгрузка в Russian Mafia";
						SPDEx(playerid, 4242, 2, "Развозка материалов мафиям", listitems, "Выбрать", "Отмена");
						return true;
					}
				}
			}
		}
	case 9654:
		{
			if(response)
			{
				if(PI[playerid][pMember] == 24)
				{
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 609) return SCM(playerid,COLOR_GREY, "Вы не в грузовике для развозки оружия!");
					switch(listitem)
					{
					case 0:
						{
							SCM(playerid,COLOR_GREEN, "Встаньте на красный маркер, чтобы заполнить грузовик оружием!");
							SetPlayerRaceCheckpoint(playerid, 2,2529.0146,2824.4026,10.8203,0.0,0.0,0.0, 6.0);
							SetPVarInt(playerid, "loading_mats", 16);
							return true;
						}
					case 1:
						{
							if(!PlayerToPoint(15.0,playerid,2529.0146,2824.4026,10.8203)) return SCM(playerid,COLOR_GREY, "Вы не у разгрузочной зоны!");
							new tmpcar = GetPlayerVehicleID(playerid);
							if(MatHaulZ[tmpcar-zcar[0]][mLoadZ] <= 0) return SCM(playerid, COLOR_GRAD1, "В грузовике нет оружия!");
							FracBank[0][fzmatbi] += MatHaulZ[tmpcar-zcar[0]][mLoadZ];
							MatHaulZ[tmpcar-zcar[0]][mLoadZ] = 0;
							if(FracBank[0][fzmatbi] > 500000) FracBank[0][fzmatbi] = 500000;
							format(YCMDstr, 128, "Оружие выгружено! В грузовике: %d/50000", MatHaulZ[tmpcar-zcar[0]][mLoadZ]);
							SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
							return true;
						}
					case 2:
						{
							SetPlayerRaceCheckpoint(playerid, 2,330.1202,1963.8748,17.6406,0.0,0.0,0.0, 6.0);
							SCM(playerid, COLOR_WHITE, "Склад СВ указан на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_mats", 17);
							return true;
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
	case 9655:
		{
			if(response)
			{
				if(PI[playerid][pMember] == 24)
				{
					switch(listitem)
					{
					case 0:
						{
							SCM(playerid,COLOR_GREEN, "Встаньте на красный маркер, чтобы заполнить цистерну бензином!");
							SetPlayerRaceCheckpoint(playerid, 2,2718.1787,2812.7292,10.8130,0.0,0.0,0.0, 6.0);
							SetPVarInt(playerid, "loading_benz", 1);
							return true;
						}
					case 1:
						{
							SetPlayerRaceCheckpoint(playerid, 2,2718.1787,2812.7292,10.8130,0.0,0.0,0.0, 6.0);
							SCM(playerid, COLOR_WHITE, "Разгрузочная зона указана на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_benz", 2);
							return true;
						}
					case 2:
						{
							SetPlayerRaceCheckpoint(playerid, 2,1602.1592,-1619.5845,13.4887,0.0,0.0,0.0, 6.0);
							SCM(playerid, COLOR_WHITE, "Цистерна LSPD указана на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_benz", 3);
							return true;
						}
					case 3:
						{
							SetPlayerRaceCheckpoint(playerid, 2,1013.2892,1155.4902,10.7010,0.0,0.0,0.0, 6.0);
							SCM(playerid, COLOR_WHITE, "Цистерна FBI указана на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_benz", 4);
							return true;
						}
					case 4:
						{
							SetPlayerRaceCheckpoint(playerid, 2,-1390.0769,458.0238,7.1875,0.0,0.0,0.0, 6.0);
							SCM(playerid, COLOR_WHITE, "Цистерна ВМФ указана на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_benz", 5);
							return true;
						}
					case 5:
						{
							SetPlayerRaceCheckpoint(playerid, 2,-2592.5903,586.0273,14.4531,0.0,0.0,0.0, 6.0);
							SCM(playerid, COLOR_WHITE, "Цистерна МЦСФ указана на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_benz", 6);
							return true;
						}
					case 6:
						{
							SetPlayerRaceCheckpoint(playerid, 2,1140.4194,-1327.8652,13.6605,0.0,0.0,0.0, 6.0);
							SCM(playerid, COLOR_WHITE, "Цистерна МЦЛС указана на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_benz", 7);
							return true;
						}
					case 7:
						{
							SetPlayerRaceCheckpoint(playerid, 2,295.0532,1849.0668,17.6406,0.0,0.0,0.0, 6.0);
							SCM(playerid, COLOR_WHITE, "Цистерна СВ указана на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_benz", 8);
							return true;
						}
					case 8:
						{
							SetPlayerRaceCheckpoint(playerid, 2,1523.2502,-1843.1382,13.5469,0.0,0.0,0.0, 6.0);
							SCM(playerid, COLOR_WHITE, "Цистерна Адм. Президента указана на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_benz", 9);
							return true;
						}
					case 9:
						{
							SetPlayerRaceCheckpoint(playerid, 2,2549.5632,2721.5469,10.8203,0.0,0.0,0.0, 6.0);
							SCM(playerid, COLOR_WHITE, "Цистерна К.А.С.С. указана на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_benz", 10);
							return true;
						}
					case 10:
						{
							SetPlayerRaceCheckpoint(playerid, 2,-1635.7487,667.2200,7.1875,0.0,0.0,0.0, 6.0);
							SCM(playerid, COLOR_WHITE, "Цистерна SFPD указана на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_benz", 20);
							return true;
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
	case 9656:
		{
			if(response)
			{
				if(PI[playerid][pMember] == 23)
				{
					switch(listitem)
					{
					case 0:
						{
							SetPlayerRaceCheckpoint(playerid, 2,1429.3911,791.9945,10.8203,0.0,0.0,0.0, 4.0);
							SCM(playerid, COLOR_WHITE, "Цистерна LCN указана на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_benz", 11);
							return true;
						}
					case 1:
						{
							SetPlayerRaceCheckpoint(playerid, 2,1443.0621,2820.9695,10.8203,0.0,0.0,0.0, 4.0);
							SCM(playerid, COLOR_WHITE, "Цистерна Yakuza указана на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_benz", 12);
							return true;
						}
					case 2:
						{
							SetPlayerRaceCheckpoint(playerid, 2,1971.0061,-1274.5997,23.9908,0.0,0.0,0.0, 4.0);
							SCM(playerid, COLOR_WHITE, "Цистерна Ballas указана на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_benz", 13);
							return true;
						}
					case 3:
						{
							SetPlayerRaceCheckpoint(playerid, 2,2795.3508,-1587.0710,10.9271,0.0,0.0,0.0, 4.0);
							SCM(playerid, COLOR_WHITE, "Цистерна Vagos указана на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_benz", 14);
							return true;
						}
					case 4:
						{
							SetPlayerRaceCheckpoint(playerid, 2,964.0468,1810.7731,8.6484,0.0,0.0,0.0, 4.0);
							SCM(playerid, COLOR_WHITE, "Цистерна PM указана на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_benz", 15);
							return true;
						}
					case 5:
						{
							SetPlayerRaceCheckpoint(playerid, 2,2458.5376,-1669.7819,13.4944,0.0,0.0,0.0, 4.0);
							SCM(playerid, COLOR_WHITE, "Цистерна Grove указана на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_benz", 16);
							return true;
						}
					case 6:
						{
							SetPlayerRaceCheckpoint(playerid, 2,2778.7441,-1944.7628,13.5469,0.0,0.0,0.0, 4.0);
							SCM(playerid, COLOR_WHITE, "Цистерна Aztec указана на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_benz", 17);
							return true;
						}
					case 7:
						{
							SetPlayerRaceCheckpoint(playerid, 2,2182.3706,-1776.5037,13.3649,0.0,0.0,0.0, 4.0);
							SCM(playerid, COLOR_WHITE, "Цистерна Rifa указана на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_benz", 18);
							return true;
						}
					case 8:
						{
							SetPlayerRaceCheckpoint(playerid, 2,673.5708,-444.2276,16.3359,0.0,0.0,0.0, 4.0);
							SCM(playerid, COLOR_WHITE, "Цистерна байкеров указана на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_benz", 19);
							return true;
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
	case 3232:
		{
			if(response)
			{
				if (FormaFrac[playerid] == 19 || GetPVarInt(playerid,"proverkaforma") == 1)
				{
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SCM(playerid,COLOR_GREY, "Вы не в матовозе!");
					switch(listitem)
					{
					case 0:
						{
							SetPlayerRaceCheckpoint(playerid, 2,1970.9800,-1281.3701,23.9844,0.0,0.0,0.0, 6.0);
							SCM(playerid, COLOR_WHITE, "Склад Ballas указан на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_mats", 8);
							return true;
						}
					case 1:
						{
							SetPlayerRaceCheckpoint(playerid, 2,2796.0659,-1612.0596,11.0938,0.0,0.0,0.0, 6.0);
							SCM(playerid, COLOR_WHITE, "Склад Vagos указан на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_mats", 9);
							return true;
						}
					case 2:
						{
							SetPlayerRaceCheckpoint(playerid, 2,2499.9006,-1686.8049,13.4962,0.0,0.0,0.0, 6.0);
							SCM(playerid, COLOR_WHITE, "Склад Grove указан на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_mats", 10);
							return true;
						}
					case 3:
						{
							SetPlayerRaceCheckpoint(playerid, 2,2769.8887,-1950.8413,13.3719,0.0,0.0,0.0, 6.0);
							SCM(playerid, COLOR_WHITE, "Склад Aztecas указан на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_mats", 11);
							return true;
						}
					case 4:
						{
							SetPlayerRaceCheckpoint(playerid, 2,2183.1975,-1811.8928,13.5469,0.0,0.0,0.0, 6.0);
							SCM(playerid, COLOR_WHITE, "Склад Rifa указан на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_mats", 12);
							return true;
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
	case 4242:
		{
			if(response)
			{
				if (FormaFrac[playerid] == 19 || GetPVarInt(playerid,"proverkaforma") == 1)
				{
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SCM(playerid,COLOR_GREY, "Вы не в матовозе!");
					switch(listitem)
					{
					case 0:
						{
							SetPlayerRaceCheckpoint(playerid, 2,1440.8108,780.1008,11.0234,0.0,0.0,0.0, 6.0);
							SCM(playerid, COLOR_WHITE, "Склад LCN указан на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_mats", 13);
							return true;
						}
					case 1:
						{
							SetPlayerRaceCheckpoint(playerid, 2,1434.6439,2816.4175,10.8203,0.0,0.0,0.0, 6.0);
							SCM(playerid, COLOR_WHITE, "Склад Yakuza указан на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_mats", 14);
							return true;
						}
					case 2:
						{
							SetPlayerRaceCheckpoint(playerid, 2,968.2533,1783.9307,8.8581,0.0,0.0,0.0, 6.0);
							SCM(playerid, COLOR_WHITE, "Склад PM указан на карте в виде красного маркера");
							SetPVarInt(playerid, "loading_mats", 15);
							return true;
						}
					}
				}
			}
			else
			{
				return true;
			}
		}
	case 2300:
		{
			if(!response) return true;
			new code;
			code = Random(10000,99999);
			SetPVarInt(playerid,"emailcode",code);
			new query[300];
			format(query,sizeof(query),"crystal-rp.ru/email_active.php?authkey=KnBvCPqQErR&email=%s&code=%d",inputtext,code);
			new result = HTTP(0,HTTP_HEAD,query,"","");
			if(!result) return SCM(playerid,COLOR_GREY,"Ошибка! Попробуйте через несколько минут.");
			format(query,sizeof(query),"Вам на почтовый адрес было отправлено письмо с кодом подтверждения.\n Сверните игру, проверьте почту и введите этот код.");
			SPDEx(playerid,2301,1,"Подтверждение Email",query,"ОК","Отмена");
			mysql_format(DATABASE, YCMDstr, 128, "UPDATE `accounts` SET pEmail = '%s' WHERE Name = '%s'",inputtext,Name(playerid));
			mysql_function_query(DATABASE,YCMDstr,false,"","");
			return true;
		}
	case 2301:
		{
			if(!response) return true;
			new code = GetPVarInt(playerid,"emailcode");
			if(strval(inputtext) != code)
			{
				SCM(playerid,COLOR_GREY,"Код указан неверно");
				return true;
			}
			SCM(playerid,COLOR_GREY,"Вы успешно привязали свой Email к своему аккаунту.");
			SCM(playerid,COLOR_GREY,"При каждом входе на аккаунт Вам на Email будет отправляться код для входа на сервер.");
			PI[playerid][pEmailStat] = 1;
		}
	case 2302:
		{
			if(!response) return Kick(playerid);
			new code = GetPVarInt(playerid,"emailcode");
			if(strval(inputtext) != code)
			{
				SCM(playerid,COLOR_GREY,"Не правильный код!");
				return Kick(playerid);
			}
			SCM(playerid,COLOR_GREY,"Вы успешно авторизовались через Email.");
			SetPVarInt(playerid,"Proverka",1);
			OnPlayerEnterEmail(playerid);
			return true;
		}
	case 2303:
		{
			if(!response) return true;
			new code = GetPVarInt(playerid,"emailcode");
			if(strval(inputtext) != code)
			{
				SCM(playerid,COLOR_GREY,"Код указан неверно");
				return true;
			}
			SCM(playerid,COLOR_GREY,"Вы успешно отвязали Email от аккаунта.");
			PI[playerid][pEmailStat] = 0;
		}
    case 2304:
		{
			if(!response) return true;
			if(PI[playerid][pPinCode] == strval(inputtext))
			{
				new listitems[] = "{ff0000}[1] {ffffff}Снять со счёта\n{ff0000}[2] {ffffff}Положить на счёт\n{ff0000}[3] {ffffff}Информация\n{ff0000}[4] {ffffff}Пополнить счёт бизнеса\n{ff0000}[4] {ffffff}Пополнить счёт Автомастерской\n{ff0000}[6] {ffffff}Оплата штрафов\n{ff0000}[7] {ffffff}Перевод денег\n{ff0000}[8] {ffffff}Настройка PIN-Code";
				SPDEx(playerid, 8810, 2, "Банковские услуги", listitems, "Выбрать", "Закрыть");
				return true;
			}
			else SCM(playerid,COLOR_GREY,"Неправильный код.");
		}
    case 2305:
		{
			if(!response) return true;
			if(PI[playerid][pPinCode] == strval(inputtext))
			{
				new listitems[] = "{ff0000} [1] {ffffff}Снять наличные\n{ff0000} [2] {ffffff}Баланс\n{ff0000} [3] {ffffff}Домашний счёт\n{ff0000} [4] {ffffff}Квартплата\n{ff0000} [5] {ffffff}Пополнить счёт телефона";
				SPDEx(playerid, 8900, 2, "Банкомат", listitems, "Далее", "Выход");
				return true;
			}
			else SCM(playerid,COLOR_GREY,"Неправильный код.");
		}
	case 2323:
		{
			if(!response) return true;
			if(listitem == 0)
			{
				SPDEx(playerid,11,1, "Смена пароля", "    Введите Ваш новый пароль     ", "Принять", "Отмена");
				return true;
			}
			if(listitem == 1)
			{
				if(PI[playerid][pEmailStat] == 1)
				{
					new code;
					code = Random(10000,99999);
					SetPVarInt(playerid,"emailcode",code);
					new query[300];
					format(query,sizeof(query),"crystal-rp.ru/email_active.php?authkey=KnBvCPqQErR&email=%s&code=%d",PI[playerid][pEmail],code);
					new result = HTTP(0,HTTP_HEAD,query,"","");
					if(!result) return SCM(playerid,COLOR_GREY,"Ошибка! Попробуйте через несколько минут.");
					format(query,sizeof(query),"Вам на почтовый адрес было отправлено письмо с кодом подтверждения.\nСверните игру, проверьте почту и введите этот код.");
					SPDEx(playerid,2303,1,"Отвязка Email",query,"ОК","Отмена");
					return true;
				}
				SPDEx(playerid,2300,1,"Привязка Email","Укажите Ваш Email. На данный Email будет отправлен код.","Далее","Назад");
				return true;
			}
			if(listitem == 2)
			{
				new vdata = PI[playerid][pVhoddata];
				new vmes = PI[playerid][pVhodMes];
				new vchas = PI[playerid][pVhodchas];
				new vminute = PI[playerid][pVhodminute];
				new mtext[20];
				if(vmes == 1) { mtext = "Январь"; }
				else if(vmes == 2) { mtext = "Февраль"; }
				else if(vmes == 3) { mtext = "Март"; }
				else if(vmes == 4) { mtext = "Апрель"; }
				else if(vmes == 5) { mtext = "Май"; }
				else if(vmes == 6) { mtext = "Июнь"; }
				else if(vmes == 7) { mtext = "Июль"; }
				else if(vmes == 8) { mtext = "Август"; }
				else if(vmes == 9) { mtext = "Сентябрь"; }
				else if(vmes == 10) { mtext = "Октябрь"; }
				else if(vmes == 11) { mtext = "Ноябрь"; }
				else if(vmes == 12) { mtext = "Декабрь"; }
				new playersip[128];
				GetPlayerIp(playerid,playersip,sizeof(playersip));
				new msg[] = "Информация активности аккаунта.\nИнформация обновляется при выходе.\n\n{FEBC41}\n- Дата: %d %s\n- Время: %d:%d\n- Ваш IP адрес: %s\n- Последний IP адрес: %s";
				format(YCMDstr, 256, msg, vdata,mtext,vchas,vminute,playersip,PI[playerid][pvIp]);
				SPDEx(playerid,3025,0, "Последняя активность",YCMDstr, "Готово", "");
				return true;
			}
		}
	case 9943:
		{
			if(!response) return true;
			if(PI[playerid][pMuted] == 1) return SCM(playerid, 0xFF6347AA, "У Вас бан чата");
			if(GetPVarInt(playerid,"NameChange") > gettime()) return SCM(playerid, 0xFF0000FF, "Заявку можно подавать раз в 30 секунд");
			SetPVarInt(playerid,"NameChange",gettime() + 30);
			if(!strlen(inputtext)) return SPDEx(playerid, 9943, DIALOG_STYLE_INPUT,"Заявка на смену ника","Напишите новый ник (по форме Имя_Фамилия)","Отправить","Отмена");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 24) return SPDEx(playerid, 9943, DIALOG_STYLE_INPUT,"Заявка на смену ника","{FFFFFF}Ник должен состоять от 6 до 24 символов!","Ок","Отмена");
			if(!GetPVarInt(playerid, "ChangeName")) return format(YCMDstr, sizeof(YCMDstr), "SELECT `Name` FROM `accounts` WHERE `Name` = '%s'", inputtext), mysql_function_query(DATABASE, YCMDstr, true, "OnPlayerCheckName", "is", playerid, inputtext);
			return true;
		}
	case 9623:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: ShowStats(playerid,playerid);
				case 1: SPDEx(playerid,10224,2,"Команды сервера","1. Персонаж\n2. SA:MP\n3. Чат\n4. Лидер\n5. SAPD | FBI\n6. Армии\n7. Транспорт\n8. Бандитские группировки\n9. Мафия\n10. Байкеры\n11. Работа\n12. SAN\n13. Правительство\n14. Завод К.А.С.С\n15. Медики\n16. Бизнес\n17. Дом\n18. Отель\n19. VIP игрок\n20. Свадьба\n21. Автомастерские\n22. Семья\n23. Казино","Выбор","Отмена");
				case 2:
					{
					    new online = 0;
						for(new idx=0, i=0; idx<cvector_size(players); idx++)
						{
							i = cvector_get(players, idx);
							if(PI[i][pBSA] >= 1) online++;
						}
						if(online == 0) return SCM(playerid, COLOR_GREY, "В данный момент Администрации нет в сети!");
						SPDEx(playerid,10,1, "Связь с Администрацией", "Напишите вопрос/жалобу для Администрации сервера.\nПри написании жалобы на игрока, обязательно указывайте ID нарушителя и причину!", "Отправить", "Отмена");
					}
				case 3:
					{
						new clearc;
						while(clearc++ < 99)
						SCM(playerid, COLOR_WHITE, " ");
					}
				case 4:
					{
						new rulesdialog[1300];
						format(rulesdialog,sizeof(rulesdialog), "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",
						RulesMSG[0],RulesMSG[1],RulesMSG[2],RulesMSG[3],RulesMSG[4],RulesMSG[5],RulesMSG[6],RulesMSG[7],RulesMSG[8],RulesMSG[9],RulesMSG[10],RulesMSG[11],RulesMSG[12],RulesMSG[13],RulesMSG[14],RulesMSG[15],RulesMSG[16]);
						SPDEx(playerid,9980,0, "Правила сервера", rulesdialog, "Согласен", "Выйти");
						return true;
					}
				case 5:
					{
						SPDEx(playerid, 2323, 2, "Безопасность", "- Изменить пароль\n- Вкл./Откл. привязку Email\n- Последний вход", "Выбрать", "Назад");
						return true;
					}
				case 6: SPDEx(playerid,9943,1, "Заявка на смену ника", "Напишите новый ник (по форме Имя_Фамилия)", "Отправить", "Назад");
				case 7: CallLocalFunction("OnPlayerCommandText", "is", playerid, "/quest");
				case 8: SPDEx(playerid,1993,2, "Меню: {ffffff}Донат", "- Информация\n- Пополнение средств\n- Игровые привелегии\n- Купить доллары\n- Купить транспорт [1 слот]\n- Купить транспорт [2 слот]", "Далее", "Отмена");
				case 9: SPDEx(playerid,10111,0, "Информация о сервере","IP адрес сервера: 62.122.214.230:7777\nСайт: В разработке\nФорум: В разработке\nГруппа ВКонтакте: vk.com/gta_exsight", "Закрыть", "");
				}
			}
			else
			{
				return true;
			}
		}
    case 10224:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					new mes[1270];
					strcat(mes,"/drop - выбросить Материаллы|Наркотики|Оружие\n");
					strcat(mes,"/givefloor - подарить цветы\n");
					strcat(mes,"/smoke - курить сигарету\n");
					strcat(mes,"/dropcigarette - выбросить сигарету\n");
					strcat(mes,"/ciga - открыть пачку сигарет\n");
					strcat(mes,"/hunger - просмотр сытости\n");
					strcat(mes,"/radio - включить радио SAN\n");
					strcat(mes,"/quitjob - уволиться с работы\n");
					strcat(mes,"/repaydebt - вернуть долг мафии\n");
					strcat(mes,"/mydebts - инфо о задолженности и крыше\n");
					strcat(mes,"/accept debt - дать согласие на крышу\n");
					strcat(mes,"/pay - передать деньги игроку\n");
					strcat(mes,"/number - узнать номер телефона\n");
					strcat(mes,"/gps - путеводитель\n");
					strcat(mes,"/fstyle - установить стиль боевого искусства\n");
					strcat(mes,"/hi - пожать руку\n");
					strcat(mes,"/licenses - список лицензий\n");
					strcat(mes,"/showpass - показать паспорт\n");
					strcat(mes,"/showlicenses - показать лицензии игроку\n");
					strcat(mes,"/showkarta - показать медицинскую карту\n");
					strcat(mes,"/showbilet - показать военный билет\n");
					strcat(mes,"/showskill - показать игроку навыки владения оружием\n");
					strcat(mes,"/spawnchange - изменить место спавна\n");
					strcat(mes,"/phone - открыть меню телефона\n");
					strcat(mes,"/ad - подать объявление\n");
					strcat(mes,"/sex - предложить заняться сексом\n");
					strcat(mes,"/accsex - согласиться заняться сексом\n");
					strcat(mes,"/dissex - отказаться от секса\n");
					strcat(mes,"/iznas - изнасиловать игрока\n");
					strcat(mes,"/kiss - поцеловать игрока\n");
					strcat(mes,"/escape - совершить побег из тюрьмы\n");
					strcat(mes,"/getekey - кол-во ключей\n");
					strcat(mes,"/id - узнать ид игрока\n");
					strcat(mes,"/anim - меню с аннимациями\n");
					strcat(mes,"/healme - использовать аптечку\n");
					strcat(mes,"/myskill - просмотр скиллов\n");
					strcat(mes,"/time - узнать время\n");
					strcat(mes,"/pdd - правила дорожного движения\n");
					strcat(mes,"/clist - клист меню\n");
					strcat(mes,"/dir - справочник\n");
					strcat(mes,"/unarmour - снять броню");
					SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
				}
			case 1:
				{
					new mes[436];
					strcat(mes,"/fontsize - команда для изменения размера чата\n");
					strcat(mes,"/pagesize [10-20] - устанавливает кол-во строк в чате\n");
					strcat(mes,"/headmove - Вкл./Выкл. поворот головы скина по направлению камеры\n");
					strcat(mes,"/timestamp - Вкл./Выкл. показ времени в чате\n");
					strcat(mes,"/dl - Вкл./Выкл. информацию о ближайшей машине в виде 3D текста\n");
					strcat(mes,"/quit (/q) - закрывает Вашу игру\n");
					strcat(mes,"/fpslimit [20-90] - устанавливает максимальное кол-во FPS для Вашего клиента\n");
					strcat(mes,"/mem - Отображает сколько использует памяти SA-MP");
					SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
				}
			case 2:
				{
					new mes[247];
					strcat(mes,"/report - вопрос/жалоба в репорт\n");
					strcat(mes,"/do - действие\n");
					strcat(mes,"/me - действие\n");
					strcat(mes,"/s - крикнуть\n");
					strcat(mes,"/sms - отправить смс\n");
					strcat(mes,"/b - OOC чат\n");
					strcat(mes,"/w - говорить шепотом\n");
					strcat(mes,"/r - рация Гос. Организаций\n");
					strcat(mes,"/f - чат бандитских группировок\n");
					strcat(mes,"/d - чат департамента\n");
					strcat(mes,"/gov - гос новости\n");
					strcat(mes,"/m - мегафон");
					SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
				}
			case 3:
				{
				    new mes[165];
				    strcat(mes,"/vig - выдать выговор\n");
					strcat(mes,"/unvig - снять выговор\n");
					strcat(mes,"/invite - принять игрока\n");
					strcat(mes,"/uninvite - уволить игрока\n");
					strcat(mes,"/giverank - повысить игрока\n");
					strcat(mes,"/offuninvite - уволить игрока в Offline");
					strcat(mes,"/setskin - установить скин");
				    SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
				}
			case 4:
				{
				    new mes[1257];
				    strcat(mes,"/setpd - назначить игрока в ПД (Для лидера SAPD)\n");
					strcat(mes,"/setrankpd - повысить/понизить игрока\n");
					strcat(mes,"/pduninvite - уволить игрока с любого PD\n");
					strcat(mes,"/givelicgun - выдать лицензию на оружие (команда доступна в участке SAPD)\n");
					strcat(mes,"/trailer - подцепить транспорт на эвакуатор\n");
					strcat(mes,"/untrailer - отцепить транспорт от эвакуатора\n");
					strcat(mes,"/warehouse - состояние склада\n");
					strcat(mes,"/su - объявить в розыск\n");
					strcat(mes,"/arrest - посадить игрока в КПЗ\n");
					strcat(mes,"/parrest - посадить игрока в тюрьму\n");
					strcat(mes,"/ticket - выписать штраф\n");
					strcat(mes,"/givecopkeys - выдать пропуск в участок\n");
					strcat(mes,"/pull - вытолкать игрока с транспорта\n");
					strcat(mes,"/members - список членов фракции Online\n");
					strcat(mes,"/ram - выломать дверь\n");
					strcat(mes,"/take - отобрать лицензию\n");
					strcat(mes,"/clear - удалить игрока со списка Wanted\n");
					strcat(mes,"/frisk - обыскать игрока\n");
					strcat(mes,"/wanted - список преступников\n");
					strcat(mes,"/takemaska - забрать маску у игрока\n");
					strcat(mes,"/showudost - показать удостоверение\n");
					strcat(mes,"/mdc - бортовой компьютер\n");
					strcat(mes,"/gotome - тащить за собой\n");
					strcat(mes,"/cuff - надеть наручники\n");
					strcat(mes,"/uncuff - снять наручники\n");
					strcat(mes,"/cput - посадить игрока в машину\n");
					strcat(mes,"/ceject - высадить игрока в полицейский участок\n");
					strcat(mes,"/find - поиск игрока на радаре\n");
					strcat(mes,"/warehouse - состояние склада\n\n");
					strcat(mes,"FBI\n\n");
					strcat(mes,"/operation - разрешить проводить спец-операцию\n");
					strcat(mes,"/tracking - прикрепление жучка для прослушки чата фракции\n");
					strcat(mes,"/gasmask - одеть противогаз\n");
					strcat(mes,"/swatmaska - одеть маску (на радаре клист не виден)\n");
					strcat(mes,"/demote - уволить игрока с Гос. Организации");
				    SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
				}
            case 5:
				{
				    new mes[361];
				    strcat(mes,"- Армия | Военно-Морской Флот -\n");
					strcat(mes,"/vertmat - начать развозку деталей на завод К.А.С.С.\n");
					strcat(mes,"/warehouse - состояние склада\n");
					strcat(mes,"/givebilet - выдать военный билет\n");
					strcat(mes,"/takebilet - аннулировать военный билет\n\n");
					strcat(mes,"- Армия | Сухопутные Войска -\n");
					strcat(mes,"/givebilet - выдать военный билет\n");
					strcat(mes,"/takebilet - аннулировать военный билет\n");
					strcat(mes,"/carm - меню доставок материаллов\n");
					strcat(mes,"/warehouse - состояние склада");
				    SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
				}
            case 6:
				{
				    new mes[609];
					strcat(mes,"/fm - включить радио волну\n");
					strcat(mes,"/en или 2 - завести двигатель\n");
					strcat(mes,"/lights - включить/выключить фары\n");
					strcat(mes,"/fill - заправить транспорт\n");
					strcat(mes,"/getfuel - купить канистру с бензином на заправке\n");
					strcat(mes,"/fillcar - дозаправить транспорт с канистры\n");
					strcat(mes,"/lock1 - открыть/закрыть транспорт с 1 слота\n");
					strcat(mes,"/lock2 - открыть/закрыть транспорт с 2 слота\n");
					strcat(mes,"/lock3 - открыть/закрыть арендованный транспорт\n");
					strcat(mes,"/carpass - личный транспорт\n");
					strcat(mes,"/showcarpass - показать документы на транспорт игроку\n");
					strcat(mes,"/changecar1 - продать личный транспорт с 1 слота\n");
					strcat(mes,"/changecar2 - продать личный транспорт с 2 слота\n");
					strcat(mes,"/eject - выкинуть игрока с транспорта\n");
					strcat(mes,"/unrent - отказатся от аренды транспорта");
				    SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
				}
            case 7:
				{
				    new mes[1103];
				    strcat(mes,"/gstats - территории под контролем\n");
					strcat(mes,"/seit - засеять марихуану на плантации №1\n");
					strcat(mes,"/posev - засеять марихуану на плантации №2\n");
					strcat(mes,"/narkoput - положить мешок на склад плантации\n");
					strcat(mes,"/narkocena - установить цену наркотиков за грамм на плантации №1\n");
					strcat(mes,"/drugscena - установить цену наркотиков за грамм на плантации №2\n");
					strcat(mes,"/oborot - снять деньги с наркопритона №1\n");
					strcat(mes,"/plantmoney - снять деньги с наркопритона №2\n");
					strcat(mes,"/buydrugs - купить наркотики\n");
					strcat(mes,"/selldrugs - продать наркотики\n");
					strcat(mes,"/capture - начать войну за территорию\n");
					strcat(mes,"/usedrugs - использовать наркотики\n");
					strcat(mes,"/gunlist - список оружия\n");
					strcat(mes,"/sellgun - продать оружие\n");
					strcat(mes,"/unloading - разгрузка материалов с фургона\n");
					strcat(mes,"/ginfo - общак Grove Street Gang\n");
					strcat(mes,"/vinfo - общак Vagos Gang\n");
					strcat(mes,"/ainfo - общак Aztecas Gang\n");
					strcat(mes,"/rinfo - общак Rifa Gang\n");
					strcat(mes,"/binfo - общак Ballas Gang\n");
					strcat(mes,"/sklad - открыть/закрыть склад\n");
					strcat(mes,"/materials get - взять ящик материаллов на складе СВ\n");
					strcat(mes,"/materials put - положить ящик материаллов в фургон банды\n");
					strcat(mes,"/warehouse - состояние склада\n");
					strcat(mes,"/robhouse - ограбить дома в гетто (только на территории своей банды)\n");
					strcat(mes,"/sellzone - продать территорию\n");
					strcat(mes,"/switchskin - снять форму с военного\n");
					strcat(mes,"/maska - одеть маску\n");
					strcat(mes,"/maskaoff - снять маску");
				    SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
    			}
            case 8:
				{
				    new mes[431];
				    strcat(mes,"/buydrugs - купить наркотики\n");
					strcat(mes,"/mafiawar - начать войну за бизнес\n");
					strcat(mes,"/bizlist - список бизнесов под контролем\n");
					strcat(mes,"/getgun - взять оружие со склада\n");
					strcat(mes,"/sklad - открыть/закрыть склад\n");
					strcat(mes,"/mafiabalance - баланс денег в банке мафии\n");
					strcat(mes,"/mafiawithdraw - снять деньги с банка мафии\n");
					strcat(mes,"/mafiabank - положить деньги в банк мафии\n");
					strcat(mes,"/warehouse - состояние склада\n");
					strcat(mes,"/tie - связать игрока\n");
					strcat(mes,"/untie - развязать игрока\n");
					strcat(mes,"/debtors - должники Online\n");
					strcat(mes,"/setdebt - предложить крышу");
				    SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
    			}
            case 9:
				{
				    new mes[404];
				    strcat(mes,"/grab - ограбить банкомат (грабить можно раз в час)\n");
					strcat(mes,"/buydrugs - купить наркотики\n");
					strcat(mes,"/selldrugs - продать наркотики\n");
					strcat(mes,"/sellmats - продать материаллы\n");
					strcat(mes,"/minfo - общак байкеров\n");
					strcat(mes,"/sklad - открыть/закрыть склад\n");
					strcat(mes,"/weapons get - взять материаллы с фургона завода К.А.С.С.\n");
					strcat(mes,"/weapons put - положить материаллы в фургон байкеров\n");
					strcat(mes,"/warehouse - состояние склада\n");
					strcat(mes,"/switchskin - снять форму с военного");
					SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
				}
            case 10:
				{
				    new mes[661];
				    strcat(mes,"- Таксист -\n");
					strcat(mes,"/fare - начать работу таксиста\n");
					strcat(mes,"/taxiskill - просмотр скилла таксиста\n");
					strcat(mes,"/accept taxi - принять вызов\n\n");
					strcat(mes,"- Механик -\n");
					strcat(mes,"/mcontract - заключить контракт с заправкой\n");
					strcat(mes,"/refill - заправить машину игроку\n");
					strcat(mes,"/repair - отремонтировать транспорт игроку\n\n");
					strcat(mes,"- Развозчик топлива -\n");
					strcat(mes,"/flist - список заказов для развозчиков топлива\n\n");
					strcat(mes,"- Развозчик продуктов -\n");
					strcat(mes,"/plist - список заказов для развозчиков продуктов\n\n");
					strcat(mes,"- Тренер -\n");
					strcat(mes,"/fgstyle - начать урок по изучению боевого искусства\n\n");
					strcat(mes,"- Мусорщик -\n");
					strcat(mes,"/loadmus - Загрузить контейнер с мусором\n");
                    strcat(mes,"/unloadmus - Разгрузить контейнер с мусором");
				    SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
  				}
            case 11:
				{
				    new mes[256];
				    strcat(mes,"/givenewskeys - выдать пропуск в офис\n");
					strcat(mes,"/news - говорить в прямом эфире\n");
					strcat(mes,"/npanel - панель SAN\n");
					strcat(mes,"/live - взять интервью у игрока\n");
					strcat(mes,"/newsbank - кол-во денег в банке SAN\n");
					strcat(mes,"/newswithdraw - снять деньги с банка SAN\n");
					strcat(mes,"/yes - принять звонок в студию\n");
					strcat(mes,"/off - завершить звонок");
				    SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
    			}
            case 12:
				{
				    new mes[159];
				    strcat(mes,"/givepassport - выдать паспорт игроку (Доступно для секретаря)\n");
					strcat(mes,"/givepravkeys - выдать пропуск в офис правительства\n");
					strcat(mes,"/demote - уволить игрока с Гос. Организации");
				    SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
				}
            case 13:
				{
				    new mes[88];
				    strcat(mes,"/warehouse - состояние склада\n");
					strcat(mes,"/zguncarm - развозка оружия\n");
					strcat(mes,"/zfuelcarm - развозка топлива");
				    SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
				}
            case 14:
				{
				    new mes[312];
				    strcat(mes,"/setmed - выбрать больницу в котором будет работать медик\n");
					strcat(mes,"/setrankmed - повысить/понизить медика любого мед. центра\n");
					strcat(mes,"/meduninvite - уволить игрока с любого Мед.Центра\n");
					strcat(mes,"/healaddict - провести сеанс от наркозависимости\n");
					strcat(mes,"/givekarta - выдать мед. карту\n");
					strcat(mes,"/sethealcost - установить цену за лечение\n");
					strcat(mes,"/heal - вылечить игрока");
				    SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
				}
            case 15:
				{
				    new mes[247];
				    strcat(mes,"/buybiz - купить бизнес\n");
					strcat(mes,"/bpanel - меню бизнеса (Работает только возле бизнеса)\n");
					strcat(mes,"/getbizstats - просмотр статистики любого бизнеса\n");
					strcat(mes,"/bizstats - просмотр статистики своего бизнеса\n");
					strcat(mes,"/changebiz - продать бизнес игроку");
				    SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
    			}
            case 16:
				{
				    new mes[182];
				    strcat(mes,"/buyhouse - купить дом\n");
					strcat(mes,"/findhouse - поиск дома по ид\n");
					strcat(mes,"/home - обозначить свой дом на карте\n");
					strcat(mes,"/hpanel - меню дома\n");
					strcat(mes,"/fixcar - заспавнить транспорт к дому\n");
					strcat(mes,"/changehouse - продать дом игроку");
				    SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
				}
            case 17:
				{
				    new mes[122];
				    strcat(mes,"/buynomer - купить номер\n");
					strcat(mes,"/opanel - меню номера\n");
					strcat(mes,"/dostcar - заспавнить транспорт на парковку у отеля\n");
					strcat(mes,"/exit - выйти с номера");
				    SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
				}
            case 18:
				{
				    new mes[131];
					strcat(mes,"BRONZE VIP: /togphone - выключить телефон\n");
					strcat(mes,"SILVER VIP: /admins - список админов онлайн\n");
					strcat(mes,"GOLD VIP: /vipuninvite - уволиться с фракции");
				    SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
    			}
            case 19:
				{
				    new mes[99];
				    strcat(mes,"/divorce - развестись\n");
					strcat(mes,"/propose - предложить руку и сердце\n");
					strcat(mes,"/accept marriage - принять руку и сердце");
				    SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
				}
            case 20:
				{
				    new mes[241];
				    strcat(mes,"/buymast - купить автомастерскую\n");
					strcat(mes,"/getmaststats - просмотр статистики любой автомастерской\n");
					strcat(mes,"/mpanel - меню автомастерской (Работает только возле автомастерской)\n");
					strcat(mes,"/maststats - просмотр статистики своей автомастерской");
				    SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
				}
            case 21:
				{
				    new mes[99];
				    strcat(mes,"/k - чат семьи\n");
					strcat(mes,"/family - меню семьи\n");
					strcat(mes,"/finvite - принять в семью\n");
					strcat(mes,"/funinvite - выгнать игрока с семьи");
				    SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
				}
            case 22:
				{
				    new mes[138];
				    strcat(mes,"/croupier [playerid (-1 для увольнения)] [слот (0 - 4)] - назначить/уволить игрока крупье\n");
					strcat(mes,"/twist - крутить рулетку\n");
					strcat(mes,"/dice - играть в кости");
				    SPDEx(playerid,10223,0,"Команды",mes,"Ок","");
				}
			}
		}
    case 10223: SPDEx(playerid,10224,2,"Команды сервера","1. Персонаж\n2. SA:MP\n3. Чат\n4. Лидер\n5. SAPD | FBI\n6. Армии\n7. Транспорт\n8. Бандитские группировки\n9. Мафия\n10. Байкеры\n11. Работа\n12. SAN\n13. Правительство\n14. Завод К.А.С.С\n15. Медики\n16. Бизнес\n17. Дом\n18. Отель\n19. VIP игрок\n20. Свадьба\n21. Автомастерские\n22. Семья\n23. Казино","Выбор","Отмена");
	case 2934:
		{
			if(response)
			{
				if(!strlen(inputtext)) return SPDEx(playerid,2934,1, "Админ авторизация", "Введите Ваш персональный пароль\n\nПароль должен состоять из латинских букв и цифр\n	размером от 6 до 15 символов", "Вход", "Отмена");
				if(!strcmp(PI[playerid][pDostup],inputtext, false))
				{
					if(PI[playerid][pBSA] <= 0) return true;
					SetPVarInt(playerid, "dostup", 1);
					format(YCMDstr,168, "[Admin's Team] %s[%d] успешно авторизовался как Администратор %d уровня. Пожелаем ему удачи!",Name(playerid),playerid,PI[playerid][pBSA]);
					ABroadCast(COLOR_REDD, YCMDstr, 1);
				}
				return true;
			}
		}
    case 2935:
		{
			if(response)
			{
				if(!strlen(inputtext)) return SPDEx(playerid,2935,1, "Админ авторизация", "Введите Ваш персональный пароль\n\nПароль должен состоять из латинских букв и цифр\n	размером от 6 до 15 символов", "Вход", "Отмена");
				if(!strcmp(PI[playerid][pDostup],inputtext, false))
				{
					if(PI[playerid][pBSA] <= 0) return true;
					SetPVarInt(playerid, "dostup", 1);
					SCM(playerid, COLOR_REDD,"[Тихий ALogin] Вы успешно авторизовались администратором.");
				}
				return true;
			}
		}
	case 9000:
		{
			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1480.0386,-1741.9548,13.5469);
							FL[playerid][TelePos][0] = 0.0;FL[playerid][TelePos][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1480.0386,-1741.9548,13.5469);
						}
						SetPlayerAttachedObject(playerid,2,18680,2,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000);
						PlayerPlaySound(playerid, 1039, 0.0, 0.0, 0.0);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PI[playerid][pInt] = 0;
						return true;
					}
				case 1:
					{
						if(GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1243.2313,-1795.8333,13.5995);
							FL[playerid][TelePos][0] = 0.0;FL[playerid][TelePos][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1243.2313,-1795.8333,13.5995);
						}
						SetPlayerAttachedObject(playerid,2,18680,2,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000);
						PlayerPlaySound(playerid, 1039, 0.0, 0.0, 0.0);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PI[playerid][pInt] = 0;
						return true;
					}
				case 2:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, -2035.5458,-92.9801,35.1641);
							FL[playerid][TelePos][0] = 0.0;FL[playerid][TelePos][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, -2035.5458,-92.9801,35.1641);
						}
						SetPlayerAttachedObject(playerid,2,18680,2,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000);
						PlayerPlaySound(playerid, 1039, 0.0, 0.0, 0.0);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PI[playerid][pInt] = 0;
						return true;
					}
				case 3:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1491.3676,-1316.3450,23.6172);
							FL[playerid][TelePos][0] = 0.0;FL[playerid][TelePos][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1491.3676,-1316.3450,23.6172);
						}
						SetPlayerAttachedObject(playerid,2,18680,2,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000);
						PlayerPlaySound(playerid, 1039, 0.0, 0.0, 0.0);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PI[playerid][pInt] = 0;
						return true;
					}
				case 4:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1469.4376,-874.0409,56.3510);
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 1469.4376,-874.0409,56.3510);
						}
						SetPlayerAttachedObject(playerid,2,18680,2,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000);
						PlayerPlaySound(playerid, 1039, 0.0, 0.0, 0.0);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PI[playerid][pInt] = 0;
						return true;
					}
				case 5:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2314.1890,-1742.2195,13.3828);
							FL[playerid][TelePos][0] = 0.0;FL[playerid][TelePos][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 2314.1890,-1742.2195,13.3828);
						}
						SetPlayerAttachedObject(playerid,2,18680,2,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000);
						PlayerPlaySound(playerid, 1039, 0.0, 0.0, 0.0);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PI[playerid][pInt] = 0;
						return true;
					}
				case 6:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, -1669.7722,-2242.6602,34.6502);
							FL[playerid][TelePos][0] = 0.0;FL[playerid][TelePos][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, -1669.7722,-2242.6602,34.6502);
						}
						SetPlayerAttachedObject(playerid,2,18680,2,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000);
						PlayerPlaySound(playerid, 1039, 0.0, 0.0, 0.0);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PI[playerid][pInt] = 0;
					}
				case 7:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2189.0139,-2267.1272,13.5016);
							FL[playerid][TelePos][0] = 0.0;FL[playerid][TelePos][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 2189.0139,-2267.1272,13.5016);
						}
						SetPlayerAttachedObject(playerid,2,18680,2,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000);
						PlayerPlaySound(playerid, 1039, 0.0, 0.0, 0.0);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PI[playerid][pInt] = 0;
						return true;
					}
				case 8:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 455.6382,-1501.6306,31.0420);
							FL[playerid][TelePos][0] = 0.0;FL[playerid][TelePos][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 455.6382,-1501.6306,31.0420);
						}
						SetPlayerAttachedObject(playerid,2,18680,2,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000);
						PlayerPlaySound(playerid, 1039, 0.0, 0.0, 0.0);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PI[playerid][pInt] = 0;
						return true;
					}
				case 9:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2547.5933,-1293.9767,1035.0366);
							FL[playerid][TelePos][0] = 0.0;FL[playerid][TelePos][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 2547.5933,-1293.9767,1035.0366);
						}
						SetPlayerAttachedObject(playerid,2,18680,2,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000);
						PlayerPlaySound(playerid, 1039, 0.0, 0.0, 0.0);
						SetPlayerInterior(playerid,2);
						SetPlayerVirtualWorld(playerid,1);
						PI[playerid][pInt] = 0;
						return true;
					}
				case 10:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, -10101.43066, 5360.71240, 6796.00000);
							FL[playerid][TelePos][0] = 0.0;FL[playerid][TelePos][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, -10101.43066, 5360.71240, 6796.00000);
						}
						SetPlayerAttachedObject(playerid,2,18680,2,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000);
						PlayerPlaySound(playerid, 1039, 0.0, 0.0, 0.0);
						SetPlayerVirtualWorld(playerid,74);
						PI[playerid][pInt] = 0;
						return true;
					}
				case 11:
					{
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2085.2603,934.5216,9.6728);
							FL[playerid][TelePos][0] = 0.0;FL[playerid][TelePos][1] = 0.0;
							return true;
						}
						else
						{
							SetPlayerPos(playerid, 2085.2603,934.5216,9.6728);
						}
						SetPlayerAttachedObject(playerid,2,18680,2,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000);
						PlayerPlaySound(playerid, 1039, 0.0, 0.0, 0.0);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						PI[playerid][pInt] = 0;
						return true;
					}
				}
			}
			else
			{
				return true;
			}
		}
	}
	while(strfind(inputtext, "%s",true)!=-1)
	{
		strdel(inputtext,strfind(inputtext, "%s",true),strfind(inputtext, "%s",true)+2);
	}
	return true;
}
public OnPlayerDisconnect(playerid, reason)
{
	new idx = cvector_find(players,playerid);
	if(idx != -1) cvector_remove(players,idx);
	if(PI[playerid][pLogin] == 1) strmid(ExitInfo[playerid][ExitName],Name(playerid), 0, strlen(Name(playerid)), 32), ExitInfo[playerid][ExitTime] = GetTickCount();
	for(new idx2=0, i=0; idx2<cvector_size(players); idx2++)
	{
		i = cvector_get(players, idx2);
		if(GetPlayerState(i) == PLAYER_STATE_SPECTATING && gSpectateID[i] == playerid)
		{
			StopSpectate(i);
			SetPlayerHealthAC(i, 100);
			GameTextForPlayer(i,"~w~RECON ~r~ OFF~n~ ~r~PLAYER DISCONNECT", 5000, 3);
		}
	}
	if(GetPVarInt(playerid,"walk_goto_me_player"))
	{
		walk_goto_me[GetPVarInt(playerid,"walk_goto_me_player") - 1] = 0;
		ClearAnimations(GetPVarInt(playerid,"walk_goto_me_player") - 1, true);
		DeletePVar(playerid,"walk_goto_me_player");
	}
	if(walk_goto_me[playerid] > 0)
	{
		foreach(Player,i)
		{
			if(GetPVarInt(i,"walk_goto_me_player")-1 == playerid)
			{
				DeletePVar(i,"walk_goto_me_player");
				break;
			}
		}
	}
	if(GetPVarInt(playerid,"UseFind") == 1)
	{
	    KillTimer(SetFind[playerid]);
	    DisablePlayerCheckpoint(playerid);
	    DeletePVar(playerid, "UseFind");
	}
	if(tipsterplayer == playerid)
	{
		SendRadioMessage(2,COLOR_ISPOLZUY ,"Игрок покинул район. Прослушивание отключено");
		tipsteron = -1;
		tipsterplayer = -1;
	}
	if(FL[playerid][creatcar] != -1)
	{
		DestroyVehicle(FL[playerid][creatcar]);
		FL[playerid][creatcar] = -1;
	}
	if(GetPVarInt(playerid, "loading_job") >= 1)
	{
		for(new i; i < 10; i++) DestroyObject(object_job[playerid][i]);
		DeletePVar(playerid,"loading_job");
		DisablePlayerRaceCheckpoint(playerid);
	}
	if(GetPVarInt(playerid, "RStol"))
	{
		if(PlayRoulette[GetPVarInt(playerid,"RStol")] == false) PI[playerid][pCash] += GetPVarInt(playerid,"RStavka");
		DestroyObject(GetPVarInt(playerid,"RObj"));
		DeletePVar(playerid,"RObj");
		DeletePVar(playerid,"RStavka");
		DeletePVar(playerid,"RStol");
		DeletePVar(playerid,"RX");
		DeletePVar(playerid,"RY");
		DeletePVar(playerid,"RZ");
		DeletePVar(playerid,"RXONE");
		DeletePVar(playerid,"RYONE");
		DeletePVar(playerid,"RZONE");
		DeletePVar(playerid,"RNumber");
		DeletePVar(playerid,"RNumbers");
		DeletePVar(playerid,"RNumber_");
		TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);
	}
	PlayerTextDrawDestroy(playerid,RouletteText[playerid]);
	if(PI[playerid][pPhousekey] != 999)
	{
		PI[playerid][pProcents] = PI[playerid][pProcents];
		PI[playerid][pFuelcar] = Fuell[caridhouse[playerid][0]];
		PI[playerid][pProcents2] = PI[playerid][pProcents2];
		PI[playerid][pFuelcar1] = Fuell[caridhouse[playerid][1]];
		if(caridhouse[playerid][0] != 0) { DestroyVehicle(caridhouse[playerid][0]); caridhouse[playerid][0] = 0; }
		if(caridhouse[playerid][1] != 0) { DestroyVehicle(caridhouse[playerid][1]); caridhouse[playerid][1] = 0; }
	}
	if(PI[playerid][pPhotelkey] != 999)
	{
		PI[playerid][pProcents] = PI[playerid][pProcents];
		PI[playerid][pFuelcar] = Fuell[caridhouse[playerid][0]];
		PI[playerid][pProcents2] = PI[playerid][pProcents2];
		PI[playerid][pFuelcar1] = Fuell[caridhouse[playerid][1]];
		if(caridhouse[playerid][0] != 0) { DestroyVehicle(caridhouse[playerid][0]); caridhouse[playerid][0] = 0; }
		if(caridhouse[playerid][1] != 0) { DestroyVehicle(caridhouse[playerid][1]); caridhouse[playerid][1] = 0; }
	}
	if(caridhouse[playerid][2] != 0) { DestroyVehicle(caridhouse[playerid][2]); caridhouse[playerid][2] = 0; }
	mysql_format(DATABASE, YCMDstr, 75, "UPDATE `accounts` SET pLogin = '0' WHERE Name = '%s'",Name(playerid));
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	PI[playerid][pForma] = FormaFrac[playerid];
	if(player_family[playerid])family_info[player_family[playerid]][f_online]--;
	if(GetPVarInt(playerid, "ProductID") > 0)
	{
		DisablePlayerRaceCheckpoint(playerid);
		Delete3DTextLabel(ProductInfo[GetPVarInt(playerid, "ProductID")][pText3D]);
		ProductInfo[GetPVarInt(playerid, "ProductID")][pStatus] = false;
	}
	if(GetPVarInt(playerid, "FuelID") > 0)
	{
		DisablePlayerRaceCheckpoint(playerid);
		Delete3DTextLabel(FuelInfo[GetPVarInt(playerid, "FuelID")][pText3D]);
		FuelInfo[GetPVarInt(playerid, "FuelID")][pStatus] = false;
		DeletePVar(playerid, "FuelID");
	}
	for(new i; i < 5; i++) PlayerTextDrawDestroy(playerid, Bizwar[playerid][i]);
	for(new i; i < 6; i++) PlayerTextDrawDestroy(playerid, Capture[playerid][i]);
	if(PI[playerid][pJob] == 2 && FL[playerid][gcontract] == 1) Delete3DTextLabel(Meh3d[GetPlayerVehicleID(playerid)]), FL[playerid][gcontract] = 0;
	new sendername[MAX_PLAYER_NAME];
	new year, month,day;
	zips[playerid] = 0;
	zips1[playerid] = 0;
	AntiFakeKill[playerid] = false;
	KillTimer(Timerkk[playerid]);
	ResetCarInfo(playerid);
	FormaFrac[playerid] = 0;
	getdate(year, month, day);
	new hour, minute, second;
	gettime(hour, minute, second);
	GetPlayerName(playerid, sendername, sizeof(sendername));
	if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
	mysql_format(DATABASE,YCMDstr, 135, "UPDATE `accounts` SET pVhoddata = '%i', pVhodMes = '%i', pVhodchas = '%i', pVhodminute = '%i' WHERE Name = '%s'",day,month,hour,minute,Name(playerid));
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	robh[playerid] = false;
	Flood[playerid] = 0;
	for(new l; l < sizeof(stroki); l++) { TextDrawHideForPlayer(playerid, stroki[l]); }
	DeletePVar(playerid, "Atisper");
	arendtime[playerid] = 0;
	FL[playerid][SelectCharPlace] = 0;
	slotUsed{playerid} = 0;
	PI[playerid][pSiteSkin] = GetPlayerSkin(playerid);
	if(GetPVarInt(playerid, "ArendKey") != -1)
	{
		new v = GetPVarInt(playerid, "ArendKey");
		if(ArendInfo[v][aPlayerID] == playerid)
		{
			new lockstatus = gCarLock[ArendInfo[v][aID]];
			switch (lockstatus)
			{
			case 0:
				{
					UnLockCar(ArendInfo[v][aID]);
					IsLocked[ArendInfo[v][aID]] = 0;
				}
			case 1:
				{
					UnLockCar(ArendInfo[v][aID]);
					IsLocked[ArendInfo[v][aID]] = 0;
				}
			default:
				{
					SCM(playerid, COLOR_RED, "Ошибка!");
				}
			}
			ArendInfo[v][aPlayerID] = INVALID_PLAYER_ID;
			SetVehicleToRespawn(ArendInfo[v][aID]);
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && GetPVarInt(playerid,"TaxiDuty"))
	{
		Delete3DTextLabel(JobText3D[GetPVarInt(playerid,"rentcar_job")]);
		DeletePVar(playerid,"TaxiDuty");
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && GetPVarInt(playerid,"TaxiDuty")) Delete3DTextLabel(JobText3D[GetPlayerVehicleID(playerid)]);
	if(PI[playerid][pBSA] > 0 && GetPVarInt(playerid,"dostup") == 1)
	{
		DeletePVar(playerid, "dostup");
		format(YCMDstr, 256, "Администратор %s[%d], %d уровня, вышел из игры.",Name(playerid),playerid,PI[playerid][pBSA]);
		ABroadCast(0xEAC700FF, YCMDstr, 1);
	}
	FL[playerid][enterbiz] = 0;
	PlayerTextDrawDestroy(playerid,FL[playerid][Speed]);
	PlayerTextDrawDestroy(playerid,FL[playerid][SpeedShow]);
	PlayerTextDrawDestroy(playerid,FL[playerid][FuelShow]);
	PlayerTextDrawDestroy(playerid,FL[playerid][StatusShow]);
	PlayerTextDrawDestroy(playerid,FL[playerid][KMShow]);
	PlayerTextDrawDestroy(playerid,FL[playerid][FillShow]);
	PlayerTextDrawDestroy(playerid,FL[playerid][CarHPShow]);
	PlayerTextDrawDestroy(playerid,FL[playerid][IndCarHP]);
	for(new i; i < 5; i++) TextDrawHideForPlayer(playerid, AutoColor[i]);
	sellerbiz[playerid] = INVALID_PLAYER_ID;
	bizcost[playerid] = 0;
	forwho[playerid] = INVALID_PLAYER_ID;
	keys[playerid] = 0;
	SetPlayerSkills(playerid);
	FL[playerid][SelectCharPlace] = 0;
	woodcutter[playerid] = false;
	if(PI[playerid][pWantedLevel] != 0 && PlayerCuffed[playerid] >= 1)
	{
		PI[playerid][pJailed] = 1;
		PI[playerid][pMestoJail] = 4;
		PI[playerid][pJailTime] = 3600;
		PI[playerid][pWantedLevel] = 0;
		new playername[MAX_PLAYER_NAME];
		GetPlayerName(playerid,playername,sizeof(playername));
		format(YCMDstr,100,"Игрок %s вышел из игры в наручниках. При входе будет посажен на 60 минут!",playername);
		SCMToAll(COLOR_LIGHTRED, YCMDstr);
	}
	if(FL[playerid][PlayerTied] >= 1)
	{
		PI[playerid][pJailed] = 1;
		PI[playerid][pMestoJail] = 4;
		PI[playerid][pJailTime] = 3600;
		PI[playerid][pWantedLevel] = 0;
		new playername[MAX_PLAYER_NAME];
		GetPlayerName(playerid,playername,sizeof(playername));
		format(YCMDstr,100,"Игрок %s вышел из игры связанным. При входе будет посажен на 60 минут!",playername);
		SCMToAll(COLOR_LIGHTRED, YCMDstr);
	}
	if(Tazed[playerid] == 1)
	{
		PI[playerid][pJailed] = 1;
		PI[playerid][pMestoJail] = 4;
		PI[playerid][pJailTime] = 3600;
		PI[playerid][pWantedLevel] = 0;
		new playername[MAX_PLAYER_NAME];
		GetPlayerName(playerid,playername,sizeof(playername));
		format(YCMDstr,100,"Игрок %s вышел из игры в тазере. При входе будет посажен на 60 минут!",playername);
		SCMToAll(COLOR_LIGHTRED, YCMDstr);
	}
	if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
	{
		if(IsPlayerConnected(TransportDriver[playerid]))
		{
			TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
			TransportCost[TransportDriver[playerid]] = 0;
			format(YCMDstr, 256, "~g~+%d",TransportCost[playerid]);
			GameTextForPlayer(TransportDriver[playerid], YCMDstr, 5000, 1);
		}
	}
	SaveMySQL(0, playerid);
	ResetAccount(playerid);
	return true;
}

stock ResetAccount(playerid)
{
	for(new pInfo:i; i < pInfo; i ++) PI[playerid][i] = 0;
	return true;
}

publics: SetPlayerWeapons(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		for(new x = 1; x < 11; x++) _GiveGun(playerid, PI[playerid][pGuns][x], PI[playerid][pAmmos][x]);
		if(PI[playerid][pJailed] < 1)
		{
			if(FormaFrac[playerid] == 5) _GiveGun(playerid, 2, 1);
			if(FormaFrac[playerid] == 6) _GiveGun(playerid, 8, 1);
			if(FormaFrac[playerid] == 9) _GiveGun(playerid, 43, 30);
			if(FormaFrac[playerid] == 10) _GiveGun(playerid, 3, 1);
			if(PI[playerid][pMember] == 12) _GiveGun(playerid, 5, 1);
			if(PI[playerid][pMember] == 13) _GiveGun(playerid, 5, 1);
			if(FormaFrac[playerid] == 14) _GiveGun(playerid, 1, 1);
			if(PI[playerid][pMember] == 15) _GiveGun(playerid, 5, 1);
			if(PI[playerid][pMember] == 17) _GiveGun(playerid, 5, 1);
			if(PI[playerid][pMember] == 18) _GiveGun(playerid, 5, 1);
		}
	}
	return true;
}
publics: SetPlayerSpawn(playerid)
{
	if(PI[playerid][pLogin] == 0 && GetPVarInt(playerid,"Register") == 0)
	{
		SCM(playerid, COLOR_WHITE, "Необходимо авторизоваться!");
		print("KICK #3");
		Kick(playerid);
		return true;
	}
	if(PI[playerid][pBSA] < 1)
	{
		if(PI[playerid][pTut] == 1)
		{
			if(GetPVarInt(playerid, "SobCheck") > 1)
			{
			    PlayerTextDrawShow(playerid, sobeit[playerid][0]);
				PlayerTextDrawShow(playerid, sobeit[playerid][1]);
			    PI[playerid][pNarcoLomka] = 0;
			    SetPVarInt(playerid, "startaddiction", 0);
			    TogglePlayerControllable(playerid, 0);
				SetTimerEx("AntiSobeit", 4000, false, "i",playerid);
			}
		}
	}
	if(PI[playerid][pHP] > 100) PI[playerid][pHP] = 100;
	SetPlayerHealthAC(playerid, PI[playerid][pHP]);
	FormaFrac[playerid] = PI[playerid][pForma];
	DollahScoreUpdate(playerid);
	SetPlayerToTeamColor(playerid);
	if(IsPlayerConnected(playerid))
	{
		if(GetPVarInt(playerid,"walk_goto_me_player"))
		{
			walk_goto_me[GetPVarInt(playerid,"walk_goto_me_player") - 1] = 0;
			ClearAnimations(GetPVarInt(playerid,"walk_goto_me_player") - 1, true);
			DeletePVar(playerid,"walk_goto_me_player");
		}
		if(walk_goto_me[playerid] > 0)
		{
			foreach(Player,i)
			{
				if(GetPVarInt(i,"walk_goto_me_player")-1 == playerid)
				{
					DeletePVar(i,"walk_goto_me_player");
					break;
				}
			}
			walk_goto_me[playerid] = 0;
			ClearAnimations(playerid, true);
		}
		if(PI[playerid][pWantedLevel] >= 1) SetPlayerWantedLevel(playerid,PI[playerid][pWantedLevel]);
		new house = PI[playerid][pPhousekey];
		new hotel = PI[playerid][pPhotelkey];
		SetCameraBehindPlayer(playerid);
		if(PI[playerid][pMember] >= 1 && PI[playerid][pMember] <= 4)
		{
			if(PI[playerid][pMember] == 3 && PI[playerid][pRank] <= 2) { FormaFrac[playerid] = 3; }
			if(FormaFrac[playerid] >= 1 && FormaFrac[playerid] <= 4) SetPlayerSkin(playerid, PI[playerid][pModel]);
		}
		if(PI[playerid][pMember] == 8)
		{
			if(FormaFrac[playerid] == 8) SetPlayerSkin(playerid, PI[playerid][pModel]);
		}
		if(PI[playerid][pMember] >= 9 && PI[playerid][pMember] <= 11)
		{
			if(FormaFrac[playerid] >= 9 && FormaFrac[playerid] <= 11) SetPlayerSkin(playerid, PI[playerid][pModel]);
		}
		if(PI[playerid][pMember] >= 19 && PI[playerid][pMember] <= 22)
		{
			if(PI[playerid][pMember] == 19 && PI[playerid][pRank] <= 2) FormaFrac[playerid] = 19;
			if(FormaFrac[playerid] >= 19 && FormaFrac[playerid] <= 22) SetPlayerSkin(playerid, PI[playerid][pModel]);
		}
		if(PI[playerid][pMember] >= 5 && PI[playerid][pMember] <= 6)
		{
			FormaFrac[playerid] = 35;
			SetPlayerSkin(playerid, PI[playerid][pModel]);
		}
		if(PI[playerid][pMember] >= 12 && PI[playerid][pMember] <= 15)
		{
			FormaFrac[playerid] = 35;
			SetPlayerSkin(playerid, PI[playerid][pModel]);
		}
		if(PI[playerid][pMember] >= 17 && PI[playerid][pMember] <= 18)
		{
			FormaFrac[playerid] = 35;
			SetPlayerSkin(playerid, PI[playerid][pModel]);
		}
		if(PI[playerid][pMember] == 23)
		{
			FormaFrac[playerid] = 35;
			SetPlayerSkin(playerid, PI[playerid][pModel]);
		}
		if(PI[playerid][pMember] == 24)
		{
			if(FormaFrac[playerid] == 24) SetPlayerSkin(playerid, PI[playerid][pModel]);
		}
		if(PI[playerid][pMember] == 25)
		{
			FormaFrac[playerid] = 35;
			SetPlayerSkin(playerid, PI[playerid][pModel]);
		}
		if(FormaFrac[playerid] == 0)
		{
			SetPlayerSkin(playerid, PI[playerid][pChar][PI[playerid][pViborChar]]);
			SetPlayerColor(playerid, TEAM_HIT_COLOR);
		}
		if(PI[playerid][pJailed] == 1)
		{
			if(PI[playerid][pMestoJail] == 1)// LSPD
			{
				new randsetpos = random(2);
				switch(randsetpos)
				{
				case 0: SetPlayerPos(playerid,-1645.8052,697.2281,1001.8049);
				case 1: SetPlayerPos(playerid,-1653.4485,697.7252,1001.8049);
				}
				SetPlayerInterior(playerid, 6);
				SetPlayerVirtualWorld(playerid, 1);
				return true;
			}
			if(PI[playerid][pMestoJail] == 2)// SFPD
			{
				new randsetpos = random(2);
				switch(randsetpos)
				{
				case 0: SetPlayerPos(playerid,-1645.8052,697.2281,1001.8049);
				case 1: SetPlayerPos(playerid,-1653.4485,697.7252,1001.8049);
				}
				SetPlayerInterior(playerid, 6);
				SetPlayerVirtualWorld(playerid, 2);
				return true;
			}
			if(PI[playerid][pMestoJail] == 3)// LVPD
			{
				new randsetpos = random(2);
				switch(randsetpos)
				{
				case 0: SetPlayerPos(playerid,-1645.8052,697.2281,1001.8049);
				case 1: SetPlayerPos(playerid,-1653.4485,697.7252,1001.8049);
				}
				SetPlayerInterior(playerid, 6);
				SetPlayerVirtualWorld(playerid,122);
				return true;
			}
			if(PI[playerid][pMestoJail] == 4)// ДеМорган
			{
				SetPlayerVirtualWorld(playerid,74);
				SetPlayerPos(playerid,-10101.6230,5360.6963,6797.0000);
				SetPlayerFacingAngle(playerid, 1.0000);
				return true;
			}
			if(PI[playerid][pMestoJail] == 5)// Федеральная тюрьма
			{
				new randsetpos = random(8);
				switch(randsetpos)
				{
				case 0:SetPlayerPos(playerid,2534.1277,-1283.4602,1031.4219);
				case 1:SetPlayerPos(playerid,2543.5046,-1283.6619,1031.4219);
				case 2:SetPlayerPos(playerid,2551.9973,-1283.7877,1031.4219);
				case 3:SetPlayerPos(playerid,2561.0088,-1283.7921,1031.4219);
				case 4:SetPlayerPos(playerid,2560.7585,-1304.2552,1031.4219);
				case 5:SetPlayerPos(playerid,2550.6531,-1304.2961,1031.4219);
				case 6:SetPlayerPos(playerid,2543.2322,-1304.1515,1031.4219);
				case 7:SetPlayerPos(playerid,2534.2549,-1303.8744,1031.4219);
				}
				SetPlayerInterior(playerid, 2);
				SetPlayerVirtualWorld(playerid, 1);
				SetPlayerSkin(playerid,268);
				return true;
			}
		}
		if(PI[playerid][pHospLS] == 1)
		{
            new randsetpos = random(4);
			switch(randsetpos)
			{
			case 0:SetPlayerPos(playerid,-1036.0007,703.2525,1507.3469);
			case 1:SetPlayerPos(playerid,-1036.0389,686.7617,1507.3469);
			case 2:SetPlayerPos(playerid,-1024.6227,703.0742,1507.3469);
			case 3:SetPlayerPos(playerid,-1024.0840,687.5841,1507.3469);
			}
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid,2);
			SetPlayerHealthAC(playerid,10);
			SCM(playerid,COLOR_WHITE,"Вы были ранены и направлены в больницу города Лос Сантос.");
			SCM(playerid,COLOR_WHITE,"Вам прийдется пройти курс лечения или вылечиться у медика.");
			return true;
		}
		if(PI[playerid][pHospSF] == 1)
		{
			new randsetpos = random(4);
			switch(randsetpos)
			{
			case 0:SetPlayerPos(playerid,-1036.0007,703.2525,1507.3469);
			case 1:SetPlayerPos(playerid,-1036.0389,686.7617,1507.3469);
			case 2:SetPlayerPos(playerid,-1024.6227,703.0742,1507.3469);
			case 3:SetPlayerPos(playerid,-1024.0840,687.5841,1507.3469);
			}
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid,1);
			SetPlayerHealthAC(playerid,10);
			SCM(playerid,COLOR_WHITE,"Вы были ранены и направлены в больницу города Сан Фиерро.");
			SCM(playerid,COLOR_WHITE,"Вам прийдется пройти курс лечения или вылечиться у медика.");
			return true;
		}
		if(house != 999)
		{
			if(PI[playerid][pSPChange] == 1)
			{
				SetPlayerInterior(playerid,House[house][hInt]);
				SetPlayerPos(playerid, House[house][hExitx], House[house][hExity],House[house][hExitz]);
				PI[playerid][pLocal] = house;
				PI[playerid][pInt] = House[house][hInt];
				SetPlayerVirtualWorld(playerid, house+50);
				return true;
			}
		}
		if(hotel != 999)
		{
			if(PI[playerid][pSPChange] == 1)
			{
				SetPVarInt(playerid, "podeezd", HotelInfo[PI[playerid][pPhotelkey]][virtmir]);
				SetPlayerInterior(playerid,HotelInfo[hotel][oInt]);
				SetPlayerPos(playerid, HotelInfo[hotel][oExitx], HotelInfo[hotel][oExity],HotelInfo[hotel][oExitz]);
				PI[playerid][pLocal] = hotel;
				PI[playerid][pInt] = HotelInfo[hotel][oInt];
				SetPlayerVirtualWorld(playerid, hotel+9999);
				return true;
			}
		}
		if(PI[playerid][pSPChange] == 0)
		{
			if(FormaFrac[playerid] >= 1)
			{
				switch(PI[playerid][pMember])
				{
				case 1:
					{
						SetPlayerInterior(playerid, 6);
						SetPlayerPos(playerid, -1634.4880,688.8188,1008.7360);
						SetPlayerFacingAngle(playerid, 87.4074);
						PI[playerid][pInt] = 6;
						SetPlayerVirtualWorld(playerid, 1);
						return true;
					}
				case 2:
					{
						SetPlayerInterior(playerid, 6);
						SetPlayerPos(playerid, 314.2129,-181.1432,1137.1060);
						SetPlayerFacingAngle(playerid, 174.3579);
						PI[playerid][pInt] = 130;
						SetPlayerVirtualWorld(playerid, 130);
						return true;
					}
				case 3:
					{
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid, -1346.2050,492.3983,11.2027);
						PI[playerid][pInt] = 0;
						SetPlayerVirtualWorld(playerid, 0);
						return true;
					}
				case 4:
					{
						SetPlayerInterior(playerid, 1);
						SetPlayerVirtualWorld(playerid, 1);
						SetPlayerPos(playerid, -1349.0890,350.2685,1561.6119);
						SetPlayerFacingAngle(playerid, 90.0000);
						return true;
					}
				case 8:
					{
						SetPlayerInterior(playerid, 1);
						SetPlayerVirtualWorld(playerid, 2);
						SetPlayerPos(playerid, -1349.0890,350.2685,1561.6119);
						SetPlayerFacingAngle(playerid, 106.1102);
						PI[playerid][pInt] = 1;
						return true;
					}
				case 9:
					{
						SetPlayerInterior(playerid, 1);
						SetPlayerPos(playerid, 2310.4158,-82.5194,1049.6899);
						SetPlayerFacingAngle(playerid, 357.5899);
						SetPlayerVirtualWorld(playerid, 2);
						gNews[playerid] = 0;
						return true;
					}
				case 10:
					{
						SetPlayerInterior(playerid, 10);
						SetPlayerPos(playerid, -1634.4880,688.8188,1008.7360);
						SetPlayerFacingAngle(playerid, 87.4074);
						PI[playerid][pInt] = 10;
						SetPlayerVirtualWorld(playerid, 2);
						return true;
					}
				case 19:
					{
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid, 241.7503,1852.6790,8.7578);
						PI[playerid][pInt] = 0;
						SetPlayerVirtualWorld(playerid, 0);
						return true;
					}
				case 21:
					{
						SetPlayerInterior(playerid, 3);
						SetPlayerPos(playerid, -1634.4880,688.8188,1008.7360);
						SetPlayerFacingAngle(playerid, 87.4074);
						PI[playerid][pInt] = 122;
						SetPlayerVirtualWorld(playerid, 122);
						return true;
					}
				case 22:
					{
						SetPlayerInterior(playerid, 1);
						SetPlayerPos(playerid, -489.0927,325.1039,2004.5859);
						SetPlayerFacingAngle(playerid, 88.4973);
						PI[playerid][pInt] = 1;
						SetPlayerVirtualWorld(playerid, 1);
						return true;
					}
				case 24:
					{
						SetPlayerInterior(playerid, 7);
						SetPlayerPos(playerid, 312.4787,-137.4542,1004.0625);
						SetPlayerFacingAngle(playerid, 268.5518);
						PI[playerid][pInt] = 7;
						SetPlayerVirtualWorld(playerid, 1);
						return true;
					}
				}
			}
			switch(PI[playerid][pMember])
			{
			case 5:
				{
					SetPlayerInterior(playerid, 5);
					SetPlayerPos(playerid, 1265.7104,-793.7453,1084.0078);
					SetPlayerSkin(playerid, PI[playerid][pModel]);
					PI[playerid][pInt] = 5;
					SetPlayerVirtualWorld(playerid, 2);
					return true;
				}
			case 6:
				{
					SetPlayerInterior(playerid, 5);
					SetPlayerPos(playerid, 1265.7104,-793.7453,1084.0078);
					SetPlayerSkin(playerid, PI[playerid][pModel]);
					PI[playerid][pInt] = 5;
					SetPlayerVirtualWorld(playerid, 0);
					return true;
				}
			case 12:
				{
					SetPlayerPos(playerid, -2160.4319,638.8307,1057.5861);
					SetPlayerSkin(playerid, PI[playerid][pModel]);
					SetPlayerFacingAngle(playerid, 270.0);
					SetPlayerInterior(playerid,1);
					SetPlayerVirtualWorld(playerid,11);
					return true;
				}
			case 13:
				{
					SetPlayerInterior(playerid, 4);
					SetPlayerVirtualWorld(playerid, 75);
					SetPlayerFacingAngle(playerid, 263.0497);
					SetPlayerPos(playerid, 303.63,309.25,999.15);
					SetPlayerSkin(playerid, PI[playerid][pModel]);
					PI[playerid][pInt] = 0;
					return true;
				}
			case 14:
				{
					SetPlayerInterior(playerid, 5);
					SetPlayerPos(playerid, 1265.7104,-793.7453,1084.0078);
					SetPlayerSkin(playerid, PI[playerid][pModel]);
					PI[playerid][pInt] = 5;
					SetPlayerVirtualWorld(playerid, 1);
					return true;
				}
			case 15:
				{
					SetPlayerInterior(playerid, 3);
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerPos(playerid,  2496.012939,-1708.923217,1014.742187);
					SetPlayerSkin(playerid, PI[playerid][pModel]);
					SetPlayerFacingAngle(playerid, 0.191693);
					PI[playerid][pInt] = 3;
					SetPlayerVirtualWorld(playerid, 1);
					return true;
				}
			case 17:
				{
					SetPlayerFacingAngle(playerid, 90.4248);
					SetPlayerPos(playerid, -49.7558,1400.3553,1084.4297);
					SetPlayerSkin(playerid, PI[playerid][pModel]);
					SetPlayerInterior(playerid,8);
					SetPlayerVirtualWorld(playerid, 36);
					PI[playerid][pInt] = 0;
					return true;
				}
			case 18:
				{
					SetPlayerInterior(playerid, 8);
					SetPlayerVirtualWorld(playerid, 63);
					SetPlayerPos(playerid, 2808.9631,-1169.0806,1025.5703);
					SetPlayerSkin(playerid, PI[playerid][pModel]);
					PI[playerid][pInt] = 0;
					return true;
				}
			case 23:
				{
					SetPlayerInterior(playerid, 11);
					SetPlayerPos(playerid, 502.0296,-70.4563,998.7578);
					SetPlayerSkin(playerid, PI[playerid][pModel]);
					SetPlayerFacingAngle(playerid, 268.5518);
					PI[playerid][pInt] = 132;
					SetPlayerVirtualWorld(playerid, 132);
					return true;
				}
			}
		}
		if(PI[playerid][pLevel] >= 1 && PI[playerid][pLevel] <= 4)
		{
			if(FL[playerid][spawnEx] == -1) FL[playerid][spawnEx] = random(3);
			SetPlayerPos(playerid,mestospawna[FL[playerid][spawnEx]][0],mestospawna[FL[playerid][spawnEx]][1],mestospawna[FL[playerid][spawnEx]][2]);
			SetPlayerFacingAngle(playerid, mestospawna[FL[playerid][spawnEx]][3]);
			SetPlayerInterior(playerid,0);
			PI[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			return true;
		}
		else if(PI[playerid][pLevel] >= 5 && PI[playerid][pLevel] <= 999)
		{
			if(FL[playerid][spawnEx] == -1) FL[playerid][spawnEx] = random(3);
			SetPlayerPos(playerid,mestospawnaa[FL[playerid][spawnEx]][0],mestospawnaa[FL[playerid][spawnEx]][1],mestospawnaa[FL[playerid][spawnEx]][2]);
			SetPlayerFacingAngle(playerid, mestospawnaa[FL[playerid][spawnEx]][3]);
			SetPlayerInterior(playerid,0);
			PI[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			return true;
		}
	}
	return true;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	SetPlayerHealthAC(playerid, FL[playerid][PlayerHealth]);
	if(FormaFrac[playerid] > 0) PI[playerid][pForma] = FormaFrac[playerid];
	else PI[playerid][pForma] = 0;
	if(PI[playerid][pJob] == 2)
	{
		if(FL[playerid][gcontract] == 1)
		{
			Delete3DTextLabel(Meh3d[GetPlayerVehicleID(playerid)]);
			FL[playerid][gcontract] = 0;
		}
	}
	if(playerid != INVALID_PLAYER_ID)
	{
	    new GunPlayer = GetPlayerWeapon(playerid);
	    if(GunPlayer != 4 || GunPlayer != 35 || GunPlayer != 36 || GunPlayer != 37 || GunPlayer != 39 || GunPlayer != 16 || GunPlayer != 18 || GunPlayer != 38 || GunPlayer != 44 || GunPlayer != 45)
		{
			if(GetPVarInt(playerid,"ACGun") != 1)
		    {
				new GunIDEx = GetPlayerWeapon(playerid);
				new GunAmmoEx = GetPlayerAmmo(playerid);
				if(GunIDEx > 0 && GunAmmoEx != 0)
				{
					new f = MAX_DROP_GUN+1;
					for(new a = 0; a < MAX_DROP_GUN; a++)
					{
						if(GunInfo[a][ObjPos][0] == 0.0)
						{
							f = a;
							break;
						}
					}
					RemovePlayerWeapon(playerid, GunIDEx);
					GunInfo[f][ObjData][0] = GunIDEx;
					GunInfo[f][ObjData][1] = GunAmmoEx;
					GunInfo[f][Virtual] = GetPlayerVirtualWorld(playerid);
					GunInfo[f][Interior] = GetPlayerInterior(playerid);
					GetPlayerPos(playerid, GunInfo[f][ObjPos][0], GunInfo[f][ObjPos][1], GunInfo[f][ObjPos][2]);
					SetPlayerVirtualWorld(playerid, GunInfo[f][Virtual]);
					GunInfo[f][ObjID] = CreateDynamicObject(GunObjects[GunIDEx], GunInfo[f][ObjPos][0], GunInfo[f][ObjPos][1], GunInfo[f][ObjPos][2]-1, 93.7, 120.0, 120.0 , GunInfo[f][Virtual], GunInfo[f][Interior], -1, 800);
					format(YCMDstr, 128, "Нажмите < C > чтобы подобрать", YCMDstr);
					GunInfo[f][Label] = CreateDynamic3DTextLabel(YCMDstr, 0xFFFF00AA, GunInfo[f][ObjPos][0], GunInfo[f][ObjPos][1], GunInfo[f][ObjPos][2], 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, GunInfo[f][Virtual], GunInfo[f][Interior], -1, 100.0);
				}
			}
		}
	}
	if(GetPVarInt(playerid,"walk_goto_me_player"))
	{
		walk_goto_me[GetPVarInt(playerid,"walk_goto_me_player") - 1] = 0;
		ClearAnimations(GetPVarInt(playerid,"walk_goto_me_player") - 1, true);
		DeletePVar(playerid,"walk_goto_me_player");
	}
	if(walk_goto_me[playerid] > 0)
	{
		foreach(Player,i)
		{
			if(GetPVarInt(i,"walk_goto_me_player")-1 == playerid)
			{
				DeletePVar(i,"walk_goto_me_player");
				break;
			}
		}
		walk_goto_me[playerid] = 0;
		ClearAnimations(playerid, true);
	}
	DeletePVar(playerid, "ACGun");
	SetPVarInt(playerid, "PlayerInAFK", -2);
	if(GetPVarInt(playerid, "ProductID") > 0)
	{
		DisablePlayerRaceCheckpoint(playerid);
		Delete3DTextLabel(ProductInfo[GetPVarInt(playerid, "ProductID")][pText3D]);
		ProductInfo[GetPVarInt(playerid, "ProductID")][pStatus] = false;
	}
	if(GetPVarInt(playerid, "FuelID") > 0)
	{
		DisablePlayerRaceCheckpoint(playerid);
		Delete3DTextLabel(FuelInfo[GetPVarInt(playerid, "FuelID")][pText3D]);
		FuelInfo[GetPVarInt(playerid, "FuelID")][pStatus] = false;
		DeletePVar(playerid, "FuelID");
	}
	if(GetPVarInt(playerid, "RStol"))
	{
		if(PlayRoulette[GetPVarInt(playerid,"RStol")] == false) PI[playerid][pCash] += GetPVarInt(playerid,"RStavka");
		DestroyObject(GetPVarInt(playerid,"RObj"));
		DeletePVar(playerid,"RObj");
		DeletePVar(playerid,"RStavka");
		DeletePVar(playerid,"RStol");
		DeletePVar(playerid,"RX");
		DeletePVar(playerid,"RY");
		DeletePVar(playerid,"RZ");
		DeletePVar(playerid,"RXONE");
		DeletePVar(playerid,"RYONE");
		DeletePVar(playerid,"RZONE");
		DeletePVar(playerid,"RNumber");
		DeletePVar(playerid,"RNumbers");
		DeletePVar(playerid,"RNumber_");
		PlayerTextDrawHide(playerid,RouletteText[playerid]);
		TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);
	}
	new name[MAX_PLAYER_NAME];
	_ResetGun(playerid);
	FL[playerid][Operation] = false;
	zips[playerid] = 0;
	zips1[playerid] = 0;
	mesh[playerid] = 999;
	KillTimer(Timerkk[playerid]);
	Works[playerid] = false;
	usemesh[playerid] = 0;
	PI[playerid][pMaska] = 0;
	SetPVarInt(playerid, "forma", 0);
	SetPVarInt(playerid, "CasinoForma", 0);
	TimerBill[playerid] = 0;
	FL[playerid][enterbiz] = 0;
	gunmute[playerid] = gettime()+5;
	if(PlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257))// LS
	{
	    PI[playerid][pHospLS] = 1;
	}
	if(PlayerToKvadrat(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770))// SF
	{
	    PI[playerid][pHospSF] = 1;
	}
	if(IsAMedic(playerid) || IsAArm(playerid) || IsACop(playerid) || IsAGang(playerid) || IsAMafia(playerid) || IsAAnew(playerid) || PI[playerid][pMember] == 24) { PI[playerid][pHospLS] = 0; PI[playerid][pHospSF] = 0;}
	udar[playerid] = 0;
	RemovePlayerAttachedObject(playerid,1);
	RemovePlayerAttachedObject(playerid,2);
	RemovePlayerAttachedObject(playerid,3);
	RemovePlayerAttachedObject(playerid,4);
	RemovePlayerAttachedObject(playerid,0);
	FL[playerid][usemats] = 0;
	Tazed[playerid] = 0;
	PlayerCuffed[playerid] = 0;
	if(PI[playerid][pJob] == 7) PI[playerid][pJob] = 0;
	new weaponid;
	new gunname[25];
	GetWeaponName(weaponid, gunname, sizeof(gunname));
	PI[playerid][pDrugtime] = 0;
	SetPVarInt(playerid, "proverkaforma", 0);
	new Float:px,Float:py,Float:pz;
	GetPlayerName(playerid, name, sizeof(name));
	PI[playerid][pLocal] = 255;
	if(IsPlayerInAnyVehicle(playerid)) RemovePlayerFromVehicleAC(playerid);
	GetPlayerPos(playerid, px, py, pz);
	DisablePlayerCheckpoint(playerid);
	keys[playerid] = 0;
	FL[playerid][LiveOffer] = 999;
	TalkingLive[playerid] = 999;
	FL[playerid][Tel] = 999;
	if(BizWarTime > gettime())
	{
		if(IsAMafia(killerid) && IsAMafia(playerid) && killerid != INVALID_PLAYER_ID)
		{
			if(PI[killerid][pMember] != PI[playerid][pMember])
			{
				if(PI[killerid][pMember] == MZInfo[bNapad] || PI[killerid][pMember] == MZInfo[bFrakVlad])
				{
					if(PI[playerid][pMember] == MZInfo[bNapad] || PI[playerid][pMember] == MZInfo[bFrakVlad])
					{
						switch(MZInfo[bMesto])
						{
						case 1:
							if(PlayerToKvadrat(killerid,300.755706, 2402.644531, 468.755706, 2580.644531) && PlayerToKvadrat(playerid,300.755706, 2402.644531, 468.755706, 2580.644531))
							{
								MZInfo[bCountDead][PI[killerid][pMember]]++;
							}
						case 2:
							if(PlayerToKvadrat(killerid,-855.6808,1891.0676,-519.0121,2128.4995) && PlayerToKvadrat(playerid,-855.6808,1891.0676,-519.0121,2128.4995))
							{
								MZInfo[bCountDead][PI[killerid][pMember]]++;
							}
						case 3:
							if(PlayerToKvadrat(killerid,275.881378, 797.211608, 443.881378, 973.211608) && PlayerToKvadrat(playerid,275.881378, 797.211608, 443.881378, 973.211608))
							{
								MZInfo[bCountDead][PI[killerid][pMember]]++;
							}
						}
					}
				}
			}
		}
	}
	if(!AntiFakeKill[playerid])
	{
		SCM(playerid,COLOR_LIGHTRED,"Вы были кикнуты по подозрению в читерстве [#14]");
		print("KICK #14");
		Kick(playerid);
		return true;
	}
	AntiFakeKill[playerid] = false;
	if(killerid != INVALID_PLAYER_ID && killerid != 65535) PI[killerid][pKills] += 1;
	if(killerid != INVALID_PLAYER_ID)
	{
		if(PI[killerid][pJailed] == 0)
		{
			if(IsANonf(killerid) || PI[killerid][pMember] == 24 || GetPVarInt(killerid,"CaptureOn") == 1 || BizWarTime > gettime()) { }
			else
			{
				PI[killerid][pWantedLevel] += 1;
				PI[killerid][pZakonp] -= 2;
				SCM(killerid,COLOR_RED,"Вы получили 1 уровень розыска.");
				SetPlayerWantedLevel(killerid, PI[killerid][pWantedLevel]);
			}
		}
	}
	if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid, 3);
	ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
	narkot[playerid] = 0;
	if(gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
	{
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
	}
	new caller = Mobile[playerid];
	if(caller != 999)
	{
		if(caller < 999)
		{
			SCM(caller,  COLOR_GRAD2, "Связь с абонентом оборвалась.");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = 999;
		}
		Mobile[playerid] = 999;
		CellTime[playerid] = 0;
	}
	if(reason == 50)
	{
		if(!IsAPlane(GetPlayerVehicleID(killerid)))
		{
			SCM(killerid, COLOR_LIGHTRED, "[Anti DB] Вы задавили игрока машиной. Вас посадили на 15 минут в тюрьму.");
			PI[killerid][pJailed] = 1;
			PI[killerid][pMestoJail] = 4;
			PI[killerid][pJailTime] = 900;
			SetPlayerPos(killerid,-10101.6230,5360.6963,6797.0000);
			SetPlayerVirtualWorld(killerid,74);
			_ResetGun(killerid);
			PlayerPlaySound(killerid, 31202, 0.0, 0.0, 0.0);
		}
	}
	if(IsAGang(killerid) || IsAmbike(killerid) && killerid != INVALID_PLAYER_ID)
	{
		if(GetPVarInt(killerid,"forma") == 0 && PlayerToKvadrat(killerid,-49.979476, 1695.982177, 414.020507, 2175.982177) || PlayerToKvadrat(killerid,-1544.921875, 324.21875, -1199.21875, 541.015625) || PlayerToKvadrat(killerid,1080.078125, 1291.015625, 1193.359375, 1404.296875)) return SCM(killerid, COLOR_BLUE, "Здесь нельзя снять армейскую форму");
		{
			if(PI[playerid][pMember] == 3 && FormaFrac[playerid] != 0 || PI[playerid][pLeader] == 3 && FormaFrac[playerid] != 0 || PI[playerid][pMember] == 19 && FormaFrac[playerid] != 0 || PI[playerid][pLeader] == 19 && FormaFrac[playerid] != 0)
			{
				if(PI[playerid][pMember] == 3 && GetPVarInt(killerid,"forma") == 0)
				{
					SetPVarInt(killerid, "forma", 1);
					SCM(playerid,  COLOR_YELLOW, "Вы потеряли армейскую форму");
					SCM(killerid,  COLOR_YELLOW, "Вы cняли с армейца форму, введите /switchskin, чтобы переодеться");
					PI[killerid][pZakonp] -= 2;
					SpawnPlayer(playerid);
				}
				if(PI[playerid][pMember] == 19 && GetPVarInt(killerid,"forma") == 0)
				{
					SetPVarInt(killerid, "forma", 1);
					SCM(playerid,  COLOR_YELLOW, "Вы потеряли армейскую форму");
					SCM(killerid,  COLOR_YELLOW2, "Вы cняли с армейца форму, введите /switchskin, чтобы переодеться");
					PI[killerid][pZakonp] -= 2;
					SpawnPlayer(playerid);
				}
			}
		}
	}
	if(IsAGang(killerid) && killerid != INVALID_PLAYER_ID)
	{
		if(IsACop(playerid) && FormaFrac[playerid] != 0)
		{
			if(PI[playerid][pMember] != 2 || PI[playerid][pLeader] != 2)
			{
				for(new i = 0; i < sizeof(GZInfo); i++)
				{
					if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
					{
						keys[killerid] += 1;
						SCM(playerid,  COLOR_YELLOW, "Вы потеряли ключи от камеры!");
						SCM(killerid,  COLOR_YELLOW, "Вы забрали у полицейского ключи от камеры!");
						PI[killerid][pZakonp] -= 2;
					}
				}
			}
		}
	}
	if(IsAGang(killerid) && IsAGang(playerid) && killerid != INVALID_PLAYER_ID)
	{
		for(new i; i < sizeof(GZInfo); i++)
		{
			if(GZInfo[i][ZoneOnBattle] == 1)
			{
				if(GetPlayerInterior(playerid) == 0)
				{
					if(PI[killerid][pMember] != PI[playerid][pMember])
					{
						if(PI[killerid][pMember] == GZInfo[i][gNapad] || PI[killerid][pMember] == GZInfo[i][gFrakVlad])
						{
							if(PI[playerid][pMember] == GZInfo[i][gNapad] || PI[playerid][pMember] == GZInfo[i][gFrakVlad])
							{
								CountOnZone[PI[killerid][pMember]]++;
								BestScoreB{killerid} ++;
								break;
							}
						}
					}
				}
			}
		}
	}
	if(gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
	{
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
	}
	if(GetPlayerState(killerid) == 2 && killerid != INVALID_PLAYER_ID && IsACop(playerid) && IsAArm(playerid))
	{
		SCM(killerid, COLOR_LIGHTRED, "Убийство с водительского места запрещено на сервере!");
		PI[killerid][pWantedLevel] += 1;
		PI[killerid][pZakonp] -= 2;
		PI[killerid][pKills] += 1;
		SetPlayerWantedLevel(killerid,PI[playerid][pWantedLevel]);
		SetPlayerCriminal(killerid,"Неизвестный", "Убийство с транспорта");
	}
	DisablePlayerCheckpoint(playerid);
	return true;
}
public OnPlayerSpawn(playerid)
{
	SetPVarInt(playerid,"Anti_Cheats",gettime() + 9);
	TogglePlayerControllable(playerid, 1);
	SetPVarInt(playerid, "PlayerInAFK", 0);
	SetPVarInt(playerid, "mask", 0);
	SetPlayerHealthAC(playerid,100);
	AntiFakeKill[playerid] = true;
	Tazed[playerid] = 0;
	PlayerPlaySound(playerid, 1186, 0.0, 0.0, 0.0);
	gunmute[playerid] = gettime()+5;
	StopAudioStreamForPlayer(playerid);
	new LevScore;
	DollahScoreUpdate(playerid);
	LevScore = PI[playerid][pLevel];
	if(PI[playerid][pSex] > 0 && PI[playerid][pTut] == 0) return ChosePlayerSkin(playerid);
	if(PI[playerid][pLogin] == 0 && GetPVarInt(playerid,"Register") == 0) return SCM(playerid, COLOR_WHITE, "Необходимо авторизоваться!"), print("KICK #4"), Kick(playerid);
	if(PI[playerid][pMember] > 0) SetPlayerSkin(playerid, PI[playerid][pModel]);
	if(PI[playerid][pMember] <= 0) SetPlayerSkin(playerid, PI[playerid][pChar][PI[playerid][pViborChar]]), PI[playerid][pForma] = 0;
	SetPlayerScore(playerid, LevScore);
	SetPlayerSkills(playerid);
	PreloadAllAnimLibs(playerid);
	SetPlayerSpawn(playerid);
	InitLockDoors(playerid);
	return true;
}

stock PreloadAnimLib(playerid, animlib[]) return ApplyAnimation(playerid, animlib, "null", 0.0, 0, 0, 0, 1, 1);

stock PreloadAllAnimLibs(playerid)
{
	PreloadAnimLib(playerid,"AIRPORT");
	PreloadAnimLib(playerid,"Attractors");
	PreloadAnimLib(playerid,"BAR");
	PreloadAnimLib(playerid,"BASEBALL");
	PreloadAnimLib(playerid,"BD_FIRE");
	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"benchpress");
	PreloadAnimLib(playerid,"BF_injection");
	PreloadAnimLib(playerid,"BIKED");
	PreloadAnimLib(playerid,"BIKEH");
	PreloadAnimLib(playerid,"BIKELEAP");
	PreloadAnimLib(playerid,"BIKES");
	PreloadAnimLib(playerid,"BIKEV");
	PreloadAnimLib(playerid,"BIKE_DBZ");
	PreloadAnimLib(playerid,"BLOWJOBZ");
	PreloadAnimLib(playerid,"BMX");
	PreloadAnimLib(playerid,"BOMBER");
	PreloadAnimLib(playerid,"BOX");
	PreloadAnimLib(playerid,"BSKTBALL");
	PreloadAnimLib(playerid,"BUDDY");
	PreloadAnimLib(playerid,"BUS");
	PreloadAnimLib(playerid,"CAMERA");
	PreloadAnimLib(playerid,"CAR");
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"CAR_CHAT");
	PreloadAnimLib(playerid,"CASINO");
	PreloadAnimLib(playerid,"CHAINSAW");
	PreloadAnimLib(playerid,"CHOPPA");
	PreloadAnimLib(playerid,"CLOTHES");
	PreloadAnimLib(playerid,"COACH");
	PreloadAnimLib(playerid,"COLT45");
	PreloadAnimLib(playerid,"COP_AMBIENT");
	PreloadAnimLib(playerid,"COP_DVBYZ");
	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"CRIB");
	PreloadAnimLib(playerid,"DAM_JUMP");
	PreloadAnimLib(playerid,"DANCING");
	PreloadAnimLib(playerid,"DEALER");
	PreloadAnimLib(playerid,"DILDO");
	PreloadAnimLib(playerid,"DODGE");
	PreloadAnimLib(playerid,"DOZER");
	PreloadAnimLib(playerid,"DRIVEBYS");
	PreloadAnimLib(playerid,"FAT");
	PreloadAnimLib(playerid,"FIGHT_B");
	PreloadAnimLib(playerid,"FIGHT_C");
	PreloadAnimLib(playerid,"FIGHT_D");
	PreloadAnimLib(playerid,"FIGHT_E");
	PreloadAnimLib(playerid,"FINALE");
	PreloadAnimLib(playerid,"FINALE2");
	PreloadAnimLib(playerid,"FLAME");
	PreloadAnimLib(playerid,"Flowers");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"Freeweights");
	PreloadAnimLib(playerid,"GANGS");
	PreloadAnimLib(playerid,"GHANDS");
	PreloadAnimLib(playerid,"GHETTO_DB");
	PreloadAnimLib(playerid,"goggles");
	PreloadAnimLib(playerid,"GRAFFITI");
	PreloadAnimLib(playerid,"GRAVEYARD");
	PreloadAnimLib(playerid,"GRENADE");
	PreloadAnimLib(playerid,"GYMNASIUM");
	PreloadAnimLib(playerid,"HAIRCUTS");
	PreloadAnimLib(playerid,"HEIST9");
	PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"INT_OFFICE");
	PreloadAnimLib(playerid,"INT_SHOP");
	PreloadAnimLib(playerid,"JST_BUISNESS");
	PreloadAnimLib(playerid,"KART");
	PreloadAnimLib(playerid,"KISSING");
	PreloadAnimLib(playerid,"KNIFE");
	PreloadAnimLib(playerid,"LAPDAN1");
	PreloadAnimLib(playerid,"LAPDAN2");
	PreloadAnimLib(playerid,"LAPDAN3");
	PreloadAnimLib(playerid,"LOWRIDER");
	PreloadAnimLib(playerid,"MD_CHASE");
	PreloadAnimLib(playerid,"MD_END");
	PreloadAnimLib(playerid,"MEDIC");
	PreloadAnimLib(playerid,"MISC");
	PreloadAnimLib(playerid,"MTB");
	PreloadAnimLib(playerid,"MUSCULAR");
	PreloadAnimLib(playerid,"NEVADA");
	PreloadAnimLib(playerid,"ON_LOOKERS");
	PreloadAnimLib(playerid,"OTB");
	PreloadAnimLib(playerid,"PARACHUTE");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"PAULNMAC");
	PreloadAnimLib(playerid,"ped");
	PreloadAnimLib(playerid,"PLAYER_DVBYS");
	PreloadAnimLib(playerid,"PLAYIDLES");
	PreloadAnimLib(playerid,"POLICE");
	PreloadAnimLib(playerid,"POOL");
	PreloadAnimLib(playerid,"POOR");
	PreloadAnimLib(playerid,"PYTHON");
	PreloadAnimLib(playerid,"QUAD");
	PreloadAnimLib(playerid,"QUAD_DBZ");
	PreloadAnimLib(playerid,"RAPPING");
	PreloadAnimLib(playerid,"RIFLE");
	PreloadAnimLib(playerid,"RIOT");
	PreloadAnimLib(playerid,"ROB_BANK");
	PreloadAnimLib(playerid,"ROCKET");
	PreloadAnimLib(playerid,"RUSTLER");
	PreloadAnimLib(playerid,"RYDER");
	PreloadAnimLib(playerid,"SCRATCHING");
	PreloadAnimLib(playerid,"SHAMAL");
	PreloadAnimLib(playerid,"SHOP");
	PreloadAnimLib(playerid,"SHOTGUN");
	PreloadAnimLib(playerid,"SILENCED");
	PreloadAnimLib(playerid,"SKATE");
	PreloadAnimLib(playerid,"SMOKING");
	PreloadAnimLib(playerid,"SNIPER");
	PreloadAnimLib(playerid,"SPRAYCAN");
	PreloadAnimLib(playerid,"STRIP");
	PreloadAnimLib(playerid,"SUNBATHE");
	PreloadAnimLib(playerid,"SWAT");
	PreloadAnimLib(playerid,"SWEET");
	PreloadAnimLib(playerid,"SWIM");
	PreloadAnimLib(playerid,"SWORD");
	PreloadAnimLib(playerid,"TANK");
	PreloadAnimLib(playerid,"TATTOOS");
	PreloadAnimLib(playerid,"TEC");
	PreloadAnimLib(playerid,"TRAIN");
	PreloadAnimLib(playerid,"TRUCK");
	PreloadAnimLib(playerid,"UZI");
	PreloadAnimLib(playerid,"VAN");
	PreloadAnimLib(playerid,"VENDING");
	PreloadAnimLib(playerid,"VORTEX");
	PreloadAnimLib(playerid,"WAYFARER");
	PreloadAnimLib(playerid,"WEAPONS");
	PreloadAnimLib(playerid,"WUZI");
	return 1;
}
public OnPlayerEnterCheckpoint(playerid)
{
	if(GetPVarInt(playerid, "Gjob") == 1)
	{
		if(FracBank[0][fzmatbi] >= 499999) return SCM(playerid,COLOR_GRAD1, "Склад завода К.А.С.С. забит ящиками с оружием.");
		if(FracBank[0][fzsklad] <= 0) return SCM(playerid,COLOR_GRAD1, "На складе нет деталей для изготовления оружия!");
		ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
		SetPlayerAttachedObject(playerid,3,2969,1,0.075578,0.407083,0.000000,1.248928,97.393852,359.645050,1.000000,1.000000,1.000000);
		SCM(playerid, COLOR_LIGHTGREEN, "Следуйте к Вашему рабочему столу.");
		new gcheck = random(16);
		if(gcheck == 0) SetPlayerCheckpoint(playerid,2560.6904,2834.1042,10.8203,1.5);
		if(gcheck == 1) SetPlayerCheckpoint(playerid,2572.5063,2834.1072,10.8203,1.5);
		if(gcheck == 2) SetPlayerCheckpoint(playerid,2585.5100,2833.0322,10.8203,1.5);
		if(gcheck == 3) SetPlayerCheckpoint(playerid,2600.0784,2833.4512,10.8203,1.5);
		if(gcheck == 4) SetPlayerCheckpoint(playerid,2600.2070,2828.8049,10.8203,1.5);
		if(gcheck == 5) SetPlayerCheckpoint(playerid,2585.6096,2828.4409,10.8203,1.5);
		if(gcheck == 6) SetPlayerCheckpoint(playerid,2572.4697,2829.3533,10.8203,1.5);
		if(gcheck == 7) SetPlayerCheckpoint(playerid,2559.9697,2825.1970,10.8203,1.5);
		if(gcheck == 8) SetPlayerCheckpoint(playerid,2574.0747,2825.1951,10.8203,1.5);
		if(gcheck == 9) SetPlayerCheckpoint(playerid,2587.3645,2824.9595,10.8203,1.5);
		if(gcheck == 10) SetPlayerCheckpoint(playerid,2600.5386,2825.0698,10.8203,1.5);
		if(gcheck == 11) SetPlayerCheckpoint(playerid,2600.4670,2820.2727,10.8203,1.5);
		if(gcheck == 12) SetPlayerCheckpoint(playerid,2587.3484,2820.3687,10.8203,1.5);
		if(gcheck == 13) SetPlayerCheckpoint(playerid,2574.0166,2820.3489,10.8203,1.5);
		if(gcheck == 14) SetPlayerCheckpoint(playerid,2560.4287,2820.3501,10.8203,1.5);
		if(gcheck == 15) SetPlayerCheckpoint(playerid,2560.7161,2829.3472,10.8203,1.5);
		SetPVarInt(playerid, "Gjob",2);
		return 1;
	}
	if(GetPVarInt(playerid, "Gjob") == 2)
	{
		DisablePlayerCheckpoint(playerid);
		RemovePlayerAttachedObject(playerid,3);
		ClearAnimations(playerid);
		ApplyAnimation(playerid, "BUDDY", "buddy_reload", 4.1, 1, 1, 1, 1, 0);
		new gcheck = random(7);
		if(gcheck == 0) SetPlayerAttachedObject(playerid,3,355,14,0.401943,0.011442,0.010348,106.050292,330.509094,3.293162,1.000000,1.000000,1.000000);
		if(gcheck == 1) SetPlayerAttachedObject(playerid,3,349,14,0.401943,0.011442,0.010348,106.050292,330.509094,3.293162,1.000000,1.000000,1.000000);
		if(gcheck == 2) SetPlayerAttachedObject(playerid,3,351,14,0.401943,0.011442,0.010348,106.050292,330.509094,3.293162,1.000000,1.000000,1.000000);
		if(gcheck == 3) SetPlayerAttachedObject(playerid,3,353,14,0.401943,0.011442,0.010348,106.050292,330.509094,3.293162,1.000000,1.000000,1.000000);
		if(gcheck == 4) SetPlayerAttachedObject(playerid,3,356,14,0.401943,0.011442,0.010348,106.050292,330.509094,3.293162,1.000000,1.000000,1.000000);
		if(gcheck == 5) SetPlayerAttachedObject(playerid,3,357,14,0.401943,0.011442,0.010348,106.050292,330.509094,3.293162,1.000000,1.000000,1.000000);
		if(gcheck == 6) SetPlayerAttachedObject(playerid,3,358,14,0.401943,0.011442,0.010348,106.050292,330.509094,3.293162,1.000000,1.000000,1.000000);
		SetTimerEx("Gunjobanim", 7000, false, "i", playerid);
		return 1;
	}
	if(GetPVarInt(playerid, "Gjob") == 3)
	{
		if(FracBank[0][fzmatbi] >= 499999) return SCM(playerid,COLOR_GRAD1, "Склад завода К.А.С.С. забит ящиками с оружием.");
		RemovePlayerAttachedObject(playerid,3);
		ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
		SetPVarInt(playerid,"GUN",GetPVarInt(playerid,"GUN")+1);
		format(YCMDstr,128,"Оружия собрано: {9ACD32}%d {FFFFFF}единиц.",GetPVarInt(playerid,"GUN"));
		SCM(playerid,COLOR_WHITE,YCMDstr);
		FracBank[0][fzmatbi] += 5000;
		FracBank[0][fzsklad] -= 5000;
		SetPVarInt(playerid,"Gjob",1);
		new mcheck = random(4);
		if(mcheck == 0) SetPlayerCheckpoint(playerid,2570.6636,2840.0378,10.8218,1.5);
		if(mcheck == 1) SetPlayerCheckpoint(playerid,2589.0168,2841.2839,10.8218,1.5);
		if(mcheck == 2) SetPlayerCheckpoint(playerid,2588.2476,2814.6499,10.8218,1.5);
		if(mcheck == 3) SetPlayerCheckpoint(playerid,2562.5381,2814.7732,10.8218,1.5);
		return 1;
	}
	if(FL[playerid][CP] == 500)
	{
		SCM(playerid, COLOR_GREEN, "Вы получили премию, в размере: $600");
		PI[playerid][pCash] += 600;
		DisablePlayerCheckpoint(playerid);
		FL[playerid][CP] = 0;
	}
	if(PlayerToPoint(5.0, playerid,-753.9556,-163.4130,67.2436) || PlayerToPoint(5.0, playerid,-735.5740,-132.3860,67.2843) || PlayerToPoint(5.0, playerid,-703.8917,-130.5843,67.5126) || PlayerToPoint(5.0, playerid,-706.0697,-191.3586,66.7527) || PlayerToPoint(5.0, playerid,-742.5851,-191.8586,67.6204) ||
			PlayerToPoint(5.0, playerid,-735.9908,-146.8210,66.9632) || PlayerToPoint(5.0, playerid,-720.1062,-126.0154,68.5032) || PlayerToPoint(5.0, playerid,-693.1256,-178.1568,63.5557) || PlayerToPoint(5.0, playerid,-725.3892,-199.4397,67.5116) || PlayerToPoint(5.0, playerid,-779.2603,-167.4661,66.6257))
	{
		SetPVarInt(playerid, "startjobd", 1);
		SetPVarInt(playerid,"AntiSbivAnim",1);
		TogglePlayerControllable(playerid,0);
		SetTimerEx("AntiSbiv", 9900, false, "i", playerid);
		ApplyAnimation(playerid,"CHAINSAW","WEAPON_csaw",4.1,1,0,0,0,11000);
		SetPlayerAttachedObject(playerid, 1, 341, 6, 0.0000, 0.0000, 0.0000, 0.00, 0.00, 0.00, 1.00, 1.00, 1.00);
		DisablePlayerCheckpoint(playerid);
		timecutt[playerid] = SetTimerEx("TimeDrov",9800,false,"i", playerid);
		RemovePlayerFromVehicle(playerid);
		return 1;
	}
	else if(PlayerToPoint(3.0, playerid,-749.7355,-119.9744,66.0487) && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		SetPVarInt(playerid, "startjobd", 0);
		cuttrands = random(sizeof(randomcutt));
		kgcutt[playerid] += randomcutt[cuttrands][0];
		if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
		if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid,3);
		format(YCMDstr, 128, "{00BFFF}Общее количество древисины %d кг.",kgcutt[playerid]);
		SCM(playerid, -1, YCMDstr);
		format(YCMDstr, 128, "{00BFFF}Вы вырубили %d кг древисины.",randomcutt[cuttrands][0]);
		SCM(playerid, -1, YCMDstr);
		cutter+=randomcutt[cuttrands][0];
		cutt+=randomcutt[cuttrands][0];
		cutt ++;
		new rand = random(sizeof(derevo));
		ApplyAnimation(playerid,"PED","IDLE_tired",4.1,1,0,0,0,2500);
		SetPlayerCheckpoint(playerid, derevo[rand][0], derevo[rand][1], derevo[rand][2],3.0);
		return 1;
	}
	else if(FL[playerid][CP] == 777) DisablePlayerCheckpoint(playerid);
	if(FL[playerid][GruzCP] == 1 && PlayerToPoint(2.0,playerid,600.4599,868.0458,-42.9609))
	{
		DisablePlayerCheckpoint(playerid);
		SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
	}
	//--------------------------------------------------------------------------
	if(GetPVarInt(playerid,"seit") == 1)
	{
		for(new h = 1; h < sizeof( NarkoInfo ); h++ )
		{
			if(IsPlayerInRangeOfPoint( playerid, 3.0, NarkoInfo[h][nX], NarkoInfo[h][nY], NarkoInfo[h][nZ]))
			{
				if(NarkoInfo[h][nZasev] == 0)
				{
					ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 6.1, 0, 0, 0, 0, 0,1);
					SetTimerEx("Seem",2500,false,"i",playerid);
				}
			}
		}
	}
	//===========================[Работа Уборщика улиц]=============================
	if(GetPVarInt(playerid,"checkpo1") == 1)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(vehicleid) == 574)
		{
			DisablePlayerCheckpoint(playerid);
			SetPVarInt(playerid, "checkpo1", 0);
			SetPVarInt(playerid, "checkpo2", 1);
			SetPlayerCheckpoint(playerid,-1953.3982,-66.5292,25.5106, 4.0);
		}
		else
		{
			SCM(playerid, COLOR_RED, "Возьми машину для работы!");
		}
		return true;
	}
	if(GetPVarInt(playerid,"checkpo2") == 1)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(vehicleid) == 574)
		{
			DisablePlayerCheckpoint(playerid);
			SetPVarInt(playerid, "checkpo2", 0);
			SetPVarInt(playerid, "checkpo3", 1);
			SetPlayerCheckpoint(playerid,-1798.1528,5.3852,14.5524, 4.0);
		}
		else
		{
			SCM(playerid, COLOR_RED, "Возьми машину для работы!");
		}
		return true;
	}
	if(GetPVarInt(playerid,"checkpo3") == 1)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(vehicleid) == 574)
		{

			DisablePlayerCheckpoint(playerid);
			SetPVarInt(playerid, "checkpo3", 0);
			SetPVarInt(playerid, "checkpo4", 1);
			SetPlayerCheckpoint(playerid,-1818.5787,382.3563,16.6069, 5.0);
		}
		else
		{
			SCM(playerid, COLOR_RED, "Возьми машину для работы!");
		}
		return true;
	}
	if(GetPVarInt(playerid,"checkpo4") == 1)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(vehicleid) == 574)
		{
			DisablePlayerCheckpoint(playerid);
			SetPVarInt(playerid, "checkpo4", 0);
			SetPVarInt(playerid, "checkpo5", 1);
			SetPlayerCheckpoint(playerid,-1988.9766,348.8449,34.5169, 4.0);
		}
		else
		{
			SCM(playerid, COLOR_RED, "Возьми машину для работы!");
		}
		return true;
	}
	if(GetPVarInt(playerid,"checkpo5") == 1)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(vehicleid) == 574)
		{
			DisablePlayerCheckpoint(playerid);
			SetPVarInt(playerid, "checkpo5", 0);
			SetPVarInt(playerid, "checkpo6", 1);
			SetPlayerCheckpoint(playerid,-2078.3767,507.1137,34.6135, 4.0);
		}
		else
		{
			SCM(playerid, COLOR_RED, "Возьми машину для работы!");
		}
		return true;
	}
	if(GetPVarInt(playerid,"checkpo6") == 1)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(vehicleid) == 574)
		{

			DisablePlayerCheckpoint(playerid);
			SetPVarInt(playerid, "checkpo6", 0);
			SetPVarInt(playerid, "checkpo7", 1);
			SetPlayerCheckpoint(playerid,-2149.0913,334.3736,34.7723, 5.0);
		}
		else
		{
			SCM(playerid, COLOR_RED, "Возьми машину для работы!");
		}
		return true;
	}
	if(GetPVarInt(playerid,"checkpo7") == 1)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(vehicleid) == 574)
		{
			DisablePlayerCheckpoint(playerid);
			SetPVarInt(playerid, "checkpo7", 0);
			SetPVarInt(playerid, "checkpo8", 1);
			SetPlayerCheckpoint(playerid,-2099.8945,77.3187,34.9452, 2.0);
			SCM(playerid,COLOR_YELLOW, "Ты закончил! Теперь езжай в офис и забери свою зарплату..");
		}
		else
		{
			SCM(playerid, COLOR_RED, "Ты не выполнил работу!");
		}
		return true;
	}
	if(GetPVarInt(playerid,"checkpo8") == 1)
	{
		DisablePlayerCheckpoint(playerid);
		SetPVarInt(playerid, "checkpo8", 0);
		SetPVarInt(playerid, "rabotach", 1);
		SCM(playerid, COLOR_LIGHTBLUE, "Переоденься и ты получишь свою зарплату!");
		return true;
	}
	if(Works[playerid])
	{
		if(JobCP[playerid] == 1)
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid,2172.4146,-2255.5405,13.3041,1.5);
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
				SetPlayerAttachedObject(playerid, 1 , 2060, 1,0.11,0.36,0.0,0.0,90.0);
				JobCP[playerid] = 2;
				mesh[playerid] = 1;
				usemesh[playerid] = 1;
			}
		}
		if(JobCP[playerid] == 2)
		{
			if(!IsPlayerInAnyVehicle(playerid))
			{
				if(mesh[playerid] < 10) return true;
				FL[playerid][JobAmmount] ++;
				format(YCMDstr, 128, "Перенесено мешков: {ffffff}%d",FL[playerid][JobAmmount]);
				SCM(playerid,COLOR_GREEN,YCMDstr);
				DisablePlayerCheckpoint(playerid);
				ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
				mesh[playerid] = 0;
				usemesh[playerid] = 0;
				if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
				SetPlayerCheckpoint(playerid,2230.3528,-2286.1353,14.3751,3.0);
				JobCP[playerid] = 1;
			}
		}
	}
	else if(FL[playerid][CP] == 500)
	{
		PI[playerid][pCash] += 900;
		FL[playerid][CP] = 0;
		format(YCMDstr, 128, "~g~+900");
		GameTextForPlayer(playerid, YCMDstr, 5000, 1);
		DisablePlayerCheckpoint(playerid);
	}
	else
	{
		switch (gPlayerCheckpointStatus[playerid])
		{
		case CHECKPOINT_HOME:
			{
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
				GameTextForPlayer(playerid, "~w~Is in~n~~y~House", 5000, 1);
			}
		}
	}
	return true;
}
public OnPlayerEnterRaceCheckpoint(playerid)
{
	DisablePlayerRaceCheckpoint(playerid);
	new tmpcar = GetPlayerVehicleID(playerid);
	//
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(CarLesson[playerid] == 1)
		{
			switch(pLessonCar[playerid])
			{
			case 1:SetPlayerRaceCheckpoint(playerid, 0,-2047.1299,-82.7046,34.9072,-2021.2046,-72.2330,34.9150, 5.0);
			case 2:SetPlayerRaceCheckpoint(playerid, 0,-2021.2046,-72.2330,34.9150,-2004.2841,-56.4547,34.9083, 5.0);
			case 3:SetPlayerRaceCheckpoint(playerid, 0,-2004.2841,-56.4547,34.9083,-2004.3656,63.5635,29.0903, 5.0);
			case 4:SetPlayerRaceCheckpoint(playerid, 0,-2004.3656,63.5635,29.0903,-2003.5389,169.0928,27.2806, 5.0);
			case 5:SetPlayerRaceCheckpoint(playerid, 0,-2003.5389,169.0928,27.2806,-1999.3879,309.9337,34.7228, 5.0);
			case 6:SetPlayerRaceCheckpoint(playerid, 0,-1999.3879,309.9337,34.7228,-1999.1091,488.9284,34.7584, 5.0);
			case 7:SetPlayerRaceCheckpoint(playerid, 0,-1999.1091,488.9284,34.7584,-2020.0480,506.7851,34.7583, 5.0);
			case 8:SetPlayerRaceCheckpoint(playerid, 0,-2020.0480,506.7851,34.7583,-2123.5198,506.4044,34.7593, 5.0);
			case 9:SetPlayerRaceCheckpoint(playerid, 0,-2123.5198,506.4044,34.7593,-2147.1807,490.5033,34.7583, 5.0);
			case 10:SetPlayerRaceCheckpoint(playerid, 0,-2147.1807,490.5033,34.7583,-2149.1292,407.9551,34.8205, 5.0);
			case 11:SetPlayerRaceCheckpoint(playerid, 0,-2149.1292,407.9551,34.8205,-2148.8479,229.6411,34.9152, 5.0);
			case 12:SetPlayerRaceCheckpoint(playerid, 0,-2148.8479,229.6411,34.9152,-2165.5833,210.6641,34.9144, 5.0);
			case 13:SetPlayerRaceCheckpoint(playerid, 0,-2165.5833,210.6641,34.9144,-2233.7517,210.4253,34.9137, 5.0);
			case 14:SetPlayerRaceCheckpoint(playerid, 0,-2233.7517,210.4253,34.9137,-2249.0859,233.7054,34.9071, 5.0);
			case 15:SetPlayerRaceCheckpoint(playerid, 0,-2249.0859,233.7054,34.9071,-2261.7542,372.9274,33.2418, 5.0);
			case 16:SetPlayerRaceCheckpoint(playerid, 0,-2261.7542,372.9274,33.2418,-2359.8423,484.6871,30.3849, 5.0);
			case 17:SetPlayerRaceCheckpoint(playerid, 0,-2359.8423,484.6871,30.3849,-2383.4255,790.3303,34.7652, 5.0);
			case 18:SetPlayerRaceCheckpoint(playerid, 0,-2383.4255,790.3303,34.7652,-2364.3657,805.9047,36.6098, 5.0);
			case 19:SetPlayerRaceCheckpoint(playerid, 0,-2364.3657,805.9047,36.6098,-2217.7344,806.2595,49.0387, 5.0);
			case 20:SetPlayerRaceCheckpoint(playerid, 0,-2217.7344,806.2595,49.0387,-2095.3938,806.2051,69.1558, 5.0);
			case 21:SetPlayerRaceCheckpoint(playerid, 0,-2095.3938,806.2051,69.1558,-2023.7908,806.1768,47.0934, 5.0);
			case 22:SetPlayerRaceCheckpoint(playerid, 0,-2023.7908,806.1768,47.0934,-2000.5417,825.1227,45.0399, 5.0);
			case 23:SetPlayerRaceCheckpoint(playerid, 0,-2000.5417,825.1227,45.0399,-2000.4559,901.5263,45.0433, 5.0);
			case 24:SetPlayerRaceCheckpoint(playerid, 0,-2000.4559,901.5263,45.0433,-1983.4757,917.6733,45.0391, 5.0);
			case 25:SetPlayerRaceCheckpoint(playerid, 0,-1983.4757,917.6733,45.0391,-1859.3486,917.3110,34.7522, 5.0);
			case 26:SetPlayerRaceCheckpoint(playerid, 0,-1859.3486,917.3110,34.7522,-1738.9817,917.5093,24.4839, 5.0);
			case 27:SetPlayerRaceCheckpoint(playerid, 0,-1738.9817,917.5093,24.4839,-1584.8662,917.9406,7.2808, 5.0);
			case 28:SetPlayerRaceCheckpoint(playerid, 0,-1584.8662,917.9406,7.2808,-1541.6730,928.6280,6.7821, 5.0);
			case 29:SetPlayerRaceCheckpoint(playerid, 0,-1541.6730,928.6280,6.7821,-1540.8986,962.7398,6.7813, 5.0);
			case 30:SetPlayerRaceCheckpoint(playerid, 0,-1540.8986,962.7398,6.7813,-1586.9012,1029.1655,6.7806, 5.0);
			case 31:SetPlayerRaceCheckpoint(playerid, 0,-1586.9012,1029.1655,6.7806,-1634.6927,1240.9236,6.7836, 5.0);
			case 32:SetPlayerRaceCheckpoint(playerid, 0,-1634.6927,1240.9236,6.7836,-1733.3973,1340.2684,6.7808, 5.0);
			case 33:SetPlayerRaceCheckpoint(playerid, 0,-1733.3973,1340.2684,6.7808,-1822.0417,1375.2615,6.7819, 5.0);
			case 34:SetPlayerRaceCheckpoint(playerid, 0,-1822.0417,1375.2615,6.7819,-1930.4690,1306.2540,6.7826, 5.0);
			case 35:SetPlayerRaceCheckpoint(playerid, 0,-1930.4690,1306.2540,6.7826,-2025.0059,1304.6970,6.8203, 5.0);
			case 36:SetPlayerRaceCheckpoint(playerid, 0,-2025.0059,1304.6970,6.8203,-2062.1274,1281.8025,7.5473, 5.0);
			case 37:SetPlayerRaceCheckpoint(playerid, 0,-2062.1274,1281.8025,7.5473,-2270.4485,1204.1831,53.2871, 5.0);
			case 38:SetPlayerRaceCheckpoint(playerid, 0,-2270.4485,1204.1831,53.2871,-2267.0386,1095.9159,79.6025, 5.0);
			case 39:SetPlayerRaceCheckpoint(playerid, 0,-2267.0386,1095.9159,79.6025,-2266.0283,990.1443,75.1669, 5.0);
			case 40:SetPlayerRaceCheckpoint(playerid, 0,-2266.0283,990.1443,75.16690,-2266.5266,807.7878,49.0438, 5.0);
			case 41:SetPlayerRaceCheckpoint(playerid, 0,-2266.5266,807.7878,49.0438,-2266.6682,585.7730,36.3168, 5.0);
			case 42:SetPlayerRaceCheckpoint(playerid, 0,-2266.6682,585.7730,36.3168,-2242.5308,562.4396,34.75896, 5.0);
			case 43:SetPlayerRaceCheckpoint(playerid, 0,-2242.5308,562.4396,34.7589,-2229.0964,540.6600,34.7586, 5.0);
			case 44:SetPlayerRaceCheckpoint(playerid, 0,-2229.0964,540.6600,34.7586,-2209.9031,506.0080,34.7579, 5.0);
			case 45:SetPlayerRaceCheckpoint(playerid, 0,-2209.9031,506.0080,34.7579,-2102.6755,501.8567,34.7602, 5.0);
			case 46:SetPlayerRaceCheckpoint(playerid, 0,-2102.6755,501.8567,34.7602,-2020.8113,501.6382,34.7586, 5.0);
			case 47:SetPlayerRaceCheckpoint(playerid, 0,-2020.8113,501.6382,34.7586,-2007.8937,491.4999,34.7592, 5.0);
			case 48:SetPlayerRaceCheckpoint(playerid, 0,-2007.8937,491.4999,34.7592,-2009.4333,253.1356,30.0010, 5.0);
			case 49:SetPlayerRaceCheckpoint(playerid, 0,-2009.4333,253.1356,30.0010,-2008.9186,60.0073,29.5201, 5.0);
			case 50:SetPlayerRaceCheckpoint(playerid, 0,-2008.9186,60.0073,29.5201,-2008.8951,-83.7164,35.0135, 5.0);
			case 51:SetPlayerRaceCheckpoint(playerid, 0,-2008.8951,-83.7164,35.0135,-2007.6554,-162.2175,35.4526, 5.0);
			case 52:SetPlayerRaceCheckpoint(playerid, 0,-2007.6554,-162.2175,35.4526,-2007.6746,-276.8484,35.0604, 5.0);
			case 53:SetPlayerRaceCheckpoint(playerid, 0,-2007.6746,-276.8484,35.0604,-2038.9626,-289.8528,35.1186, 5.0);
			case 54:SetPlayerRaceCheckpoint(playerid, 0,-2038.9626,-289.8528,35.1186,-2195.3115,-290.1100,35.0690, 5.0);
			case 55:SetPlayerRaceCheckpoint(playerid, 0,-2195.3115,-290.1100,35.0690,-2205.7070,-272.5776,35.0689, 5.0);
			case 56:SetPlayerRaceCheckpoint(playerid, 0,-2205.7070,-272.5776,35.0689,-2205.3076,-204.0107,35.0867, 5.0);
			case 57:SetPlayerRaceCheckpoint(playerid, 0,-2205.3076,-204.0107,35.0867,-2236.1755,-187.5369,34.9148, 5.0);
			case 58:SetPlayerRaceCheckpoint(playerid, 0,-2236.1755,-187.5369,34.9148,-2251.8374,-86.5177,34.9136, 5.0);
			case 59:SetPlayerRaceCheckpoint(playerid, 0,-2251.8374,-86.5177,34.9136,-2234.4314,-72.5208,34.9151, 5.0);
			case 60:SetPlayerRaceCheckpoint(playerid, 0,-2234.4314,-72.5208,34.9151,-2083.7751,-72.7984,34.9150, 5.0);
			case 61:SetPlayerRaceCheckpoint(playerid, 0,-2083.7751,-72.7984,34.9150,-2046.7074,-84.9175,34.9071, 5.0);
			case 62:SetPlayerRaceCheckpoint(playerid, 0,-2046.7074,-84.9175,34.9071,-2079.5813,-95.3732,34.9071, 5.0);
			case 63:SetPlayerRaceCheckpoint(playerid, 1,-2079.5813,-95.3732,32.9071,0.0,0.0,0.0, 5.0);
			case 64:
				{
					new Float:health;
					GetVehicleHealth(GetPlayerVehicleID(playerid),health);
					if(health >= 850)
					{
						CarLesson[playerid] = 0;
						PI[playerid][pCarLic] = 1;
						DisablePlayerRaceCheckpoint(playerid);
						SCM(playerid, COLOR_GREEN, "Припаркуйте автомобиль.");
						SCM(playerid, COLOR_WHITE, "Поздравляем Вас! Вы здали экзамен по вождению.");
					}
					else
					{
						SCM(playerid, COLOR_GREY, "Вы не достаточно хорошо водите, чтобы получить водительское удостоверение.");
						CarLesson[playerid] = 0;
					}
				}
			}
			pLessonCar[playerid]++;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(BoatLesson[playerid] == 1)
		{
			switch(pLessonBoat[playerid])
			{
			case 1:SetPlayerRaceCheckpoint(playerid, 0,-2134.7996,2227.7891,-0.5352,-2051.7029,2015.9716,-0.5845, 4.0);
			case 2:SetPlayerRaceCheckpoint(playerid, 0,-2051.7029,2015.9716,-0.5845,-2271.6084,1806.6705,-0.7072, 4.0);
			case 3:SetPlayerRaceCheckpoint(playerid, 0,-2271.6084,1806.6705,-0.7072,-2189.2908,1675.7667,-0.5481, 4.0);
			case 4:SetPlayerRaceCheckpoint(playerid, 0,-2189.2908,1675.7667,-0.5481,-2020.6592,1818.6874,-0.3855, 4.0);
			case 5:SetPlayerRaceCheckpoint(playerid, 0,-2020.6592,1818.6874,-0.3855,-1752.9840,1787.6764,-0.5450, 4.0);
			case 6:SetPlayerRaceCheckpoint(playerid, 0,-1752.9840,1787.6764,-0.5450,-1882.3956,1599.4160,-0.6332, 4.0);
			case 7:SetPlayerRaceCheckpoint(playerid, 0,-1882.3956,1599.4160,-0.6332,-2241.3074,1615.9669,-0.6303, 4.0);
			case 8:SetPlayerRaceCheckpoint(playerid, 0,-2241.3074,1615.9669,-0.6303,-2241.0493,1967.8376,-0.6737, 4.0);
			case 9:SetPlayerRaceCheckpoint(playerid, 0,-2241.0493,1967.8376,-0.6737,-2157.4160,2339.4099,-0.3655, 4.0);
			case 10:SetPlayerRaceCheckpoint(playerid, 1,-2230.1802,2424.4387,-0.3803,0.0,0.0,0.0, 4.0);
			case 11:
				{
					new Float:health;
					GetVehicleHealth(GetPlayerVehicleID(playerid),health);
					if(health >= 850)
					{
						BoatLesson[playerid] = 0;
						PI[playerid][pBoatLic] = 1;
						DisablePlayerRaceCheckpoint(playerid);
						SCM(playerid, TEAM_GROVE_COLOR, "Поздравляем Вас! Вы сдали экзамен по вождению морского транспорта.");
					}
					else
					{
						SCM(playerid, COLOR_GRAD1, "Вы недостаточно хорошо плаваете, чтобы получить лицензию на морской транспорт.");
						BoatLesson[playerid] = 0;
					}
				}
			}
			pLessonBoat[playerid]++;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(FlyLesson[playerid] == 1)
		{
			switch(pLessonFly[playerid])
			{
			case 1:SetPlayerRaceCheckpoint(playerid, 3,1434.8365,1260.7920,11.2921,1478.4321,1333.0433,11.3286, 6.0);
			case 2:SetPlayerRaceCheckpoint(playerid, 3,1478.4321,1333.0433,11.3286,1479.5807,1478.3370,11.3458, 6.0);
			case 3:SetPlayerRaceCheckpoint(playerid, 3,1479.5807,1478.3370,11.3458,1479.8712,1726.4523,42.6682, 6.0);
			case 4:SetPlayerRaceCheckpoint(playerid, 3,1479.8712,1726.4523,42.6682,1480.9932,1930.5657,84.4706, 6.0);
			case 5:SetPlayerRaceCheckpoint(playerid, 3,1480.9932,1930.5657,84.4706,1550.4391,2111.8772,92.0620, 6.0);
			case 6:SetPlayerRaceCheckpoint(playerid, 3,1550.4391,2111.8772,92.0620,1690.1339,2313.6819,93.8964, 6.0);
			case 7:SetPlayerRaceCheckpoint(playerid, 3,1690.1339,2313.6819,93.8964,1645.8829,2587.6494,111.9932, 6.0);
			case 8:SetPlayerRaceCheckpoint(playerid, 3,1645.8829,2587.6494,111.9932,1353.2448,2710.1895,98.2006, 6.0);
			case 9:SetPlayerRaceCheckpoint(playerid, 3,1353.2448,2710.1895,98.2006,1094.7435,2569.2593,88.4591, 6.0);
			case 10:SetPlayerRaceCheckpoint(playerid, 3,1094.7435,2569.2593,88.4591,1165.9917,2168.9502,79.8947, 6.0);
			case 11:SetPlayerRaceCheckpoint(playerid, 3,1165.9917,2168.9502,79.8947,1380.4810,1808.8771,68.7068, 6.0);
			case 12:SetPlayerRaceCheckpoint(playerid, 3,1380.4810,1808.8771,68.7068,1388.4492,1397.3700,11.2909, 6.0);
			case 13:SetPlayerRaceCheckpoint(playerid, 3,1388.4492,1397.3700,11.2909,1334.3114,1334.2802,11.2789, 6.0);
			case 14:SetPlayerRaceCheckpoint(playerid, 4,1334.3114,1334.2802,11.2789,0.0,0.0,0.0, 6.0);
			case 15:
				{
					new Float:health;
					GetVehicleHealth(GetPlayerVehicleID(playerid),health);
					if(health >= 850)
					{
						FlyLesson[playerid] = 0;
						PI[playerid][pFlyLic] = 1;
						DisablePlayerRaceCheckpoint(playerid);
						SCM(playerid, TEAM_GROVE_COLOR, "Поздравляем Вас! Вы сдали экзамен по управлению воздушным транспортом.");
					}
					else
					{
						SCM(playerid, COLOR_GRAD1, "Вы недостаточно хорошо летаете, чтобы получить лицензию пилота.");
						FlyLesson[playerid] = 0;
					}
				}
			}
			pLessonFly[playerid]++;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
		}
	}
	//--------------------------------------------------------------------------
	if(GetPVarInt(playerid, "loading_vert") == 1)
	{
		if(vertmatbi >= 50000)
		{
			SCM(playerid, COLOR_GREY, "Вертолёт загружен деталями!");
			SCM(playerid, COLOR_WHITE, "Отвезите детали для оружия на завод К.А.С.С.");
   			DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid, 2,2720.7007,2740.7659,10.8203,0.0,0.0,0.0, 6.0);
			SetPVarInt(playerid, "loading_vert", 2);
			return true;
		}
		vertmatbi += 50000;
		format(YCMDstr, 128, "Детали успешно загружены! Деталей в вертолёте: %d/50000", vertmatbi);
		SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
		SCM(playerid, COLOR_WHITE, "Отвезите детали для оружия на завод К.А.С.С.");
		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpoint(playerid, 2,2720.7007,2740.7659,10.8203,0.0,0.0,0.0, 6.0);
		SetPVarInt(playerid, "loading_vert", 2);
	}
	else if(GetPVarInt(playerid, "loading_vert") == 2)
	{
		if(FracBank[0][fzsklad] >= 499999)
		{
			SCM(playerid, COLOR_GREY, "Склад заполнен деталями!");
			DisablePlayerCheckpoint(playerid);
			return true;
		}
		vertmatbi -= 50000;
		FracBank[0][fzsklad] += 50000;
		if(FracBank[0][fzsklad] > 500000) FracBank[0][fzsklad] = 500000;
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid,"loading_vert");
		format(YCMDstr, 128, "Детали успешно доставлены! Деталей в вертолёте: %d/50000", vertmatbi);
		SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
		format(YCMDstr, 128, "На заводе К.А.С.С. %d/500000 деталей", FracBank[0][fzsklad]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
	}
	if(GetPVarInt(playerid, "loading_mats") == 1)
	{
		if(MatArmy[tmpcar-gunscar[0]][mArLoad] >= 4999 || FracBank[0][farmmatbi] <= 0)
		{
			SCM(playerid, COLOR_GREY, "Склад пуст или грузовик полон!");
			DisablePlayerRaceCheckpoint(playerid);
			return true;
		}
		MatArmy[tmpcar-gunscar[0]][mArLoad] += 10000;
		format(YCMDstr, 64, "Материалы успешно загружены! Компоненты материалов: %d/10000", MatArmy[tmpcar-gunscar[0]][mArLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
		FracBank[0][farmmatbi] -= 10000;
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid,"loading_mats");
		format(YCMDstr, 28, "На складе СВ: %d/300000", FracBank[0][farmmatbi]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
		SCM(playerid, COLOR_GREY, "Введите: /carm, чтобы начать развозку материалов");
	}
	if(GetPVarInt(playerid, "loading_mats") == 2)
	{
		if(MatArmy[tmpcar-gunscar[0]][mArLoad] == 0 || FracBank[0][farmmatsf] >= 299999)
		{
			SCM(playerid, COLOR_GREY, "Склад ВМФ заполнен, либо грузовик пуст!");
			DisablePlayerRaceCheckpoint(playerid);
			return true;
		}
		MatArmy[tmpcar-gunscar[0]][mArLoad] -= 10000;
		FracBank[0][farmmatsf] += 10000;
		if(FracBank[0][farmmatsf] > 300000) FracBank[0][farmmatsf] = 300000;
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid,"loading_mats");
		if(FracBank[0][farmmatsf] > 300000) FracBank[0][farmmatsf] = 300000;
		format(YCMDstr, 47, "Оружие успешно доставлено! Оружие: %d/10000", MatArmy[tmpcar-gunscar[0]][mArLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
		format(YCMDstr, 25, "Склад ВМФ: %d/300000", FracBank[0][farmmatsf]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
	}
	if(GetPVarInt(playerid, "loading_mats") == 3)
	{
		if(MatArmy[tmpcar-gunscar[0]][mArLoad] == 0 || FracBank[0][flspdmatbi] >= 99999)
		{
			SCM(playerid, COLOR_GREY, "Склад LSPD заполнен, либо грузовик пуст!");
			DisablePlayerRaceCheckpoint(playerid);
			return true;
		}
		MatArmy[tmpcar-gunscar[0]][mArLoad] -= 10000;
		FracBank[0][flspdmatbi] += 10000;
		if(FracBank[0][flspdmatbi] > 100000) FracBank[0][flspdmatbi] = 100000;
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid,"loading_mats");
		format(YCMDstr, 54, "Материалы успешно доставлены! Материалов: %d/10000", MatArmy[tmpcar-gunscar[0]][mArLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
		format(YCMDstr, 26, "Склад LSPD: %d/100000", FracBank[0][flspdmatbi]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
	}
	if(GetPVarInt(playerid, "loading_mats") == 4)
	{
		if(MatArmy[tmpcar-gunscar[0]][mArLoad] == 0 || FracBank[0][ffbimats] >= 49999)
		{
			SCM(playerid, COLOR_GREY, "Склад FBI заполнен, либо грузовик пуст!");
			DisablePlayerRaceCheckpoint(playerid);
			return true;
		}
		MatArmy[tmpcar-gunscar[0]][mArLoad] -= 10000;
		FracBank[0][ffbimats] += 10000;
		if(FracBank[0][ffbimats] > 50000) FracBank[0][ffbimats] = 50000;
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid,"loading_mats");
		format(YCMDstr, 54, "Материалы успешно доставлены! Материалов: %d/10000", MatArmy[tmpcar-gunscar[0]][mArLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
		format(YCMDstr, 23, "Склад FBI: %d/50000", FracBank[0][ffbimats]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
	}
	if(GetPVarInt(playerid, "loading_mats") == 5)
	{
		if(MatArmy[tmpcar-gunscar[0]][mArLoad] == 0 || FracBank[0][fsfpdmats] >= 49999)
		{
			SCM(playerid, COLOR_GREY, "Склад SFPD заполнен, либо грузовик пуст!");
			DisablePlayerRaceCheckpoint(playerid);
			return true;
		}
		MatArmy[tmpcar-gunscar[0]][mArLoad] -= 10000;
		FracBank[0][fsfpdmats] += 10000;
		if(FracBank[0][fsfpdmats] > 50000) FracBank[0][fsfpdmats] = 50000;
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid,"loading_mats");
		format(YCMDstr, 54, "Материалы успешно доставлены! Материалов: %d/10000", MatArmy[tmpcar-gunscar[0]][mArLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
		format(YCMDstr, 24, "Склад SFPD: %d/50000", FracBank[0][fsfpdmats]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
		FL[playerid][CP] = 0;
	}
	if(GetPVarInt(playerid, "loading_mats") == 6)
	{
		if(MatArmy[tmpcar-gunscar[0]][mArLoad] == 0 || FracBank[0][flvpdmats] >= 49999)
		{
			SCM(playerid, COLOR_GREY, "Склад LVPD заполнен, либо грузовик пуст!");
			DisablePlayerRaceCheckpoint(playerid);
			return true;
		}
		MatArmy[tmpcar-gunscar[0]][mArLoad] -= 10000;
		FracBank[0][flvpdmats] += 10000;
		if(FracBank[0][flvpdmats] > 50000) FracBank[0][flvpdmats] = 50000;
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid,"loading_mats");
		format(YCMDstr, 54, "Материалы успешно доставлены! Материалов: %d/10000", MatArmy[tmpcar-gunscar[0]][mArLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
		format(YCMDstr, 24, "Склад LVPD: %d/50000", FracBank[0][flvpdmats]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
	}
	if(GetPVarInt(playerid, "loading_mats") == 7)
	{
		if(MatArmy[tmpcar-gunscar[0]][mArLoad] == 0 || FracBank[0][fMMats] >= 49999)
		{
			SCM(playerid, COLOR_GREY, "Склад байкеров заполнен, либо грузовик пуст!");
			DisablePlayerRaceCheckpoint(playerid);
			return true;
		}
		MatArmy[tmpcar-gunscar[0]][mArLoad] -= 10000;
		FracBank[0][fMMats] += 10000;
		if(FracBank[0][fMMats] > 50000) FracBank[0][fMMats] = 50000;
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid,"loading_mats");
		format(YCMDstr, 47, "Оружие успешно доставлено! Оружие: %d/10000", MatArmy[tmpcar-gunscar[0]][mArLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
		format(YCMDstr, 28, "Склад байкеров: %d/50000", FracBank[0][fMMats]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
	}
	if(GetPVarInt(playerid, "loading_mats") == 8)
	{
		if(MatArmy[tmpcar-gunscar[0]][mArLoad] == 0 || FracBank[0][fBMats] >= 89999)
		{
			SCM(playerid, COLOR_GREY, "Склад Ballas заполнен, либо грузовик пуст!");
			DisablePlayerRaceCheckpoint(playerid);
			return true;
		}
		MatArmy[tmpcar-gunscar[0]][mArLoad] -= 10000;
		FracBank[0][fBMats] += 10000;
		if(FracBank[0][fBMats] > 90000) FracBank[0][fBMats] = 90000;
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid,"loading_mats");
		format(YCMDstr, 54, "Материалы успешно доставлены! Материалов: %d/10000", MatArmy[tmpcar-gunscar[0]][mArLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
		format(YCMDstr, 26, "Склад Ballas: %d/90000", FracBank[0][fBMats]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
	}
	if(GetPVarInt(playerid, "loading_mats") == 9)
	{
		if(MatArmy[tmpcar-gunscar[0]][mArLoad] == 0 || FracBank[0][fVMats] >= 89999)
		{
			SCM(playerid, COLOR_GREY, "Склад Vagos заполнен, либо грузовик пуст!");
			DisablePlayerRaceCheckpoint(playerid);
			return true;
		}
		MatArmy[tmpcar-gunscar[0]][mArLoad] -= 10000;
		FracBank[0][fVMats] += 10000;
		if(FracBank[0][fVMats] > 90000) FracBank[0][fVMats] = 90000;
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid,"loading_mats");
		format(YCMDstr, 54, "Материалы успешно доставлены! Материалов: %d/10000", MatArmy[tmpcar-gunscar[0]][mArLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
		format(YCMDstr, 25, "Склад Vagos: %d/90000", FracBank[0][fVMats]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
	}
	if(GetPVarInt(playerid, "loading_mats") == 10)
	{
		if(MatArmy[tmpcar-gunscar[0]][mArLoad] == 0 || FracBank[0][fGMats] >= 89999)
		{
			SCM(playerid, COLOR_GREY, "Склад Grove заполнен, либо грузовик пуст!");
			DisablePlayerRaceCheckpoint(playerid);
			return true;
		}
		MatArmy[tmpcar-gunscar[0]][mArLoad] -= 10000;
		FracBank[0][fGMats] += 10000;
		if(FracBank[0][fGMats] > 90000) FracBank[0][fGMats] = 90000;
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid,"loading_mats");
		format(YCMDstr, 54, "Материалы успешно доставлены! Материалов: %d/10000", MatArmy[tmpcar-gunscar[0]][mArLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
		format(YCMDstr, 25, "Склад Grove: %d/90000", FracBank[0][fGMats]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
	}
	if(GetPVarInt(playerid, "loading_mats") == 11)
	{
		if(MatArmy[tmpcar-gunscar[0]][mArLoad] == 0 || FracBank[0][fCMats] >= 89999)
		{
			SCM(playerid, COLOR_GREY, "Склад Aztecas заполнен, либо грузовик пуст!");
			DisablePlayerRaceCheckpoint(playerid);
			return true;
		}
		MatArmy[tmpcar-gunscar[0]][mArLoad] -= 10000;
		FracBank[0][fCMats] += 10000;
		if(FracBank[0][fCMats] > 90000) FracBank[0][fCMats] = 90000;
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid,"loading_mats");
		format(YCMDstr, 54, "Материалы успешно доставлены! Материалов: %d/10000", MatArmy[tmpcar-gunscar[0]][mArLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
		format(YCMDstr, 27, "Склад Aztecas: %d/90000", FracBank[0][fCMats]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
	}
	if(GetPVarInt(playerid, "loading_mats") == 12)
	{
		if(MatArmy[tmpcar-gunscar[0]][mArLoad] == 0 || FracBank[0][fRMats] >= 89999)
		{
			SCM(playerid, COLOR_GREY, "Склад Rifa заполнен, либо грузовик пуст!");
			DisablePlayerRaceCheckpoint(playerid);
			return true;
		}
		MatArmy[tmpcar-gunscar[0]][mArLoad] -= 10000;
		FracBank[0][fRMats] += 10000;
		if(FracBank[0][fRMats] > 90000) FracBank[0][fRMats] = 90000;
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid,"loading_mats");
		format(YCMDstr, 54, "Материалы успешно доставлены! Материалов: %d/10000", MatArmy[tmpcar-gunscar[0]][mArLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
		format(YCMDstr, 24, "Склад Rifa: %d/90000", FracBank[0][fRMats]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
	}
	if(GetPVarInt(playerid, "loading_mats") == 13)
	{
		if(MatArmy[tmpcar-gunscar[0]][mArLoad] == 0 || FracBank[0][flcnmats] >= 49999)
		{
			SCM(playerid, COLOR_GREY, "Склад LCN заполнен, либо грузовик пуст!");
			DisablePlayerRaceCheckpoint(playerid);
			return true;
		}
		MatArmy[tmpcar-gunscar[0]][mArLoad] -= 10000;
		FracBank[0][flcnmats] += 10000;
		if(FracBank[0][flcnmats] > 50000) FracBank[0][flcnmats] = 50000;
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid,"loading_mats");
		format(YCMDstr, 47, "Оружие успешно доставлено! Оружие: %d/10000", MatArmy[tmpcar-gunscar[0]][mArLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
		format(YCMDstr, 23, "Склад LCN: %d/50000", FracBank[0][flcnmats]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
	}
	if(GetPVarInt(playerid, "loading_mats") == 14)
	{
		if(MatArmy[tmpcar-gunscar[0]][mArLoad] == 0 || FracBank[0][fyakuzamats] >= 49999)
		{
			SCM(playerid, COLOR_GREY, "Склад Yakuza заполнен, либо грузовик пуст!");
			DisablePlayerRaceCheckpoint(playerid);
			return true;
		}
		MatArmy[tmpcar-gunscar[0]][mArLoad] -= 10000;
		FracBank[0][fyakuzamats] += 10000;
		if(FracBank[0][fyakuzamats] > 50000) FracBank[0][fyakuzamats] = 50000;
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid,"loading_mats");
		format(YCMDstr, 47, "Оружие успешно доставлено! Оружие: %d/10000", MatArmy[tmpcar-gunscar[0]][mArLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
		format(YCMDstr, 26, "Склад Yakuza: %d/50000", FracBank[0][fyakuzamats]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
	}
	if(GetPVarInt(playerid, "loading_mats") == 15)
	{
		if(MatArmy[tmpcar-gunscar[0]][mArLoad] == 0 || FracBank[0][frmmats] >= 49999)
		{
			SCM(playerid, COLOR_GREY, "Склад PM заполнен, либо грузовик пуст!");
			DisablePlayerRaceCheckpoint(playerid);
			return true;
		}
		MatArmy[tmpcar-gunscar[0]][mArLoad] -= 10000;
		FracBank[0][frmmats] += 10000;
		if(FracBank[0][frmmats] > 50000) FracBank[0][frmmats] = 50000;
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid,"loading_mats");
		format(YCMDstr, 47, "Оружие успешно доставлено! Оружие: %d/10000", MatArmy[tmpcar-gunscar[0]][mArLoad]);
		SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
		format(YCMDstr, 22, "Склад PM: %d/50000", FracBank[0][frmmats]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
	}
	if(GetPVarInt(playerid, "loading_mats") == 16)
	{
		if(MatHaulZ[tmpcar-zcar[0]][mLoadZ] >= 49999 || FracBank[0][fzmatbi] <= 0)
		{
			SCM(playerid, COLOR_GREY, "Склад пуст или грузовик полон!");
			DisablePlayerRaceCheckpoint(playerid);
			return true;
		}
		MatHaulZ[tmpcar-zcar[0]][mLoadZ] += 50000;
		format(YCMDstr, 59, "Оружие успешно загружено! Всего ящиков оружия: %d/50000", MatHaulZ[tmpcar-zcar[0]][mLoadZ]);
		SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
		FracBank[0][fzmatbi] -= 50000;
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid,"loading_mats");
		format(YCMDstr, 48, "На заводе К.А.С.С.: %d/500000 ящиков оружия", FracBank[0][fzmatbi]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
		SCM(playerid, COLOR_GREY, "Введите: /zguncarm, чтобы начать развозку оружия с завода К.А.С.С.");
	}
	if(GetPVarInt(playerid, "loading_mats") == 17)
	{
		if(MatHaulZ[tmpcar-zcar[0]][mLoadZ] == 0 || FracBank[0][farmmatbi] >= 299999)
		{
			SCM(playerid, COLOR_GREY, "Склад Армии СВ заполнен, либо грузовик пуст!");
			DisablePlayerRaceCheckpoint(playerid);
			return true;
		}
		MatHaulZ[tmpcar-zcar[0]][mLoadZ] -= 50000;
		FracBank[0][farmmatbi] += 50000;
		if(FracBank[0][farmmatbi] > 300000) FracBank[0][farmmatbi] = 300000;
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid,"loading_mats");
		format(YCMDstr, 54, "Материалы успешно доставлены! Материалов: %d/50000", MatHaulZ[tmpcar-zcar[0]][mLoadZ]);
		SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
		format(YCMDstr, 24, "Склад СВ: %d/300000", FracBank[0][farmmatbi]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
		FL[playerid][CP] = 0;
	}
	//--------------------------------------------------------------------------
	if(GetPVarInt(playerid, "loading_benz") == 1)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(MatHaulF[tmpcar-zfuelcar[0]][mLoadF] >= 9999 || FracBank[0][kassbenz] <= 9999)
			{
				SCM(playerid, COLOR_GREY, "Склад пуст или цистерна полная!");
				DeletePVar(playerid,"loading_benz");
				DisablePlayerRaceCheckpoint(playerid);
				return true;
			}
			MatHaulF[tmpcar-zfuelcar[0]][mLoadF] = 10000;
			format(YCMDstr, 128, "Бензин успешно загружен! В цистерне: %d/10000", MatHaulF[tmpcar-zfuelcar[0]][mLoadF]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			FracBank[0][kassbenz] -= 10000;
			DeletePVar(playerid,"loading_benz");
			DisablePlayerRaceCheckpoint(playerid);
			format(YCMDstr, 128, "На заводе К.А.С.С.: %d/50000 литров бензина", FracBank[0][kassbenz]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			SCM(playerid, COLOR_GREY, "Введите: /zfuelcarm, чтобы начать развозку бензина.");
		}
		else SCM(playerid, COLOR_BLUE, "У Вас нет прицепа!");
	}
	if(GetPVarInt(playerid, "loading_benz") == 2)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(MatHaulF[tmpcar-zfuelcar[0]][mLoadF] <= 0) return SCM(playerid, COLOR_GRAD1, "В цистерне нет бензина!");
			FracBank[0][kassbenz] += MatHaulF[tmpcar-zfuelcar[0]][mLoadF];
			MatHaulF[tmpcar-zfuelcar[0]][mLoadF] = 0;
			if(FracBank[0][kassbenz] > 50000) FracBank[0][kassbenz] = 50000;
			DeletePVar(playerid,"loading_benz");
			format(YCMDstr, 128, "Бензин выгружен! В цистерне: %d/10000", MatHaulF[tmpcar-zfuelcar[0]][mLoadF]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
		}
		else SCM(playerid, COLOR_BLUE, "У Вас нет прицепа!");
	}
	if(GetPVarInt(playerid, "loading_benz") == 3)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(MatHaulF[tmpcar-zfuelcar[0]][mLoadF] == 0 || FracBank[0][lspdbenz] >= 10000)
			{
				SCM(playerid, COLOR_GREY, "Цистерна LSPD заполнена, либо у Вас пустая цистерна!");
				DeletePVar(playerid,"loading_benz");
				DisablePlayerRaceCheckpoint(playerid);
				return true;
			}
			MatHaulF[tmpcar-zfuelcar[0]][mLoadF] -= 10000;
			FracBank[0][lspdbenz] += 10000;
			if(FracBank[0][lspdbenz] > 10000) FracBank[0][lspdbenz] = 10000;
			DeletePVar(playerid,"loading_benz");
			DisablePlayerRaceCheckpoint(playerid);
			format(YCMDstr, 128, "Бензин успешно доставлен! В цистерне: %d/10000", MatHaulF[tmpcar-zfuelcar[0]][mLoadF]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 128, "Цистерна LSPD: %d/10000", FracBank[0][lspdbenz]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			BenzFrac();
		}
		else SCM(playerid, COLOR_BLUE, "А где прицеп с бензином?");
	}
	if(GetPVarInt(playerid, "loading_benz") == 4)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(MatHaulF[tmpcar-zfuelcar[0]][mLoadF] == 0 || FracBank[0][fbibenz] >= 10000)
			{
				SCM(playerid, COLOR_GREY, "Цистерна FBI заполнена, либо у Вас пустая цистерна!");
				DeletePVar(playerid,"loading_benz");
				DisablePlayerRaceCheckpoint(playerid);
				return true;
			}
			MatHaulF[tmpcar-zfuelcar[0]][mLoadF] -= 10000;
			FracBank[0][fbibenz] += 10000;
			if(FracBank[0][fbibenz] > 10000) FracBank[0][fbibenz] = 10000;
			DeletePVar(playerid,"loading_benz");
			DisablePlayerRaceCheckpoint(playerid);
			format(YCMDstr, 128, "Бензин успешно доставлен! В цистерне: %d/10000", MatHaulF[tmpcar-zfuelcar[0]][mLoadF]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 128, "Цистерна FBI: %d/10000", FracBank[0][fbibenz]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			BenzFrac();
		}
		else SCM(playerid, COLOR_BLUE, "А где прицеп с бензином?");
	}
	if(GetPVarInt(playerid, "loading_benz") == 5)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(MatHaulF[tmpcar-zfuelcar[0]][mLoadF] == 0 || FracBank[0][vmfbenz] >= 10000)
			{
				SCM(playerid, COLOR_GREY, "Цистерна ВМФ заполнена, либо у Вас пустая цистерна!");
				DeletePVar(playerid,"loading_benz");
				DisablePlayerRaceCheckpoint(playerid);
				return true;
			}
			MatHaulF[tmpcar-zfuelcar[0]][mLoadF] -= 10000;
			FracBank[0][vmfbenz] += 10000;
			if(FracBank[0][vmfbenz] > 10000) FracBank[0][vmfbenz] = 10000;
			DeletePVar(playerid,"loading_benz");
			DisablePlayerRaceCheckpoint(playerid);
			format(YCMDstr, 128, "Бензин успешно доставлен! В цистерне: %d/10000", MatHaulF[tmpcar-zfuelcar[0]][mLoadF]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 128, "Цистерна ВМФ: %d/10000", FracBank[0][vmfbenz]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			BenzFrac();
		}
		else SCM(playerid, COLOR_BLUE, "А где прицеп с бензином?");
	}
	if(GetPVarInt(playerid, "loading_benz") == 6)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(MatHaulF[tmpcar-zfuelcar[0]][mLoadF] == 0 || FracBank[0][medsfbenz] >= 10000)
			{
				SCM(playerid, COLOR_GREY, "Цистерна МЦСФ заполнена, либо у Вас пустая цистерна!");
				DeletePVar(playerid,"loading_benz");
				DisablePlayerRaceCheckpoint(playerid);
				return true;
			}
			MatHaulF[tmpcar-zfuelcar[0]][mLoadF] -= 10000;
			FracBank[0][medsfbenz] += 10000;
			if(FracBank[0][medsfbenz] > 10000) FracBank[0][medsfbenz] = 10000;
			DeletePVar(playerid,"loading_benz");
			DisablePlayerRaceCheckpoint(playerid);
			format(YCMDstr, 128, "Бензин успешно доставлен! В цистерне: %d/10000", MatHaulF[tmpcar-zfuelcar[0]][mLoadF]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 128, "Цистерна МЦСФ: %d/10000", FracBank[0][medsfbenz]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			BenzFrac();
		}
		else SCM(playerid, COLOR_BLUE, "А где прицеп с бензином?");
	}
	if(GetPVarInt(playerid, "loading_benz") == 7)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(MatHaulF[tmpcar-zfuelcar[0]][mLoadF] == 0 || FracBank[0][medlsbenz] >= 10000)
			{
				SCM(playerid, COLOR_GREY, "Цистерна МЦЛС заполнена, либо у Вас пустая цистерна!");
				DeletePVar(playerid,"loading_benz");
				DisablePlayerRaceCheckpoint(playerid);
				return true;
			}
			MatHaulF[tmpcar-zfuelcar[0]][mLoadF] -= 10000;
			FracBank[0][medlsbenz] += 10000;
			if(FracBank[0][medlsbenz] > 10000) FracBank[0][medlsbenz] = 10000;
			DeletePVar(playerid,"loading_benz");
			DisablePlayerRaceCheckpoint(playerid);
			format(YCMDstr, 128, "Бензин успешно доставлен! В цистерне: %d/10000", MatHaulF[tmpcar-zfuelcar[0]][mLoadF]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 128, "Цистерна МЦЛС: %d/10000", FracBank[0][medlsbenz]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			BenzFrac();
		}
		else SCM(playerid, COLOR_BLUE, "А где прицеп с бензином?");
	}
	if(GetPVarInt(playerid, "loading_benz") == 8)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(MatHaulF[tmpcar-zfuelcar[0]][mLoadF] == 0 || FracBank[0][zonabenz] >= 10000)
			{
				SCM(playerid, COLOR_GREY, "Цистерна СВ заполнена, либо у Вас пустая цистерна!");
				DeletePVar(playerid,"loading_benz");
				DisablePlayerRaceCheckpoint(playerid);
				return true;
			}
			MatHaulF[tmpcar-zfuelcar[0]][mLoadF] -= 10000;
			FracBank[0][zonabenz] += 10000;
			if(FracBank[0][zonabenz] > 10000) FracBank[0][zonabenz] = 10000;
			DeletePVar(playerid,"loading_benz");
			DisablePlayerRaceCheckpoint(playerid);
			format(YCMDstr, 128, "Бензин успешно доставлен! В цистерне: %d/10000", MatHaulF[tmpcar-zfuelcar[0]][mLoadF]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 128, "Цистерна СВ: %d/10000", FracBank[0][zonabenz]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			BenzFrac();
		}
		else SCM(playerid, COLOR_BLUE, "А где прицеп с бензином?");
	}
	if(GetPVarInt(playerid, "loading_benz") == 9)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(MatHaulF[tmpcar-zfuelcar[0]][mLoadF] == 0 || FracBank[0][pravbenz] >= 10000)
			{
				SCM(playerid, COLOR_GREY, "Цистерна Адм. Президента заполнена, либо у Вас пустая цистерна!");
				DeletePVar(playerid,"loading_benz");
				DisablePlayerRaceCheckpoint(playerid);
				return true;
			}
			MatHaulF[tmpcar-zfuelcar[0]][mLoadF] -= 10000;
			FracBank[0][pravbenz] += 10000;
			if(FracBank[0][pravbenz] > 10000) FracBank[0][pravbenz] = 10000;
			DeletePVar(playerid,"loading_benz");
			DisablePlayerRaceCheckpoint(playerid);
			format(YCMDstr, 128, "Бензин успешно доставлен! В цистерне: %d/10000", MatHaulF[tmpcar-zfuelcar[0]][mLoadF]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 128, "Цистерна Адм.Президента: %d/10000", FracBank[0][pravbenz]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			BenzFrac();
		}
		else SCM(playerid, COLOR_BLUE, "А где прицеп с бензином?");
	}
	if(GetPVarInt(playerid, "loading_benz") == 10)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(MatHaulF[tmpcar-zfuelcar[0]][mLoadF] == 0 || FracBank[0][kassbenzce] >= 10000)
			{
				SCM(playerid, COLOR_GREY, "Цистерна К.А.С.С. заполнена, либо у Вас пустая цистерна!");
				DeletePVar(playerid,"loading_benz");
				DisablePlayerRaceCheckpoint(playerid);
				return true;
			}
			MatHaulF[tmpcar-zfuelcar[0]][mLoadF] -= 10000;
			FracBank[0][kassbenzce] += 10000;
			if(FracBank[0][kassbenzce] > 10000) FracBank[0][kassbenzce] = 10000;
			DeletePVar(playerid,"loading_benz");
			DisablePlayerRaceCheckpoint(playerid);
			format(YCMDstr, 128, "Бензин успешно доставлен! В цистерне: %d/10000", MatHaulF[tmpcar-zfuelcar[0]][mLoadF]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 128, "Цистерна К.А.С.С.: %d/10000", FracBank[0][kassbenzce]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			BenzFrac();
		}
		else SCM(playerid, COLOR_BLUE, "А где прицеп с бензином?");
	}
	if(GetPVarInt(playerid, "loading_benz") == 20)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(MatHaulF[tmpcar-zfuelcar[0]][mLoadF] == 0 || FracBank[0][sfpdbenz] >= 10000)
			{
				SCM(playerid, COLOR_GREY, "Цистерна SFPD заполнена, либо у Вас пустая цистерна!");
				DeletePVar(playerid,"loading_benz");
				DisablePlayerRaceCheckpoint(playerid);
				return true;
			}
			MatHaulF[tmpcar-zfuelcar[0]][mLoadF] -= 10000;
			FracBank[0][sfpdbenz] += 10000;
			if(FracBank[0][sfpdbenz] > 10000) FracBank[0][sfpdbenz] = 10000;
			DeletePVar(playerid,"loading_benz");
			DisablePlayerRaceCheckpoint(playerid);
			format(YCMDstr, 128, "Бензин успешно доставлен! В цистерне: %d/10000", MatHaulF[tmpcar-zfuelcar[0]][mLoadF]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 128, "Цистерна SFPD: %d/10000", FracBank[0][sfpdbenz]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			BenzFrac();
		}
		else SCM(playerid, COLOR_BLUE, "А где прицеп с бензином?");
	}
	//--------------------------------------------------------------------------
	if(GetPVarInt(playerid, "loading_benz") == 11)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(MatHaulF[tmpcar-zfuelcar[0]][mLoadF] == 0 || FracBank[0][lcnbenz] >= 10000)
			{
				SCM(playerid, COLOR_GREY, "Цистерна LCN заполнена, либо у Вас пустая цистерна!");
				DeletePVar(playerid,"loading_benz");
				DisablePlayerRaceCheckpoint(playerid);
				return true;
			}
			MatHaulF[tmpcar-zfuelcar[0]][mLoadF] -= 10000;
			FracBank[0][lcnbenz] += 10000;
			if(FracBank[0][lcnbenz] > 10000) FracBank[0][lcnbenz] = 10000;
			DeletePVar(playerid,"loading_benz");
			DisablePlayerRaceCheckpoint(playerid);
			format(YCMDstr, 128, "Бензин успешно доставлен! В цистерне: %d/10000", MatHaulF[tmpcar-zfuelcar[0]][mLoadF]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 128, "Цистерна LCN: %d/10000", FracBank[0][lcnbenz]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			BenzFrac();
		}
		else SCM(playerid, COLOR_BLUE, "А где прицеп с бензином?");
	}
	if(GetPVarInt(playerid, "loading_benz") == 12)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(MatHaulF[tmpcar-zfuelcar[0]][mLoadF] == 0 || FracBank[0][yakuzabenz] >= 10000)
			{
				SCM(playerid, COLOR_GREY, "Цистерна Yakuza заполнена, либо у Вас пустая цистерна!");
				DeletePVar(playerid,"loading_benz");
				DisablePlayerRaceCheckpoint(playerid);
				return true;
			}
			MatHaulF[tmpcar-zfuelcar[0]][mLoadF] -= 10000;
			FracBank[0][yakuzabenz] += 10000;
			if(FracBank[0][yakuzabenz] > 10000) FracBank[0][yakuzabenz] = 10000;
			DeletePVar(playerid,"loading_benz");
			DisablePlayerRaceCheckpoint(playerid);
			format(YCMDstr, 128, "Бензин успешно доставлен! В цистерне: %d/10000", MatHaulF[tmpcar-zfuelcar[0]][mLoadF]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 128, "Цистерна Yakuza: %d/10000", FracBank[0][yakuzabenz]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			BenzFrac();
		}
		else SCM(playerid, COLOR_BLUE, "А где прицеп с бензином?");
	}
	if(GetPVarInt(playerid, "loading_benz") == 13)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(MatHaulF[tmpcar-zfuelcar[0]][mLoadF] == 0 || FracBank[0][ballasbenz] >= 10000)
			{
				SCM(playerid, COLOR_GREY, "Цистерна Ballas заполнена, либо у Вас пустая цистерна!");
				DeletePVar(playerid,"loading_benz");
				DisablePlayerRaceCheckpoint(playerid);
				return true;
			}
			MatHaulF[tmpcar-zfuelcar[0]][mLoadF] -= 10000;
			FracBank[0][ballasbenz] += 10000;
			if(FracBank[0][ballasbenz] > 10000) FracBank[0][ballasbenz] = 10000;
			DeletePVar(playerid,"loading_benz");
			DisablePlayerRaceCheckpoint(playerid);
			format(YCMDstr, 128, "Бензин успешно доставлен! В цистерне: %d/10000", MatHaulF[tmpcar-zfuelcar[0]][mLoadF]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 128, "Цистерна Ballas: %d/10000", FracBank[0][ballasbenz]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			BenzFrac();
		}
		else SCM(playerid, COLOR_BLUE, "А где прицеп с бензином?");
	}
	if(GetPVarInt(playerid, "loading_benz") == 14)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(MatHaulF[tmpcar-zfuelcar[0]][mLoadF] == 0 || FracBank[0][vagosbenz] >= 10000)
			{
				SCM(playerid, COLOR_GREY, "Цистерна Vagos заполнена, либо у Вас пустая цистерна!");
				DeletePVar(playerid,"loading_benz");
				DisablePlayerRaceCheckpoint(playerid);
				return true;
			}
			MatHaulF[tmpcar-zfuelcar[0]][mLoadF] -= 10000;
			FracBank[0][vagosbenz] += 10000;
			if(FracBank[0][vagosbenz] > 10000) FracBank[0][vagosbenz] = 10000;
			DeletePVar(playerid,"loading_benz");
			DisablePlayerRaceCheckpoint(playerid);
			format(YCMDstr, 128, "Бензин успешно доставлен! В цистерне: %d/10000", MatHaulF[tmpcar-zfuelcar[0]][mLoadF]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 128, "Цистерна Vagos: %d/10000", FracBank[0][vagosbenz]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			BenzFrac();
		}
		else SCM(playerid, COLOR_BLUE, "А где прицеп с бензином?");
	}
	if(GetPVarInt(playerid, "loading_benz") == 15)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(MatHaulF[tmpcar-zfuelcar[0]][mLoadF] == 0 || FracBank[0][pmbenz] >= 10000)
			{
				SCM(playerid, COLOR_GREY, "Цистерна PM заполнена, либо у Вас пустая цистерна!");
				DeletePVar(playerid,"loading_benz");
				DisablePlayerRaceCheckpoint(playerid);
				return true;
			}
			MatHaulF[tmpcar-zfuelcar[0]][mLoadF] -= 10000;
			FracBank[0][pmbenz] += 10000;
			if(FracBank[0][pmbenz] > 10000) FracBank[0][pmbenz] = 10000;
			DeletePVar(playerid,"loading_benz");
			DisablePlayerRaceCheckpoint(playerid);
			format(YCMDstr, 128, "Бензин успешно доставлен! В цистерне: %d/10000", MatHaulF[tmpcar-zfuelcar[0]][mLoadF]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 128, "Цистерна PM: %d/10000", FracBank[0][pmbenz]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			BenzFrac();
		}
		else SCM(playerid, COLOR_BLUE, "А где прицеп с бензином?");
	}
	if(GetPVarInt(playerid, "loading_benz") == 16)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(MatHaulF[tmpcar-zfuelcar[0]][mLoadF] == 0 || FracBank[0][grovebenz] >= 10000)
			{
				SCM(playerid, COLOR_GREY, "Цистерна Grove заполнена, либо у Вас пустая цистерна!");
				DeletePVar(playerid,"loading_benz");
				DisablePlayerRaceCheckpoint(playerid);
				return true;
			}
			MatHaulF[tmpcar-zfuelcar[0]][mLoadF] -= 10000;
			FracBank[0][grovebenz] += 10000;
			if(FracBank[0][grovebenz] > 10000) FracBank[0][grovebenz] = 10000;
			DeletePVar(playerid,"loading_benz");
			DisablePlayerRaceCheckpoint(playerid);
			format(YCMDstr, 128, "Бензин успешно доставлен! В цистерне: %d/10000", MatHaulF[tmpcar-zfuelcar[0]][mLoadF]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 128, "Цистерна Grove: %d/10000", FracBank[0][grovebenz]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			BenzFrac();
		}
		else SCM(playerid, COLOR_BLUE, "А где прицеп с бензином?");
	}
	if(GetPVarInt(playerid, "loading_benz") == 17)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(MatHaulF[tmpcar-zfuelcar[0]][mLoadF] == 0 || FracBank[0][aztecbenz] >= 10000)
			{
				SCM(playerid, COLOR_GREY, "Цистерна Aztec заполнена, либо у Вас пустая цистерна!");
				DeletePVar(playerid,"loading_benz");
				DisablePlayerRaceCheckpoint(playerid);
				return true;
			}
			MatHaulF[tmpcar-zfuelcar[0]][mLoadF] -= 10000;
			FracBank[0][aztecbenz] += 10000;
			if(FracBank[0][aztecbenz] > 10000) FracBank[0][aztecbenz] = 10000;
			DeletePVar(playerid,"loading_benz");
			DisablePlayerRaceCheckpoint(playerid);
			format(YCMDstr, 128, "Бензин успешно доставлен! В цистерне: %d/10000", MatHaulF[tmpcar-zfuelcar[0]][mLoadF]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 128, "Цистерна Aztec: %d/10000", FracBank[0][aztecbenz]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			BenzFrac();
		}
		else SCM(playerid, COLOR_BLUE, "А где прицеп с бензином?");
	}
	if(GetPVarInt(playerid, "loading_benz") == 18)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(MatHaulF[tmpcar-zfuelcar[0]][mLoadF] == 0 || FracBank[0][rifabenz] >= 10000)
			{
				SCM(playerid, COLOR_GREY, "Цистерна Rifa заполнена, либо у Вас пустая цистерна!");
				DeletePVar(playerid,"loading_benz");
				DisablePlayerRaceCheckpoint(playerid);
				return true;
			}
			MatHaulF[tmpcar-zfuelcar[0]][mLoadF] -= 10000;
			FracBank[0][rifabenz] += 10000;
			if(FracBank[0][rifabenz] > 10000) FracBank[0][rifabenz] = 10000;
			DeletePVar(playerid,"loading_benz");
			DisablePlayerRaceCheckpoint(playerid);
			format(YCMDstr, 128, "Бензин успешно доставлен! В цистерне: %d/10000", MatHaulF[tmpcar-zfuelcar[0]][mLoadF]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 128, "Цистерна Rifa: %d/10000", FracBank[0][rifabenz]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			BenzFrac();
		}
		else SCM(playerid, COLOR_BLUE, "А где прицеп с бензином?");
	}
	if(GetPVarInt(playerid, "loading_benz") == 19)
	{
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(MatHaulF[tmpcar-zfuelcar[0]][mLoadF] == 0 || FracBank[0][bikerbenz] >= 10000)
			{
				SCM(playerid, COLOR_GREY, "Цистерна байкеров заполнена, либо у Вас пустая цистерна!");
				DeletePVar(playerid,"loading_benz");
				DisablePlayerRaceCheckpoint(playerid);
				return true;
			}
			MatHaulF[tmpcar-zfuelcar[0]][mLoadF] -= 10000;
			FracBank[0][bikerbenz] += 10000;
			if(FracBank[0][bikerbenz] > 10000) FracBank[0][bikerbenz] = 10000;
			DeletePVar(playerid,"loading_benz");
			DisablePlayerRaceCheckpoint(playerid);
			format(YCMDstr, 128, "Бензин успешно доставлен! В цистерне: %d/10000", MatHaulF[tmpcar-zfuelcar[0]][mLoadF]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 128, "Цистерна байкеров: %d/10000", FracBank[0][bikerbenz]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			BenzFrac();
		}
		else SCM(playerid, COLOR_BLUE, "А где прицеп с бензином?");
	}
	//--------------------------------------------------------------------------
	if(GetPVarInt(playerid, "loading_job") == 1)
	{
		for(new i; i < 10; i++) DestroyObject(object_job[playerid][i]);
		DeletePVar(playerid, "loading_job");
		DeletePVar(playerid, "Proverka_Neft");
		DisablePlayerRaceCheckpoint(playerid);
		if(FracBank[0][kassnafta] >= 49999) return SCM(playerid,COLOR_GRAD1, "Склад завода К.А.С.С. забит нефтью.");
		FracBank[0][kassnafta] += 10000;
		format(YCMDstr, 100, "Бочки с нефтью доставлены на завод. Нефти на складе: %d/50000 литров", FracBank[0][kassnafta]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
		SPDEx(playerid, 2017, 0, "К.А.С.С","Продолжить развозку нефти?","Да","Нет");
	}
	if(GetPVarInt(playerid, "loading_job") == 2)
	{
		SCM(playerid, 0xF5DEB3AA, "Ожидайте загрузку бочек с нефтью...");
		TogglePlayerControllable(playerid, 0);
		DisablePlayerRaceCheckpoint(playerid);
		SetTimerEx("load_timer", 10000, 0, "i", playerid);
	}
	if(GetPVarInt(playerid, "FuelID") > 0)
	{
		new trailcarid = GetVehicleTrailer(GetPlayerVehicleID(playerid));
		if(GetVehicleModel(trailcarid) != 584)
		{
			SCM(playerid, COLOR_GREEN, "У Вас нет прицепа, езжайте на завод");
			return true;
		}
		new i = FuelInfo[GetPVarInt(playerid, "FuelID")][pBizzid], playerd;
		Delete3DTextLabel(FuelInfo[GetPVarInt(playerid, "FuelID")][pText3D]);
		BizzInfo[i][bProducts] += FuelInfo[GetPVarInt(playerid, "FuelID")][pTill];
		PI[playerid][pPayCheck] += FuelInfo[GetPVarInt(playerid, "FuelID")][pPrice];
		if(BizzInfo[i][bProducts] > 20000) BizzInfo[i][bProducts] = 20000;
		format(YCMDstr, 128, "Вы доставили %i топливо для %s (%s)",
		FuelInfo[GetPVarInt(playerid, "FuelID")][pTill], BizzInfo[i][bMessage], FuelInfo[GetPVarInt(playerid, "FuelID")][pName]);
		SCM(playerid,COLOR_ORANGE,YCMDstr);
		sscanf(FuelInfo[GetPVarInt(playerid, "FuelID")][pName], "u", playerd);
		SCM(playerid, COLOR_WHITE, "Деньги будут перечислены на счет во время зарплаты");
		if(IsPlayerConnected(playerd))
		{
			format(YCMDstr, 128, "Развозчик топлива {ffffff}%s {006699} заказ", Name(playerid));
			SCM(playerd,COLOR_GREEN,YCMDstr);
			format(YCMDstr, 128, "Кол-во: {ffffff}%i {006699}литров , Оплата: {ffffff}$%i{006699}", FuelInfo[GetPVarInt(playerid, "FuelID")][pTill],FuelInfo[GetPVarInt(playerid, "FuelID")][pPrice]);
			SCM(playerd,COLOR_GREEN,YCMDstr);
		}
		for(new p = 0; p <= MAX_PLAYERS; p++)
		{
			if(!IsPlayerConnected(p) == false || GetPVarInt(p, "FuelID") == 0) continue;
			if(GetPVarInt(p, "FuelID") > GetPVarInt(playerid, "FuelID")) SetPVarInt(p, "FuelID", GetPVarInt(p, "FuelID") - 1);
		}
		for(new p = GetPVarInt(playerid, "FuelID"); p <= TOTALFUEL - 1; p++)
		{
			strmid(FuelInfo[p][pName],FuelInfo[p+1][pName],0,strlen(FuelInfo[p+1][pName]),MAX_PLAYER_NAME);
			FuelInfo[p][pBizzid] = FuelInfo[p+1][pBizzid];
			FuelInfo[p][pPrice] = FuelInfo[p+1][pPrice];
			FuelInfo[p][pTill] = FuelInfo[p+1][pTill];
			FuelInfo[p][pStatus] = FuelInfo[p+1][pStatus];
			FuelInfo[p][pText3D] = FuelInfo[p+1][pText3D];
		}
		TOTALFUEL--;
		DeletePVar(playerid, "FuelID");
		DisablePlayerRaceCheckpoint(playerid);
        SetPVarInt(FuelInfo[GetPVarInt(playerid, "FuelID")][pName], "Zakaz", 0);
	}
	if(GetPVarInt(playerid, "ProductID") > 0)
	{
		new i = ProductInfo[GetPVarInt(playerid, "ProductID")][pBizzid], playerd;
		Delete3DTextLabel(ProductInfo[GetPVarInt(playerid, "ProductID")][pText3D]);
		BizzInfo[i][bProducts] += ProductInfo[GetPVarInt(playerid, "ProductID")][pTill];
		if(BizzInfo[i][bProducts] > 2000) BizzInfo[i][bProducts] = 2000;
		PI[playerid][pPayCheck] += 2000;
		format(YCMDstr, 128, "Вы доставили %i товаров для %s (%s)", ProductInfo[GetPVarInt(playerid, "ProductID")][pTill], BizzInfo[i][bMessage], ProductInfo[GetPVarInt(playerid, "ProductID")][pName]);
		SCM(playerid,COLOR_ORANGE,YCMDstr);
		sscanf(ProductInfo[GetPVarInt(playerid, "ProductID")][pName], "u", playerd);
		SCM(playerid, COLOR_WHITE, "2000$ добавлено к Вашей зарплате");
		if(IsPlayerConnected(playerd))
		{
			format(YCMDstr, 128, "Развозчик товаров {ffffff}%s {006699}выполнил Ваш заказ", Name(playerid));
			SCM(playerd,COLOR_GREEN,YCMDstr);
			format(YCMDstr, 128, "Кол-во: {ffffff}%i {006699}товаров , Оплата: {ffffff}$%i{006699}", ProductInfo[GetPVarInt(playerid, "ProductID")][pTill], ProductInfo[GetPVarInt(playerid, "ProductID")][pPrice]);
			SCM(playerd,COLOR_GREEN,YCMDstr);
		}
		for(new p = 0; p <= MAX_PLAYERS; p++)
		{
			if(!IsPlayerConnected(p) == false || GetPVarInt(p, "ProductID") == 0) continue;
			if(GetPVarInt(p, "ProductID") > GetPVarInt(playerid, "ProductID")) SetPVarInt(p, "ProductID", GetPVarInt(p, "ProductID") - 1);
		}
		for(new p = GetPVarInt(playerid, "ProductID"); p <= TOTALPRODUCT - 1; p++)
		{
			strmid(ProductInfo[p][pName],ProductInfo[p+1][pName],0,strlen(ProductInfo[p+1][pName]),MAX_PLAYER_NAME);
			ProductInfo[p][pBizzid] = ProductInfo[p+1][pBizzid];
			ProductInfo[p][pPrice] = ProductInfo[p+1][pPrice];
			ProductInfo[p][pTill] = ProductInfo[p+1][pTill];
			ProductInfo[p][pStatus] = ProductInfo[p+1][pStatus];
			ProductInfo[p][pText3D] = ProductInfo[p+1][pText3D];
		}
		TOTALPRODUCT--;
		DeletePVar(playerid, "ProductID");
		DisablePlayerRaceCheckpoint(playerid);
		SetPVarInt(FuelInfo[GetPVarInt(playerid, "ProductID")][pName], "Zakaz", 0);
	}
	return true;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	if(!success)
	{
		printf("FAILED RCON LOGIN BY IP %s USING PASSWORD %s",ip, password);
		new pip[16];
		new name[MAX_PLAYER_NAME];
		for(new idx=0, i=0; idx<cvector_size(players); idx++)
		{
			i = cvector_get(players, idx);
			GetPlayerIp(i, pip, sizeof(pip));
			GetPlayerName(i, name, MAX_PLAYER_NAME);
			if(!strcmp(ip, pip, true))
			{
				format(YCMDstr,64, "[Защита] %s забанен за попытку взлома RCON.",name);
				GetPlayerIp(i,pip,sizeof(pip));
				format(YCMDstr,64, "ID: %d | IP: %s",i,pip);
				ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
				PI[i][pLocked] = 1;
				BanEx(i, YCMDstr);
				return true;
			}
		}
	}
	return true;
}
public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
    SetPVarInt(playerid,"Anti_Cheats",gettime() + 5);
	if(pickupid == FL[playerid][oldpickup]) return true;
	FL[playerid][oldpickup] = pickupid;
	timepickup[playerid] = 3;
	new Float:zx;
	GetPlayerPos(playerid, FL[playerid][PickupX], FL[playerid][PickupY], zx);
	if(pickupid == zavfrak[0])
	{
		SetPlayerInterior(playerid,7);
		SetPlayerPos(playerid,313.5666,-141.3252,999.6016);
		SetPlayerFacingAngle(playerid, 16.0505);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == zavfrak[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2590.5229,2789.0391,10.8203);
		SetPlayerFacingAngle(playerid, 171.4908);
		SetPlayerVirtualWorld(playerid,0);
	}
	if(pickupid == zavfrak[2])
	{
		SetPlayerInterior(playerid,7);
		SetPlayerPos(playerid,302.2965,-139.6816,1004.0625);
		SetPlayerFacingAngle(playerid, 2.2159);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == zavfrak[3])
	{
		SetPlayerInterior(playerid,7);
		SetPlayerPos(playerid,308.5304,-140.3202,1004.0625);
		SetPlayerFacingAngle(playerid, 317.4088);
		SetPlayerVirtualWorld(playerid,1);
	}
	if(pickupid == casinfo[0])
	{
		new bouse = PI[playerid][pPbiskey];
		if(PI[playerid][pPbiskey] != 48) return SCM(playerid,COLOR_GREY,"Вы не владелец The Four Dragons Casino");
		new string[500];
		format(string, 500, "Казино: %s\n\nСписок крупье:",BizzInfo[bouse][bMessage]);
		format(string, 500, "%s\n\n[0] Крупье: %s\n[1] Крупье: %s\n[2] Крупье: %s\n[3] Крупье: %s\n[4] Крупье: %s",string,BizzInfo[bouse][caKrupie1],BizzInfo[bouse][caKrupie2],BizzInfo[bouse][caKrupie3],BizzInfo[bouse][caKrupie4],BizzInfo[bouse][caKrupie5]);
		SPDEx(playerid,2145,0,"INFO",string,"Скрыть","");
	}
	if(pickupid == casinfo[1])
	{
		new bouse = PI[playerid][pPbiskey];
		if(PI[playerid][pPbiskey] != 49) return SCM(playerid,COLOR_GREY,"Вы не владелец Casino Caligula");
		new string[500];
		format(string, 500, "Казино: %s\n\nСписок крупье:",BizzInfo[bouse][bMessage]);
		format(string, 500, "%s\n\n[0] Крупье: %s\n[1] Крупье: %s\n[2] Крупье: %s\n[3] Крупье: %s\n[4] Крупье: %s",string,BizzInfo[bouse][caKrupie1],BizzInfo[bouse][caKrupie2],BizzInfo[bouse][caKrupie3],BizzInfo[bouse][caKrupie4],BizzInfo[bouse][caKrupie5]);
		SPDEx(playerid,2145,0,"INFO",string,"Скрыть","");
	}
	if(pickupid == casdress[0])
	{
		if(GetKrupie(playerid,48) == 1)
		{
			if(GetPVarInt(playerid,"CasinoForma") == 0)
			{
				SCM(playerid, COLOR_GREY, "Вы начали работу крупье. Чтобы крутить рулетку, введите: /twist");
				SCM(playerid, COLOR_GREY, "За каждую прокрученую рулетку, к Вашей зарплате прибавляется $100. Зарплата в PayDay. ");
				switch(PI[playerid][pSex])
				{
				case 1: SetPlayerSkin(playerid,171);
				case 2: SetPlayerSkin(playerid,172);
				}
				SetPVarInt(playerid, "CasinoForma", 1);
				return true;
			}
			else if(GetPVarInt(playerid,"CasinoForma") == 1)
			{
				SCM(playerid, COLOR_BLUE, "Вы закончили работу крупье.");
				SetPlayerSkin(playerid, PI[playerid][pChar][PI[playerid][pViborChar]]);
				SetPVarInt(playerid, "CasinoForma", 0);
				return true;
			}
		}
	}
	if(pickupid == casdress[1])
	{
		if(GetKrupie(playerid,49) == 1)
		{
			if(GetPVarInt(playerid,"CasinoForma") == 0)
			{
				SCM(playerid, COLOR_GREY, "Вы начали работу крупье. Чтобы крутить рулетку, введите: /twist");
				SCM(playerid, COLOR_GREY, "За каждую прокрученую рулетку, к Вашей зарплате прибавляется $100. Зарплата в PayDay. ");
				switch(PI[playerid][pSex])
				{
				case 1: SetPlayerSkin(playerid,171);
				case 2: SetPlayerSkin(playerid,172);
				}
				SetPVarInt(playerid, "CasinoForma", 1);
				return true;
			}
			else if(GetPVarInt(playerid,"CasinoForma") == 1)
			{
				SCM(playerid, COLOR_BLUE, "Вы закончили работу крупье.");
				SetPlayerSkin(playerid, PI[playerid][pChar][PI[playerid][pViborChar]]);
				SetPVarInt(playerid, "CasinoForma", 0);
				return true;
			}
		}
	}
	else if(pickupid == AvtoPrava)
	{
		if(FL[playerid][CP] == 777) { DisablePlayerCheckpoint(playerid), FL[playerid][CP] = 0; }
		if(PI[playerid][pCarLic] == 1) return SCM(playerid, COLOR_GRAD1, "Вы уже имеете водительские права.");
		if(PI[playerid][pStraf] >= 10) return SCM(playerid, COLOR_GRAD1, "У Вас не оплачены квитанции за штрафы. Оплатите их в банке.");
		SPDEx(playerid,10023,0, "Экзамен по вождению","Добро пожаловать в Автошколу.\nЕсли Вы желаете сдать экзамен по вождению, нажмите < Далее >\n\n- Стоимость экзамена: $500", "Далее", "Отмена");
	}
	else if(pickupid == AvtoBoat)
	{
		if(FL[playerid][CP] == 777) { DisablePlayerCheckpoint(playerid), FL[playerid][CP] = 0; }
		if(PI[playerid][pBoatLic] == 1) return SCM(playerid, COLOR_GRAD1, "Вы уже имеете лицензию на морской транспорт.");
		SPDEx(playerid,10024,0, "Морская школа","Добро пожаловать в морскую школу.\nЕсли Вы желаете сдать экзамен, нажмите < Далее >\n\n- Стоимость экзамена: $1000", "Далее", "Отмена");
	}
	else if(pickupid == AvtoFly)
	{
		if(FL[playerid][CP] == 777) { DisablePlayerCheckpoint(playerid), FL[playerid][CP] = 0; }
		if(PI[playerid][pFlyLic] == 1) return SCM(playerid, COLOR_GRAD1, "Вы уже имеете лицензию пилота.");
		SPDEx(playerid,10025,0, "Школа пилотов","Добро пожаловать в школу пилотов.\nЕсли Вы желаете сдать экзамен, нажмите < Далее >\n\n- Стоимость экзамена: $2000", "Далее", "Отмена");
	}
	else if(pickupid == prs[0])
	{
		if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, "Вам запрещено сюда заходить!");
		SetPlayerInterior(playerid,2);
		SetPlayerPos(playerid,2544.0391,-1304.7266,1025.0703);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == prs[1])
	{
		if(!IsANonf(playerid)) return SCM(playerid, COLOR_GREY, "Вы не можете выйти из тюрьмы!");
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-308.2557,1546.0571,75.5625);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == ash[0])
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,-1947.5205,-134.6925,3001.0859);
		SetPlayerFacingAngle(playerid, 178.9191);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == ash[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-2028.1010,-98.4560,35.1641);
		SetPlayerFacingAngle(playerid, 25.5450);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == ash[2])
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,-1963.3466,-157.4282,3001.0859);
		SetPlayerFacingAngle(playerid, 341.2740);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == ash[3])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-2030.6868,-123.5916,35.2063);
		SetPlayerFacingAngle(playerid, 165.7822);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == gunjob)
	{
		if(PI[playerid][pMember] != 24) return SCM(playerid,COLOR_GREY,"Вы не сотрудник завода К.А.С.С.!");
		if(GetPVarInt(playerid, "Gunjob") == 0) SPDEx(playerid, 2421, 0, "Сборщик оружия", "Вы действительно хотите начать работу?", "Да", "Нет");
		else SPDEx(playerid, 2422, 0, "Сборщик оружия", "Вы действительно хотите завершить работу?", "Да", "Нет");
	}
	if(pickupid == plinfo)
	{
		new ptinf[450];
		format(ptinf, 450,"Собрано: %d гр.наркотиков\nОборот: $%d\nЦена: $%d\n\nINFO:\n/buydrugs - купить наркотики\n/seit - посев\n/narkoput - положить мешок\n/narkocena - установить цену (Лидер)\n/oborot - снять деньги (Лидер)",
		FracBank[0][pKol],FracBank[0][pSuma],FracBank[0][pCena]);
		SPDEx(playerid,10340,0, "Плантация",ptinf, "X", "X");
	}
	if(pickupid == plinfo2)
	{
		new ptinf[450];
		format(ptinf, 450,"Собрано: %d гр.наркотиков\nОборот: $%d\nЦена: $%d\n\nINFO:\n/buydrugs - купить наркотики\n/posev - посев\n/narkoput - положить мешок\n/drugscena - установить цену (Лидер)\n/plantmoney - снять деньги (Лидер)",
		FracBank[0][pKol2],FracBank[0][pSuma2],FracBank[0][pCena2]);
		SPDEx(playerid,10341,0, "Плантация",ptinf, "X", "X");
	}
	else if(pickupid == rob)
	{
		if(robh[playerid] != true)return SCM(playerid,COLOR_GREY,"У тебя нет материалов для сдачи");
		robh[playerid] = false;
		PI[playerid][pCash] += 500;
		PI[playerid][pRobHouse] = 1;
		SCM(playerid,COLOR_GREY,"Вы сдали ограбленное на 500$");
		return true;
	}
	else if(pickupid == chistigo)
	{
		if(PI[playerid][pJob] == 19)
		{
			if(FL[playerid][chisttimer] > 0)
			{
				format(YCMDstr, 128, "Нельзя так часто заступать на дежурство {ffffff}(Осталось %d секунд(ы)).", FL[playerid][chisttimer]);
				SCM(playerid, COLOR_GREY, YCMDstr);
				return true;
			}
			if(GetPVarInt(playerid,"chistgo") == 0)
			{
				SetPlayerCheckpoint(playerid,-2094.7971,17.9220,34.9197, 2.0);
				SetPVarInt(playerid, "checkpo1", 1);
				SetPVarInt(playerid, "chistgo", 1);
				if(PI[playerid][pSex] == 1) { SetPlayerSkin(playerid, 8); }
				else if(PI[playerid][pSex] == 2) { SetPlayerSkin(playerid, 157); }
				SCM(playerid, COLOR_GREY, "Вы вышли на дежурство!");
				SCM(playerid, COLOR_NEWS, "Садитесь в уборочную машину и едьте по меткам очищать улицу.");
			}
			else if(GetPVarInt(playerid,"chistgo") == 1)
			{
				SetPVarInt(playerid, "chistgo", 0);
				SetPlayerSkin(playerid, PI[playerid][pChar]);
				if(GetPVarInt(playerid,"rabotach") == 1)
				{
					SCM(playerid, COLOR_LIGHTBLUE, "Ты получил за свою работу: {ffffff}$500!");
					SCM(playerid, COLOR_GREY, "Вы вышли с дежурства!");
					GameTextForPlayer(playerid,"~G~+$500",3000,5);
					PI[playerid][pCash] += 500;
					SetPVarInt(playerid, "rabotach", 0);
				}
				else
				{
					SCM(playerid,COLOR_RED,"Ты не работал, поэтому не получил зарплату!");
				}
			}
			FL[playerid][chisttimer] = 120;
		}
		return true;
	}
	else if(pickupid == Family)
	{
		if(PI[playerid][pDonatemoney] < 500) return SPDEx(playerid,2521,0, "INFO: {ffffff}Семья","Недостаточно доната для создания семьи{ffffff} ( Необходимо 500 доната )", "Закрыть", "");
		if(player_family[playerid]) return SCM(playerid, -1,"Вы уже состоите в семье!");
		SPDEx(playerid,993,DIALOG_STYLE_INPUT,"{FFD300}Создание семьи","\n{6495ED}Внимание! Вы хотите создать семью.\nЕсли Вы создадите семью, у Вас снимет - 500 доната.\n\nВведите название семьи.","Создать","Отмена");
		return true;
	}
	else if(pickupid == medkarta)
	{
		new test = 0;
		for(new idx=0, i=0; idx<cvector_size(players); idx++)
		{
			i = cvector_get(players, idx);
			if(PI[i][pMember] == 4 || PI[i][pMember] == 8) test++;
		}
		if(test > 0) return SCM(playerid,COLOR_GREY,"В данный момент на сервере присутствуют медики!");
		if(PI[playerid][pMedKarta] != 0) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть медицинская карта!");
		PI[playerid][pMedKarta] = 1;
		SCM(playerid,COLOR_GREY,"Вы получили медицинскую карточку. Она потребуется для вступления в Гос. организацию.");
		SCM(playerid,COLOR_GREY,"Чтобы посмотреть медицинскую карту, введите: /showkarta");
		return true;
	}
	else if(pickupid == maskirovka)
	{
		if(PI[playerid][pMember] == 2)
		{
			SPDEx(playerid,5523,2, "Маскировка", "[-] Снять маскировку\nОдежда LCN\nОдежда Yakuza\nОдежда PM\nОдежда Vagos\nОдежда Ballas\nОдежда Grove\nОдежда Rifa\nОдежда Aztec\nОдежда Байкеров\nОдежда Гражданина 1\nОдежда Гражданина 2", "Выбрать", "Отмена");
		}
	}
	else if(pickupid >= airport[0] && pickupid <= airport[2]) SPDEx(playerid,5524,2, "Покупка воздушного транспорта", "- Sparrow [ID: 469]|[200 доната]\n- Rustler [ID: 476]|[300 доната]\n- Maverick [ID: 487]|[300 доната]\n- Beagle [ID: 511]|[300 доната]\n- Stuntplane [ID: 513]|[300 доната]\n- Shamal [ID: 519]|[500 доната]\n- Nevada [ID: 553]|[500 доната]", "Выбрать", "Отмена");
	else if(pickupid == airsp[0]) SPDEx(playerid,5525,0, "Аэропорт", "Вызвать личный воздушный транспорт?", "Да", "Нет");
	else if(pickupid == airsp[1]) SPDEx(playerid,5526,0, "Аэропорт", "Вызвать личный воздушный транспорт?", "Да", "Нет");
	else if(pickupid == airsp[2]) SPDEx(playerid,5527,0, "Аэропорт", "Вызвать личный воздушный транспорт?", "Да", "Нет");
	else if(pickupid == FormaFracPic[0])
	{
		if(PI[playerid][pMember] == 1) SPDEx(playerid,1010,0, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
	}
	else if(pickupid == FormaFracPic[1])
	{
		if(PI[playerid][pMember] == 2) SPDEx(playerid,1010,0, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
	}
	else if(pickupid == FormaFracPic[2])
	{
		if(PI[playerid][pMember] == 3)
		{
			if(PI[playerid][pRank] <= 2) return SCM(playerid,COLOR_GREY,"Раздевалка доступна с 3 ранга!");
			SPDEx(playerid,1010,0, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
		}
	}
	else if(pickupid == FormaFracPic[3])
	{
		if(PI[playerid][pMember] == 4) SPDEx(playerid,1010,0, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
	}
	else if(pickupid == FormaFracPic[4])
	{
		if(PI[playerid][pMember] == 7) SPDEx(playerid,1010,0, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
	}
	else if(pickupid == FormaFracPic[5])
	{
		if(PI[playerid][pMember] == 9) SPDEx(playerid,1010,0, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
	}
	else if(pickupid == FormaFracPic[6])
	{
		if(PI[playerid][pMember] == 10) SPDEx(playerid,1010,0, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
	}
	else if(pickupid == FormaFracPic[9])
	{
		if(PI[playerid][pMember] == 19)
		{
			if(PI[playerid][pRank] <= 2) return SCM(playerid,COLOR_GREY,"Раздевалка доступна с 3 ранга!");
			SPDEx(playerid,1010,0, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
		}
	}
	else if(pickupid == FormaFracPic[11])
	{
		if(PI[playerid][pMember] == 21) SPDEx(playerid,1010,0, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
	}
	else if(pickupid == FormaFracPic[12])
	{
		if(PI[playerid][pMember] == 8) SPDEx(playerid,1010,0, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
	}
	else if(pickupid == FormaFracPic[13])
	{
		if(PI[playerid][pMember] == 4) SPDEx(playerid,1010,0, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
	}
	else if(pickupid == FormaFracPic[14])
	{
		if(PI[playerid][pMember] == 22) SPDEx(playerid,1010,0, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
	}
	else if(pickupid == FormaFracPic[16])
	{
		if(PI[playerid][pMember] == 24) SPDEx(playerid,1010,0, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
	}
	else if(pickupid == FormaFracPic[17])
	{
		if(PI[playerid][pMember] == 25) SPDEx(playerid,1010,0, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
	}
	else if(pickupid == sportzal[0])
	{
		if(PI[playerid][pJob] == 6 && PI[playerid][pMember] == 0)
		{
			SetPlayerSkin(playerid, 49);
		}
		SetPlayerInterior(playerid,5);
		SetPlayerPos(playerid,771.4412,-2.7885,1000.7279);
		SetPlayerFacingAngle(playerid, 21.2131);
	}
	else if(pickupid == sportzal[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2227.1162,-1723.1353,13.5533);
		SetPlayerFacingAngle(playerid, 130.5909);
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
		if(PI[playerid][pMember] ==0) {	SetPlayerSkin(playerid,PI[playerid][pChar]);}
	}
	else if(pickupid == pdd)
	{
		GameTextForPlayer(playerid, "~r~/pdd", 1000, 1);
	}
	else if(pickupid == zavbenz[0])// Появление в топливном цехе
	{
		SetPlayerInterior(playerid,17);
		SetPlayerPos(playerid,-959.2034,1948.5277,9.0000);
		SetPlayerFacingAngle(playerid, 180.1676);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == zavbenz[1])// Появление на улице из топливного цеха
	{
		if(GetPVarInt(playerid, "loading_nafta") == 1) return SCM(playerid,COLOR_GRAD1, "Ожидайте переработки нефти!");
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2622.6826,2828.2712,10.8203);
		SetPlayerFacingAngle(playerid, 89.9734);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == medicss[0])// Мед. Центр СФ
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,-1051.5651,696.0434,1507.3469);
		SetPlayerFacingAngle(playerid, 176.7205);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == medicss[1])// Мед. Центр СФ выход
	{
		if(PI[playerid][pHospital] == 1) return SCM(playerid, COLOR_GRAD1,"У Вас не закончен сеанс лечения!");
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2664.4895,636.7567,14.4531);
		SetPlayerFacingAngle(playerid, 180.9984);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == medicss[2])// Мед. Центр ЛС
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,-1051.5651,696.0434,1507.3469);
		SetPlayerFacingAngle(playerid, 176.7205);
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if(pickupid == medicss[3])// Мед. Центр ЛС выход
	{
		if(PI[playerid][pHospital] == 1) return SCM(playerid, COLOR_GRAD1,"У Вас не закончен сеанс лечения!");
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1176.2983,-1323.4597,14.0144);
		SetPlayerFacingAngle(playerid, 270.0000);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == medicss[4])// Мед. Центр СФ появление в регистратуре
	{
		if(IsAMedic(playerid))
		{
			SetPlayerInterior(playerid,1);
			SetPlayerPos(playerid,-1059.0754,683.8909,1507.3469);
			SetPlayerFacingAngle(playerid, 270.3379);
			SetPlayerVirtualWorld(playerid, 1);
		}
		else SCM(playerid, COLOR_RED, "Вы не сотрудник Мед. Центра!");
	}
	else if(pickupid == medicss[5])// Мед. Центр СФ появление из регистратуры
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,-1058.3889,690.0973,1507.3469);
		SetPlayerFacingAngle(playerid, 270.3379);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == medicss[6])// Мед. Центр LS появление в регистратуре
	{
		if(IsAMedic(playerid))
		{
			SetPlayerInterior(playerid,1);
			SetPlayerPos(playerid,-1059.0754,683.8909,1507.3469);
			SetPlayerFacingAngle(playerid, 270.3379);
			SetPlayerVirtualWorld(playerid, 2);
		}
		else SCM(playerid, COLOR_RED, "Вы не сотрудник Мед. Центра!");
	}
	else if(pickupid == medicss[7])// Мед. Центр LS появление из регистратуры
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,-1058.3889,690.0973,1507.3469);
		SetPlayerFacingAngle(playerid, 270.3379);
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if(pickupid == medicss[8])// Мед. Центр SF появление в служебном отделе
	{
		if(IsAMedic(playerid))
		{
			SetPlayerInterior(playerid,1);
			SetPlayerPos(playerid,-1342.6780,342.3005,1561.6119);
			SetPlayerFacingAngle(playerid, 88.5092);
			SetPlayerVirtualWorld(playerid, 1);
		}
		else SCM(playerid, COLOR_RED, "Вы не сотрудник Мед. Центра!");
	}
	else if(pickupid == medicss[9])// Мед. Центр SF появление из служебного отдела
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,-1049.3181,689.0137,1507.3469);
		SetPlayerFacingAngle(playerid, 11.7184);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == medicss[10])// Мед. Центр LS появление в служебном отделе
	{
		if(IsAMedic(playerid))
		{
			SetPlayerInterior(playerid,1);
			SetPlayerPos(playerid,-1342.6780,342.3005,1561.6119);
			SetPlayerFacingAngle(playerid, 88.5092);
			SetPlayerVirtualWorld(playerid, 2);
		}
		else SCM(playerid, COLOR_RED, "Вы не сотрудник Мед. Центра!");
	}
	else if(pickupid == medicss[11])// Мед. Центр LS появление из служебного отдела
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,-1049.3181,689.0137,1507.3469);
		SetPlayerFacingAngle(playerid, 11.7184);
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if(pickupid == cerkva[0])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2011.4294,1118.0157,53.9249);
		SetPlayerFacingAngle(playerid, 270.0000);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == cerkva[1])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-1986.1572,1117.9795,53.7210);
		SetPlayerFacingAngle(playerid, 270.0000);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sanpic[0])
	{
		if(FL[playerid][PEfir] != 255)
		{
			SCM(playerid, COLOR_WHITE, "Вы вышли из прямого эфира");
			FL[playerid][PEfir] = 255;
		}
		if(FL[playerid][Pefir] == 1)
		{
			FL[playerid][PEfir] = 255;
			SCM(playerid, COLOR_WHITE, "Вы вышли из прямого эфира");
		}
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-2521.7100,-622.2742,132.7491);
		SetPlayerFacingAngle(playerid, 312.1454);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sanpic[1])
	{
		if(PI[playerid][pNkeys] == 1 || PI[playerid][pMember] == 9)
		{
			SetPlayerInterior(playerid,1);
			SetPlayerPos(playerid,2314.9053,-63.8046,1049.6899);
			SetPlayerFacingAngle(playerid, 268.4196);
			SetPlayerVirtualWorld(playerid, 2);
		}
		else
		{
			SCM(playerid, COLOR_RED, "Дверь заперта! У вас нет пропуска");
		}
	}
	else if(pickupid == lcnpic[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1451.7043,749.8376,11.0234);
		SetPlayerFacingAngle(playerid, 89.1102);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == lcnpic[1])
	{
		SetPlayerInterior(playerid, 5);
		SetPlayerPos(playerid,1298.6915,-794.2542,1084.0078);
		SetPlayerFacingAngle(playerid, 349.0933);
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if(pickupid == pband[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-112.1687,-2.5213,3.1172);
		SetPlayerFacingAngle(playerid, 259.0845);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == pband[1])
	{
		SetPlayerInterior(playerid, 3);
		SetPlayerPos(playerid,291.4482,308.5232,999.1484);
		SetPlayerFacingAngle(playerid, 88.1044);
		SetPlayerVirtualWorld(playerid, 1);
	}
	if(pickupid == pickcutt)
	{
		if(PI[playerid][pMember] != 0) return SCM(playerid, COLOR_GRAD1, "Вы состоите в организации");
		if(woodcutter[playerid] == true)
		{
			SPDEx(playerid,116,0,"Работа Лесоруба","{FFFFFF}Вы действительно желаете закончить рабочий день?","Да","Нет");
		}
		else
		{
			SPDEx(playerid,115,0,"Работа Лесоруба","{FFFFFF}Вы желаете начать работу лесоруба?","Да","Нет");
		}
	}
	else if(pickupid == zip[0])
	{
		zips[playerid] = 1;
		SetPlayerInterior(playerid,18);
		SetPlayerPos(playerid,161.6730,-95.5809,1001.8047);
		SetPlayerFacingAngle(playerid, 1.0183);
	}
	else if(pickupid == zip[1])
	{
		zips[playerid] = 0;
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1885.0364,862.9141,35.1719);
		SetPlayerFacingAngle(playerid, 151.0559);
	}
	else if(pickupid == zip1[0])
	{
		zips1[playerid] = 1;
		SetPlayerInterior(playerid,3);
		SetPlayerPos(playerid,207.054992,-138.804992,1003.507812);
		SetPlayerFacingAngle(playerid, 1.0183);
	}
	else if(pickupid == zip1[1])
	{
		zips1[playerid] = 0;
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2090.4124,2220.8069,10.8203);
		SetPlayerFacingAngle(playerid, 185.9128);
	}
	else if(pickupid == victim2[0])
	{
		SetPlayerInterior(playerid,5);
		SetPlayerPos(playerid,225.2378,-8.0487,1002.2109);
		SetPlayerFacingAngle(playerid, 89.5070);
	}
	else if(pickupid == victim2[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,458.0936,-1501.5496,31.0372);
		SetPlayerFacingAngle(playerid, 101.4322);
	}
	else if(pickupid == rmpic[1])
	{
		SetPlayerInterior(playerid, 5);
		SetPlayerPos(playerid,1298.6915,-794.2542,1084.0078);
		SetPlayerFacingAngle(playerid, 349.0933);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == rmpic[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,940.2619,1733.4958,8.8516);
		SetPlayerFacingAngle(playerid, 276.0833);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == yakexit[1])
	{
		SetPlayerInterior(playerid, 5);
		SetPlayerPos(playerid,1298.6915,-794.2542,1084.0078);
		SetPlayerFacingAngle(playerid, 349.0933);
	}
	else if(pickupid == yakexit[0])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1457.5305,2773.4219,10.8203);
		SetPlayerFacingAngle(playerid, 276.0466);
	}
	else if(pickupid == voenkomat[0]) // Появление на заднем дворе военкомата
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,1165.3018,1341.4730,10.8125);
		SetPlayerFacingAngle(playerid, 276.0466);
	}
	else if(pickupid == voenkomat[1]) // Появление из заднего двора военкомата
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,1165.9556,1348.7821,10.9219);
		SetPlayerFacingAngle(playerid, 276.0466);
	}
	else if(pickupid == barbike[0])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,681.5419,-476.1377,16.3359);
		SetPlayerFacingAngle(playerid, 276.0466);
	}
	else if(pickupid == barbike[1])
	{
		if(PI[playerid][pMember] == 23)
		{
			SetPlayerInterior(playerid, 11);
			SetPlayerVirtualWorld(playerid, 132);
			SetPlayerPos(playerid,502.0296,-70.4563,998.7578);
			SetPlayerFacingAngle(playerid, 276.0466);
		}
		else
		{
			SCM(playerid, COLOR_WHITE, "Дверь заперта!");
		}
	}
	else if(pickupid == fbiintpic1[0])
	{
		SetPlayerInterior(playerid, 6);
		SetPlayerVirtualWorld(playerid, 130);
		SetPlayerPos(playerid,317.1226,-165.4391,1141.0859);
		SetPlayerFacingAngle(playerid, 276.0466);
	}
	else if(pickupid == fbiintpic1[1])
	{
		SetPlayerInterior(playerid, 6);
		SetPlayerVirtualWorld(playerid, 130);
		SetPlayerPos(playerid,316.4232,-163.4157,1101.0959);
		SetPlayerFacingAngle(playerid, 276.0466);
	}
	else if(pickupid == fbiintpic1[2])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,1040.7236,1015.8877,11.0000);
		SetPlayerFacingAngle(playerid, 276.0466);
	}
	else if(pickupid == fbikpz)
	{
		if(IsAArm(playerid) || IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] > 0)
		{
			SetPlayerInterior(playerid,6);
			SetPlayerVirtualWorld(playerid, 130);
			SetPlayerPos(playerid,317.1226,-165.4391,1141.0859);
			SetPlayerFacingAngle(playerid, 9.7598);
			keys[playerid] -= 1;
		}
		else
		{
			SCM(playerid, COLOR_WHITE, "Дверь заперта!");
		}
	}
	else if(pickupid == fbi)
	{
		if(IsAArm(playerid)|| IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] > 0)
		{
			SetPlayerInterior(playerid,6);
			SetPlayerVirtualWorld(playerid, 130);
			SetPlayerPos(playerid,301.3255,-170.3915,1101.0959);
			SetPlayerFacingAngle(playerid, 9.7598);
			keys[playerid] -= 1;
		}
		else
		{
			SCM(playerid, COLOR_WHITE, "Дверь заперта!");
		}
	}
	else if(pickupid == lspd[0])
	{
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,-1657.8488,691.6396,1008.7549);
		SetPlayerFacingAngle(playerid, 299.9806);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == lspd[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1552.8159,-1675.4498,16.1953);
		SetPlayerFacingAngle(playerid, 91.8310);
		SetPlayerVirtualWorld(playerid, 0);
		keys[playerid] -= 1;
	}
	else if(pickupid == lspd[2])
	{
		if(IsAArm(playerid) || IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] > 0)
		{
			SetPlayerInterior(playerid,6);
			SetPlayerPos(playerid,316.3837,-167.8547,999.5938);
			SetPlayerFacingAngle(playerid, 34.3574);
			SetPlayerVirtualWorld(playerid, 5);
			keys[playerid] -= 1;
		}
		else SCM(playerid, COLOR_WHITE, "Вы не законник или у Вас нет пропуска!");
	}
	else if(pickupid == lspd[3])
	{
		if(IsAArm(playerid) || IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] > 0)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,1568.6962,-1692.2069,5.8906);
			SetPlayerFacingAngle(playerid, 259.617370);
			SetPlayerVirtualWorld(playerid, 0);
			keys[playerid] -= 1;
		}
		else SCM(playerid, COLOR_WHITE, "Вы не законник или у Вас нет пропуска!");
	}
	else if(pickupid == lspd[4])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1528.010864,-1678.141723,5.890625);
		SetPlayerFacingAngle(playerid, 259.617370);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == lspd[5])// С гаража ЛСПД
	{
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,-1643.0703,713.4843,1006.8359);
		SetPlayerFacingAngle(playerid, 178.7431);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == lspd[6])
	{
		if(IsAArm(playerid) || IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] > 0)
		{
			SetPlayerInterior(playerid,6);
			SetPlayerPos(playerid,246.3101,75.0345,1003.6406);
			SetPlayerFacingAngle(playerid, 359.3365);
			SetPlayerVirtualWorld(playerid, 1);
		}
		else SCM(playerid, COLOR_WHITE, "Вы не законник или у Вас нет пропуска!");
	}
	else if(pickupid == lspd[7])
	{
		if(IsAArm(playerid) || IsACop(playerid) || IsAMayor(playerid) || keys[playerid] > 0)
		{
			SetPlayerInterior(playerid,6);
			SetPlayerPos(playerid,246.3049,68.8195,1003.6406);
			SetPlayerFacingAngle(playerid, 184.8083);
			SetPlayerVirtualWorld(playerid, 1);
			keys[playerid] -= 1;
		}
		else SCM(playerid, COLOR_WHITE, "Вы не законник или у Вас нет пропуска!");
	}
	else if(pickupid == sf[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1606.4532,674.2636,-5.2422);
		SetPlayerFacingAngle(playerid, 357.2527);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sf[1])
	{
		if(IsAArm(playerid) || IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] > 0)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,-1590.8289,716.0479,-5.2422);
			SetPlayerFacingAngle(playerid, 269.9364);
			SetPlayerVirtualWorld(playerid, 0);
			keys[playerid]--;
		}
		else SCM(playerid, COLOR_WHITE, "Вы не законник или у Вас нет пропуска!");
	}
	else if(pickupid == sf[2])
	{
		if(IsAArm(playerid) || IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] > 0)
		{
			SetPlayerInterior(playerid,10);
			SetPlayerPos(playerid,-1643.0703,713.4843,1006.8359);
			SetPlayerFacingAngle(playerid, 178.7431);
			SetPlayerVirtualWorld(playerid, 2);
			keys[playerid]--;
		}
		else SCM(playerid, COLOR_WHITE, "Вы не законник или у Вас нет пропуска!");
	}
	else if(pickupid == sf[3])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1605.3654,717.2635,11.9505);
		SetPlayerFacingAngle(playerid, 3.7106);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sf[4])
	{
		if(IsAArm(playerid) || IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] > 0)
		{
			SetPlayerInterior(playerid,6);
			SetPlayerPos(playerid,316.3837,-167.8547,999.5938);
			SetPlayerFacingAngle(playerid, 34.3574);
			SetPlayerVirtualWorld(playerid, 1);
		}
		else SCM(playerid, COLOR_WHITE, "Вы не законник или у Вас нет пропуска!");
	}
	else if(pickupid == sf[5])
	{
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,-1657.8488,691.6396,1008.7549);
		SetPlayerFacingAngle(playerid, 299.9806);
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if(pickupid == lvpdpic[0])
	{
		if(IsAArm(playerid) || IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] > 0)
		{
			SetPlayerInterior(playerid,3);
			SetPlayerVirtualWorld(playerid, 122);
			SetPlayerPos(playerid,-1643.0703,713.4843,1006.8359);
			SetPlayerFacingAngle(playerid, 178.7431);
		}
		else SCM(playerid, COLOR_WHITE, "Вы не законник или у Вас нет пропуска!");
	}
	else if(pickupid == lvpdpic[1])
	{
		if(IsAArm(playerid) || IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] > 0)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid,2295.1934,2451.8459,10.8203);
			SetPlayerFacingAngle(playerid, 94.8742);
			keys[playerid]--;
		}
		else SCM(playerid, COLOR_WHITE, "Вы не законник или у Вас нет пропуска!");
	}
	else if(pickupid == lvpdpic[2])
	{
		if(IsAArm(playerid) || IsACop(playerid) || IsAMayor(playerid)|| keys[playerid] > 0)
		{
			SetPlayerInterior(playerid,3);
			SetPlayerVirtualWorld(playerid, 122);
			SetPlayerPos(playerid,-1657.8488,691.6396,1008.7549);
			SetPlayerFacingAngle(playerid, 299.9806);
		}
		else SCM(playerid, COLOR_WHITE, "Вы не законник или у Вас нет пропуска!");
	}
	else if(pickupid == lvpdpic[3])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2340.1965,2455.9792,14.9688);
		SetPlayerFacingAngle(playerid, 178.3347);
	}
	else if(pickupid == lvpdpic[4]) SPDEx(playerid,8240,0, "Вход", "Куда вы хотите войти?", "Склад", "На крышу");
	else if(pickupid == lvpdpic[5])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2293.3225,2468.6162,10.8203);
		SetPlayerFacingAngle(playerid, 93.6957);
	}
	else if(pickupid == lvpdpic[6]) SPDEx(playerid,8241,0, "Вход", "Куда Вы хотите войти?", "Склад", "Вниз");
	else if(pickupid >= chekmatlva[0] && pickupid <= chekmatlva[9])
	{
		if(!IsAGang(playerid)) return SCM(playerid,COLOR_GREY, "Вы не бандит");
		if(FracBank[0][farmmatbi] <= 100) return SCM(playerid,COLOR_GRAD1, "На складе нет материалов");
		if(PI[playerid][pMats] > 500) return SCM(playerid,COLOR_GRAD1, "У вас на руках уже есть материалы");
		SCM(playerid, 0x6495EDFF, "Вы взяли несколько комплектов");
		FracBank[0][farmmatbi] -= 500;
		PI[playerid][pMats] += 500;
	}
	else if(pickupid >= chekmats[0] && pickupid <= chekmats[2])
	{
		if(!IsAGang(playerid)) return SCM(playerid,COLOR_GREY, "Вы не бандит");
		if(FracBank[0][farmmatsf] <= 100) return SCM(playerid,COLOR_GRAD1, "На складе нет материалов");
		if(PI[playerid][pMats] > 500) return SCM(playerid,COLOR_GRAD1, "У вас на руках уже есть материалы");
		SCM(playerid, 0x6495EDFF, "Вы взяли несколько комплектов");
		FracBank[0][farmmatsf] -= 500;
		PI[playerid][pMats] += 500;
	}
	else if(pickupid == buygunzakon[0])
	{
		if(FormaFrac[playerid] == 2)
		{
			SPDEx(playerid, 6112, 2, "Склад", "- Tazer [100 пт.]\n- MP5 [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз\n- Дымовые шашки [5 шт.]", "Выбрать", "Отмена");
		}
		else return SCM(playerid, COLOR_WHITE, "Вы не агент FBI!");
	}
	else if(pickupid == buygunzakon[1])
	{
		if(IsACop(playerid))
		{
			SPDEx(playerid, 6113, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
		}
		else return SCM(playerid, COLOR_WHITE, "Вы не состоите в SAPD!");
	}
	else if(pickupid == buygunzakon[2])
	{
		if(IsACop(playerid))
		{
			SPDEx(playerid, 6116, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
		}
		else return SCM(playerid, COLOR_WHITE, "Вы не cостоите в SAPD!");
	}
	else if(pickupid == buygunzakon[3])
	{
		if(IsACop(playerid))
		{
			SPDEx(playerid, 6115, 2, "Склад", "- Дубинка\n- Tazer [100 пт.]\n- Shotgun [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Полицейский щит\n- Противогаз", "Выбрать", "Отмена");
		}
		else return SCM(playerid, COLOR_WHITE, "Вы не состоите в SAPD!");
	}
	else if(pickupid == buygunzakon[4])
	{
		if(FormaFrac[playerid] == 22)
		{
			SPDEx(playerid, 6114, 2, "Склад", "- Дубинка\n- Deagle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]\n- Противогаз", "Выбрать", "Отмена");
		}
		else return SCM(playerid, 0xB4B5B7FF,"Вы не сотрудник Адм. Президента");
	}
	else if(pickupid == buygunzakon[5])
	{
		if(FormaFrac[playerid] == 19)
		{
			SPDEx(playerid, 6117, 2, "Склад", "- Desert Eagle [100 пт.]\n- M4 [100 пт.]\n- Sniper Rifle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]", "Выбрать", "Отмена");
		}
		else return SCM(playerid, 0xB4B5B7FF,"Вы не состоите в Армии Сухопутных Войск");
	}
	else if(pickupid == buygunzakon[6])
	{
		if(FormaFrac[playerid] == 3)
		{
			SPDEx(playerid, 6118, 2, "Склад", "- Desert Eagle [100 пт.]\n- M4 [100 пт.]\n- Sniper Rifle [100 пт.]\n- Сухой паёк\n- Броня\n- Аптечка [2 шт.]", "Выбрать", "Отмена");
		}
		else return SCM(playerid, 0xB4B5B7FF,"Вы не состоите в Военно-Морском Флоте");
	}
	else if(pickupid == buygunzakon[7])
	{
		if(PI[playerid][pMember] == 24 && PI[playerid][pRank] >= 3)
		{
			SPDEx(playerid, 6111, 2, "Склад", "- Desert Eagle [100 пт.]\n- M4 [100 пт.]\n- Сухой паёк\n- Аптечка [2 шт.]\n- Броня", "Выбрать", "Отмена");
		}
		else return SCM(playerid, COLOR_WHITE, "Оружие выдается только охране и руководству завода!");
	}
	else if(pickupid == passlic)
	{
		SPDEx(playerid, 1323, 2, "INFO", "- Получить паспорт\n- Получить лицензию на бизнес", "Ок", "Отмена");
	}
	else if(pickupid == gunpiclic)
	{
		new test = 0;
		for(new idx=0, i=0; idx<cvector_size(players); idx++)
		{
			i = cvector_get(players, idx);
			if(PI[i][pMember] == 1 || PI[i][pMember] == 10 || PI[i][pMember] == 21) test++;
		}
		if(test > 0) return SCM(playerid,COLOR_GREY,"Сейчас на сервере присутствуют офицеры полиции. Получите лицензию на оружие у них!");
		if(PI[playerid][pGunLic] != 0) return SCM(playerid,COLOR_GREY,"У Вас уже есть лицензия на оружие.");
		if(PI[playerid][pLevel] > 1)
		{
			if(PI[playerid][pCash] < 5000) return SCM(playerid,COLOR_GREY,"Недостаточно денег");
			PI[playerid][pCash] -= 5000;
			GameTextForPlayer(playerid, "~r~-$5000", 5000, 1);
		}
		SCM(playerid,COLOR_GREY,"Вам выдали лицензию на оружие. Посмотреть лицензии: /licenses");
		PI[playerid][pGunLic] = 1;
		return true;
	}
	else if(pickupid >= medserdce[0] && pickupid <= medserdce[20])
	{
	    new Float:GETHPB;
		GetPlayerHealth(playerid,GETHPB);
		if(GETHPB >= 100.0) return SCM(playerid,COLOR_GREY,"Вам не требуется лечение. Вы здоровы!");
	    if(PI[playerid][pHospital] == 1) return SCM(playerid,COLOR_GREY,"Вы уже начали сеанс лечения.");
	    PI[playerid][pHospital] = 1;
	    HPTimer[playerid] = SetTimerEx("lechenie", 1500, true, "d", playerid);
	}
	else if(pickupid == serdce)
	{
		new Float:GETHPs;
		GetPlayerHealth(playerid,GETHPs);
		if(GETHPs >= 100.0) return SCM(playerid,COLOR_GREY,"Вам не требуется лечение. Вы здоровы!");
		if(PI[playerid][pLevel] > 1)
		{
			if(PI[playerid][pCash] < 500) return SCM(playerid,COLOR_GREY,"Недостаточно денег");
			PI[playerid][pCash] -= 500;
			GameTextForPlayer(playerid, "~r~-$500", 5000, 1);
		}
		SetPlayerHealthAC(playerid, 100);
	}
	else if(pickupid == cashs)
	{
		if(Works[playerid] == false) return SCM(playerid,0xFFFFFFFF, "Вы еще не устроились!");
		if(FL[playerid][JobAmmount] == 0) return SCM(playerid,0xFFFFFFFF, "Ты еще ничего не заработал!");
		format(YCMDstr, 128, "Грузчиком вы заработали: {FFFFFF}$%d",FL[playerid][JobAmmount]*100);
		PI[playerid][pCash] += FL[playerid][JobAmmount]*100;
		SCM(playerid,COLOR_GREEN,YCMDstr);
		FL[playerid][JobAmmount] = 0;
		Works[playerid] = false; FL[playerid][JobAmmount] = 0; JobCP[playerid] = 0; FL[playerid][Employer] = 999;
		SetPlayerSkin(playerid,PI[playerid][pChar][PI[playerid][pViborChar]]);
		SCM(playerid,COLOR_RED, "Рабочий день завершён!");
		DisablePlayerCheckpoint(playerid);
	}
	else if(pickupid == clothes)
	{
		SPDEx(playerid,4423,0, "Раздевалка", "Выберите одежду", "Форма", "Обычная");
	}
	else if(pickupid == skinshop[0])
	{
		if(PI[playerid][pSex] != 1) return SCM(playerid, COLOR_WHITE, "Вы ошиблись кабинкой");
		if(FormaFrac[playerid] == 0)
		{
			SetPlayerInterior(playerid,5);
			SCM(playerid, COLOR_BLUE, "Для выбора скина используйте клавиши передвижения{ffffff}(up, down)");
			SCM(playerid, COLOR_BLUE, "Для применения используйте клавишу пробел{ffffff}(space)");
			SetPlayerPos(playerid,222.3489,-8.5845,1002.2109);
			SetPlayerFacingAngle(playerid, 266.7302);
			SetPlayerCameraPos(playerid,225.3489,-8.5845,1002.2109);
			SetPlayerCameraLookAt(playerid,222.3489,-8.5845,1002.2109);
			TogglePlayerControllable(playerid, 0);
			ChangeSkin[playerid] = 0;
			new skin = Random(2,200);
			SetPlayerVirtualWorld(playerid,skin);
			if(!IsValidMenu(BuyClothes))
			{
				BuyClothes = CreateMenu("Clothes", 1, 50.0, 160.0, 110.0);
				SetMenuColumnHeader(BuyClothes, 0, "Choose Skin");
				AddMenuItem(BuyClothes, 0, "Next >>");
				AddMenuItem(BuyClothes, 0, "<< Previous");
				AddMenuItem(BuyClothes, 0, "Done");
				AddMenuItem(BuyClothes, 0, "Exit");
			}
			ShowMenuForPlayer(BuyClothes, playerid);
			return true;
		}
	}
	else if(pickupid == skinshop[1])
	{
		if(PI[playerid][pSex] != 2) return SCM(playerid, COLOR_WHITE, "Вы ошиблись кабинкой");
		if(FormaFrac[playerid] == 0)
		{
			SetPlayerInterior(playerid,5);
			SCM(playerid, COLOR_BLUE, "Для выбора скина используйте клавиши передвижения{ffffff}(up, down)");
			SCM(playerid, COLOR_BLUE, "Для применения используйте клавишу пробел{ffffff}(space)");
			SetPlayerPos(playerid,222.3489,-8.5845,1002.2109);
			SetPlayerFacingAngle(playerid, 266.7302);
			SetPlayerCameraPos(playerid,225.3489,-8.5845,1002.2109);
			SetPlayerCameraLookAt(playerid,222.3489,-8.5845,1002.2109);
			TogglePlayerControllable(playerid, 0);
			ChangeSkin[playerid] = 0;
			new skin = Random(2,200);
			SetPlayerVirtualWorld(playerid,skin);
			if(!IsValidMenu(BuyClothes))
			{
				BuyClothes = CreateMenu("Clothes", 1, 50.0, 160.0, 110.0);
				SetMenuColumnHeader(BuyClothes, 0, "Choose Skin");
				AddMenuItem(BuyClothes, 0, "Next >>");
				AddMenuItem(BuyClothes, 0, "<< Previous");
				AddMenuItem(BuyClothes, 0, "Done");
				AddMenuItem(BuyClothes, 0, "Exit");
			}
			ShowMenuForPlayer(BuyClothes, playerid);
			return true;
		}
	}
	else if(pickupid == skinshop[2])
	{
		if(PI[playerid][pSex] != 1) return SCM(playerid, COLOR_WHITE, "Вы ошиблись кабинкой");
		if(FormaFrac[playerid] == 0)
		{
			SetPlayerInterior(playerid,5);
			SCM(playerid, COLOR_BLUE, "Для выбора скина используйте клавиши передвижения{ffffff}(up, down)");
			SCM(playerid, COLOR_BLUE, "Для применения используйте клавишу пробел{ffffff}(space)");
			SetPlayerPos(playerid,222.3489,-8.5845,1002.2109);
			SetPlayerFacingAngle(playerid, 266.7302);
			SetPlayerCameraPos(playerid,225.3489,-8.5845,1002.2109);
			SetPlayerCameraLookAt(playerid,222.3489,-8.5845,1002.2109);
			TogglePlayerControllable(playerid, 0);
			ChangeSkin[playerid] = 0;
			new skin = Random(2,200);
			SetPlayerVirtualWorld(playerid,skin);
			if(!IsValidMenu(BuyClothes1))
			{
				BuyClothes1 = CreateMenu("Clothes", 1, 50.0, 160.0, 110.0);
				SetMenuColumnHeader(BuyClothes1, 0, "Choose Skin");
				AddMenuItem(BuyClothes1, 0, "Next >>");
				AddMenuItem(BuyClothes1, 0, "<< Previous");
				AddMenuItem(BuyClothes1, 0, "Done");
				AddMenuItem(BuyClothes1, 0, "Exit");
			}
			ShowMenuForPlayer(BuyClothes1, playerid);
			return true;
		}
	}
	else if(pickupid == skinshop[3])
	{
		if(PI[playerid][pSex] != 2) return SCM(playerid, COLOR_WHITE, "Вы ошиблись кабинкой");
		if(FormaFrac[playerid] == 0)
		{
			SetPlayerInterior(playerid,5);
			SCM(playerid, COLOR_BLUE, "Для выбора скина используйте клавиши передвижения{ffffff}(up, down)");
			SCM(playerid, COLOR_BLUE, "Для применения используйте клавишу пробел{ffffff}(space)");
			SetPlayerPos(playerid,222.3489,-8.5845,1002.2109);
			SetPlayerFacingAngle(playerid, 266.7302);
			SetPlayerCameraPos(playerid,225.3489,-8.5845,1002.2109);
			SetPlayerCameraLookAt(playerid,222.3489,-8.5845,1002.2109);
			TogglePlayerControllable(playerid, 0);
			ChangeSkin[playerid] = 0;
			new skin = Random(2,200);
			SetPlayerVirtualWorld(playerid,skin);
			if(!IsValidMenu(BuyClothes1))
			{
				BuyClothes1 = CreateMenu("Clothes", 1, 50.0, 160.0, 110.0);
				SetMenuColumnHeader(BuyClothes1, 0, "Choose Skin");
				AddMenuItem(BuyClothes1, 0, "Next >>");
				AddMenuItem(BuyClothes1, 0, "<< Previous");
				AddMenuItem(BuyClothes1, 0, "Done");
				AddMenuItem(BuyClothes1, 0, "Exit");
			}
			ShowMenuForPlayer(BuyClothes1, playerid);
			return true;
		}
	}
	else if(pickupid == skinshop[4])
	{
		if(PI[playerid][pSex] != 1) return SCM(playerid, COLOR_WHITE, "Вы ошиблись кабинкой");
		if(FormaFrac[playerid] == 0)
		{
			SetPlayerInterior(playerid,5);
			SCM(playerid, COLOR_BLUE, "Для выбора скина используйте клавиши передвижения{ffffff}(up, down)");
			SCM(playerid, COLOR_BLUE, "Для применения используйте клавишу пробел{ffffff}(space)");
			SetPlayerPos(playerid,222.3489,-8.5845,1002.2109);
			SetPlayerFacingAngle(playerid, 266.7302);
			SetPlayerCameraPos(playerid,225.3489,-8.5845,1002.2109);
			SetPlayerCameraLookAt(playerid,222.3489,-8.5845,1002.2109);
			TogglePlayerControllable(playerid, 0);
			ChangeSkin[playerid] = 0;
			new skin = Random(2,200);
			SetPlayerVirtualWorld(playerid,skin);
			if(!IsValidMenu(BuyClothes2))
			{
				BuyClothes2 = CreateMenu("Clothes", 1, 50.0, 160.0, 110.0);
				SetMenuColumnHeader(BuyClothes2, 0, "Choose Skin");
				AddMenuItem(BuyClothes2, 0, "Next >>");
				AddMenuItem(BuyClothes2, 0, "<< Previous");
				AddMenuItem(BuyClothes2, 0, "Done");
				AddMenuItem(BuyClothes2, 0, "Exit");
			}
			ShowMenuForPlayer(BuyClothes2, playerid);
			return true;
		}
	}
	else if(pickupid == skinshop[5])
	{
		if(PI[playerid][pSex] != 2) return SCM(playerid, COLOR_WHITE, "Вы ошиблись кабинкой");
		if(FormaFrac[playerid] == 0)
		{
			SetPlayerInterior(playerid,5);
			SCM(playerid, COLOR_BLUE, "Для выбора скина используйте клавиши передвижения{ffffff}(up, down)");
			SCM(playerid, COLOR_BLUE, "Для применения используйте клавишу пробел{ffffff}(space)");
			SetPlayerPos(playerid,222.3489,-8.5845,1002.2109);
			SetPlayerFacingAngle(playerid, 266.7302);
			SetPlayerCameraPos(playerid,225.3489,-8.5845,1002.2109);
			SetPlayerCameraLookAt(playerid,222.3489,-8.5845,1002.2109);
			TogglePlayerControllable(playerid, 0);
			ChangeSkin[playerid] = 0;
			new skin = Random(2,200);
			SetPlayerVirtualWorld(playerid,skin);
			if(!IsValidMenu(BuyClothes2))
			{
				BuyClothes2 = CreateMenu("Clothes", 1, 50.0, 160.0, 110.0);
				SetMenuColumnHeader(BuyClothes2, 0, "Choose Skin");
				AddMenuItem(BuyClothes2, 0, "Next >>");
				AddMenuItem(BuyClothes2, 0, "<< Previous");
				AddMenuItem(BuyClothes2, 0, "Done");
				AddMenuItem(BuyClothes2, 0, "Exit");
			}
			ShowMenuForPlayer(BuyClothes2, playerid);
			return true;
		}
	}
	else if(pickupid == marenter[0]) // Появление в интерьере правительства
	{
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid,-501.3068,289.1126,2001.0950);
		SetPlayerFacingAngle(playerid, 357.6113);
	}
	else if(pickupid == marenter[1]) // Появление на улице из Правительства
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,1481.0709,-1768.5067,18.7958);
		SetPlayerFacingAngle(playerid, 358.5513);
	}
	else if(pickupid == marenter[2])
	{
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid,-513.4494,296.0094,2001.0859);
		SetPlayerFacingAngle(playerid, 267.5526);
	}
	else if(pickupid == marenter[3])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,1552.6539,-1792.5781,13.5469);
		SetPlayerFacingAngle(playerid, 270.6626);
	}
	else if(pickupid == marenter[4])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,1434.6140,-1793.7125,33.4297);
		SetPlayerFacingAngle(playerid, 86.6874);
	}
	else if(pickupid == marenter[5])
	{
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid,-488.4620,295.4572,2001.0859);
		SetPlayerFacingAngle(playerid, 88.5674);
	}
	else if(pickupid == marenter[6])
	{
		if(IsAArm(playerid) || IsACop(playerid) || IsAMayor(playerid) || IsAMedic(playerid) || PI[playerid][pPkeys] == 1)
		{
			SetPlayerInterior(playerid,1);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerPos(playerid,-501.1788,317.2599,2004.5909);
			SetPlayerFacingAngle(playerid, 359.7610);
		}
		else SCM(playerid, COLOR_WHITE, "Вы не Гос. Сотрудник или у вас нет пропуска!");
	}
	else if(pickupid == marenter[7])
	{
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerPos(playerid,-501.2420,310.4895,2004.5909);
		SetPlayerFacingAngle(playerid, 180.2193);
	}
	else if(pickupid == rabota)
	{
		if(PI[playerid][pPbiskey] != 255) return SCM(playerid, COLOR_GRAD1, "Бизнесмен не может устроиться на работу");
		SPDEx(playerid, 10092, 0, "Устройство на работу", "Вы желаете просмотреть список доступных работ?", "Да", "Нет");
		return true;
	}
	else if(pickupid == centr[0]) // Появление в интерьере центра занятости
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,1408.1350,-1694.7673,23.0315);
		SetPlayerFacingAngle(playerid, 15.4044);
	}
	else if(pickupid == centr[1]) // Появление на улице из центра занятости
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,1415.4752,-1701.4749,13.5395);
		SetPlayerFacingAngle(playerid, 239.1031);
	}
	else if(pickupid == armpick[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,-1333.7402,451.8710,7.1875);
		SetPlayerFacingAngle(playerid, 352.0128);
		return true;
	}
	else if(pickupid == armpick[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,-1387.3125,440.4622,30.0820);
		SetPlayerFacingAngle(playerid, 167.7996);
		return true;
	}
	else if(pickupid == rifa[0])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2185.96,-1811.94,13.55);
		SetPlayerFacingAngle(playerid, 400);
	}
	else if(pickupid == rifa[1])
	{
		SetPlayerInterior(playerid,8);
		SetPlayerVirtualWorld(playerid, 63);
		SetPlayerPos(playerid,2807.2239,-1172.5020,1025.5703);
		SetPlayerFacingAngle(playerid, 360);
	}
	else if(pickupid == vagospic[0])
	{
		SetPlayerInterior(playerid,4);
		SetPlayerVirtualWorld(playerid, 75);
		SetPlayerPos(playerid,303.2970,307.1475,1003.5391);
		SetPlayerFacingAngle(playerid, 500);
	}
	else if(pickupid == vagospic[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2791.5144,-1614.4312,10.9219);
		SetPlayerFacingAngle(playerid, 330.4577);
	}
	else if(pickupid == grooveenter)
	{
		SetPlayerInterior(playerid,3);
		SetPlayerPos(playerid,2496.1580,-1694.5743,1014.7422);
		SetPlayerFacingAngle(playerid,177.8856);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pickupid == grooveexit)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2495.1199,-1688.3727,13.7653);
		SetPlayerFacingAngle(playerid, 4.2929);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == aztecpic[0])
	{
		SetPlayerInterior(playerid,8);
		SetPlayerVirtualWorld(playerid, 36);
		SetPlayerPos(playerid,-42.31,1408.18,1084.43);
		SetPlayerFacingAngle(playerid, 1000);
	}
	else if(pickupid == aztecpic[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid,2754.3679,-1962.8965,13.5455);
		SetPlayerFacingAngle(playerid, 178.1356);
	}
	else if(pickupid == bankpic[0]) // вход в банк ЛС
	{
		SetPlayerInterior(playerid, -1);
		SetPlayerPos(playerid,1386.6760,-26.9202,1000.8729);
		SetPlayerFacingAngle(playerid, 90.2685);
		SetPlayerVirtualWorld(playerid,1);
	}
	else if(pickupid == bankpic[1]) // выход из банка ЛС
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,1495.4015,-1284.1047,14.5301);
		SetPlayerFacingAngle(playerid, 183.9641);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == bankpic[2])
	{
		SetPlayerInterior(playerid, 1);
		SetPlayerPos(playerid,2143.6895,1610.0402,993.6882);
		SetPlayerFacingAngle(playerid, 357.8575);
		SetPlayerVirtualWorld(playerid,2);
	}
	else if(pickupid == bankpic[3])
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid,-2167.5911,252.6915,35.3283);
		SetPlayerFacingAngle(playerid, 209.7472);
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == bankmenu[0])
	{
	    if(GetPVarInt(playerid,"Prodaet") == 1) return SCM(playerid,COLOR_GREY,"Во время покупки имущества - запрещено пользоваться банковскими услугами!");
		if(PI[playerid][pPinStat] == 1)
		{
			format(YCMDstr,48,"Для пользования услугами, введите свой PIN-Code:");
			SPDEx(playerid,2304,1,"Проверка",YCMDstr,"Ок","Отмена");
			return true;
		}
		new listitems[] = "{ff0000}[1] {ffffff}Снять со счёта\n{ff0000}[2] {ffffff}Положить на счёт\n{ff0000}[3] {ffffff}Информация\n{ff0000}[4] {ffffff}Пополнить счёт бизнеса\n{ff0000}[4] {ffffff}Пополнить счёт Автомастерской\n{ff0000}[6] {ffffff}Оплата штрафов\n{ff0000}[7] {ffffff}Перевод денег\n{ff0000}[8] {ffffff}Настройка PIN-Code";
		SPDEx(playerid, 8810, 2, "Банковские услуги", listitems, "Выбрать", "Закрыть");
	}
	else if(pickupid == ballaspickup[0])
	{
		SetPlayerPos(playerid, -2160.4556,642.0797,1052.3817);
		SetPlayerInterior(playerid, 1);
		PI[playerid][pInt] = 1;
		SetPlayerVirtualWorld(playerid, 11);
	}
	else if(pickupid == ballaspickup[1])
	{
		SetPlayerPos(playerid, 1988.3625,-1283.1885,28.4881);
		SetPlayerFacingAngle(playerid, 275.2441);
		SetPlayerInterior(playerid, 0);
		PI[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid,0);
	}
	else if(pickupid == sklad[0])
	{
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,316.9104,-168.6356,999.5938);
		SetPlayerFacingAngle(playerid, 355.8037);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sklad[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,335.6148,1917.3633,17.8271);
		SetPlayerFacingAngle(playerid, 92.2485);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sklad[2])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1370.39,498.79,11.20);
		SetPlayerFacingAngle(playerid, 270.0000);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pickupid == sklad[3])
	{
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,316.9104,-168.6356,999.5938);
		SetPlayerFacingAngle(playerid, 355.8037);
		SetPlayerVirtualWorld(playerid, 3);
	}
	else if(pickupid == tirammo[0])// Появление в тире ЛС
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,286.1349,-26.3654,1001.5156);
		SetPlayerFacingAngle(playerid, 267.9535);
		SetPlayerVirtualWorld(playerid,51);
	}
	else if(pickupid == tirammo[1])// Выход из тира ЛС
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,286.2149,-33.1413,1001.5156);
		SetPlayerFacingAngle(playerid, 179.8825);
		SetPlayerVirtualWorld(playerid,51);
	}
	else if(pickupid == tirammo[2])// Появление в тире СФ
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,286.1349,-26.3654,1001.5156);
		SetPlayerFacingAngle(playerid, 267.9535);
		SetPlayerVirtualWorld(playerid,52);
	}
	else if(pickupid == tirammo[3])// Выход из тира СФ
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,286.2149,-33.1413,1001.5156);
		SetPlayerFacingAngle(playerid, 179.8825);
		SetPlayerVirtualWorld(playerid,52);
	}
	else if(pickupid == tirammo[4])// Появление в тире ЛВ
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,286.1349,-26.3654,1001.5156);
		SetPlayerFacingAngle(playerid, 267.9535);
		SetPlayerVirtualWorld(playerid,53);
	}
	else if(pickupid == tirammo[5])// Выход из тира ЛВ
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,286.2149,-33.1413,1001.5156);
		SetPlayerFacingAngle(playerid, 179.8825);
		SetPlayerVirtualWorld(playerid,53);
	}
	else if(pickupid == tirammo[6])// Появление в тире Гетто
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,286.1349,-26.3654,1001.5156);
		SetPlayerFacingAngle(playerid, 267.9535);
		SetPlayerVirtualWorld(playerid,54);
	}
	else if(pickupid == tirammo[7])// Выход из тира Гетто
	{
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid,286.2149,-33.1413,1001.5156);
		SetPlayerFacingAngle(playerid, 179.8825);
		SetPlayerVirtualWorld(playerid,54);
	}
	else if(pickupid == plen[0])
	{
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,308.0302,-159.7244,999.5938);
		SetPlayerFacingAngle(playerid, 258.2231);
	}
	else if(pickupid == plen[1]) 
	{
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,303.6572,-159.7246,999.5938);
		SetPlayerFacingAngle(playerid, 88.7500);
	}
	else if(pickupid >= PickZavBen[0] && pickupid <= PickZavBen[5])
	{
		if(PI[playerid][pMember] == 24)
		{
			if(GetPVarInt(playerid, "loading_nafta") == 1) return SCM(playerid,COLOR_GRAD1, "Ожидайте переработки нефти!");
			if(FracBank[0][kassnafta] <= 0) return SCM(playerid,COLOR_GRAD1, "На складе нет нефти для переработки!");
			if(FracBank[0][kassbenz] >= 49999) return SCM(playerid,COLOR_GRAD1, "Склад завода К.А.С.С. забит бензином.");
			ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,0,0,0,0,1);
			timenafta[playerid] = 30;
			SCM(playerid,COLOR_GREY,"Активирован процес изготовления бензина. Идёт переработка нефти...");
			SetPVarInt(playerid, "loading_nafta", 1);
		}
		else SCM(playerid,COLOR_GREY,"Вы не работник завода К.А.С.С.");
	}
	else if(pickupid >= PickupRazd[0] && pickupid <= PickupRazd[15])
	{
		if(PI[playerid][pPhousekey] != 999)
		{
			new bouse = PI[playerid][pPhousekey];
			if(GetPlayerVirtualWorld(playerid) != bouse+50) return true;
			if(FormaFrac[playerid] != 0 && PI[playerid][pMember] > 0) return SCM(playerid,COLOR_GREY,"Вы не можете использовать гардероб! ( Если вы состоите в гос. организации, переоденьтесь на базе )");
			SetPlayerPos(playerid,181.5215,-88.0678,1002.0234);
			SetPlayerFacingAngle(playerid, 92.6158);
			SetPlayerCameraPos(playerid,179.1173,-88.0198,1002.0234);
			SetPlayerCameraLookAt(playerid,179.1173,-88.0198,1002.0234);
			SetPlayerInterior(playerid,18);
			if(PI[playerid][pChar][1] == 0) PI[playerid][pChar][1] = 230;
			if(PI[playerid][pChar][2] == 0) PI[playerid][pChar][2] = 230;
			format(YCMDstr, 256,"Вешалка 1 [%d]\nВешалка 2 [%d]\nВешалка 3 [%d]",PI[playerid][pChar][0],PI[playerid][pChar][1],PI[playerid][pChar][2]);
			SPDEx(playerid,10399,2, "Гардероб",YCMDstr, "Одеть", "Выход");
		}
	}
	for(new h = 1; h <= TotalHouse; h++)
	{
		if(pickupid == House[h][hPickup])
		{
			if(House[h][hOwned] == 1)
			{
				new ttextt[32];
				if(IsPlayerConnected(GetPlayerID(House[h][hOwner]))) ttextt = "[{22ff00}Online{F2EEF0}]";
				else if(!IsPlayerConnected(GetPlayerID(House[h][hOwner]))) ttextt = "[{ff001c}Offline{F2EEF0}]";
				new ttexttt[20];
				if(House[h][hGarage] == 1) { ttexttt = "Есть"; }
				else if(House[h][hGarage] == 0) { ttexttt = "Нет"; }
				new text[32];
				if(House[h][hLock] == 0) { text = "{22ff00}Открыта"; } else { text = "{ff001c}Закрыта"; }
				if(House[h][hKlass] == 0)format(YCMDstr, 256, "{FFFFFF}Владелец: {F2EEF0}%s %s\n{ffffff}Дверь: %s\n\n{FFFFFF}Класс: {FFFF00}Nope\n{FFFFFF}Номер дома: {FFFF00}%d\n{FFFFFF}Гараж: {FFFF00}%s",House[h][hOwner],ttextt,text,h,ttexttt);
				else if(House[h][hKlass] == 1)format(YCMDstr, 256, "{FFFFFF}Владелец: {F2EEF0}%s %s\nДверь: %s\n\n{FFFFFF}Класс: {FFFF00}D\n{FFFFFF}Номер дома: {FFFF00}%d\n{FFFFFF}Гараж: {FFFF00}%s",House[h][hOwner],ttextt,text,h,ttexttt);
				else if(House[h][hKlass] == 2)format(YCMDstr, 256, "{FFFFFF}Владелец: {F2EEF0}%s %s\nДверь: %s\n\n{FFFFFF}Класс: {FFFF00}C\n{FFFFFF}Номер дома: {FFFF00}%d\n{FFFFFF}Гараж: {FFFF00}%s",House[h][hOwner],ttextt,text,h,ttexttt);
				else if(House[h][hKlass] == 3)format(YCMDstr, 256, "{FFFFFF}Владелец: {F2EEF0}%s %s\nДверь: %s\n\n{FFFFFF}Класс: {FFFF00}B\n{FFFFFF}Номер дома: {FFFF00}%d\n{FFFFFF}Гараж: {FFFF00}%s",House[h][hOwner],ttextt,text,h,ttexttt);
				else format(YCMDstr, 256, "{FFFFFF}Владелец: {F2EEF0}%s %s\nДверь: %s\n\n{FFFFFF}Класс:{FFFF00} A\n{FFFFFF}Номер дома: {FFFF00}%d",House[h][hOwner],ttextt,text,h);
				SPDEx(playerid,10075,0, "Дом занят",YCMDstr, "Войти", "Отмена");
				return true;
			}
			else
			{
				new ttexttt[20];
				if(House[h][hGarage] == 1) { ttexttt = "Есть"; }
				else if(House[h][hGarage] == 0) { ttexttt = "Нет"; }
				if(House[h][hKlass] == 0) format(YCMDstr, 256, "{FFFFFF}Цена: {FFFF00}%d\n{FFFFFF}Класс: {FFFF00}Nope\n{FFFFFF}Номер дома: {FFFF00}%d\n{FFFFFF}Гараж: {FFFF00}%s\n\n{FFFFFF}Введите: {FFFF00}/buyhouse{ffffff} для покупки дома",House[h][hValue],h,ttexttt);
				else if(House[h][hKlass] == 1) format(YCMDstr, 256, "{FFFFFF}Цена: {FFFF00}%d\n{FFFFFF}Класс: {FFFF00}D\n{FFFFFF}Номер дома: {FFFF00}%d\n{FFFFFF}Гараж: {FFFF00}%s\n\n{FFFFFF}Введите: {FFFF00}/buyhouse{ffffff} для покупки дома",House[h][hValue],h,ttexttt);
				else if(House[h][hKlass] == 2) format(YCMDstr, 256, "{FFFFFF}Цена: {FFFF00}%d\n{FFFFFF}Класс: {FFFF00}C\n{FFFFFF}Номер дома: {FFFF00}%d\n{FFFFFF}Гараж: {FFFF00}%s\n\n{FFFFFF}Введите: {FFFF00}/buyhouse{ffffff} для покупки дома",House[h][hValue],h,ttexttt);
				else if(House[h][hKlass] == 3) format(YCMDstr, 256, "{FFFFFF}Цена: {FFFF00}%d\n{FFFFFF}Класс: {FFFF00}B\n{FFFFFF}Номер дома: {FFFF00}%d\n{FFFFFF}Гараж: {FFFF00}%s\n\n{FFFFFF}Введите: {FFFF00}/buyhouse{ffffff} для покупки дома",House[h][hValue],h,ttexttt);
				else format(YCMDstr, 256, "{FFFFFF}Цена: {FFFF00}%d\n{FFFFFF}Класс:{FFFF00} A\n{FFFFFF}Номер дома: {FFFF00}%d\n\n{FFFFFF}Введите: {FFFF00}/buyhouse{ffffff} для покупки дома",House[h][hValue],h);
				SPDEx(playerid,10026,0, "Дом свободен",YCMDstr, "Войти", "Отмена");
				return true;
			}
		}
	}
	for(new h = 1; h <= TotalHotel; h++)
	{
		if(pickupid == HotelInfo[h][oPickup])
		{
			if(HotelInfo[h][oOwned] == 1)
			{
				new ttextt[32];
				if(IsPlayerConnected(GetPlayerID(HotelInfo[h][oOwner]))) ttextt = "[{22ff00}Online{F2EEF0}]";
				else if(!IsPlayerConnected(GetPlayerID(HotelInfo[h][oOwner]))) ttextt = "[{ff001c}Offline{F2EEF0}]";
				new text[32];
				if(HotelInfo[h][oLock] == 0) { text = "{22ff00}Открыта"; } else { text = "{ff001c}Закрыта"; }
				format(YCMDstr, 256, "{FFFFFF}Владелец: {F2EEF0}%s %s\n{ffffff}Дверь: %s\n{FFFFFF}Номер: {FFFF00}%d",HotelInfo[h][oOwner],ttextt,text,h);
				SPDEx(playerid,10076,0, "Номер занят",YCMDstr, "Войти", "Отмена");
				return true;
			}
			else
			{
				format(YCMDstr, 256, "{FFFFFF}Цена: {FFFF00}%d\n{FFFFFF}Номер: {FFFF00}%d\n\n{FFFFFF}Введите: {FFFF00}/buynomer{ffffff} для покупки дома",HotelInfo[h][oValue],h);
				SPDEx(playerid,10027,0, "Номер свободен",YCMDstr, "Войти", "Отмена");
				return true;
			}
		}
	}
	for(new i = 1; i < sizeof(NarkoInfo); i++ )
	{
		for(new g = 0; g < sizeof(GZInfo); g++)
		{
			if(PlayerToKvadrat(playerid,GZInfo[g][gCoords][0], GZInfo[g][gCoords][1],GZInfo[g][gCoords][2],GZInfo[g][gCoords][3]) && PI[playerid][pMember] == GZInfo[g][gFrakVlad])
			{
				if(pickupid == NarkoInfo[i][nPickup])
				{
					if(NarkoInfo[i][nSobrat] == 1)
					{
						if(!IsAGang(playerid)) return SCM(playerid,COLOR_GREY,"Вы не член бандитской группировки!");
						if(narkot[playerid] != 0) return SCM(playerid,COLOR_GREY,"У тебя в руках уже есть наркота, отнеси её на склад");
						ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,500,1,1);
						SetPlayerAttachedObject(playerid,3,1279,1,0.075578,0.407083,0.000000,1.248928,97.393852,359.645050,1.000000,1.000000,1.000000);
						DestroyPickup(NarkoInfo[i][nPickup]);
						NarkoInfo[i][nZasev] = 0;
						NarkoInfo[i][nWait] = 0;
						NarkoInfo[i][nSobrat] = 0;
						new randphone = 5 + random(888);
						SCMF(playerid,COLOR_YELLOW,"Вы собрали с плантации %d грамм наркотиков. Отнесите собраное на склад.",randphone);
						narkot[playerid] = randphone;
						Update3DTextLabelText(NarkoInfo[i][nLabel], 0xC4DAADFF,"Место свободно, можно засеять");
						mysql_format(DATABASE, YCMDstr, 128, "UPDATE `"TABLE_PLANTS"` SET nWait = '%i', nSobrat = '%i', nZasev = '%i' WHERE nID = '%i'",NarkoInfo[i][nWait],NarkoInfo[i][nSobrat],NarkoInfo[i][nZasev],i);
						mysql_function_query(DATABASE,YCMDstr,false,"","");
					}
				}
			}
		}
	}
	if(pickupid == podeezdi)
	{
		new i = GetPVarInt(playerid, "podeezd");
		FL[playerid][PickupX] = PodeezdInfo[i][podPicX], FL[playerid][PickupY] = PodeezdInfo[i][podPicY];
		FL[playerid][oldpickup] = PodeezdInfo[i][podPic];
		timepickup[playerid] = 3;
		SetPlayerPos(playerid, PodeezdInfo[i][podPicX],PodeezdInfo[i][podPicY],PodeezdInfo[i][podPicZ]);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		DeletePVar(playerid, "podeezd");
		return true;
	}
	for(new g = 1; g <= AllPODEZD; g++)
	{
		if(pickupid == PodeezdInfo[g][podPic])
		{
			SetPVarInt(playerid, "podeezd",g);
			new str[8], varv[100];
			strcat(varv,"Доставка транспорта\n");
			for(new f = 1; f <= PodeezdInfo[g][podEtazi]; f++)
			{
				format(str, 10, "%d этаж\n", f);
				strcat(varv,str);
			}
			return SPDEx(playerid, 8999, 2, "Лифт", varv, "Перейти", "Закрыть");
		}
	}
	return true;
}
public OnPlayerSelectedMenuRow(playerid, row)
{
	if(GetPlayerMenu(playerid) == bomj[0])
	{
		switch(row)
		{
		case 0:
			{
				if(FL[playerid][SelectCharPlace] == 1) { SetPlayerSkin(playerid, JoinPed[0][0]); FL[playerid][SelectCharPlace] = 2; FL[playerid][ChosenSkin] = JoinPed[0][0]; }
				else if(FL[playerid][SelectCharPlace] == 2) { SetPlayerSkin(playerid, JoinPed[1][0]); FL[playerid][SelectCharPlace] = 3; FL[playerid][ChosenSkin] = JoinPed[1][0]; }
				else if(FL[playerid][SelectCharPlace] == 3) { SetPlayerSkin(playerid, JoinPed[2][0]); FL[playerid][SelectCharPlace] = 4; FL[playerid][ChosenSkin] = JoinPed[2][0]; }
				else if(FL[playerid][SelectCharPlace] == 4) { SetPlayerSkin(playerid, JoinPed[3][0]); FL[playerid][SelectCharPlace] = 5; FL[playerid][ChosenSkin] = JoinPed[3][0]; }
				else if(FL[playerid][SelectCharPlace] == 5) { SetPlayerSkin(playerid, JoinPed[4][0]); FL[playerid][SelectCharPlace] = 6; FL[playerid][ChosenSkin] = JoinPed[4][0]; }
				else if(FL[playerid][SelectCharPlace] == 6) { SetPlayerSkin(playerid, JoinPed[5][0]); FL[playerid][SelectCharPlace] = 1; FL[playerid][ChosenSkin] = JoinPed[5][0]; }
				ShowMenuForPlayer(bomj[0],playerid);
			}
		case 1:
			{
				if(FL[playerid][SelectCharPlace] == 1) { SetPlayerSkin(playerid, JoinPed[4][0]); FL[playerid][SelectCharPlace] = 6; FL[playerid][ChosenSkin] = JoinPed[4][0]; }
				else if(FL[playerid][SelectCharPlace] == 2) { SetPlayerSkin(playerid, JoinPed[5][0]); FL[playerid][SelectCharPlace] = 1; FL[playerid][ChosenSkin] = JoinPed[5][0]; }
				else if(FL[playerid][SelectCharPlace] == 3) { SetPlayerSkin(playerid, JoinPed[0][0]); FL[playerid][SelectCharPlace] = 2; FL[playerid][ChosenSkin] = JoinPed[0][0]; }
				else if(FL[playerid][SelectCharPlace] == 4) { SetPlayerSkin(playerid, JoinPed[1][0]); FL[playerid][SelectCharPlace] = 3; FL[playerid][ChosenSkin] = JoinPed[1][0]; }
				else if(FL[playerid][SelectCharPlace] == 5) { SetPlayerSkin(playerid, JoinPed[2][0]); FL[playerid][SelectCharPlace] = 4; FL[playerid][ChosenSkin] = JoinPed[2][0]; }
				else if(FL[playerid][SelectCharPlace] == 6) { SetPlayerSkin(playerid, JoinPed[3][0]); FL[playerid][SelectCharPlace] = 5; FL[playerid][ChosenSkin] = JoinPed[3][0]; }
				ShowMenuForPlayer(bomj[0],playerid);
			}
		case 2:
			{
				new year, month, day;
				getdate(year, month, day);
				format(PI[playerid][pDataReg],32, "%02i/%02i/%02i",day,month,year);
				GetPlayerIp(playerid,YCMDstr,32);
				strmid(PI[playerid][pIpReg],YCMDstr, 0, strlen(YCMDstr), 32);
				PI[playerid][pPnumber] = 100000 + random(899999);
				PI[playerid][pChar][PI[playerid][pViborChar]] = FL[playerid][ChosenSkin];
				PI[playerid][pTut] = 1;
				PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
				mysql_format(DATABASE, QUERY, sizeof(QUERY), "INSERT INTO `accounts` (`Name`, `pKey`, `pSex`, `pDataReg`, `pIpReg`, `pDrug`, `pPnumber`, `pTut`, `pChar`) VALUES ('%s', '%s', '%i', '%s', '%s', '%s', '%i', '%i', '%i')"
				,Name(playerid),PI[playerid][pKey],PI[playerid][pSex],PI[playerid][pDataReg],PI[playerid][pIpReg],PI[playerid][pDrug],PI[playerid][pPnumber], PI[playerid][pTut], PI[playerid][pChar][PI[playerid][pViborChar]]);
				mysql_function_query(DATABASE,QUERY,true,"PlayerRegister","i",playerid);
			}
		}
	}
	if(GetPlayerMenu(playerid) == bomj[1])
	{
		switch(row)
		{
		case 0:
			{
				if(FL[playerid][SelectCharPlace] == 1) { SetPlayerSkin(playerid, JoinPed[6][0]); FL[playerid][SelectCharPlace] = 2; FL[playerid][ChosenSkin] = JoinPed[6][0]; }
				else if(FL[playerid][SelectCharPlace] == 2) { SetPlayerSkin(playerid, JoinPed[7][0]); FL[playerid][SelectCharPlace] = 1; FL[playerid][ChosenSkin] = JoinPed[7][0]; }
				ShowMenuForPlayer(bomj[1],playerid);
			}
		case 1:
			{
				if(FL[playerid][SelectCharPlace] == 1) { SetPlayerSkin(playerid, JoinPed[6][0]); FL[playerid][SelectCharPlace] = 2; FL[playerid][ChosenSkin] = JoinPed[6][0]; }
				else if(FL[playerid][SelectCharPlace] == 2) { SetPlayerSkin(playerid, JoinPed[7][0]); FL[playerid][SelectCharPlace] = 1; FL[playerid][ChosenSkin] = JoinPed[7][0]; }
				ShowMenuForPlayer(bomj[1],playerid);
			}
		case 2:
			{
				new year, month, day;
				getdate(year, month, day);
				format(PI[playerid][pDataReg],32, "%02i/%02i/%02i",day,month,year);
				GetPlayerIp(playerid,YCMDstr,32);
				strmid(PI[playerid][pIpReg],YCMDstr, 0, strlen(YCMDstr), 32);
				PI[playerid][pPnumber] = 100000 + random(899999);
				PI[playerid][pChar][PI[playerid][pViborChar]] = FL[playerid][ChosenSkin];
				PI[playerid][pTut] = 1;
				PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
				mysql_format(DATABASE, QUERY, sizeof(QUERY), "INSERT INTO `accounts` (`Name`, `pKey`, `pSex`, `pDataReg`, `pIpReg`, `pDrug`, `pPnumber`, `pTut`, `pChar`) VALUES ('%s', '%s', '%i', '%s', '%s', '%s', '%i', '%i', '%i')"
				,Name(playerid),PI[playerid][pKey],PI[playerid][pSex],PI[playerid][pDataReg],PI[playerid][pIpReg],PI[playerid][pDrug],PI[playerid][pPnumber], PI[playerid][pTut], PI[playerid][pChar][PI[playerid][pViborChar]]);
				mysql_function_query(DATABASE,QUERY,true,"PlayerRegister","i",playerid);
			}
		}
	}
	if(GetPlayerMenu(playerid) == Admin)
	{
		new ClickedPlayerName[30]; GetPlayerName(SpecAd[playerid],ClickedPlayerName,24);
		switch(row)
		{
		case 0:StartSpectate(playerid,SpecAd[playerid]);
		case 1:
			{
				new Float:shealth, Float:slx, Float:sly, Float:slz, name[MAX_PLAYER_NAME], sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid ,name , sizeof(name));
				GetPlayerName(SpecAd[playerid] ,sendername , sizeof(sendername));
				GetPlayerHealth(SpecAd[playerid], shealth);
				SetPlayerHealthAC(SpecAd[playerid], shealth-5);
				GetPlayerPos(SpecAd[playerid], slx, sly, slz);
				SetPlayerPos(SpecAd[playerid], slx, sly, slz+5);
				PlayerPlaySound(SpecAd[playerid], 1130, slx, sly, slz+5);
				format(YCMDstr, 128, "Администратор %s подкинул %s",name,sendername);
				ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
				SCM(SpecAd[playerid], COLOR_LIGHTRED, YCMDstr);
				ShowMenuForPlayer(Admin,playerid);
			}
		case 2:
			{
				new mess[60];
				format(mess, 60, "/getstats %d",SpecAd[playerid]);
				CallLocalFunction("OnPlayerCommandText", "is", playerid, mess);
				ShowMenuForPlayer(Admin,playerid);
			}
		case 3:
			{
				new playersip[64];
				GetPlayerIp(SpecAd[playerid],playersip,sizeof(playersip));
				format(YCMDstr, 64, "[%s] IP: %s",Name(SpecAd[playerid]),playersip);
				SCM(playerid,0x6495EDFF,YCMDstr);
				ShowMenuForPlayer(Admin,playerid);
			}
		case 4:
			{
				new mess[20];
				format(mess, 20, "/weap %d",SpecAd[playerid]);
				CallLocalFunction("OnPlayerCommandText", "is", playerid, mess);
				ShowMenuForPlayer(Admin,playerid);
			}
		case 5:
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING)
				{
					ShowMenuForPlayer(Admin,playerid);
					StopSpectate(playerid);
					SetPlayerHealthAC(playerid, 100);
				}
			}
		}
	}
	if(GetPlayerMenu(playerid) == BuyClothes)
	{
		switch(row)
		{
		case 0:
			{
				if(PI[playerid][pSex] == 1)
				{
					if(ChangeSkin[playerid]	== sizeof(SkinMen)-1) ChangeSkin[playerid] = 0;
					else ChangeSkin[playerid]++;
					SetPlayerSkin(playerid,SkinMen[ChangeSkin[playerid]][0]);// Одеваем скин
					format(YCMDstr, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMen[ChangeSkin[playerid]][1]);// Выводим цену на екран
				}
				else //Если женщина то...
				{
					if(ChangeSkin[playerid] == sizeof(SkinMale)-1)ChangeSkin[playerid] = 0;
					else ChangeSkin[playerid]++;//Прибавляем переменную
					SetPlayerSkin(playerid,SkinMale[ChangeSkin[playerid]][0]);//Одеваем скин
					format(YCMDstr, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMale[ChangeSkin[playerid]][1]);//?Выводим цену на екран
				}
				GameTextForPlayer(playerid, YCMDstr, 2000, 3);
				ShowMenuForPlayer(BuyClothes, playerid);//Выводим меню дальше
			}
		case 1://Если нажал назад то...
			{
				if(PI[playerid][pSex] == 1)//Если парень то...
				{
					if(ChangeSkin[playerid] == 0)ChangeSkin[playerid] = sizeof(SkinMen)-1;
					else ChangeSkin[playerid]--;
					SetPlayerSkin(playerid,SkinMen[ChangeSkin[playerid]][0]);//Одеваем скин
					format(YCMDstr, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMen[ChangeSkin[playerid]][1]);// Выводим цену на экран
				}
				else//Если девушка то...
				{
					if(ChangeSkin[playerid] == 0)ChangeSkin[playerid] = sizeof(SkinMale)-1;
					else ChangeSkin[playerid]--;
					SetPlayerSkin(playerid,SkinMale[ChangeSkin[playerid]][0]);//Одеваем скин
					format(YCMDstr, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMale[ChangeSkin[playerid]][1]);// Выводим цену на экран
				}
				GameTextForPlayer(playerid, YCMDstr, 2000, 3);
				ShowMenuForPlayer(BuyClothes, playerid);//Выводим меню дальше
			}
		case 2://Если нажал купить то...
			{
				if(PI[playerid][pSex] == 1)//Если мужик то...
				{
					if(PI[playerid][pCash] < SkinMen[ChangeSkin[playerid]][1])
					{
						SCM(playerid,COLOR_GREY,"У вас недостаточно денежных средств!");//Пишем грустное сообщение
						ShowMenuForPlayer(BuyClothes, playerid);//Возвращаем меню, вдруг захочет что-то подешевле....
						return true;
					}
					PI[playerid][pCash]-= SkinMen[ChangeSkin[playerid]][1];//Отнимаем денги за покупку
				}
				else//Если девушка то...
				{
					if(PI[playerid][pCash] < SkinMale[ChangeSkin[playerid]][1])
					{
						SCM(playerid,COLOR_GREY,"У вас недостаточно денежных средств!");//Пишем грустное сообщение
						ShowMenuForPlayer(BuyClothes, playerid);//Возвращаем меню, вдруг захочет что-то подешевле....
						return true;
					}
					PI[playerid][pCash]-= SkinMale[ChangeSkin[playerid]][1];//Отнимаем денги за покупку
				}
				if(zips[playerid] == 1)
				{
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,18);
					PI[playerid][pChar][PI[playerid][pViborChar]] = GetPlayerSkin(playerid);//даём скин
					TogglePlayerControllable(playerid, 1);//Размораживаем
					SetPlayerPos(playerid ,181.1844,-88.0599,1002);
					SetCameraBehindPlayer(playerid);
					return true;
				}
				SetPlayerVirtualWorld(playerid,0);
				PI[playerid][pChar][PI[playerid][pViborChar]] = GetPlayerSkin(playerid);//даём скин
				TogglePlayerControllable(playerid, 1);//Размораживаем
				SetPlayerPos(playerid,221.7944,-8.4229,1002.2109);//тпкаем обратно в амгаз
				SetPlayerFacingAngle(playerid,273.5792);//Bla bla
				SetPlayerInterior(playerid,5);//Даём инт. магазина
				SetCameraBehindPlayer(playerid);//Включаем управление камерой
			}
		case 3://если нажал Exit
			{
				if(zips[playerid] == 1)
				{
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,18);
					SetPlayerSkin(playerid,PI[playerid][pChar][PI[playerid][pViborChar]]);//Меняем скин на тот который был
					TogglePlayerControllable(playerid, 1);//Размораживаем
					SetPlayerPos(playerid ,181.1844,-88.0599,1002);
					SetCameraBehindPlayer(playerid);
					return true;
				}
				SetPlayerVirtualWorld(playerid,0);
				SetPlayerSkin(playerid,PI[playerid][pChar][PI[playerid][pViborChar]]);//Меняем скин на тот который был
				TogglePlayerControllable(playerid, 1);//Размораживаем
				SetPlayerPos(playerid,221.7944,-8.4229,1002.2109);//тпкаем обратно в мaгаз
				SetPlayerFacingAngle(playerid,273.5792);//Bla bla
				SetPlayerInterior(playerid,5);//Даём инт. магазина
				SetCameraBehindPlayer(playerid);//Включаем управление камерой
			}
		}
	}
	if(GetPlayerMenu(playerid) == BuyClothes1)
	{
		switch(row)
		{
		case 0:
			{
				if(PI[playerid][pSex] == 1)
				{
					if(ChangeSkin[playerid]	== sizeof(SkinMen1)-1) ChangeSkin[playerid] = 0;
					else ChangeSkin[playerid]++;
					SetPlayerSkin(playerid,SkinMen1[ChangeSkin[playerid]][0]);// Одеваем скин
					format(YCMDstr, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMen1[ChangeSkin[playerid]][1]);// Выводим цену на екран
				}
				else //Если женщина то...
				{
					if(ChangeSkin[playerid] == sizeof(SkinMale1)-1)ChangeSkin[playerid] = 0;
					else ChangeSkin[playerid]++;//Прибавляем переменную
					SetPlayerSkin(playerid,SkinMale1[ChangeSkin[playerid]][0]);//Одеваем скин
					format(YCMDstr, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMale1[ChangeSkin[playerid]][1]);//?Выводим цену на екран
				}
				GameTextForPlayer(playerid, YCMDstr, 2000, 3);
				ShowMenuForPlayer(BuyClothes1, playerid);//Выводим меню дальше
			}
		case 1://Если нажал назад то...
			{
				if(PI[playerid][pSex] == 1)//Если парень то...
				{
					if(ChangeSkin[playerid] == 0)ChangeSkin[playerid] = sizeof(SkinMen1)-1;
					else ChangeSkin[playerid]--;
					SetPlayerSkin(playerid,SkinMen1[ChangeSkin[playerid]][0]);//Одеваем скин
					format(YCMDstr, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMen1[ChangeSkin[playerid]][1]);// Выводим цену на экран
				}
				else//Если девушка то...
				{
					if(ChangeSkin[playerid] == 0)ChangeSkin[playerid] = sizeof(SkinMale)-1;
					else ChangeSkin[playerid]--;
					SetPlayerSkin(playerid,SkinMale1[ChangeSkin[playerid]][0]);//Одеваем скин // debug
					format(YCMDstr, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMale1[ChangeSkin[playerid]][1]);// Выводим цену на экран
				}
				GameTextForPlayer(playerid, YCMDstr, 2000, 3);
				ShowMenuForPlayer(BuyClothes1, playerid);//Выводим меню дальше
			}
		case 2://Если нажал купить то...
			{
				if(PI[playerid][pSex] == 1)//Если мужик то...
				{
					if(PI[playerid][pCash] < SkinMen1[ChangeSkin[playerid]][1])
					{
						SCM(playerid,COLOR_GREY,"У вас недостаточно денежных средств!");//Пишем грустное сообщение
						ShowMenuForPlayer(BuyClothes1, playerid);//Возвращаем меню, вдруг захочет что-то подешевле....
						return true;
					}
					PI[playerid][pCash]-= SkinMen1[ChangeSkin[playerid]][1];//Отнимаем денги за покупку
				}
				else//Если девушка то...
				{
					if(PI[playerid][pCash] < SkinMale1[ChangeSkin[playerid]][1])
					{
						SCM(playerid,COLOR_GREY,"У вас недостаточно денежных средств!");//Пишем грустное сообщение
						ShowMenuForPlayer(BuyClothes1, playerid);//Возвращаем меню, вдруг захочет что-то подешевле....
						return true;
					}
					PI[playerid][pCash]-= SkinMale1[ChangeSkin[playerid]][1];//Отнимаем денги за покупку
				}
				if(zips[playerid] == 1)
				{
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,18);
					PI[playerid][pChar][PI[playerid][pViborChar]] = GetPlayerSkin(playerid);//даём скин
					TogglePlayerControllable(playerid, 1);//Размораживаем
					SetPlayerPos(playerid ,181.1844,-88.0599,1002);
					SetCameraBehindPlayer(playerid);
					return true;
				}
				SetPlayerVirtualWorld(playerid,0);
				PI[playerid][pChar][PI[playerid][pViborChar]] = GetPlayerSkin(playerid);//даём скин
				TogglePlayerControllable(playerid, 1);//Размораживаем
				SetPlayerPos(playerid,221.7944,-8.4229,1002.2109);//тпкаем обратно в амгаз
				SetPlayerFacingAngle(playerid,273.5792);//Bla bla
				SetPlayerInterior(playerid,5);//Даём инт. магазина
				SetCameraBehindPlayer(playerid);//Включаем управление камерой
			}
		case 3://если нажал Exit
			{
				if(zips[playerid] == 1)
				{
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,18);
					SetPlayerSkin(playerid,PI[playerid][pChar][PI[playerid][pViborChar]]);//Меняем скин на тот который был
					TogglePlayerControllable(playerid, 1);//Размораживаем
					SetPlayerPos(playerid ,181.1844,-88.0599,1002);
					SetCameraBehindPlayer(playerid);
					return true;
				}
				SetPlayerVirtualWorld(playerid,0);
				SetPlayerSkin(playerid,PI[playerid][pChar][PI[playerid][pViborChar]]);//Меняем скин на тот который был
				TogglePlayerControllable(playerid, 1);//Размораживаем
				SetPlayerPos(playerid,221.7944,-8.4229,1002.2109);//тпкаем обратно в мaгаз
				SetPlayerFacingAngle(playerid,273.5792);//Bla bla
				SetPlayerInterior(playerid,5);//Даём инт. магазина
				SetCameraBehindPlayer(playerid);//Включаем управление камерой
			}
		}
	}
	if(GetPlayerMenu(playerid) == BuyClothes2)
	{
		switch(row)
		{
		case 0:
			{
				if(PI[playerid][pSex] == 1)
				{
					if(ChangeSkin[playerid]	== sizeof(SkinMen2)-1) ChangeSkin[playerid] = 0;
					else ChangeSkin[playerid]++;
					SetPlayerSkin(playerid,SkinMen2[ChangeSkin[playerid]][0]);// Одеваем скин
					format(YCMDstr, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMen2[ChangeSkin[playerid]][1]);// Выводим цену на екран
				}
				else //Если женщина то...
				{
					if(ChangeSkin[playerid] == sizeof(SkinMale2)-1)ChangeSkin[playerid] = 0;
					else ChangeSkin[playerid]++;//Прибавляем переменную
					SetPlayerSkin(playerid,SkinMale2[ChangeSkin[playerid]][0]);//Одеваем скин
					format(YCMDstr, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMale2[ChangeSkin[playerid]][1]);//?Выводим цену на екран
				}
				GameTextForPlayer(playerid, YCMDstr, 2000, 3);
				ShowMenuForPlayer(BuyClothes2, playerid);//Выводим меню дальше
			}
		case 1://Если нажал назад то...
			{
				if(PI[playerid][pSex] == 1)//Если парень то...
				{
					if(ChangeSkin[playerid] == 0)ChangeSkin[playerid] = sizeof(SkinMen1)-1;
					else ChangeSkin[playerid]--;
					SetPlayerSkin(playerid,SkinMen2[ChangeSkin[playerid]][0]);//Одеваем скин
					format(YCMDstr, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMen2[ChangeSkin[playerid]][1]);// Выводим цену на экран
				}
				else//Если девушка то...
				{
					if(ChangeSkin[playerid] == 0)ChangeSkin[playerid] = sizeof(SkinMale)-1;
					else ChangeSkin[playerid]--;
					SetPlayerSkin(playerid,SkinMale2[ChangeSkin[playerid]][0]);//Одеваем скин
					format(YCMDstr, 127,"~n~~n~~n~~n~~n~~n~~g~COST: ~w~%i",SkinMale2[ChangeSkin[playerid]][1]);// Выводим цену на экран
				}
				GameTextForPlayer(playerid, YCMDstr, 2000, 3);
				ShowMenuForPlayer(BuyClothes2, playerid);//Выводим меню дальше
			}
		case 2://Если нажал купить то...
			{
				if(PI[playerid][pSex] == 1)//Если мужик то...
				{
					if(PI[playerid][pCash] < SkinMen2[ChangeSkin[playerid]][1])
					{
						SCM(playerid,COLOR_GREY,"У вас недостаточно денежных средств!");//Пишем грустное сообщение
						ShowMenuForPlayer(BuyClothes2, playerid);//Возвращаем меню, вдруг захочет что-то подешевле....
						return true;
					}
					PI[playerid][pCash]-= SkinMen2[ChangeSkin[playerid]][1];//Отнимаем денги за покупку
				}
				else//Если девушка то...
				{
					if(PI[playerid][pCash] < SkinMale2[ChangeSkin[playerid]][1])
					{
						SCM(playerid,COLOR_GREY,"У вас недостаточно денежных средств!");//Пишем грустное сообщение
						ShowMenuForPlayer(BuyClothes2, playerid);//Возвращаем меню, вдруг захочет что-то подешевле....
						return true;
					}
					PI[playerid][pCash]-= SkinMale2[ChangeSkin[playerid]][1];//Отнимаем денги за покупку
				}
				if(zips[playerid] == 1)
				{
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,18);
					PI[playerid][pChar][PI[playerid][pViborChar]] = GetPlayerSkin(playerid);//даём скин
					TogglePlayerControllable(playerid, 1);//Размораживаем
					SetPlayerPos(playerid ,181.1844,-88.0599,1002);
					SetCameraBehindPlayer(playerid);
					return true;
				}
				SetPlayerVirtualWorld(playerid,0);
				PI[playerid][pChar][PI[playerid][pViborChar]] = GetPlayerSkin(playerid);//даём скин
				TogglePlayerControllable(playerid, 1);//Размораживаем
				SetPlayerPos(playerid,207.054992,-138.804992,1003.507812);//тпкаем обратно в амгаз
				SetPlayerFacingAngle(playerid,273.5792);//Bla bla
				SetPlayerInterior(playerid,3);//Даём инт. магазина
				SetCameraBehindPlayer(playerid);//Включаем управление камерой
			}
		case 3://если нажал Exit
			{
				if(zips[playerid] == 1)
				{
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,18);
					SetPlayerSkin(playerid,PI[playerid][pChar][PI[playerid][pViborChar]]);//Меняем скин на тот который был
					TogglePlayerControllable(playerid, 1);//Размораживаем
					SetPlayerPos(playerid ,181.1844,-88.0599,1002);
					SetCameraBehindPlayer(playerid);
					return true;
				}
				SetPlayerVirtualWorld(playerid,0);
				SetPlayerSkin(playerid,PI[playerid][pChar][PI[playerid][pViborChar]]);//Меняем скин на тот который был
				TogglePlayerControllable(playerid, 1);//Размораживаем
				SetPlayerPos(playerid,207.054992,-138.804992,1003.507812);//тпкаем обратно в мaгаз
				SetPlayerFacingAngle(playerid,273.5792);//Bla bla
				SetPlayerInterior(playerid,3);//Даём инт. магазина
				SetCameraBehindPlayer(playerid);//Включаем управление камерой
			}
		}
	}
	return true;
}
public OnPlayerExitedMenu(playerid)
{
	if(!IsValidMenu(GetPlayerMenu(playerid))) return true;
	ShowMenuForPlayer(GetPlayerMenu(playerid), playerid);
	TogglePlayerControllable(playerid,0);
	return true;
}
publics: UnSurfCar(carid)
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		new model = GetVehicleModel(carid);
		if(model != 430 && model != 454 &&
				model != 478 && model != 446 &&
				model != 452 && model != 453 &&
				model != 454 && model != 472 &&
				model != 473 && model != 484 &&
				model != 493 && model != 539 &&
				model != 595)
		if(GetPlayerSurfingVehicleID(i) == carid)
		{
			new Float:p[3]; GetPlayerPos(i,p[0],p[1],p[2]);
			GetXYInBackOfPlayer(i,p[0],p[1],2.0);
			SetPlayerPos(i,p[0],p[1],p[2]+0.2);
		}
	}
	return;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
	new tacha = GetPlayerVehicleID(playerid);
	if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
		if(IDVEH[playerid] != -1 && IsPlayerConnected(playerid) && IsPlayerInAnyVehicle(playerid) && UseEnter[playerid] != true && IDVEH[playerid] != GetPlayerVehicleID(playerid)) return Chectkick(playerid);
		UseEnter[playerid] = false;
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
		timer2[playerid] = SetTimerEx("CheckForCheater",1000,true,"i",playerid);
		player_NoCheckTimeVeh[playerid] = 1;
	}
	if(oldstate == PLAYER_STATE_DRIVER) KillTimer(timer2[playerid]);
	if(newstate == PLAYER_STATE_DRIVER)
	{
		if(GetVehicleModel(tacha) != 538 && GetVehicleModel(tacha) != 449 && GetVehicleModel(tacha) != 570)
		{
			new model = GetPlayerVehicleSeat(playerid);
			if(model != 128)
			{
				if(!model)
				{
					model = GetVehicleModel(tacha);
					if(!(400 <= model <= 611) || MaxPassengers[model - 400 >>> 3] >>> ((model - 400 & 7) << 2) & 0xF == 15) Kick(playerid);
				}
				else Kick(playerid);
			}
		}
	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
		new model = GetVehicleModel(tacha);
		if(400 <= model <= 611 && model != 483)
		{
			model -= 400;
			new seat = GetPlayerVehicleSeat(playerid);
			if(seat != 128)
			{
				model = (MaxPassengers[model >>> 3] >>> ((model & 7) << 2)) & 0xF;
				if(!model || model == 15) return Kick(playerid);
				else if(!(0 < seat <= model)) return Kick(playerid);
			}
			else return Kick(playerid);
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
		if(!IsAPlane(tacha) && !IsABoat(tacha) && !IsABike(tacha))
		{
			PlayerTextDrawShow(playerid,FL[playerid][Speed]);
			PlayerTextDrawShow(playerid,FL[playerid][SpeedShow]);
			PlayerTextDrawShow(playerid,FL[playerid][FuelShow]);
			PlayerTextDrawShow(playerid,FL[playerid][StatusShow]);
			PlayerTextDrawShow(playerid,FL[playerid][KMShow]);
			PlayerTextDrawShow(playerid,FL[playerid][FillShow]);
			PlayerTextDrawShow(playerid,FL[playerid][CarHPShow]);
			PlayerTextDrawShow(playerid,FL[playerid][IndCarHP]);
		}
	}
	else if(newstate == PLAYER_STATE_ONFOOT)
	{
		if(!IsAPlane(tacha) && !IsABoat(tacha) && !IsABike(tacha))
		{
			PlayerTextDrawHide(playerid,FL[playerid][Speed]);
			PlayerTextDrawHide(playerid,FL[playerid][SpeedShow]);
			PlayerTextDrawHide(playerid,FL[playerid][FuelShow]);
			PlayerTextDrawHide(playerid,FL[playerid][StatusShow]);
			PlayerTextDrawHide(playerid,FL[playerid][KMShow]);
			PlayerTextDrawHide(playerid,FL[playerid][FillShow]);
			PlayerTextDrawHide(playerid,FL[playerid][CarHPShow]);
			PlayerTextDrawHide(playerid,FL[playerid][IndCarHP]);
		}
	}
	if(newstate == PLAYER_STATE_DRIVER && Typek == 2) Timerkk[playerid] = SetTimerEx("UnSurfCar",1600,1, "i",GetPlayerVehicleID(playerid));
	new caridi = GetPlayerVehicleID(playerid);
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		if(TransportDuty[playerid] > 0) SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		if(PI[playerid][pJob] == 2)
		{
			if(FL[playerid][gcontract] == 1)
			{
				Delete3DTextLabel(Meh3d[GetPlayerVehicleID(playerid)]);
				FL[playerid][gcontract] = 0;
			}
		}
		if(TalkingLive[playerid] == 2)
		{
			SCM(playerid, 0x6495EDFF, "Прямой эфир завершён");
			SCM(TalkingLive[playerid], 0x6495EDFF, "Прямой эфир завершён");
			TalkingLive[TalkingLive[playerid]] = 999;
			TalkingLive[playerid] = 999;
			return true;
		}
		if(CarLesson[playerid] == 1)
		{
			SCM(playerid, COLOR_RED, "Экзамен завершён! Вы покинули транспортное средство.");
			DisablePlayerRaceCheckpoint(playerid);
			CarLesson[playerid] = 0;
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			return true;
		}
		if(BoatLesson[playerid] == 1)
		{
			SCM(playerid, COLOR_RED, "Экзамен завершён! Вы покинули транспортное средство.");
			DisablePlayerRaceCheckpoint(playerid);
			BoatLesson[playerid] = 0;
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			return true;
		}
		if(FlyLesson[playerid] == 1)
  		{
			SCM(playerid, COLOR_RED, "Экзамен завершён! Вы покинули транспортное средство.");
			DisablePlayerRaceCheckpoint(playerid);
			FlyLesson[playerid] = 0;
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			return true;
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
		if(Fuell[caridi] <= 0 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 462)
		{
			SCM(playerid, COLOR_RED, "Двигатель не заводится");
			SCM(playerid, COLOR_GREEN, "{00A86B}Используйте телефон {FFFFFF}/phone {00A86B}чтобы вызвать механика / таксиста");
			Fuell[caridi] = 0;
		}
		if(GetVehicleModel(caridi) == 481 || GetVehicleModel(caridi) == 509 || GetVehicleModel(caridi) == 510)
		{
			GetVehicleParamsEx(caridi,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(caridi ,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
		}
		else
		{
			if(zavodis[caridi] == 0) SCM(playerid,COLOR_GREEN, "{00AB06}- Завести двигатель: клавиша {FFFFFF}'2'{00AB06} или командой {FFFFFF}/en{00AB06}");
			SCM(playerid, COLOR_GREEN, "{00AB06}- Поворотники: {FFFF00}< NUM 4 | NUM 6 >{00AB06}. Аварийный сигнал: {FFFF00}NUM 8");
			if(Light[caridi] == 0) SCM(playerid,COLOR_GREEN, "{00AB06}- Включить фары: {FFFFFF}/lights{00AB06} или клавиша {ffffff}'ALT'. {00AB06}Включить радио: {FFFFFF}/fm{00AB06}");
		}
	}
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
		{
			if(IsPlayerConnected(TransportDriver[playerid]))
			{
				TransportCost[TransportDriver[playerid]] = 0;
				if(PI[playerid][pCash] < TransportCost[playerid])
				{
					SCM(TransportDriver[playerid], COLOR_GRAD1, "Отвезите игрока на работу грузчика, за него заплатит государство.");
					TransportCost[playerid] = 0;
					TransportDriver[playerid] = 999;
					return 1;
				}
				TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
				TransportCost[playerid] = 0;
				TransportDriver[playerid] = 999;
			}
		}
		FL[playerid][TelePos][0] = 0.0;
		FL[playerid][TelePos][1] = 0.0;
	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		if(doors == 1 && caridhouse[playerid][0] != vehicleid && caridhouse[playerid][1] != vehicleid && caridhouse[playerid][2] != vehicleid && IsABike(playerid)) RemovePlayerFromVehicleAC(playerid);
		for(new idx=0, i=0; idx<cvector_size(players); idx++)
		{
			i = cvector_get(players, idx);
			if(IsPlayerInVehicle(i, GetPlayerVehicleID(playerid)) && GetPlayerState(i) == 2 && GetPVarInt(i,"TaxiDuty") > 0)
			{
				if(GetPVarInt(i,"Taxi_") == 0)
				{
					format(YCMDstr, 128, "Пассажир %s сел в ваше Такси. Довезите его и государство заплатит Вам.",Name(playerid));
					SCM(i, COLOR_BLUE, YCMDstr);
					SetPVarInt(i,"Taxi_",playerid+1);
					if(PI[playerid][pLevel] == 1 && PI[playerid][pExp] < 4) CallLocalFunction("OnPlayerCommandText", "is", i, "/gps");
				}
				break;
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
		FL[playerid][TelePos][0] = 0.0;
		FL[playerid][TelePos][1] = 0.0;
		new newcar = GetPlayerVehicleID(playerid);
		if(IsAGunsCar(newcar))
		{
			format(YCMDstr, 100, "Оружия в грузовике: %d/10000", MatArmy[newcar-gunscar[0]][mArLoad]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			SCM(playerid, COLOR_WHITE, "Для загрузки/разгрузки оружия, введите: /carm");
		}
		if(IsAZCar(newcar))
		{
			format(YCMDstr, 100, "Оружия в фургоне: %d/50000", MatHaulZ[newcar-zcar[0]][mLoadZ]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			SCM(playerid, COLOR_WHITE, "Для загрузки/разгрузки oружия - введите: /zguncarm");

		}
		if(IsAZFuelCar(newcar))
		{
			if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
			{
				format(YCMDstr, 100, "Бензина в цистерне: %d/10000", MatHaulF[newcar-zfuelcar[0]][mLoadF]);
				SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
				SCM(playerid, COLOR_WHITE, "Для загрузки/разгрузки бензина - введите: /zfuelcarm");
			}
			else SCM(playerid, COLOR_BLUE, "Вам нужен прицеп с цистерной. Прицепите прицеп и введите /zfuelcarm");
		}
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 548) SCM(playerid,COLOR_WHITE, "Введите /vertmat чтобы начать доставку деталей на завод К.А.С.С");
		new vehicleid = GetPlayerVehicleID(playerid);
		new arend_id = INVALID_PLAYER_ID;
		if(GetArendCarID(vehicleid, arend_id) != (-1))
		{
		    arendtime[playerid] = 0;
			if(arend_id == INVALID_PLAYER_ID || !IsPlayerConnected(arend_id))
			{
				new rc = GetArendCarID(vehicleid);
				format(YCMDstr,200,"{FFCC00}Транспорт для аренды!\n\n- Модель: {0066FF}%s{FFCC00}\n- Стоимость: {0066FF}$%i{FFCC00}\n\nЧто бы арендовать нажмите {0066FF}'Аренда'{FFCC00}", VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400], ArendInfo[rc][aCost]);
				SPDEx(playerid, 9889, 0, "Аренда", YCMDstr, "Аренда", "Отмена");
				TogglePlayerControllable(playerid, 0);
			}
			else if(arend_id != playerid)
			{
				SCM(playerid,-1,"Этот транспорт уже арендуют");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if(newcar >= saloncar[0] && newcar <= saloncar[1])
		{
			SPDEx(playerid, 1948, 0,"Личный транспорт","Выберите Ваш автомобиль:","Первый","Второй");
			TogglePlayerControllable(playerid, 0);
		}
		if(newcar >= liccar[0] && newcar <= liccar[1])
		{
		    Fuell[GetPlayerVehicleID(playerid)] = 100;
		    if(CarLesson[playerid] == 0) return SCM(playerid,COLOR_GREY, "Вы не начинали экзамен, пройдите в Автошколу!"), RemovePlayerFromVehicle(playerid);
			if(PI[playerid][pCarLic] == 0 && CarLesson[playerid] == 1)
			{
				pLessonCar[playerid] = 1;
				SetPlayerRaceCheckpoint(playerid,0,-2048.0564,-106.5853,34.9757,-2047.1299,-82.7046,32.9072,5.0);
				SCM(playerid, COLOR_GREY, "Экзамен начат! Следуйте по маршруту!");
			}
		}
		if(newcar >= boatcar[0] && newcar <= boatcar[1])
		{
		    if(BoatLesson[playerid] == 0) return SCM(playerid,COLOR_GREY, "Вы не начинали экзамен, пройдите в морскую школу!"), RemovePlayerFromVehicle(playerid);
			if(PI[playerid][pBoatLic] == 0 && BoatLesson[playerid] == 1)
			{
				pLessonBoat[playerid] = 1;
				SetPlayerRaceCheckpoint(playerid,0,-2180.6692,2440.1838,-0.3752,-2134.7996,2227.7891,-0.5352,5.0);
				SCM(playerid, COLOR_GREY, "Экзамен начат! Следуйте по маршруту!");
			}
		}
		if(newcar >= flycar[0] && newcar <= flycar[1])
		{
		    if(FlyLesson[playerid] == 0) return SCM(playerid,COLOR_GREY, "Вы не начинали экзамен, пройдите в школу пилотов!"), RemovePlayerFromVehicle(playerid);
			if(PI[playerid][pFlyLic] == 0 && FlyLesson[playerid] == 1)
			{
				pLessonFly[playerid] = 1;
				SetPlayerRaceCheckpoint(playerid, 0, 1341.9934,1293.5155,11.2765,1434.8365,1260.7920,11.2921, 6.0);
				SCM(playerid, COLOR_GREY, "Экзамен начат! Следуйте по маршруту!");
			}
		}
		if(newcar >= taxicar[0] && newcar <= taxicar[1])
		{
			if(PI[playerid][pJob] == 4 && PI[playerid][pMember] == 0)
			{
				if(GetPVarInt(playerid,"rentcar_job") != newcar) SPDEx(playerid,9127,0, " ", "<< Таксопарк >>\nЦена аренды: 500\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
			}
			else
			{
				SCM(playerid, COLOR_WHITE, "Вы не таксист! (/gps -> Работа -> Центр Занятости)");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= muscar[0] && newcar <= muscar[1])
		{
	        if(PI[playerid][pJob] == 11 && PI[playerid][pMember] == 0)
			{
				if(GetPVarInt(playerid,"rentcar_job") != newcar) SPDEx(playerid,9128,0, " ", "<< Мусоровоз >>\nЦена аренды: 50\nВы хотите взять автомобиль на прокат?", "Да", "Нет");
				
            }
			else
            {
				SCM(playerid, COLOR_WHITE, "Вы не мусорщик! (/gps -> Работа -> Центр Занятости)");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(IsABoat(newcar))
		{
			if(PI[playerid][pBoatLic] == 0)
			{
				if(BoatLesson[playerid] != 1)
				{
					SCM(playerid, COLOR_WHITE, "У Вас нет лицензии на водный транспорт! (/gps -> Транспортные школы -> Морская школа)");
					RemovePlayerFromVehicleAC(playerid);
				}
			}
		}
		if(IsAPlane(newcar))
		{
			if(PI[playerid][pFlyLic] == 0)
			{
				if(FlyLesson[playerid] != 1)
				{
					SCM(playerid, COLOR_WHITE, "У Вас нет лицензии на воздушный транспорт! (/gps -> Транспортные школы -> Школа пилотов)");
					RemovePlayerFromVehicleAC(playerid);
				}
			}
		}
		if(IsACar(newcar))
		{
			if(PI[playerid][pCarLic] == 0)
			{
				if(CarLesson[playerid] != 1)
				{
					SCM(playerid, COLOR_WHITE, "У Вас нет водительских прав! (/gps -> Транспортные школы -> Автошкола)");
					RemovePlayerFromVehicleAC(playerid);
				}
			}
		}
		if(newcar >= CarNafta[0] && newcar <= CarNafta[1])
		{
			if(PI[playerid][pMember] == 24)
			{
				if(GetPVarInt(playerid, "Proverka_Neft") == 1)
				{
					SetPVarInt(playerid, "loading_job", 1);
					SetPlayerRaceCheckpoint(playerid, 2, 2688.4985,2721.0486,10.9633, 0.0, 0.0, 0.0, 3.0);
					return true;
				}
				SetPVarInt(playerid, "loading_job", 2);
				SCM(playerid, 0xFFFFFFFF, "- Отправляйтесь на нефтяной завод и загрузите бочки с нефтью.");
				SetPlayerRaceCheckpoint(playerid, 2, 266.6995,1408.8074,10.6250, 2688.4985,2721.0486,10.9633, 5.0);
			}
			else { SCM(playerid, COLOR_GREY, "Вы не работник завода К.А.С.С."); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= comptruckcar[0] && newcar <= comptruckcar[1])
		{
			TogglePlayerControllable(playerid, 0);
			SPDEx(playerid,9652,0, "Аренда", "Вы хотите арендовать грузовик за 100?", "Да", "Нет");
			if(PI[playerid][pJob] == 7) { }
			else
			{
				SCM(playerid, 0xAFAFAFAA, "Вы не развозчик товаров!");
				RemovePlayerFromVehicleAC(playerid);
				TogglePlayerControllable(playerid, 1);
			}
		}
		if(newcar >= benzovozcar[0] && newcar <= benzovozcar[1])
		{
			TogglePlayerControllable(playerid, 0);
			SPDEx(playerid,9652,0, "Аренда", "Вы хотите арендовать грузовик за 500?", "Да", "Нет");
			if(PI[playerid][pJob] == 8)
			{
			}
			else
			{
				SCM(playerid, 0xAFAFAFAA, "Вы не развозчик бензина!");
				RemovePlayerFromVehicleAC(playerid);
				TogglePlayerControllable(playerid, 1);
			}
		}
		//----------------------------------------------------------------------
		if(newcar >= ruscar[0] && newcar <= ruscar[1])
		{
			if(PI[playerid][pMember] == 14) { }
			else { SCM(playerid, COLOR_GREY, "Вы не член Русской мафии!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= bmoto[0] && newcar <= bmoto[1])
		{
			if(PI[playerid][pMember] == 23) { }
			else { RemovePlayerFromVehicleAC(playerid); SCM(playerid, COLOR_GREY, "Вы не член байкерского клуба!"); }
		}
		if(newcar >= lcncar[0] && newcar <= lcncar[1])
		{
			if(PI[playerid][pMember] == 5) { }
			else { SCM(playerid, COLOR_GREY, "Вы не член La Cosa Nostra!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= yakcar[0] && newcar <= yakcar[1])
		{
			if(PI[playerid][pMember] == 6) { }
			else { SCM(playerid, COLOR_GREY, "Вы не член Yakuza!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= cnncar[0] && newcar <= cnncar[1])
		{
			if(PI[playerid][pMember] == 9) { }
			else { SCM(playerid, COLOR_GREY, "Вы не работник SA News"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar == matsfura)
		{
			if(PI[playerid][pMember] == 12) { }
			else { RemovePlayerFromVehicleAC(playerid); SCM(playerid, COLOR_GREY, "Вы не член The Ballas Gang!"); }
		}
		if(newcar >= fbicar[0] && newcar <= fbicar[10])
		{
			if(PI[playerid][pMember] == 2) { }
			else { SCM(playerid, COLOR_GRAD1, "Вы не агент FBI!"); RemovePlayerFromVehicleAC(playerid); } 
		}
		if(newcar >= SultanPD[0] && newcar <= SultanPD[13])
		{
			if(IsASAPD(playerid) && PI[playerid][pRank] >= 3) { }
			else { SCM(playerid, COLOR_GRAD1, "Данный транспорт для 3+ ранга или Вы не состоите в SAPD!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= BulletPD[0] && newcar <= BulletPD[10])
		{
			if(IsASAPD(playerid) && PI[playerid][pRank] >= 3) { }
			else { SCM(playerid, COLOR_GRAD1, "Данный транспорт для 3+ ранга или Вы не состоите в SAPD!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= sapdcar[0] && newcar <= sapdcar[1])
		{
			if(IsASAPD(playerid)) { }
			else { SCM(playerid, COLOR_GRAD1, "Вы не состоите в SAPD!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= sherifpd[0] && newcar <= sherifpd[1])
		{
			if(IsASAPD(playerid) && PI[playerid][pRank] >= 8) { }
			else { SCM(playerid, COLOR_GRAD1, "Данный транспорт для 8+ ранга или Вы не состоите в SAPD!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= medicar[0] && newcar <= medicar[1])
		{
			if(IsAMedic(playerid)) { }
			else { SCM(playerid, COLOR_GRAD1, "Вы не медик!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= mehanik[0] && newcar <= mehanik[1])
		{
			if(PI[playerid][pJob] == 2 && PI[playerid][pMember] == 0) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, "Вы не механик! (/gps -> Работа -> Центр Занятости)");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar >= chistveh[0] && newcar <= chistveh[1])
		{
			if(PI[playerid][pJob] == 19 && PI[playerid][pMember] == 0) { }
			else
			{
				SCM(playerid, COLOR_GRAD1, "Вы не уборщик! (/gps -> Работа -> Центр Занятости)");
				RemovePlayerFromVehicleAC(playerid);
			}
		}
		if(newcar == matsfuragrove)
		{
			if(PI[playerid][pMember] == 15) { }
			else { SCM(playerid, COLOR_GREY, "Вы не член Grove Street Gang!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar == matsfuraactek)
		{
			if(PI[playerid][pMember] == 17) { }
			else { SCM(playerid, COLOR_GREY, "Вы не член Varrios Los Aztecas Gang!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar == matsfuravagos)
		{
			if(PI[playerid][pMember] == 13) { }
			else { SCM(playerid, COLOR_GREY, "Вы не член Los Santos Vagos Gang!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= furabiker[0] && newcar <= furabiker[1])
		{
			if(PI[playerid][pMember] == 23) { }
			else { SCM(playerid, COLOR_GREY, "Вы не байкер!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar == matsfurarifa)
		{
			if(PI[playerid][pMember] == 18) { }
			else { SCM(playerid, COLOR_GREY, "Вы не член The Rifa Gang!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= ballascar[0] && newcar <= ballascar[1])
		{
			if(PI[playerid][pMember] == 12) { }
			else { SCM(playerid, COLOR_GREY, "Вы не член The Ballas Gang!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= grovecar[0] && newcar <= grovecar[1])
		{
			if(PI[playerid][pMember] == 15) { }
			else { SCM(playerid, COLOR_GREY, "Вы не член Grove Street Gang!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= coronoscar[0] && newcar <= coronoscar[1])
		{
			if(PI[playerid][pMember] == 17) { }
			else { SCM(playerid, COLOR_GREY, "Вы не член Varrios Los Aztecas Gang!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= vagoscar[0] && newcar <= vagoscar[1])
		{
			if(PI[playerid][pMember] == 13) { }
			else { SCM(playerid, COLOR_GREY, "Вы не член Los Santos Vagos Gang!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= rifacar[0] && newcar <= rifacar[1])
		{
			if(PI[playerid][pMember] == 18) { }
			else { SCM(playerid, COLOR_GREY, "Вы не член The Rifa Gang!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= prezidentcar[0] && newcar <= prezidentcar[1])
		{
			if(PI[playerid][pMember] == 22) { }
			else { SCM(playerid, 0xAFAFAFAA, "Вы не состоите в Администрации Президента!"); RemovePlayerFromVehicle(playerid); }
		}
		if(newcar >= zavcar[0] && newcar <= zavcar[1])
		{
			if(PI[playerid][pMember] == 24) { }
			else { SCM(playerid, 0xAFAFAFAA, "Вы не сотрудник завода К.А.С.С.!"); RemovePlayerFromVehicle(playerid); }
		}
		if(newcar >= patzav[0] && newcar <= patzav[1])
		{
			if(PI[playerid][pMember] == 24 && PI[playerid][pRank] >= 3) { }
			else { SCM(playerid, 0xAFAFAFAA, "Вы должны быть 3+ ранга"); RemovePlayerFromVehicle(playerid); }
		}
		if(newcar >= gunscar[0] && newcar <= gunscar[1])
		{
			if(PI[playerid][pMember] == 19 || GetPVarInt(playerid,"proverkaforma") == 1) { }
			else { SCM(playerid, COLOR_GREY, "Вы не солдат СВ!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= zfuelcar[0] && newcar <= zfuelcar[1])
		{
			if(PI[playerid][pMember] == 23 || PI[playerid][pMember] == 24 && PI[playerid][pRank] >= 2) { }
			else { SCM(playerid, COLOR_GREY, "Вы не Экспедитор/Гл.Инженер/Директор!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= zcar[0] && newcar <= zcar[1])
		{
			if(PI[playerid][pMember] == 24 && PI[playerid][pRank] >= 2) { }
			else { SCM(playerid, COLOR_GREY, "Вы не Экспедитор/Гл.Инженер/Директор!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= armycarsf[0] && newcar <= armycarsf[1])
		{
			if(PI[playerid][pMember] == 3 || GetPVarInt(playerid,"proverkaforma") == 1) { }
			else { SCM(playerid, COLOR_GRAD1, "Вы не солдат ВМФ!"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= armsf[0] && newcar <= armsf[1])
		{
			if(PI[playerid][pMember] == 3 && PI[playerid][pRank] >= 13) { }
			else { SCM(playerid, COLOR_GRAD1, "Техника доступна с 13+ ранга или Вы не солдат Армии"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= armsv[0] && newcar <= armsv[1])
		{
			if(PI[playerid][pMember] == 19 && PI[playerid][pRank] >= 13) { }
			else { SCM(playerid, COLOR_GRAD1, "Техника доступна с 13+ ранга или Вы не солдат Армии"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= voenk[0] && newcar <= voenk[1])
		{
			if(IsAArm(playerid) && PI[playerid][pRank] >= 2 || GetPVarInt(playerid,"proverkaforma") == 1) { }
			else { SCM(playerid, COLOR_GRAD1, "Вы не cолдат или у Вас не +2 ранг"); RemovePlayerFromVehicleAC(playerid); }
		}
		if(newcar >= armcar[0] && newcar <= armcar[1])
		{
			if(PI[playerid][pMember] == 19 || GetPVarInt(playerid,"proverkaforma") == 1) { }
			else { SCM(playerid, COLOR_GRAD1, "Вы не cолдат СВ!"); RemovePlayerFromVehicleAC(playerid); }
		}
	}
	return true;
}
stock LockCar(carid)
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		SetVehicleParamsForPlayer(carid, i, 0, 1);
		gCarLock[carid] = 1;
	}
}
stock InitLockDoors(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new c;
		while (c < 265)
		{
			c++;
			if(gCarLock[c] == 1)
			{
				SetVehicleParamsForPlayer(c,playerid, 0, 1);
			}
		}
	}
	return true;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
	SetPVarInt(playerid,"Anti_Cheats",gettime() + 5);
	ResetCarInfo(playerid);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && GetPVarInt(playerid,"TaxiDuty"))
	{
		Delete3DTextLabel(JobText3D[GetPVarInt(playerid,"rentcar_job")]);
		DeletePVar(playerid,"TaxiDuty");
	}
	if(GetPlayerState(playerid) != PLAYER_STATE_PASSENGER)
	{
		new arend_id = INVALID_PLAYER_ID;
		if(GetArendCarID(vehicleid, arend_id) != (-1))
		{
			SCM(playerid,0xF5DEB3AA,"< У Вас есть 60 секунд чтобы вернуться в арендованный т/с >");
			SCM(playerid,0x6495EDFF,"< Если Вы хотите отказаться от аренды т/с, введите /unrent >");
			arendtime[playerid] = 60;
		}
	}
	if(GetPVarInt(playerid, "loading_vert") == 1 || GetPVarInt(playerid, "loading_vert") == 2)
	{
		SCM(playerid, 0xF5DEB3AA, "Вы покинули грузовой вертолёт. Доставка прекращена!");
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid,"loading_vert");
		return true;
 	}
	if(GetPVarInt(playerid, "loading_job") == 1)
	{
		DisablePlayerRaceCheckpoint(playerid);
		return true;
	}
	if(GetPVarInt(playerid, "loading_job") == 2)
	{
		SCM(playerid, 0xF5DEB3AA, "Вы покинули т/с. Доставка нефти на завод К.А.С.С. прекращена!");
		DeletePVar(playerid, "loading_job");
		DisablePlayerRaceCheckpoint(playerid);
		return true;
 	}
	if(FL[playerid][PEfir] != 255)
	{
		format(YCMDstr, 128, "Вы вышли из прямого эфира");
		SCM(playerid, COLOR_WHITE, YCMDstr);
		FL[playerid][PEfir] = 255;
	}
	if(FL[playerid][Pefir] == 1)
	{
		FL[playerid][PEfir] = 255;
		format(YCMDstr, 128, "Вы вышли из прямого эфира");
		SCM(playerid, COLOR_WHITE, YCMDstr);
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && GetPVarInt(playerid,"TaxiDuty"))
	{
		Delete3DTextLabel(JobText3D[GetPVarInt(playerid,"rentcar_job")]);
		DeletePVar(playerid,"TaxiDuty");
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && AntiParkovka(playerid))
	{
		if(!IsANonf(playerid))
		{
			if(PI[playerid][pStraf] < 10)
			{
				PI[playerid][pStraf] += 1;
				format(YCMDstr,128,"Тут парковка запрещенна. У Вас [%d/10] квитанций. Оплатить квитанции можно в банке.",PI[playerid][pStraf]);
				SCM(playerid,0xFFE4B5AA,YCMDstr);
			}
			if(PI[playerid][pStraf] >= 10)
			{
				PI[playerid][pStraf] = 0;
				PI[playerid][pCarLic] = 0;
				SCM(playerid,0xFFE4B5AA,"Тут парковка запрещенна. У Вас были аннулированы водительские права.");
			}
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
	{
		for(new idx=0, i=0; idx<cvector_size(players); idx++)
		{
			i = cvector_get(players, idx);
			if(IsPlayerInVehicle(i, GetPlayerVehicleID(playerid)) && GetPlayerState(i) == 2 && GetPVarInt(i,"TaxiDuty") > 0)
			{
				if(GetPVarInt(i,"Taxi_")-1 == playerid)
				{
					SCM(i, COLOR_BLUE, "Пассажир вышел из вашего Такси. Деньги будут зачислены во время зарплаты");
					if(GetPVarInt(i,"PayDayCashJob") > gettime()) {}
					else
					{
						new taxizp = 200+random(200);
						PI[i][pPayCheck] += taxizp*PI[i][ptaxilvl];
						if(PI[i][pPayCheck] > 4000+(PI[i][ptaxilvl]*1000)) PI[i][pPayCheck] = 4000+(PI[i][ptaxilvl]*1000);
					}
					SetPVarInt(playerid, "TaxiPlayer", i);
					SPDEx(GetPVarInt(i,"Taxi_")-1, 1203, 0, "Такси", "Как вас обслужили?", "Хорошо", "Плохо");
					DeletePVar(i,"Taxi_");
					for(new id; id < GetMaxPlayers(); id++)
					{
						if(IsPlayerInVehicle(id, GetPlayerVehicleID(playerid)) && id != i && id != playerid)
						{
							format(YCMDstr, 128, "Довезите пассажира %s и государство заплатит Вам",Name(id));
							SCM(i, COLOR_BLUE, YCMDstr);
							SetPVarInt(i,"Taxi_",id+1);
							break;
						}
					}
				}
			}
		}
	}
	return 1;
}
public OnPlayerRequestClass(playerid, classid)
{
	if(PI[playerid][pLogin] == 1)
	{
		SetSpawnInfo(playerid, 0, 0, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
		SpawnPlayer(playerid);
		return true;
	}
	ResetNew(playerid);
	SetPlayerVirtualWorld(playerid,playerid+5);
	SetPlayerPos(playerid,2782.9395,-2025.3135,13.5620);
	SetPlayerFacingAngle(playerid,297.2832);
	SetPlayerCameraPos(playerid, 2785.612304,-2024.004760,14.011599);
	SetPlayerCameraLookAt(playerid, 2790.039306,-2021.690673,14.226377);
	SetPlayerVirtualWorld(playerid, 1);
	mysql_format(DATABASE, QUERY, sizeof(QUERY), "SELECT `Name` FROM `accounts` WHERE `Name` = '%s'",PI[playerid][pName]);
	mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",10,playerid,"");
	TogglePlayerControllable(playerid, 0);
	return true;
}
public OnPlayerRequestSpawn(playerid)
{
	return 0;
}
stock SetPlayerCriminal(playerid, killerid[], reason[])
{
	if(PI[playerid][pWantedLevel] > 6) PI[playerid][pWantedLevel] = 6;
	format(YCMDstr, 256,"Вы совершили преступление: [ %s ]. Сообщает: %s.",reason, killerid);
	SCM(playerid,COLOR_LIGHTRED,YCMDstr);
	format(YCMDstr, 256,"Ваш уровень розыска: %i", PI[playerid][pWantedLevel]);
	SCM(playerid,COLOR_YELLOW,YCMDstr);
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(PI[i][pMember] == 1 ||PI[i][pLeader] == 1 || PI[i][pMember] == 10 ||PI[i][pLeader] == 10 || PI[i][pMember] == 2 ||PI[i][pLeader] == 2 || PI[i][pMember] == 21 || PI[i][pLeader] == 21)
		{
			format(YCMDstr, 256, "Рация: Cообщает: %s. Преступление: %s. Подозреваемый: %s. Розыскиваемость: %i",killerid,reason,Name(playerid),PI[playerid][pWantedLevel]);
			SCM(i, 0xFEBC41AA,YCMDstr);
		}
	}
	return 1;
}
publics: SecondTimer()
{
    new hour, minute, second;
	gettime(hour, minute, second);
	FixHour(hour);
	hour = shifthour;
	if((hour > ghour) || (hour == 0 && ghour == 23))
	{
		format(YCMDstr, 120, " Сейчас времени {33AAFF}%d:00{ffffff} часов",hour);
		BroadCast(COLOR_WHITE,YCMDstr);
		ghour = hour;
		PayDay();
		for(new idx=0, i=0; idx<cvector_size(players); idx++)
		{
			i = cvector_get(players, idx);
			PI[i][pPayDay] += 1;
		}
		if(realtime) SetWorldTime(hour);
	}
	//--------------------------------------------------------------------------
    if(hour == 04 && minute == 29 && second == 00)
	{
	    OOCOff(COLOR_REDD, "< Плановый рестарт сервера через 1 минуту >");
	    for(new idx=0, i=0; idx<cvector_size(players); idx++)
		{
			i = cvector_get(players, idx);
			SaveMySQL(0, i);
		}
		SaveMySQL(1);
		for(new i = 1; i <= TotalBizz; i++) SaveMySQL(2,i);
		for(new i = 1; i <= TotalHouse; i++) SaveMySQL(3,i);
		for(new i = 1; i <= TotalHotel; i++) SaveMySQL(4,i);
		for(new i = 1; i <= NARKO; i++) SaveMySQL(5,i);
		for(new i = 1; i <= TotalMast; i++) SaveMySQL(6,i);
	}
	if(hour == 04 && minute == 30)
	{
		OOCOff(COLOR_REDD, "Внимание! Происходит рестарт сервера. Введите /q");
		mysql_format(DATABASE, YCMDstr, 35, "UPDATE `accounts` SET pLogin = '0'");
		mysql_function_query(DATABASE,YCMDstr,false,"","");
		SendRconCommand("gmx");
	}
	if(hour == 00 && minute == 02 && second == 00)
	{
		mysql_function_query(DATABASE,"UPDATE `accounts` SET pChas = '0', pMin = '0', pReport = '0'",false,"","");
		for(new idx=0, i=0; idx<cvector_size(players); idx++)
		{
			i = cvector_get(players, idx);
			PI[i][pChas] = 0;
			PI[i][pMin] = 0;
			PI[i][pReport] = 0;
		}
	}
	if(VhodVozm > 0) VhodVozm--;
	//
	GetMoney();
	PlayerTimer();
	AntiCheats();
    return 1;
}
stock PlayerTimer()
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		//----------------------------------------------------------------------
		GetPosPickup(i);
		MafiaCapt(i);
		Quest(i);
		//------------------------- Деньги в минусе = 0 ------------------------
		if(PI[i][pCash] < -1) PI[i][pCash] = 0;
		if(PI[i][pBank] < -1) PI[i][pBank] = 0;
		//----------------------------------------------------------------------
		if(GetPVarInt(i, "PlayerInAFK") == 0) SetPVarInt(i, "PlayerInAFK", -1);
		else if(GetPVarInt(i, "PlayerInAFK") == -1)
		{
			SetPVarInt(i, "PlayerInAFK", 1);
			new string[56];
			format(string, 56, "На паузе:{FFFFFF}[%s]", ConvertSeconds(GetPVarInt(i, "PlayerInAFK")));
			SetPlayerChatBubble(i, string, COLOR_REDD, 20.0, 1200);
   		}
		else if(GetPVarInt(i, "PlayerInAFK") > 0)
		{
			new string[56];
			SetPVarInt(i, "PlayerInAFK", GetPVarInt(i, "PlayerInAFK")+1);
			format(string, 56, "На паузе:{FFFFFF}[%s]", ConvertSeconds(GetPVarInt(i, "PlayerInAFK")));
			SetPlayerChatBubble(i, string, COLOR_REDD, 20.0, 1200);
		}
		//----------------------------------------------------------------------
		new weap,ammo;
		GetPlayerWeaponData(i,GetWeaponSlot(GetPlayerWeapon(i)),weap,ammo);
		if(ammo > 500)
		{
		    SCM(i, COLOR_GREY, "< Превышен лимит патронов. С собой можно иметь не больше 500 пт. для этого оружия >");
			SetPlayerAmmo(i, weap, 500);
		}
		if(PI[i][pJailed] == 1)
		{
		    if(ammo > 1) _ResetGun(i);
		}
		//----------------------------------------------------------------------
		new Float:health;
		GetPlayerHealth(i,health);
		if(health > 160)
		{
            PI[i][pHP] = 160;
			SetPlayerHealthAC(i, PI[i][pHP]);
		}
		//----------------------------------------------------------------------
		if(timenafta[i] > 0)
		{
			timenafta[i]--;
			format(YCMDstr,30,"~g~Processing ~r~%s",Convert(timenafta[i]));
			GameTextForPlayer(i, YCMDstr, 2000, 4);
			if(timenafta[i] == 1)
			{
				if(FracBank[0][kassnafta] <= 0) return SCM(i,COLOR_GRAD1, "На складе нет нефти для переработки!");
				if(FracBank[0][kassbenz] >= 49999) return SCM(i,COLOR_GRAD1, "Склад завода К.А.С.С. забит бензином.");
				SCM(i,COLOR_GRAD1, "Переработка нефти завершена. Получено 5 тыс. литров бензина.");
				FracBank[0][kassnafta] -= 5000;
				FracBank[0][kassbenz] += 5000;
				if(FracBank[0][kassbenz] > 50000) FracBank[0][kassbenz] = 50000;
				format(YCMDstr, 77, "Бензина на складе : %d/50000 литров | Нефти на складе: %d/50000 литров", FracBank[0][kassbenz], FracBank[0][kassnafta]);
				SCM(i, 0x6495EDFF, YCMDstr);
				DeletePVar(i,"loading_nafta");
			}
		}
		//----------------------------------------------------------------------
		if(arendtime[i] > 0)
		{
			arendtime[i]--;
			format(YCMDstr,10,"~r~%s",Convert(arendtime[i]));
			GameTextForPlayer(i, YCMDstr, 1000, 6);
			if(arendtime[i] == 1)
			{
			    new rc = GetPVarInt(i, "ArendKey");
				new lockstatus = gCarLock[ArendInfo[rc][aID]];
				switch(lockstatus)
				{
				case 0: { UnLockCar(ArendInfo[rc][aID]); IsLocked[ArendInfo[rc][aID]] = 0; }
				case 1: { UnLockCar(ArendInfo[rc][aID]); IsLocked[ArendInfo[rc][aID]] = 0; }
				default: SCM(i, COLOR_RED, "Ошибка!");
				}
				SCM(i, 0x6495EDFF, "< Арендованный Вами т/с был отправлен на стоянку аренды >");
				ArendInfo[rc][aPlayerID] = INVALID_PLAYER_ID;
				SetVehicleToRespawn(ArendInfo[rc][aID]);
				Fuell[ArendInfo[rc][aID]] = 100;
				SetPVarInt(i, "ArendKey", -1);
				continue;
			}
		}
		//----------------------------------------------------------------------
		if(!PI[i][pLogin])
		{
			if(GetPVarInt(i,"time_logged") > 0)
			{
				SetPVarInt(i,"time_logged",GetPVarInt(i,"time_logged")-1);
				if(GetPVarInt(i,"time_logged") == 0)
				{
					SCM(i, COLOR_LIGHTRED,"Время на ввод пароля ограничено!");
					SPDEx(i, -1, 0, "f", "f", "f", "");
					Kick(i);
				}
			}
		}
		//----------------------------------------------------------------------
		if(PI[i][pJailed] == 1)
		{
			format(YCMDstr, 21, "Jail Time: %d sec", PI[i][pJailTime]);
			GameTextForPlayer(i, YCMDstr, 1000, 4);
		}
		//----------------------------------------------------------------------
		SetPVarInt(i, "NewPlayerAmmo", GetPlayerAmmo(i));
		if(GetPVarInt(i, "NewPlayerAmmo") != GetPVarInt(i, "PlayerAmmo"))
		{
			OnPlayerAmmoChange(i, GetPVarInt(i, "NewPlayerAmmo"), GetPVarInt(i, "PlayerAmmo"));
			SetPVarInt(i, "PlayerAmmo", GetPVarInt(i, "NewPlayerAmmo"));
		}
		//----------------------------------------------------------------------
		if(PI[i][pNarcoLomka] > 0) { new ttt = random(2); if(ttt == 1) { ApplyAnimation(i, "CRACK", "crckdeth1", 4.0, 0, 0, 1, 1, 1); } else { ApplyAnimation(i, "CRACK", "crckdeth3", 4.0, 0, 0, 1, 1, 1); } }
		InitLockDoors(i);
		if(GetPVarInt(i, "AntiReport") > 0) SetPVarInt(i, "AntiReport", GetPVarInt(i, "AntiReport") - 1);
		if(GetPVarInt(i,"startaddiction") == 1 && PI[i][pAddiction] >= 1000 && PI[i][pNarcoLomka] == 0)
		{
			SCM(i, COLOR_RED, "~~~~~~~~~~~~ У Вас началась ломка ~~~~~~~~~~~~");
			SCM(i, COLOR_WHITE, "(( Принять наркотик: /usedrugs   ||   Вызвать скорую помощь: /phone ))");
			PI[i][pNarcoLomka] = 1;
		}
		if(CellTime[i] > 0)
		{
			if(CellTime[i] == cchargetime)
			{
				CellTime[i] = 1;
				if(Mobile[Mobile[i]] == i) PI[i][pMobile] = PI[i][pMobile]-callcost;
				CellTime[i] = CellTime[i] +1;
				if (Mobile[Mobile[i]] == 999 && CellTime[i] == 5)
				{
					if(IsPlayerConnected(Mobile[i]))
					{
						format(YCMDstr, 45, "У %s звонит мобильник",Name(Mobile[i]));
						ProxDetector(30.0, Mobile[i], YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
		}
		if(PI[i][pWantedLevel] > 6) PI[i][pWantedLevel] = 6, SetPlayerWantedLevel(i, PI[i][pWantedLevel]);
		if(PI[i][pZakonp] > 100) PI[i][pZakonp] = 100;
		if(PI[i][pZakonp] < -100) PI[i][pZakonp] = -100;
		if(GetPlayerState(i) == PLAYER_STATE_SPECTATING && PI[i][pBSA] >= 2)
		{
			new Float:hppp, Float:aermor;
			GetPlayerArmour(SpecAd[i],aermor);
			GetPlayerHealth(SpecAd[i],hppp);
			if(IsPlayerInAnyVehicle(SpecAd[i]))
			{
				new Float:healthr;
				GetVehicleHealth(GetPlayerVehicleID(SpecAd[i]),healthr);
				format(YCMDstr, 256,"%s~n~~n~~r~MONEY: ~w~%d~n~~r~BANK: ~w~%d~n~~n~~g~WARNS: ~w~%d~n~~g~PING: ~w~%d~n~~n~~y~HP: ~w~%.0f~n~~y~Armour: ~w~%.0f~n~~y~AMMO: ~w~%d~n~~n~~b~CAR HP: ~w~%.0f~n~~b~SPEED: ~w~%d~n~",Name(SpecAd[i]),PI[SpecAd[i]][pCash],PI[SpecAd[i]][pBank],PI[SpecAd[i]][pWarns],GetPlayerPing(SpecAd[i]),hppp,aermor,GetPlayerAmmo(SpecAd[i]),healthr,SpeedVehicle(SpecAd[i]));
				PlayerTextDrawSetString(i,FL[i][FULLRECON],YCMDstr);
			}
			else
			{
				format(YCMDstr, 256,"%s~n~~n~~r~MONEY: ~w~%d~n~~r~BANK: ~w~%d~n~~n~~g~WARNS: ~w~%d~n~~g~PING: ~w~%d~n~~n~~y~HP: ~w~%.0f~n~~y~Armour: ~w~%.0f~n~~y~AMMO: ~w~%d~n~~n~~b~SPEED: ~w~%d~n~",Name(SpecAd[i]),PI[SpecAd[i]][pCash],PI[SpecAd[i]][pBank],PI[SpecAd[i]][pWarns],GetPlayerPing(SpecAd[i]),hppp,aermor,GetPlayerAmmo(SpecAd[i]),SpeedVehicle(SpecAd[i]));
				PlayerTextDrawSetString(i,FL[i][FULLRECON],YCMDstr);
			}
		}
		if(IsSmoking[i] == 1)
		{
			format(YCMDstr, 42, "%s докуривает сигарету", Name(i));
			ProxDetector(30.0, i, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			new Float:PlayerHeal;
			GetPlayerHealth(i, PlayerHeal);
			if(PlayerHeal < 120) SetPlayerHealthAC(i, PlayerHeal+3);
			SetPlayerSpecialAction(i,SPECIAL_ACTION_NONE);
		}
		if(IsSmoking[i] == 51 || IsSmoking[i] == 31 || IsSmoking[i] == 11)
		{
			format(YCMDstr, 37, "%s курит сигарету", Name(i));
			ProxDetector(30.0, i, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			new Float:PlayerHeal;
			GetPlayerHealth(i, PlayerHeal);
			if(PlayerHeal < 120) SetPlayerHealthAC(i, PlayerHeal+3);
		}
		if(IsSmoking[i] > 0) IsSmoking[i] -= 1;
		if(Works[i] == true && JobCP[i] == 2) if(usemesh[i] == 1) mesh[i] += 1;
		if(Flood[i] > 0) Flood[i] -=1;
		new hour, minute, second;
		gettime(hour, minute, second);
		if(hour >= 12 && minute == 10 && second == 0) SetPVarInt(i, "startaddiction", 1);
		if(PI[i][pDrugtime] > 0) PI[i][pDrugtime]--;
		if(PI[i][pMuteTime] > 0 && PI[i][pMuted] == 1) PI[i][pMuteTime] -= 1;
		if(PI[i][pMuteTime] == 0 && PI[i][pMuted] == 1) PI[i][pOFFMute] = 0, PI[i][pMuted] = 0, SCM(i,COLOR_LIGHTRED, "Вам включили чат. Пожалуйста соблюдайте правила");
		if(PI[i][pMestoJail] == 4)
		{
			new worlds = GetPlayerVirtualWorld(i);
			if(worlds != 10 && !PlayerToPoint(20.0,i,-10101.6230,5360.6963,6797.0000))
			{
				SetPlayerVirtualWorld(i,74);
				SetPlayerPos(i,-10101.6230,5360.6963,6797.0000);
			}
		}
		if(PI[i][pJailed] > 0)
		{
			if(PI[i][pJailTime] > 0) PI[i][pJailTime]--;
			if(PI[i][pJailTime] <= 0)
			{
				if(PI[i][pJailed] == 1)
				{
					if(PI[i][pMestoJail] == 1) SetPlayerInterior(i, 0), SetPlayerPos(i,1553.4962,-1675.2714,16.1953), SetPlayerFacingAngle(i, 95.0636);
					if(PI[i][pMestoJail] == 2) SetPlayerInterior(i, 0), SetPlayerPos(i,-1607.1873,721.3649,12.2721), SetPlayerFacingAngle(i, 2.3026);
					if(PI[i][pMestoJail] == 3) SetPlayerInterior(i, 0), SetPlayerPos(i,2334.8467,2454.9456,14.9688), SetPlayerFacingAngle(i, 115.7874);
					if(PI[i][pMestoJail] == 4) SpawnPlayer(i);
					if(PI[i][pMestoJail] == 5) SetPlayerInterior(i, 0), SetPlayerPos(i,-308.7999,1498.3580,75.7039), SetPlayerFacingAngle(i, 180.2377);
				}
				else if(PI[i][pJailed] == 4) SetPlayerWorldBounds(i,20000.0000,-20000.0000,20000.0000,-20000.0000), SetPlayerInterior(i, 0), SetPlayerPos(i, 90.2101,1920.4854,17.9422);
				PI[i][pJailTime] = 0;
				PI[i][pOFFDMG] = 0;
				PI[i][pJailed] = 0;
				PlayerCuffed[i] = 0;
				if(PI[i][pMember] >= 1) SetPlayerSkin(i,PI[i][pModel]);
				if(PI[i][pMember] == 0) SetPlayerSkin(i,PI[i][pChar][PI[i][pViborChar]]);
				SCM(i, COLOR_ISPOLZUY, "Вы заплатили свой долг обществу, теперь Вы свободны!");
				PI[i][pMestoJail] = 0;
				PI[i][pWantedLevel] = 0;
				SetPlayerWantedLevel(i, 0);
				SetPlayerVirtualWorld(i, 0);
				GameTextForPlayer(i,"~g~Freedom", 5000, 1);
			}
		}
		PI[i][pGiveExp]++;
		if(TieTime[i] > 0) TieTime[i]--;
		if(FL[i][chisttimer] > 0) FL[i][chisttimer]--;
		if(PlayerCuffed[i] == 1)
		{
			if(PlayerCuffedTime[i] <= 0)
			{
				TogglePlayerControllable(i, 1);
				PlayerCuffed[i] = 0;
				PlayerCuffedTime[i] = 0;
				Tazed[i] = 0;
			}
			else PlayerCuffedTime[i] -= 1;
		}
		if(PlayerCuffed[i] == 2)
		{
			if(PlayerCuffedTime[i] <= 0)
			{
				TogglePlayerControllable(i, 1);
				PlayerCuffed[i] = 0;
				PlayerCuffedTime[i] = 0;
			}
			else PlayerCuffedTime[i] -= 1;
		}
	}
	return 1;
}
stock AntiCheats()
{
	for(new idx=0, playerid=0; idx<cvector_size(players); idx++)
	{
		playerid = cvector_get(players, idx);
		//--------------------------------- Car Spam ---------------------------
        if(IDVEH[playerid] != -1 && IsPlayerConnected(playerid) && IsPlayerInAnyVehicle(playerid) && UseEnter[playerid] != true && IDVEH[playerid] != GetPlayerVehicleID(playerid)) return Chectkick(playerid);
		//------------------------------- Fly & Метла --------------------------
		if(PI[playerid][pBSA] < 1)
		{
			new animlib[30], animname[30];
			GetAnimationName(GetPlayerAnimationIndex(playerid), animlib, sizeof(animlib), animname, sizeof(animname));
			if(strcmp(animlib, "PED", true) == 0 && strcmp(animname, "CAR_SIT_PRO", true) == 0)
			{
				if(strcmp(animlib, "PED", true) == 0 && strcmp(animname, "KO_SHOT_FRONT", true) == 0) continue;
				if(GetPVarInt(playerid, "Metla") > gettime()) continue;
				format(YCMDstr,sizeof(YCMDstr),"< AC > Игрок %s[%i]: возможно использует чит [Fly/Метла]", Name(playerid), playerid);
				ABroadCast(COLOR_REDD, YCMDstr, 1);
				SetPVarInt(playerid, "Metla", gettime() + 15);
			}
		}
		//----------------------------------------------------------------------
		if(PI[playerid][pBSA] < 1)
		{
			new Float:PoX,Float:PoY,Float:PoZ;
			if(!IsPlayerInAnyVehicle(playerid)) GetPlayerPos(playerid,PoX,PoY,PoZ);
			else GetVehiclePos(GetPlayerVehicleID(playerid),PoX,PoY,PoZ);
			if(GetPVarFloat(playerid,"PosX") != 0.0 && GetPVarFloat(playerid,"PosY") != 0.0 && GetPlayerState(playerid) != PLAYER_STATE_SPECTATING && !GetPVarInt(playerid, "PlayerInAFK") && GetPVarInt(playerid,"Anti_Cheats") < gettime())
			{
				new string[90], Float:xdist = PoX-GetPVarFloat(playerid,"PosX"), Float:ydist = PoY-GetPVarFloat(playerid,"PosY"), Float:sqxdist = xdist*xdist, Float:sqydist = ydist*ydist, Float:distance = (sqxdist+sqydist)/31;
				if(GetPVarInt(playerid,"AntiFloodSC") < gettime())
				{
					if(!IsPlayerInAnyVehicle(playerid))
					{
						if(distance < 2000 && distance > 100) format(string, 90, "< AC > Игрок %s[%d] возможно использует чит [Fly/AirBrk]",Name(playerid),playerid),ABroadCast(COLOR_REDD, string, 1), SetPVarInt(playerid,"AntiFloodSC",gettime() + 15);
						else if(distance > 2000) format(string, 90, "< AC > Игрок %s[%d] возможно использует чит [TP/Fly/AirBrk]",Name(playerid),playerid),ABroadCast(COLOR_REDD, string, 1), SetPVarInt(playerid,"AntiFloodSC",gettime() + 15);
					}
				}
			}
			SetPVarFloat(playerid,"PosX",PoX);
			SetPVarFloat(playerid,"PosY",PoY);
		}
  /******************************* Античит на оружие **************************************/
		new weap = GetPlayerWeapon(playerid);

		// Проверка на gunmute и валидность оружия
		if(gunmute[playerid] <= gettime() && weap != 0 && weap != 46)
		{
		    // Проверка запрещенных видов оружия (единый блок)
		    static const forbiddenWeapons[] = {4, 35, 36, 37, 38, 39, 16, 18, 44, 45};
		    for(new i = 0; i < sizeof(forbiddenWeapons); i++) {
		        if(weap == forbiddenWeapons[i]) {
		            ResetPlayerWeapons(playerid);
		            print("KICK #7");
		            return Kick(playerid); // Совмещаем сброс и кик
		        }
		    }

		    // Проверка легитимности оружия
		    if(!WeaponInfo[playerid][weap])
		    {
		        ResetPlayerWeapons(playerid);
		        return ToCheat(1, playerid);
		    }

		    // Получение данных слота
		    new slot = GetWeaponSlot(weap);
		    new weaponid, ammo;
		    GetPlayerWeaponData(playerid, slot, weaponid, ammo);

		    // Основные проверки
		    if(ammo > AmmoInfo[playerid][weap] || AmmoInfo[playerid][weap] < 0)
		    {
		        ResetPlayerWeapons(playerid);
		        return ToCheat(1, playerid);
		    }

		    // Обновление информации о патронах
		    if(ammo < AmmoInfo[playerid][weap])
		    {
		        AmmoInfo[playerid][weap] = ammo;
		        PI[playerid][pAmmos][slot] = ammo;
		    }

		    // Помечаем оружие как неактивное при израсходовании патронов
		    if(ammo <= 0) WeaponInfo[playerid][weap] = false;
		}
		/*********************************** Антифлуд пикапами ***********************************/
		if(FL[playerid][oldpickup] != -1)
		{
			new Float:z;
			GetPlayerPos(playerid, z, z, z);
			if(timepickup[playerid] > 0) timepickup[playerid]--;
			if(!IsPlayerInRangeOfPoint(playerid,5.0,FL[playerid][PickupX],FL[playerid][PickupY],z) && timepickup[playerid] == 0) FL[playerid][oldpickup] = -1;
		}
		/******************************** Античит на JETPACK *******************************/
  		new action = GetPlayerSpecialAction(playerid);
		if(action == SPECIAL_ACTION_USEJETPACK && gunmute[playerid] <= gettime())
		{
		    PI[playerid][pWarns]++;

		    new name[MAX_PLAYER_NAME];
		    GetPlayerName(playerid, name, sizeof(name)); // Оптимизация получения имени

		    if(PI[playerid][pWarns] >= 3)
		    {
		        format(YCMDstr, sizeof(YCMDstr), "[Античит]: %s был забанен за использование читов [3 предупреждения]", name);
		        SendClientMessageToAll(COLOR_LIGHTRED, YCMDstr);

		        PI[playerid][pLocked] = 1;
		        PI[playerid][pBanMounth] = gettime() + (14 * 86400); // 14 дней в секундах
		        PI[playerid][pMember] = 0;
			    PI[playerid][pLeader] = 0;
			    PI[playerid][pJob] = 0;
			    PI[playerid][pSong] = 0;
		    }
		    else
		    {
		        format(YCMDstr, sizeof(YCMDstr), "[Античит]: %s получил Warn за использование читов (%d/3)", name, PI[playerid][pWarns]);
		        SendClientMessageToAll(COLOR_LIGHTRED, YCMDstr);

		        PI[playerid][punWarns] = 1;
		        PI[playerid][punWarnstime] = gettime();
		    }

		    PI[playerid][pMember] = 0;
		    PI[playerid][pLeader] = 0;
		    Kick(playerid);
		}
		/******************************** Античит на быструю езду на мопеде *******************************/
		if(IsPlayerInAnyVehicle(playerid) && GetVehicleModel(GetPlayerVehicleID(playerid)) == 462 && SpeedVehicle(playerid) > 110) SCM(playerid, COLOR_LIGHTRED, "Вы были кикнуты по подозрению в читерстве. (#2888)"), Kick(playerid);
	}
	return true;
}
stock ShowStats(playerid,targetid)
{
	if(IsPlayerConnected(playerid) && IsPlayerConnected(targetid))
	{
		new atext[32], ttext[32];
		new jtext[20], rangz[25];
		new vrank[20];
		switch(PI[targetid][pSex])
		{
		case 1: atext = "Мужчина";
		case 2: atext = "Женщина";
		}
		switch(PI[targetid][pMember])
		{
		case 1: ttext = "LSPD";
		case 2: ttext = "FBI";
		case 3: ttext = "ВМФ";
		case 4: ttext = "Мед. Центр СФ";
		case 5: ttext = "LCN";
		case 6: ttext = "Yakuza";
		case 7: ttext = "None";
		case 8: ttext = "Мед. Центр ЛС";
		case 9: ttext = "SA News";
		case 10: ttext = "SFPD";
		case 11: ttext = "None";
		case 12: ttext = "Ballas Gang";
		case 13: ttext = "Vagos Gang";
		case 14: ttext = "Русская Мафия";
		case 15: ttext = "Grove Street";
		case 17: ttext = "Aztecas Gang";
		case 18: ttext = "Rifa Gang";
		case 19: ttext = "СВ";
		case 21: ttext = "LVPD";
		case 22: ttext = "Правительство";
		case 23: ttext = "Байкеры";
		case 24: ttext = "Завод К.А.С.С.";
		default: ttext = "Неизвестно";
		}
		switch(PI[targetid][pMember])
		{
		case 0: rangz = "Нет";
		case 1,10,21:
			{
				switch(PI[targetid][pRank])
				{
				case 10: { rangz = "Комиссар[10]"; }
				case 9: { rangz = "Пом. Комиссара[9]"; }
				case 8: { rangz = "Инспектор[8]"; }
				case 7: { rangz = "SWAT[7]"; }
				case 6: { rangz = "Лейтенант[6]"; }
				case 5: { rangz = "Сержант[5]"; }
				case 4: { rangz = "Детектив[4]"; }
				case 3: { rangz = "Офицер[3]"; }
				case 2: { rangz = "Патрульный[2]"; }
				case 1: { rangz = "Кадет[1]"; }
				}
			}
		case 2:
			{
				switch(PI[targetid][pRank])
				{
				case 10: { rangz = "Директор[10]"; }
				case 9: { rangz = "Зам.Директора[9]"; }
				case 8: { rangz = "Инспектор[8]"; }
				case 7: { rangz = "SWAT FBI[7]"; }
				case 6: { rangz = "Начальник секции[6]"; }
				case 5: { rangz = "Спец. Агент[5]"; }
				case 4: { rangz = "Старший Агент[4]"; }
				case 3: { rangz = "Агент[3]"; }
				case 2: { rangz = "Младший Агент[2]"; }
				case 1: { rangz = "Стажёр[1]"; }
				}
			}
		case 3:
			{
				switch(PI[targetid][pRank])
				{
				case 16: { rangz = "Адмирал[16]"; }
				case 15: { rangz = "Капитан 1 ранга[15]"; }
				case 14: { rangz = "Капитан 2 ранга[14]"; }
				case 13: { rangz = "Капитан 3 ранга[13]";}
				case 12: { rangz = "Капитан-Лейтенант"; }
				case 11: { rangz = "Старший лейтенант"; }
				case 10: { rangz = "Лейтенант[10]"; }
				case 9: { rangz = "Младший лейтенант"; }
				case 8: { rangz = "Старший мичман"; }
				case 7: { rangz = "Мичман[7]"; }
				case 6: { rangz = "Боцман[6]"; }
				case 5: { rangz = "Главный Старшина[5]"; }
				case 4: { rangz = "Старшина"; }
				case 3: { rangz = "Канонир[3] "; }
				case 2: { rangz = "Старший Матрос"; }
				case 1: { rangz = "Матрос[1]"; }
				}
			}
		case 4,8:
			{
				switch(PI[targetid][pRank])
				{
				case 10: { rangz = "Глав. Врач[10]"; }
				case 9: { rangz = "Зав. Отделением[9]"; }
				case 8: { rangz = "Хирург[8]"; }
				case 7: { rangz = "Психиатр[7]"; }
				case 6: { rangz = "Нарколог[6]"; }
				case 5: { rangz = "Терапевт[5]"; }
				case 4: { rangz = "Парамедик[4]"; }
				case 3: { rangz = "Интерн[3]"; }
				case 2: { rangz = "Мед. Брат[2]"; }
				case 1: { rangz = "Санитар[1]"; }
				}
			}
		case 5:
			{
				switch(PI[targetid][pRank])
				{
				case 5: { rangz = "Крестный отец[5]"; }
				case 4: { rangz = "Младший босс[4]"; }
				case 3: { rangz = "Капореджиме[3]"; }
				case 2: { rangz = "Боец[2]"; }
				case 1: { rangz = "Новицио[1]"; }
				}
			}
		case 6:
			{
				switch(PI[targetid][pRank])
				{
				case 5: { rangz = "Оябун[5]"; }
				case 4: { rangz = "Сайко-комон[4]"; }
				case 3: { rangz = "Вака-гасира[3]"; }
				case 2: { rangz = "Кёдай[2]"; }
				case 1: { rangz = "Куми-ин[1]"; }
				}
			}
		case 9:
			{
				switch(PI[targetid][pRank])
				{
				case 7: { rangz = "Ген. Директор[7]"; }
				case 6: { rangz = "Шеф-Редактор[6]"; }
				case 5: { rangz = "Редактор[5]"; }
				case 4: { rangz = "Ведущий[4]"; }
				case 3: { rangz = "Репортер[3]"; }
				case 2: { rangz = "Копирайтер[2]"; }
				case 1: { rangz = "Стажер[1]"; }
				}
			}
		case 12:
			{
				switch(PI[targetid][pRank])
				{
				case 5: { rangz = "Биг Вилли[5]"; }
				case 4: { rangz = "Райч нига[4]"; }
				case 3: { rangz = "Фолкс[3]"; }
				case 2: { rangz = "Гэнгста[2]"; }
				case 1: { rangz = "Гун бро[1]"; }
				}
			}
		case 13:
			{
				switch(PI[targetid][pRank])
				{
				case 5: { rangz = "Падре[5]"; }
				case 4: { rangz = "Падрино[4]"; }
				case 3: { rangz = "Бандито[3]"; }
				case 2: { rangz = "Локал[2]"; }
				case 1: { rangz = "Новито[1]"; }
				}
			}
		case 14:
			{
				switch(PI[targetid][pRank])
				{
				case 5: { rangz = "Вор в законе[5]"; }
				case 4: { rangz = "Авторитет[4]"; }
				case 3: { rangz = "Бригадир[3]"; }
				case 2: { rangz = "Вор[2]"; }
				case 1: { rangz = "Шестерка[1]"; }
				}
			}
		case 15:
			{
				switch(PI[targetid][pRank])
				{
				case 5: { rangz = "Медд Дог[5]"; }
				case 4: { rangz = "Де Кинг[4]"; }
				case 3: { rangz = "Мобста[3]"; }
				case 2: { rangz = "Гэнгста[2]"; }
				case 1: { rangz = "Килла[1]"; }
				}
			}
		case 17:
			{
				switch(PI[targetid][pRank])
				{
				case 5: { rangz = "Падре[5]"; }
				case 4: { rangz = "Нестро[4]"; }
				case 3: { rangz = "Тесосеро[3]"; }
				case 2: { rangz = "Мирандо[2]"; }
				case 1: { rangz = "Геттор[1]"; }
				}
			}
		case 18:
			{
				switch(PI[targetid][pRank])
				{
				case 5: { rangz = "Падре"; }
				case 4: { rangz = "Ауторидад"; }
				case 3: { rangz = "Бандидо"; }
				case 2: { rangz = "Джуниор"; }
				case 1: { rangz = "Новато"; }
				}
			}
		case 19:
			{
				switch(PI[targetid][pRank])
				{
				case 16: { rangz = "Генерал[16]"; }
				case 15: { rangz = "Полковник[15]"; }
				case 14: { rangz = "Подполковник[14]"; }
				case 13: { rangz = "Майор[13]";}
				case 12: { rangz = "Капитан[12]"; }
				case 11: { rangz = "1-й лейтенант[11]"; }
				case 10: { rangz = "2-й лейтенант[10]"; }
				case 9: { rangz = "Ст. Уорент-офицер[9]"; }
				case 8: { rangz = "Уорент-офицер[8]"; }
				case 7: { rangz = "Ст. сержант[7]"; }
				case 6: { rangz = "Штаб-Сержант[6]"; }
				case 5: { rangz = "Сержант[5]"; }
				case 4: { rangz = "Капрал[4]"; }
				case 3: { rangz = "Мл. Капрал[3]"; }
				case 2: { rangz = "Рядовой[2]"; }
				case 1: { rangz = "Рекрут[1]"; }
				}
			}
		case 22:
			{
				switch(PI[targetid][pRank])
				{
				case 14: { rangz = "Президент"; }
				case 13: { rangz = "Вице-Президент"; }
				case 12: { rangz = "Гос. Секретарь"; }
				case 11: { rangz = "Министр Обороны"; }
				case 10: { rangz = "Зам. МО"; }
				case 9: { rangz = "Министр Внутр.Дел"; }
				case 8: { rangz = "Зам. МВД"; }
				case 7: { rangz = "Министр Здрав."; }
				case 6: { rangz = "Зам. МЗ"; }
				case 5: { rangz = "Министр Культуры"; }
				case 4: { rangz = "Зам. МК"; }
				case 3: { rangz = "Пресс-секретарь"; }
				case 2: { rangz = "Начальник охраны"; }
				case 1: { rangz = "Охранник"; }
				}
			}
		case 23:
			{
				switch(PI[targetid][pRank])
				{
				case 5: { rangz = "Вожак стаи"; }
				case 4: { rangz = "Старый Волк"; }
				case 3: { rangz = "Неуловимый"; }
				case 2: { rangz = "Охотник за головами"; }
				case 1: { rangz = "Заблудший"; }
				}
			}
		case 24:
			{
				switch(PI[targetid][pRank])
				{
				case 6: { rangz = "Директор"; }
				case 5: { rangz = "Гл.Инженер"; }
				case 4: { rangz = "Нач.Охраны"; }
				case 3: { rangz = "Охранник"; }
				case 2: { rangz = "Экспедитор"; }
				case 1: { rangz = "Технолог"; }
				}
			}
		}
		switch(PI[targetid][pJob])
		{
		case 1: jtext = "";
		case 2: jtext = "Механик";
		case 4: jtext = "Таксист";
		case 6: jtext = "Тренер";
		case 7: jtext = "Развозчик товаров";
		case 8: jtext = "Развозчик топлива";
		case 11: jtext = "Мусорщик";
		case 19: jtext = "Уборщик улиц";
		default: jtext = "Безработный";
		}
		switch(PI[targetid][pDonateRank])
		{
		case 1: vrank = "BRONZE VIP";
		case 2: vrank = "SILVER VIP";
		case 3: vrank = "GOLD VIP";
		default: vrank = "Нет";
		}
		new airveh[13];
		switch(PI[targetid][pCar3])
		{
		case 460: airveh = "Skimmer"; case 469: airveh = "Sparrow"; case 476: airveh = "Rustler";
		case 487: airveh = "Maverick"; case 511: airveh = "Beagle"; case 512: airveh = "Cropduster";
		case 513: airveh = "Stuntplane"; case 519: airveh = "Shamal"; case 553: airveh = "Nevada";
		case 593: airveh = "Dodo"; default: airveh = "Нет";
  		}
		new stringus[200], name[MAX_PLAYER_NAME], sctring[2000];
		new cash = PI[targetid][pCash];
		new drugs = PI[targetid][pDrugs];
		new mats = PI[targetid][pMats];
		new cryst = PI[targetid][pDonatemoney];
		new wanted = PI[targetid][pWantedLevel];
		new bcase = PI[targetid][pBank];
		new level = PI[targetid][pLevel];
		new exp = PI[targetid][pExp];
		new nxtlevel = PI[targetid][pLevel]+1;
		new expamount = nxtlevel*levelexp;
		new pnumber = PI[targetid][pPnumber];
		new warns = PI[targetid][pWarns];
		new zakon = PI[targetid][pZakonp];
		new addiction = PI[targetid][pAddiction];
		new kills = PI[targetid][pKills];
		new arrests = PI[targetid][pArrested];
		new song = PI[targetid][pSong];
		new straf = PI[targetid][pStraf];
		GetPlayerName(targetid, name, sizeof(name));
		new bizd[20];
		if(PI[targetid][pPbiskey] == 255) { bizd = "Нет"; }
		else if(PI[targetid][pPbiskey] != 255) { bizd = "Имеется"; }
		new mastzd[20];
		if(PI[targetid][pPviskey] == 255) { mastzd = "Нет"; }
		else if(PI[targetid][pPviskey] != 255) { mastzd = "Имеется"; }
		new hous[20];
		if(PI[targetid][pPhousekey] == 999) { hous = "Нет"; }
		else if(PI[targetid][pPhousekey] != 999) { hous = "Имеется"; }
		new hot[20];
		if(PI[targetid][pPhotelkey] == 999) { hot = "Нет"; }
		else if(PI[targetid][pPhotelkey] != 999) { hot = "Имеется"; }
		if(PI[targetid][pMarried] == 0) { stringus = "Нет"; }
		GetPlayerName(targetid, name, sizeof(name));
		new playerip[15];
		GetPlayerIp(targetid, playerip, sizeof(playerip));
		GetPlayerName(targetid, name, sizeof(name));
		new Float:px,Float:py,Float:pz;
		GetPlayerPos(targetid, px, py, pz);
		{
			new month, day, year, hourt, minuitet, mtext[20];
			getdate(year, month, day), gettime(hourt, minuitet);
			if(month == 1) mtext = "Января";
			else if(month == 2) mtext = "февраля";
			else if(month == 3) mtext = "Марта";
			else if(month == 4) mtext = "Апреля";
			else if(month == 5) mtext = "Мая";
			else if(month == 6) mtext = "Июня";
			else if(month == 7) mtext = "Июля";
			else if(month == 8) mtext = "Августа";
			else if(month == 9) mtext = "Сентября";
			else if(month == 10) mtext = "Октября";
			else if(month == 11) mtext = "Ноября";
			else if(month == 12) mtext = "Декабря";
			
			format(YCMDstr,128,"{ffffff}Ник: \t\t\t\t%s\n",name); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Уровень: \t\t\t%d (%d/%d)\n",level,exp,expamount); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Статус VIP:\t\t\t%s\n",vrank); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Донат: \t\t\t%d\n",cryst); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Дата регистрации: \t\t%s\n\n",PI[targetid][pDataReg]); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Предупреждения: \t\t%d/3\n",warns); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Арестов: \t\t\t%d\n",arrests); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Уровень розыска: \t\t%d/6\n",wanted); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Законопослушность: \t\t%d\n",zakon); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Убийств: \t\t\t%d\n",kills); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Наркозависимость: \t\t%d\n",addiction); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Наркотики: \t\t\t%d\n",drugs); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Материалы: \t\t\t%d\n",mats); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Телефон: \t\t\t%d\n",pnumber); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Штрафы: \t\t\t%d/10\n\n",straf); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Наличные: \t\t\t$%d\n",cash); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Банк: \t\t\t\t$%d\n\n",bcase); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Дом: \t\t\t\t%s\n",hous); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Номер в отеле: \t\t%s\n",hot); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Бизнес: \t\t\t%s\n",bizd); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Автомастерская: \t\t%s\n\n",mastzd); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Транспорт 1: \t\t\t%s[%d]\n",VehicleNames[PI[targetid][pCar1]-400],PI[targetid][pCar1]); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Транспорт 2: \t\t\t%s[%d]\n",VehicleNames[PI[targetid][pCar2]-400],PI[targetid][pCar2]); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Воздушный т/с: \t\t%s\n\n",airveh); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Работа: \t\t\t%s\n",jtext); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Организация: \t\t\t%s\n",ttext); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Ранг: \t\t\t\t%s\n",rangz); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Выговоры: \t\t\t%d\n\n",song); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Пол: \t\t\t\t%s\n",atext); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"Жена/Муж: \t\t\t%s\n\n",PI[targetid][pMarriedTo]); strcat(sctring,YCMDstr);
			format(YCMDstr,128,"{B1C8FB}Статистика за %d %s %d. Время: %d:%d",day, mtext, year, hourt, minuitet); strcat(sctring,YCMDstr);
			SPDEx(playerid,1432,0,"Статистика персонажа",sctring,"Ок","");
		}
	}
}
publics: ArendTimer()
{
	for( new i = 0, m = GetMaxPlayers(); i != m; i ++ )
	{
		if(!IsPlayerConnected(i)) continue;
		if(GetPVarInt(i, "ArendKey") == -1) continue;
		new rc = GetPVarInt(i, "ArendKey");
		if(ArendInfo[rc][aPlayerID] != i)
		{
			SetPVarInt(i, "ArendKey", -1);
			continue;
		}
	}
}
stock GetArendCarID( vehicleid, &arend_id = INVALID_PLAYER_ID )
{
	arend_id = INVALID_PLAYER_ID;
	for( new i = 0; i < sizeof(ArendInfo); i++)
	{
		if(vehicleid == ArendInfo[i][aID])
		{
			if(IsPlayerConnected(ArendInfo[i][aPlayerID])) arend_id = ArendInfo[i][aPlayerID];
			return i;
		}
	}
	return -1;
}
stock GetVehicleArendID( vehicleid )
{
	new
	playerid = INVALID_PLAYER_ID,
	get_rent = GetArendCarID(vehicleid, playerid);
	if(get_rent != (-1))
	{
		if(playerid == INVALID_PLAYER_ID || !IsPlayerConnected(playerid))
		{
			ArendInfo[get_rent][aPlayerID] = INVALID_PLAYER_ID;
			return INVALID_PLAYER_ID;
		}
		return ArendInfo[get_rent][aPlayerID];
	}
	return INVALID_PLAYER_ID;
}
publics: SetPlayerToTeamColor(playerid)
{
	switch(PI[playerid][pMember])
	{
	case 1: SetPlayerColor(playerid, 0x0000FFFF);// LSPD
	case 2: SetPlayerColor(playerid, 0x4F4F4FFF);// FBI
	case 3: SetPlayerColor(playerid, 0x804000FF);// Авианосец
	case 4: SetPlayerColor(playerid, 0xBC6443FF);// Мед. Центр СФ
	case 5: SetPlayerColor(playerid, 0xEB4318FF);// Мафия LCN
	case 6: SetPlayerColor(playerid, 0xFF0000FF);// Мафия Yakuza
	case 8: SetPlayerColor(playerid, 0xBE4141FF);// Мед. Центр ЛС
	case 9: SetPlayerColor(playerid, 0x80FF00FF);// SA News
	case 10: SetPlayerColor(playerid, 0x0000FFFF);// SFPD
	case 12: SetPlayerColor(playerid, 0x800080FF);// Баллас
	case 13: SetPlayerColor(playerid, 0xF2D00DFF);// Вагос
	case 14: SetPlayerColor(playerid, 0x788873FF);// Русская Мафия
	case 15: SetPlayerColor(playerid, 0x008000FF);// Грув
	case 17: SetPlayerColor(playerid, 0x07F1F8FF);// Ацтек
	case 18: SetPlayerColor(playerid, 0x008080FF);// Рифа
	case 19: SetPlayerColor(playerid, 0x808000FF);// Сух.Войска
	case 21: SetPlayerColor(playerid, 0x0000FFFF);// LVPD
	case 22: SetPlayerColor(playerid, 0x73926DFF);// Правительство
	case 23: SetPlayerColor(playerid, 0x58633DFF);// Байкеры
	case 24: SetPlayerColor(playerid, 0xFFFF82AA);// Завод К.А.С.С.
	}
	return true;
}
public OnGameModeExit()
{
	mysql_close(DATABASE);
	ClearReconnect();
	GameModeExit();
	return true;
}

public OnGameModeInit()
{
	players = cvector();
	SetGameModeText("EXSIGHT RP");
	for(new i = 0; i < MAX_PLAYERS; i++) strmid(ExitInfo[i][ExitName],"None", 0, strlen("None"), 32), ExitInfo[i][ExitTime] = 0;
	//
	SetWeather(2);
	//
	ShowPlayerMarkers(PLAYER_MARKERS_MODE_GLOBAL);
	ShowNameTags(1);
	SetNameTagDrawDistance(30.0);
	EnableStuntBonusForAll(0);
	DisableInteriorEnterExits();
	LimitPlayerMarkerRadius(100.0);
	ManualVehicleEngineAndLights();
	AllowInteriorWeapons(1);
	//
	new tmphour, tmpminute, tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	ghour = tmphour;
	SetWorldTime(tmphour);
	addd[0] = 5;
	addd[1] = 5;
	addd[2] = 5;
	//================================ Logo ====================================
	Logotip[0] = TextDrawCreate(550.981201, 4.666645, "EXSIGHT");
	TextDrawLetterSize(Logotip[0], 0.323498, 1.914999);
	TextDrawAlignment(Logotip[0], 1);
	TextDrawColor(Logotip[0], -1);
	TextDrawSetShadow(Logotip[0], 0);
	TextDrawSetOutline(Logotip[0], 1);
	TextDrawBackgroundColor(Logotip[0], 51);
	TextDrawFont(Logotip[0], 2);
	TextDrawSetProportional(Logotip[0], 1);
	
	Logotip[1] = TextDrawCreate(552.855346, 21.583316, "]  ]  ]  ]");
	TextDrawLetterSize(Logotip[1], 0.239632, 1.115833);
	TextDrawAlignment(Logotip[1], 1);
	TextDrawColor(Logotip[1], -1378294017);
	TextDrawSetShadow(Logotip[1], 0);
	TextDrawSetOutline(Logotip[1], 1);
	TextDrawBackgroundColor(Logotip[1], 51);
	TextDrawFont(Logotip[1], 2);
	TextDrawSetProportional(Logotip[1], 1);
	
	Logotip[2] = TextDrawCreate(559.413940, 32.083293, "Role Play");
	TextDrawLetterSize(Logotip[2], 0.171229, 1.121665);
	TextDrawAlignment(Logotip[2], 1);
	TextDrawColor(Logotip[2], -5963521);
	TextDrawSetShadow(Logotip[2], 0);
	TextDrawSetOutline(Logotip[2], 1);
	TextDrawBackgroundColor(Logotip[2], 51);
	TextDrawFont(Logotip[2], 2);
	TextDrawSetProportional(Logotip[2], 1);
	//============================= ЗЗ Армий ===================================
	Army = GangZoneCreate(-49.979476, 1695.982177, 414.020507, 2175.982177);
	ArmySF = GangZoneCreate(-1544.921875, 324.21875, -1199.21875, 541.015625);
	ArmyVoe = GangZoneCreate(1080.078125, 1291.015625, 1193.359375, 1404.296875);
	//==========================================================================
	MatArmy[0][mCaparmy] = 10000; MatArmy[1][mCaparmy] = 10000; MatArmy[2][mCaparmy] = 10000; MatArmy[3][mCaparmy] = 10000; MatArmy[4][mCaparmy] = 10000; MatArmy[5][mCaparmy] = 10000;
	//--------------------------------------------------------------------------
	Furi[0][gBallas] = 0; Furi[0][gVagos] = 0; Furi[0][gGrove] = 0; Furi[0][gAztek] = 0; Furi[0][gRifa] = 0; Furgon[1][gBiker] = 0;
	//--------------------------------------------------------------------------
	MusorWork[0][MusCarWork] = 0; 	MusorWork[1][MusCarWork] = 0; 	MusorWork[2][MusCarWork] = 0; 	MusorWork[3][MusCarWork] = 0; 	MusorWork[4][MusCarWork] = 0;
	//--------------------------------------------------------------------------
	MatHaulZ[0][mCapasityZ] = 50000; MatHaulZ[1][mCapasityZ] = 50000; MatHaulZ[2][mCapasityZ] = 50000; MatHaulZ[3][mCapasityZ] = 50000; MatHaulZ[4][mCapasityZ] = 50000;
	//--------------------------------------------------------------------------
	MatHaulF[0][mCapasityF] = 10000; MatHaulF[1][mCapasityF] = 10000; MatHaulF[2][mCapasityF] = 10000; MatHaulF[3][mCapasityF] = 10000; MatHaulF[4][mCapasityF] = 10000;
	//--------------------------------------------------------------------------
	for(new i = 0; i < MAX_ROULET; i++) DealerRoulette[i] = INVALID_PLAYER_ID;
	//--------------------------------------------------------------------------
	for(new s = 0; s < sizeof(Radari); s++)
	radarka[s] = CreateDynamicCircle(Radari[s][0], Radari[s][1], 15, -1, -1, -1);
	//==========================================================================
	for(new i = 0; i < sizeof(ArendInfo); i ++)
	{
		ArendInfo[i][aID] = CreateVehicle(ArendInfo[i][aModel], ArendInfo[i][aPos_X], ArendInfo[i][aPos_Y], ArendInfo[i][aPos_Z], ArendInfo[i][aPos_A], ArendInfo[i][aColor_1], ArendInfo[i][aColor_2], 120);
		SetVehicleParamsEx(ArendInfo[i][aID], 0, 0, 0, 0, 0, 0, 0);
	}
	SetTimer("ArendTimer", 120, true);
	//==========================================================================
	gettime(ghour, gminute, gsecond);
	FixHour(ghour);
	ghour = shifthour;
	if(!realtime) SetWorldTime(wtime);
	//==========================================================================
	new myobject1 = CreateObject(10671, 1486.7875, -1750.9497, 28.4468, 0.0000, 0.0000, -90.5548); SetObjectMaterialText(myobject1, "Правите", 0, 40, "Arial", 36, 1, -16776961, 0, 1);
	new myobject2 = CreateObject(10671, 1475.5425, -1750.9497, 28.4468, 0.0000, 0.0000, -90.5548); SetObjectMaterialText(myobject2, "льство", 0, 40, "Arial", 36, 1, -16776961, 0, 1);
	new myobject3 = CreateObject(10671, 1219.7760, -1811.3352, 24.0000, 0.0000, 0.0000, -270.5548); SetObjectMaterialText(myobject3, "Автовокзал", 0, 40, "Arial", 26, 1, -16776961, 0, 1);
	//==========================================================================
	ZonsWar[0] = GangZoneCreate(300.755706, 2402.644531, 468.755706, 2580.644531);
	ZonsWar[1] = GangZoneCreate(-855.6808,1891.0676,-519.0121,2128.4995);
	ZonsWar[2] = GangZoneCreate(275.881378, 797.211608, 443.881378, 973.211608);
	//==========================================================================
	for(new i = 0; i < sizeof(CreatedCars); i++) CreatedCars[i] = 0;
	//==========================================================================
	for(new i = 0; i <= sizeof(Peds)-1; i++) AddPlayerClass(Peds[i][0],1958.3783,1343.1572,1100.3746,269.1425,-1,-1,-1,-1,-1,-1);
	//==========================================================================
	for(new Vehicles = 0; Vehicles < MAX_VEHICLES; Vehicles++) enginebrokened[Vehicles] = 0, Fuell[Vehicles] = 100, vehcreat[Vehicles] = 0, SetVehicleNumberPlate(Vehicles, "EXSIGHT-Rp");
	//============================== Other =====================================
	CreateVehicles();
	CreateLabels();
	CreateMapIcons();
	CreatePickups();
	CreateTimers();
	CreateObjects();
	AutoColors();
	Menu();
	LoadTextDraw();
	AdminStroki();
	BenzFrac();
	podeezdi =  CreatePickup(1318, 1, 2265.8806,1647.5281,1084.2344, -1);
	//============================== MySQL =====================================
	DATABASE = mysql_connect(MYSQL_HOST, MYSQL_USER, MYSQL_DATABASE, MYSQL_PASSWORD);
	switch(mysql_errno())
	{
	case 0: print("Подключение к БД удалось");
	case 1044: print("Подключение к БД не удалось [Указано неизвестное имя пользователя]");
	case 1045: print("Подключение к БД не удалось [Указан неизвестный пароль]");
	case 1049: print("Подключение к БД не удалось [Указана неизвестная БД]");
	case 2003: print("Подключение к БД не удалось [Хостинг с БД недоступен]");
	case 2005: print("Подключение к БД не удалось [Указан неизвестный адрес хостинга]");
	default: printf("Подключение к БД не удалось [Неизвестная ошибка. Код ошибки: %d]", mysql_errno());
	}
	mysql_function_query(DATABASE, !"SET CHARACTER SET 'utf8'", false, "", "");
	mysql_function_query(DATABASE, !"SET NAMES 'utf8'", false, "", "");
	mysql_function_query(DATABASE, !"SET character_set_client = 'cp1251'", false, "", "");
	mysql_function_query(DATABASE, !"SET character_set_connection = 'cp1251'", false, "", "");
	mysql_function_query(DATABASE, !"SET character_set_results = 'cp1251'", false, "", "");
	mysql_function_query(DATABASE, !"SET SESSION collation_connection = 'utf8_general_ci'", false, "", "");
	
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_FRAKBANK"`",true,"OnMySQL_QUERY","iis",1,-1,"");
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_BIZZ"`",true,"OnMySQL_QUERY","iis",2,-1,"");
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_HOUSE"`",true,"OnMySQL_QUERY","iis",3,-1,"");
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_HOTEL"`",true,"OnMySQL_QUERY","iis",4,-1,"");
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_PLANTS"`",true,"OnMySQL_QUERY","iis",5,-1,"");
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_MAST"`",true,"OnMySQL_QUERY","iis",6,-1,"");
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_FLOORS"`",true,"OnMySQL_QUERY","iis",7,-1,"");
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_FAMILY"`",true,"OnMySQL_QUERY","iis",8,-1,"");
	mysql_function_query(DATABASE,"SELECT * FROM `"TABLE_GANGZONE"`", true, "LoadGZ","");
	return true;
}
public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
	SetPlayerAttachedObject(playerid, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
	return 1;
}
public OnPlayerLeaveDynamicArea(playerid, areaid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(!IsANonf(playerid))
		{
			if(!IsAPlane(GetPlayerVehicleID(playerid)))
			{
				if(areaid >= radarka[0] && areaid <= radarka[5])
				{
					if(SpeedVehicle(playerid) >= 55 && PI[playerid][pStraf] < 10)
					{
						PI[playerid][pZakonp] -= 1;
						PI[playerid][pStraf] += 1;
						SCM(playerid,COLOR_GREEN, "Вы превысили максимальную, допустимую скорость. Вам выписан штраф, оплатите его в банке!");
						format(YCMDstr,128,"Количевство ваших штрафов: %d",PI[playerid][pStraf]);
						SCM(playerid,COLOR_GREEN, YCMDstr);
					}
					else if(SpeedVehicle(playerid) >= 55 && PI[playerid][pStraf] >= 10 && PI[playerid][pCarLic] != 0)
					{
						PI[playerid][pCarLic] = 0;
						SCM(playerid,COLOR_GREEN, "Государство отобрало у Вас права за превышение непогашенных штрафов!");
					}
				}
			}
		}
	}
	return true;
}
publics: GetClosestPlayer(p1)
{
	new Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	for(new idx=0, x=0; idx<cvector_size(players); idx++)
	{
		x = cvector_get(players, idx);
		if(x != p1)
		{
			dis2 = GetDistanceBetweenPlayers(x,p1);
			if(dis2 < dis && dis2 != -1.00)
			{
				dis = dis2;
				player = x;
			}
		}
	}
	return player;
}
stock PayChecks(i)
{
	if(PI[i][pZakonp] < 100) PI[i][pZakonp] += 5;
	switch(PI[i][pMember])
	{                                                                           // Пример: Зарплата фракции 2к умноженое на ранг + рандомные цифры
	case 1,10,21: PI[i][pPayCheck] += 5000*PI[i][pRank]+Random(1, 3000);// SAPD
	case 3,19: PI[i][pPayCheck] += 3000*PI[i][pRank]+Random(1, 3000);// Army
	case 2: PI[i][pPayCheck] += 5500*PI[i][pRank]+Random(1, 3000);// FBI
	case 22: PI[i][pPayCheck] += 4500*PI[i][pRank]+Random(1, 3000);// Правительство
	case 4,8: PI[i][pPayCheck] += 4000*PI[i][pRank]+Random(1, 3000);// Медики
	case 5,6,14: PI[i][pPayCheck] += 4000*PI[i][pRank]+Random(1, 3000);// Мафии
	case 12,13,15,17,18,23: PI[i][pPayCheck] += 4000*PI[i][pRank]+Random(1, 3000);// Банды
	case 9: PI[i][pPayCheck] += 5000*PI[i][pRank]+Random(1, 3000);// SAN
	case 24: PI[i][pPayCheck] += 5500*PI[i][pRank]+Random(1, 3000);// Завод К.А.С.С
	}
	switch(PI[i][pMember])
	{
	case 1..4,10,11,19,22,21,24:
		{
			if(FracBank[0][fKazna] <= 0)
			{
				PI[i][pPayCheck] = 0;
				SCM(i, COLOR_GREY, "[Правительство] Казна Штата пуста, зарплаты нет!");
			}
		}
	}
}

stock PayDay()
{
	for(new i = 0; i < sizeof(VladGzone); i++) VladGzone[i] = 0;
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		switch(GZInfo[i][gFrakVlad])
		{
		case 12: VladGzone[0]++;
		case 13: VladGzone[1]++;
		case 15: VladGzone[2]++;
		case 17: VladGzone[3]++;
		case 18: VladGzone[4]++;
		}
	}
	FracBank[0][fBMoney] += VladGzone[0]*800;
	FracBank[0][fVMoney] += VladGzone[1]*800;
	FracBank[0][fGMoney] += VladGzone[2]*800;
	FracBank[0][fCMoney] += VladGzone[3]*800;
	FracBank[0][fRMoney] += VladGzone[4]*800;
	//--------------------------------------------------------------------------
	for(new f = 0; f < sizeof(FrakCD); f++)
	{
		if(FrakCD[f] > 0)
		{
			if(FracVoina[f] != 1) FrakCD[f]--;
		}
	}
	//--------------------------------------------------------------------------
	for(new i = 1; i <= TotalBizz; i++)
	{
		if(BizzInfo[i][bOwned] == 0) continue;
		if(BizzInfo[i][bTill] < 100 || BizzInfo[i][bLocked] == 1 && BizzInfo[i][bLockTime] >= 12) ClearBizz(i);
		else
		{
			if(BizzInfo[i][bProducts] <= 0 || BizzInfo[i][pBizLic] == 0)
			{
				if(BizzInfo[i][bOwner])
				{
					if(BizzInfo[i][bLockTime] == 0) SetPVarInt(GetPlayerID(BizzInfo[i][bOwner]), "_GetBizz_", 1);
					BizzInfo[i][bLocked] = 1;
				}
			}
			if(BizzInfo[i][bLocked] == 1)BizzInfo[i][bLockTime]++;
			if(BizzInfo[i][bLockTime] > 1 && BizzInfo[i][bLockTime] < 12)if(IsPlayerConnected(GetPlayerID(BizzInfo[i][bOwner]))) SetPVarInt(GetPlayerID(BizzInfo[i][bOwner]), "GetBizz_", 1);
			BizzInfo[i][bTill] -= 100;
			if(BizzInfo[i][bMafia] == 6) FracBank[0][nYakuza] += 500;
			if(BizzInfo[i][bMafia] == 14) FracBank[0][nRm] += 500;
			if(BizzInfo[i][bMafia] == 5) FracBank[0][nLcn] += 500;
		}
	}
	for(new h = 1; h <= TotalHouse; h++)
	{
		robhouse[h] = false;
		if(House[h][hOwned] == 1)
		{
			new test2 = 0;
			if(House[h][hKlass] == 0 && House[h][hOwned] == 1) test2 = 50;
			if(House[h][hKlass] == 1 && House[h][hOwned] == 1) test2 = 100;
			if(House[h][hKlass] == 2 && House[h][hOwned] == 1) test2 = 150;
			if(House[h][hKlass] == 3 && House[h][hOwned] == 1) test2 = 100;
			if(House[h][hKlass] == 4 && House[h][hOwned] == 1) test2 = 50;
			new ammo = House[h][hTakings]-test2;
			SetHouse(House[h][hID], "hTakings", ammo);
			House[h][hTakings] = ammo;
		}
		if(House[h][hTakings] <= 0 && House[h][hOwned] == 1)
		{
			new housecash = House[h][hValue];
			mysql_format(DATABASE, YCMDstr, 143, "UPDATE `accounts` SET pPhousekey = '999', pHousecash = '%d', pText = '1' WHERE Name = '%s'",housecash,House[h][hOwner]);
			mysql_function_query(DATABASE,YCMDstr,false,"","");
			House[h][hHel] = 0;
			House[h][hLock] = 1;
			for(new s = 0; s != s; s++) House[h][hGun][s] = 0, House[h][hGunAmmo][s] = 0;
			House[h][hOwned] = 0;
			strmid(House[h][hOwner], "The State", 0, strlen("The State"), 32);
			BuyHouse(h);
			SaveMySQL(3,h);
		}
	}
	for(new o = 1; o <= TotalHotel; o++)
	{
		if(HotelInfo[o][oOwned] == 1)
		{
			new test2 = 0;
			if(HotelInfo[o][oOwned] == 1) test2 = 100;
			new ammo = HotelInfo[o][oTakings]-test2;
			SetHotel(HotelInfo[o][oID], "oTakings", ammo);
			HotelInfo[o][oTakings] = ammo;
		}
		if(HotelInfo[o][oTakings] <= 0 && HotelInfo[o][oOwned] == 1)
		{
			mysql_format(DATABASE, YCMDstr, 94, "UPDATE `accounts` SET pPhotelkey = '999', pText = '1' WHERE Name = '%s'",HotelInfo[o][oOwner]);
			mysql_function_query(DATABASE,YCMDstr,false,"","");
			HotelInfo[o][oLock] = 1;
			HotelInfo[o][oOwned] = 0;
			strmid(HotelInfo[o][oOwner], "The State", 0, strlen("The State"), 32);
			BuyHotel(o);
			SaveMySQL(4,o);
		}
	}
	for(new n = 1; n < sizeof(NarkoInfo); n++)
	{
		if(NarkoInfo[n][nZasev] == 1 && NarkoInfo[n][nWait] >= 1)
		{
			NarkoInfo[n][nWait] -= 1;
			format(YCMDstr, 100,"%d часов осталось до того,\n когда плантацию можно будет собрать",NarkoInfo[n][nWait]);
			Update3DTextLabelText(NarkoInfo[n][nLabel], 0xC4DAADFF,YCMDstr);
		}
		if(NarkoInfo[n][nZasev] && NarkoInfo[n][nWait] == 0)
		{
			if(NarkoInfo[n][nSobrat] == 0)
			{
				Update3DTextLabelText(NarkoInfo[n][nLabel], 0xC4DAADFF,"Плантацию можно собрать");
				NarkoInfo[n][nSobrat] = 1;
				DestroyObject(NarkoInfo[n][nObject]);
				NarkoInfo[n][nPickup] = CreatePickup(1578,23,NarkoInfo[n][nX],NarkoInfo[n][nY],NarkoInfo[n][nZ]);
			}
		}
		mysql_format(DATABASE, YCMDstr, 128, "UPDATE `"TABLE_PLANTS"` SET nWait = '%i', nSobrat = '%i' WHERE nID = '%i'",NarkoInfo[n][nWait],NarkoInfo[n][nSobrat],n);
		mysql_function_query(DATABASE,YCMDstr,false,"","");
	}
	for(new m = 1; m <= TotalMast; m++)
	{
		if(AvtoMInfo[m][vOwned] == 0) continue;
		if(AvtoMInfo[m][vTill] < 100 || AvtoMInfo[m][vLocked] == 1 && AvtoMInfo[m][vLockTime] >= 12) ClearMast(m);
		else
		{
			if(AvtoMInfo[m][vProducts] <= 0)
			{
				if(AvtoMInfo[m][vOwner])
				{
					if(AvtoMInfo[m][vLockTime] == 0) SetPVarInt(GetPlayerID(AvtoMInfo[m][vOwner]), "_GetMast_", 1);
					AvtoMInfo[m][vLocked] = 1;
				}
			}
			if(AvtoMInfo[m][vLocked] == 1) AvtoMInfo[m][vLockTime]++;
			if(AvtoMInfo[m][vLockTime] > 1 && AvtoMInfo[m][vLockTime] < 12) if(IsPlayerConnected(GetPlayerID(AvtoMInfo[m][vOwner]))) SetPVarInt(GetPlayerID(AvtoMInfo[m][vOwner]), "GetMast_", 1);
			AvtoMInfo[m][vTill] -= 200;
		}
	}
	//
	//--------------------------------------------------------------------------
	if(FracBank[0][farmmatbi] < 0) FracBank[0][farmmatbi] = 0;
	if(FracBank[0][farmmatsf] < 0) FracBank[0][farmmatsf] = 0;
	//--------------------------------------------------------------------------
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(PI[i][pLogin] == 0) continue;
		//----------------------------------------------------------------------
		PlayerPlaySound(i, 5203, 0.0, 0.0, 0.0);
		if(PI[i][pWantedLevel] >= 1)
		{
		    PI[i][pWantedLevel] -= 1;
			SetPlayerWantedLevel(i,PI[i][pWantedLevel]);
		}
		if(PI[i][pGiveExp] < 1200)
		{
			SCM(i,COLOR_LIGHTRED,"Вы не получили PayDay, потому что не отыграли 20 минут");
			PI[i][pGiveExp] = 0;
			continue;
		}
		PayChecks(i);
		new exp = PI[i][pExp];
		new nxtlevel = PI[i][pLevel]+1;
		new expamount = nxtlevel*levelexp;
		PI[i][ptaxiexp] += taxiexpp[i];
		PI[i][pExp]++;
		if(exp >= expamount-1) PI[i][pLevel] += 1, PI[i][pExp] = 0, DollahScoreUpdate(i), SCM(i, COLOR_YELLOW, "Поздравляем! Ваш игровой уровень повысился");
		//
		if(PI[i][pMember] == 3 && FracBank[0][fzmatbi] <= 0) PI[i][pPayCheck] = 0, SCM(i, COLOR_GRAD1, "Армия ВМФ не получила зарплату из-за пустого склада в K.A.C.C.");
		if(PI[i][pMember] == 19 && FracBank[0][farmmatsf] <= 0) PI[i][pPayCheck] = 0, SCM(i, COLOR_GRAD1, "Армия СВ не получила зарплату из-за пустого склада в ВМФ!");
		if(PI[i][pMember] == 24 && FracBank[0][farmmatbi] <= 0) PI[i][pPayCheck] = 0, SCM(i, COLOR_GRAD1, "Завод К.А.С.С. не получил зарплату из-за пустого склада в СВ!");
		if(PI[i][pMember] == 24 && FracBank[0][lspdbenz] <= 0) PI[i][pPayCheck] = 0, SCM(i, COLOR_GRAD1, "Завод К.А.С.С. не получил зарплату из-за пустой цистерны в LSPD!");
		if(PI[i][pMember] == 24 && FracBank[0][fbibenz] <= 0) PI[i][pPayCheck] = 0, SCM(i, COLOR_GRAD1, "Завод К.А.С.С. не получил зарплату из-за пустой цистерны в FBI!");
		if(PI[i][pMember] == 24 && FracBank[0][vmfbenz] <= 0) PI[i][pPayCheck] = 0, SCM(i, COLOR_GRAD1, "Завод К.А.С.С. не получил зарплату из-за пустой цистерны в ВМФ!");
		if(PI[i][pMember] == 24 && FracBank[0][medsfbenz] <= 0) PI[i][pPayCheck] = 0, SCM(i, COLOR_GRAD1, "Завод К.А.С.С. не получил зарплату из-за пустой цистерны в МЦСФ!");
		if(PI[i][pMember] == 24 && FracBank[0][medlsbenz] <= 0) PI[i][pPayCheck] = 0, SCM(i, COLOR_GRAD1, "Завод К.А.С.С. не получил зарплату из-за пустой цистерны в МЦЛС!");
		if(PI[i][pMember] == 24 && FracBank[0][zonabenz] <= 0) PI[i][pPayCheck] = 0, SCM(i, COLOR_GRAD1, "Завод К.А.С.С. не получил зарплату из-за пустой цистерны в СВ!");
		if(PI[i][pMember] == 24 && FracBank[0][pravbenz] <= 0) PI[i][pPayCheck] = 0, SCM(i, COLOR_GRAD1, "Завод К.А.С.С. не получил зарплату из-за пустой цистерны в Адм. Президента!");
		//
		new checks = PI[i][pPayCheck];
		if(PI[i][pDonateRank] > 0) format(YCMDstr, 10, "PayDay");
		else format(YCMDstr, 10, "~w~PayDay");
		GameTextForPlayer(i, YCMDstr, 5000, 1);
		if(PI[i][pDonateRank] > 0) SCM(i, COLOR_NEWS, "-----------[ VIP КЛИЕНТ БАНКА SA ]----------");
		else SCM(i, COLOR_GRAD1, "-----------[ КЛИЕНТ БАНКА SA ]----------");
		if(!NoNalog(i))
		{
			if(PI[i][pPayCheck] >= 10)
			{
				format(YCMDstr, 30, "- Налог Штату SA: -$%d",PI[i][pPayCheck]/10);
				SCM(i, 0xFF8C37AA, YCMDstr);
				PI[i][pBank] -= PI[i][pPayCheck]/10;
				FracBank[0][fKazna] += checks/10;
			}
			else format(YCMDstr, 30, "- Налог Штату SA: -$0"), SCM(i, 0xFF8C37AA, YCMDstr);
		}
		if(PI[i][pBank] > 50 && PI[i][pKrisha] != 0) PI[i][pBank] -= 50, PI[i][pDolg] += 50;
		if(PI[i][pCash] > 50 && PI[i][pKrisha] != 0) PI[i][pCash] -= 50, PI[i][pDolg] += 50;
		format(YCMDstr, 30, "- Счёт телефона: $%d", PI[i][pMobile]);
		SCM(i, 0xFF8C37AA, YCMDstr);
		SCM(i, COLOR_WHITE, " ");
		switch(PI[i][pMember])
		{
		case 1,10,21: format(YCMDstr, 30, "- Зарплата SAPD: $%d", checks);
		case 3,19: format(YCMDstr, 30, "- Зарплата Армии: $%d", checks);
		case 2: format(YCMDstr, 30, "- Зарплата FBI: $%d", checks);
		case 22: format(YCMDstr, 40, "- Зарплата Адм. Президента: $%d", checks);
		case 4,8: format(YCMDstr, 30, "- Зарплата Медиков: $%d", checks);
		case 5,6,14: format(YCMDstr, 35, "- Зарплата организации: $%d", checks);
		case 12,13,15,17,18: format(YCMDstr, 30, "- Зарплата: $%d", checks);
		case 9,16,20: format(YCMDstr, 30, "- Зарплата SA News: $%d", checks);
		case 24: format(YCMDstr, 30, "- Зарплата К.А.С.С.: $%d", checks);
		default: format(YCMDstr, 30, "- Зарплата: $%d", checks);
		}
		if(PI[i][pDonateRank] > 0) SCM(i, COLOR_NEWS, YCMDstr);
		else SCM(i, COLOR_WHITE, YCMDstr);
		PI[i][pBank] += checks;
		if(PI[i][pDonateRank] > 0) format(YCMDstr, 35, "- Текущий баланс: $%d", PI[i][pBank]), SCM(i, COLOR_NEWS, YCMDstr);
		else format(YCMDstr, 35, "- Текущий баланс: $%d", PI[i][pBank]), SCM(i, COLOR_WHITE, YCMDstr);
		if(PI[i][pBSA] > 0)
		{
	  		PI[i][pDonatemoney] += 1;
	  		SCM(i, 0xFF8C37AA, "- Зарплата Админа: +1 Donate");
		}
		//----------------------------------------------------------------------
		if(GetPVarInt(i, "_GetMast_") > 0 && PI[i][pPviskey] != 255)
		{
			SCM(i, COLOR_LIGHTRED, "- Ваша Автомастерская была закрытa.");
			SCM(i, COLOR_LIGHTRED, "- Если по истечению {ffffff}12 {FF6347}часов Автомастерская будет закрыта, она будет продана гос-ву");
			DeletePVar(i, "_GetMast_");
		}
		if(GetPVarInt(i, "GetMast_") > 0 && GetPVarInt(i, "_GetMast_") == 0 && PI[i][pPviskey] != 255)
		{
			SCM(i, COLOR_LIGHTRED, "- Если по истечению {ffffff}12 {FF6347}часов Автомастерская будет закрыта, она будет продана гос-ву");
			DeletePVar(i, "GetMast_");
		}
		if(GetPVarInt(i, "GetMast") > 0)
		{
			SCM(i, COLOR_LIGHTRED,"- Ваша Автомастерская была продана гос-ву за неуплату налогов");
			SCM(i, COLOR_LIGHTRED,"- Ваши деньги за Автомастерскую были перечислены на Ваш счет");
			PI[i][pPviskey] = 255;
			DeletePVar(i, "GetMast");
		}
		//----------------------------------------------------------------------
		if(GetPVarInt(i, "_GetBizz_") > 0 && PI[i][pPbiskey] != 255)
		{
			SCM(i, COLOR_LIGHTRED, "- Ваш бизнес был закрыт по причине: отсутствие товаров/топлива");
			SCM(i, COLOR_LIGHTRED, "- Если по истечению {ffffff}12 {FF6347}часов бизнес будет закрыт, он будет продан гос-ву");
			DeletePVar(i, "_GetBizz_");
		}
		if(GetPVarInt(i, "GetBizz_") > 0 && GetPVarInt(i, "_GetBizz_") == 0 && PI[i][pPbiskey] != 255)
		{
			SCM(i, COLOR_LIGHTRED, "- Если по истечению {ffffff}12 {FF6347}часов бизнес будет закрыт, он будет продан гос-ву");
			DeletePVar(i, "GetBizz_");
		}
		if(GetPVarInt(i, "GetBizz") > 0)
		{
			SCM(i, COLOR_LIGHTRED,"- Ваш бизнес был продан гос-ву за неуплату налогов");
			SCM(i, COLOR_LIGHTRED,"- Ваши деньги за бизнес были перечислены на Ваш счет");
			PI[i][pPbiskey] = 255;
			DeletePVar(i, "GetBizz");
		}
		new house = PI[i][pPhousekey];
		if(PI[i][pPhousekey] != 999)
		{
			if(PI[i][pDonateRank] >= 1) SendMes(i,COLOR_NEWS,"- Домашний счет: $%d",House[house][hTakings]);
			else SendMes(i,COLOR_WHITE,"- Домашний счет: $%d",House[house][hTakings]);
			if(House[house][hTakings] <= 0)
			{
				PI[i][pText] = 1;
				PI[i][pHousecash] = House[house][hValue];
				House[house][hHel] = 0;
				House[house][hLock] = 1;
				House[house][hOwned] = 0;
				strmid(House[house][hOwner], "The State", 0, strlen("The State"), 32);
				SCM(i, 0xFF8C37AA, "- Вы были выселены из дома за неуплату налогов!");
				SetHouse(House[house][hID], "hTakings", 0);
				BuyHouse(house);
				SaveMySQL(3,house);
				PI[i][pPhousekey] = 999;
			}
		}
		new hotel = PI[i][pPhotelkey];
		if(PI[i][pPhotelkey] != 999)
		{
			if(HotelInfo[hotel][oTakings] <= 0)
			{
				PI[i][pText] = 1;
				HotelInfo[hotel][oLock] = 1;
				HotelInfo[hotel][oOwned] = 0;
				strmid(HotelInfo[hotel][oOwner], "The State", 0, strlen("The State"), 32);
				SCM(i, 0xFF8C37AA, "- Вы были выселены за неуплату номера в отели!");
				SetHotel(HotelInfo[hotel][oID], "oTakings", 0);
				BuyHotel(hotel);
				PI[i][pPhotelkey] = 999;
			}
		}
		if(PI[i][pMember] == 3 || PI[i][pMember] == 19)
		{
			if(PI[i][pVoenBil] == 0)
			{
				if(PI[i][pVoenBil] == 1) return false;
				PI[i][pVbiltime] += 1;
				format(YCMDstr, 128, "- Военный билет Вы получите через %d часов", 24 - PI[i][pVbiltime]);
				SCM(i,COLOR_LIGHTRED, YCMDstr);
			}
		}
		if(PI[i][pVoenBil] == 0 && PI[i][pVbiltime] >= 24)
		{
			if(PI[i][pVoenBil] == 1) return SCM(i, COLOR_RED,"У Вас уже есть военный билет!");
			if(PI[i][pVoenBil] == 0) PI[i][pVbiltime] = 0, PI[i][pVoenBil] += 1;
			SCM(i,COLOR_LIGHTRED, "- Поздравляем! Вы получили военный билет.");
		}
		if(PI[i][pDonateRank] >= 1) SCM(i, COLOR_NEWS, "================================");
		else SCM(i,COLOR_GRAD1, "================================");
		if(PI[i][punWarns] == 1)
		{
			PI[i][punWarnstime] += 1;
			format(YCMDstr, 128, "Автоматическое снятие варна через %d часов", 10 - PI[i][punWarnstime]);
			SCM(i,COLOR_LIGHTRED, YCMDstr);
		}
		if(PI[i][punWarns] == 1 && PI[i][punWarnstime] >= 10)
		{
			if(PI[i][pWarns] == 1) PI[i][punWarnstime] = 0, PI[i][punWarns] = 0, PI[i][pWarns] -= 1;
			else if(PI[i][pWarns] > 1) PI[i][punWarnstime] = 0, PI[i][punWarns] = 1, PI[i][pWarns] -= 1;
			SCM(i,COLOR_LIGHTRED, "С Вас было снято предупреждение!");
		}
		if(PI[i][pLevel] == 3 && PI[i][pExp] == 0)
		{
			mysql_format(DATABASE,YCMDstr, 69, "SELECT pDrug FROM `accounts` WHERE Name = '%s'",Name(i));
			mysql_function_query(DATABASE,YCMDstr,true,"OnMySQL_QUERY","iis",11,i,"");
		}
		seans[i] = 0;
		PI[i][pRobHouse] = 0;
		PI[i][pPayCheck] = 0;
		PI[i][pPayDayHad] += 1;
		PI[i][pPayDay]++;
		PI[i][pGiveExp] = 0;
		mysql_format(DATABASE, YCMDstr, 37, "UPDATE `accounts` SET pGiveExp = '0'");
		mysql_function_query(DATABASE,YCMDstr,false,"","");
	}
	return true;
}
stock split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc))
	{
		if(strsrc[i] == delimiter || i == strlen(strsrc))
		{
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return true;
}

publics: PlayerRegister(playerid)
{
    FL[playerid][SelectCharPlace] = 0;
	SCM(playerid, COLOR_WHITE, "Поздравляем Вас с успешной регистрацией!");
	SCM(playerid, COLOR_YELLOW, "Подсказка: На работу Вы можете устроиться в Центре Занятости (( Используйте /gps -> Работа -> Центр занятости ))");
	SCM(playerid, COLOR_WHITE, "Подсказка: Водительские права Вы можете получить в автошколе города San Fierro");
	SCM(playerid, COLOR_WHITE, "Подсказка: Вы можете воспользоваться  GPS навигатором (( /gps ))");
	SCM(playerid, COLOR_WHITE, "Подсказка: (( Чтобы открыть личное меню - введите /mm ))");
	SCM(playerid, COLOR_WHITE, "Мы рекомендуем Вам поработать пару лет (( 3 LvL )), а после вступить в организацию");
	PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
	SetSpawnInfo(playerid, 0, 0, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0);
	mysql_format(DATABASE,QUERY,67,"SELECT * FROM `accounts` WHERE `Name` = '%s'",Name(playerid));
	mysql_function_query(DATABASE,QUERY,true,"OnMySQL_QUERY","iis",0,playerid,"");
}

publics: OnMySQL_QUERY(idx, playerid, str[])
{
	new r, f, x;
	new string[256];
	cache_get_data(r, f);
	switch(idx)
	{
	case 0:
		{
			if(!r)
			{
				if(GetPVarInt(playerid, "wrongPass") == 2) return SCM(playerid,COLOR_LIGHTRED,"Неверный пароль. Используйте /q для выхода."), Kick(playerid);
				SetPVarInt(playerid, "wrongPass", GetPVarInt(playerid, "wrongPass")+1);
				format(YCMDstr,256, "{FF6347}Внимание! Вы ввели неверный пароль!\n\tУ Вас осталось (%i) попытки\nПосле Вы будете на время забанены",3-GetPVarInt(playerid, "wrongPass"));
				SPDEx(playerid,1,0, "Ошибка!",YCMDstr, "Повтор", "Выйти");
				PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
				return true;
			}
			DeletePVar(playerid,"time_logged");

			PI[playerid][pLevel] = 			cache_get_field_content_int(0,"pLevel");
			PI[playerid][pForma] = 			cache_get_field_content_int(0,"pForma");
			PI[playerid][pBSA] = 			cache_get_field_content_int(0,"pBSA");
			PI[playerid][pMestoJail] =		cache_get_field_content_int(0,"pMestoJail");
			PI[playerid][pSong] =			cache_get_field_content_int(0,"pSong");
			cache_get_field_content(0,	"pIp", 		PI[playerid][pIp],DATABASE,32);
			cache_get_field_content(0,	"pvIp", 	PI[playerid][pvIp],DATABASE,32);
			cache_get_field_content(0,	"pIpReg", 	PI[playerid][pIpReg],DATABASE,32);
			PI[playerid][pHousecash] = 		cache_get_field_content_int(0,"pHousecash");
			PI[playerid][pText] = 			cache_get_field_content_int(0,"pText");
			PI[playerid][pHP] = 			cache_get_field_content_float(0,"pHP");
			cache_get_field_content(0,	"pDataReg", PI[playerid][pDataReg],DATABASE,12);
			PI[playerid][pCar1] =			cache_get_field_content_int(0,"pCar1");
			PI[playerid][pCar2] =			cache_get_field_content_int(0,"pCar2");
			PI[playerid][pCar3] =			cache_get_field_content_int(0,"pCar3");
			PI[playerid][pFuelcar] = 		cache_get_field_content_float(0,"pFuelcar");
			PI[playerid][pProcents] =		cache_get_field_content_int(0,"pProcents");
			PI[playerid][pDonateRank] =		cache_get_field_content_int(0,"pDonateRank");
			PI[playerid][pDonatemoney] =	cache_get_field_content_int(0,"pDonatemoney");
			PI[playerid][pMats] = 			cache_get_field_content_int(0,"pMats");
			PI[playerid][pSex] = 			cache_get_field_content_int(0,"pSex");
			PI[playerid][pArrested] = 		cache_get_field_content_int(0,"pArrested");
			PI[playerid][pMuted] = 			cache_get_field_content_int(0,"pMuted");
			PI[playerid][pExp] = 			cache_get_field_content_int(0,"pExp");
			PI[playerid][pCash] = 			cache_get_field_content_int(0,"pCash");
			PI[playerid][pKills] = 			cache_get_field_content_int(0,"pKills");
			PI[playerid][pPayCheck] = 		cache_get_field_content_int(0,"pPayCheck");
			PI[playerid][pJailed] = 		cache_get_field_content_int(0,"pJailed");
			PI[playerid][pJailTime] =		cache_get_field_content_int(0,"pJailTime");
			PI[playerid][pDrugs] =			cache_get_field_content_int(0,"pDrugs");
			PI[playerid][pLeader] =			cache_get_field_content_int(0,"pLeader");
			PI[playerid][pMember] =			cache_get_field_content_int(0,"pMember");
			PI[playerid][pRank] =			cache_get_field_content_int(0,"pRank");
			PI[playerid][pSAPD] =			cache_get_field_content_int(0,"pSAPD");
			PI[playerid][pMedic] =			cache_get_field_content_int(0,"pMedic");
			PI[playerid][pChar][0] =		cache_get_field_content_int(0,"pChar");
			PI[playerid][pJob] =			cache_get_field_content_int(0,"pJob");
			PI[playerid][pVoenBil] =		cache_get_field_content_int(0,"pVoenBil");
			PI[playerid][pMedKarta] =		cache_get_field_content_int(0,"pMedKarta");
			PI[playerid][pInt] =			cache_get_field_content_int(0,"pInt");
			PI[playerid][pLocal] =			cache_get_field_content_int(0,"pLocal");
			PI[playerid][pModel] =			cache_get_field_content_int(0,"pModel");
			PI[playerid][pPnumber] =		cache_get_field_content_int(0,"pPnumber");
			PI[playerid][pPhoneBook] =		cache_get_field_content_int(0,"pPhoneBook");
			PI[playerid][pDirectory] =		cache_get_field_content_int(0,"pDirectory");
			PI[playerid][pVhoddata] =		cache_get_field_content_int(0,"pVhoddata");
			PI[playerid][pVhodMes] =		cache_get_field_content_int(0,"pVhodMes");
			PI[playerid][pVhodchas] =		cache_get_field_content_int(0,"pVhodchas");
			PI[playerid][pVhodminute] =		cache_get_field_content_int(0,"pVhodminute");
			PI[playerid][pCarLic] =			cache_get_field_content_int(0,"pCarLic");
			PI[playerid][pFlyLic] =			cache_get_field_content_int(0,"pFlyLic");
			PI[playerid][pBoatLic] =		cache_get_field_content_int(0,"pBoatLic");
			PI[playerid][pGunLic] =			cache_get_field_content_int(0,"pGunLic");
			PI[playerid][pBizLic] =			cache_get_field_content_int(0,"pBizLic");
			PI[playerid][pPhousekey] =		cache_get_field_content_int(0,"pPhousekey");
			PI[playerid][pPbiskey] = 		cache_get_field_content_int(0,"pPbiskey");
			PI[playerid][pZakonp] =			cache_get_field_content_int(0,"pZakonp");
			PI[playerid][pAddiction] =		cache_get_field_content_int(0,"pAddiction");
			PI[playerid][pNarcoLomka] =		cache_get_field_content_int(0,"pNarcoLomka");
			PI[playerid][pPayDay] =			cache_get_field_content_int(0,"pPayDay");
			PI[playerid][pPayDayHad] =		cache_get_field_content_int(0,"pPayDayHad");
			PI[playerid][pTut] =			cache_get_field_content_int(0,"pTut");
			PI[playerid][pWarns] =			cache_get_field_content_int(0,"pWarns");
			PI[playerid][punWarns] =		cache_get_field_content_int(0,"punWarns");
			PI[playerid][punWarnstime] =	cache_get_field_content_int(0,"punWarnstime");
			PI[playerid][pFuel] = 			cache_get_field_content_int(0,"pFuel");
			PI[playerid][pMarried] = 		cache_get_field_content_int(0,"pMarried");
			cache_get_field_content(0,"pMarriedTo", PI[playerid][pMarriedTo],DATABASE,24);
			cache_get_field_content(0,	"pDrug", 	PI[playerid][pDrug],DATABASE,24);
			PI[playerid][pMuteTime] = 		cache_get_field_content_int(0,"pMuteTime");
			PI[playerid][pBank] =			cache_get_field_content_int(0,"pBank");
			PI[playerid][pBanDay] =			cache_get_field_content_int(0,"pBanDay");
			PI[playerid][pBanMounth] =		cache_get_field_content_int(0,"pBanMounth");
			PI[playerid][pMobile] =			cache_get_field_content_int(0,"pMobile");
			cache_get_field_content(0,"pDostup", 	PI[playerid][pDostup],DATABASE,32);
			PI[playerid][pLocked] =			cache_get_field_content_int(0,"pLocked");
			PI[playerid][pDolg] =			cache_get_field_content_int(0,"pDolg");
			PI[playerid][pKrisha] =			cache_get_field_content_int(0,"pKrisha");
			PI[playerid][pUseKrisha] =		cache_get_field_content_int(0,"pUseKrisha");
			PI[playerid][pWantedLevel] =	cache_get_field_content_int(0,"pWantedLevel");
			PI[playerid][pGunSkill][0] =	cache_get_field_content_int(0,"pGunSkill1");
			PI[playerid][pGunSkill][1] =	cache_get_field_content_int(0,"pGunSkill2");
			PI[playerid][pGunSkill][2] =	cache_get_field_content_int(0,"pGunSkill3");
			PI[playerid][pGunSkill][3] =	cache_get_field_content_int(0,"pGunSkill4");
			PI[playerid][pGunSkill][4] =	cache_get_field_content_int(0,"pGunSkill5");
			PI[playerid][pGunSkill][5] =	cache_get_field_content_int(0,"pGunSkill6");
			PI[playerid][pBoxSkill] =		cache_get_field_content_int(0,"pBoxSkill");
			PI[playerid][pKongfuSkill] =	cache_get_field_content_int(0,"pKongfuSkill");
			PI[playerid][pKickboxSkill] =	cache_get_field_content_int(0,"pKickboxSkill");
			PI[playerid][pWheels] =			cache_get_field_content_int(0,"pWheels");
			PI[playerid][pPaintJob] =		cache_get_field_content_int(0,"pPaintJob");
			PI[playerid][pSpoiler] =		cache_get_field_content_int(0,"pSpoiler");
			PI[playerid][pBumper1] =		cache_get_field_content_int(0,"pBumper1");
			PI[playerid][pBumper2] =		cache_get_field_content_int(0,"pBumper2");
			PI[playerid][pColor][0] =		cache_get_field_content_int(0,"pColor1");
			PI[playerid][pColor][1] =		cache_get_field_content_int(0,"pColor2");
			PI[playerid][pNitro] =			cache_get_field_content_int(0,"pNitro");
			PI[playerid][pHydrawlic] =		cache_get_field_content_int(0,"pHydrawlic");
			PI[playerid][pUbka] =			cache_get_field_content_int(0,"pUbka");
			PI[playerid][pVozduh] =			cache_get_field_content_int(0,"pVozduh");
			PI[playerid][pVihlop] =			cache_get_field_content_int(0,"pVihlop");
			PI[playerid][pChar][1] =		cache_get_field_content_int(0,"pChar1");
			PI[playerid][pChar][2] =		cache_get_field_content_int(0,"pChar2");
			PI[playerid][pViborChar] =		cache_get_field_content_int(0,"pViborChar");
			PI[playerid][pChas] =			cache_get_field_content_int(0,"pChas");
			PI[playerid][pMin] =			cache_get_field_content_int(0,"pMin");
			PI[playerid][pLighter] =		cache_get_field_content_int(0,"pLighter");
			PI[playerid][pCigarettes] =		cache_get_field_content_int(0,"pCigarettes");
			PI[playerid][pRobHouse] =		cache_get_field_content_int(0,"pRobHouse");
			PI[playerid][pGolod] =			cache_get_field_content_int(0,"pGolod");
			PI[playerid][pReport] =			cache_get_field_content_int(0,"pReport");
			PI[playerid][pPviskey] =		cache_get_field_content_int(0,"pPviskey");
			PI[playerid][pPhotelkey] =		cache_get_field_content_int(0,"pPhotelkey");
			PI[playerid][pWheels1] =		cache_get_field_content_int(0,"pWheels1");
			PI[playerid][pPaintJob1] =		cache_get_field_content_int(0,"pPaintJob1");
			PI[playerid][pSpoiler1] =		cache_get_field_content_int(0,"pSpoiler1");
			PI[playerid][pBumper11] =		cache_get_field_content_int(0,"pBumper11");
			PI[playerid][pBumper21] =		cache_get_field_content_int(0,"pBumper21");
			PI[playerid][pColor1][0] =		cache_get_field_content_int(0,"pColor11");
			PI[playerid][pColor1][1] =		cache_get_field_content_int(0,"pColor21");
			PI[playerid][pNitro1] =			cache_get_field_content_int(0,"pNitro1");
			PI[playerid][pHydrawlic1] =		cache_get_field_content_int(0,"pHydrawlic1");
			PI[playerid][pUbka11] =			cache_get_field_content_int(0,"pUbka11");
			PI[playerid][pVozduh11] =		cache_get_field_content_int(0,"pVozduh11");
			PI[playerid][pVihlop11] =		cache_get_field_content_int(0,"pVihlop11");
			PI[playerid][pProcents2] =		cache_get_field_content_int(0,"pProcents2");
			PI[playerid][pColor3][0] =		cache_get_field_content_int(0,"pColor31");
			PI[playerid][pColor3][1] =		cache_get_field_content_int(0,"pColor32");
			PI[playerid][ptaxilvl] =		cache_get_field_content_int(0,"ptaxilvl");
			PI[playerid][ptaxiexp] =		cache_get_field_content_int(0,"ptaxiexp");
			PI[playerid][pFuelcar1] =		cache_get_field_content_float(0,"pFuelcar1");
			player_family[playerid] =       cache_get_field_content_int(0,"pFamily");
			PI[playerid][pFLeader] =		cache_get_field_content_int(0,"pFLeader");
			PI[playerid][pVbiltime] =		cache_get_field_content_int(0,"pVbiltime");
			PI[playerid][pStraf] =			cache_get_field_content_int(0,"pStraf");
			PI[playerid][pPassport] =		cache_get_field_content_int(0,"pPassport");
			PI[playerid][pClock] =			cache_get_field_content_int(0,"pClock");
			PI[playerid][pRadio] =			cache_get_field_content_int(0,"pRadio");
			PI[playerid][pGiveExp] =		cache_get_field_content_int(0,"pGiveExp");
			cache_get_field_content(0,	"pWeapons", PI[playerid][pWeapons],DATABASE,32);
			cache_get_field_content(0,	"pAmmo", 	PI[playerid][pAmmo],DATABASE,32);
			sscanf(PI[playerid][pWeapons], "p<,>a<i>[11]",PI[playerid][pGuns]);
			sscanf(PI[playerid][pAmmo], "p<,>a<i>[11]",PI[playerid][pAmmos]);
			PI[playerid][pOFFDMG] =			cache_get_field_content_int(0,"pOFFDMG");
			cache_get_field_content(0,	"pNameAdmin", 	PI[playerid][pNameAdmin],DATABASE,24);
			cache_get_field_content(0,	"pCause", 	PI[playerid][pCause],DATABASE,50);
			PI[playerid][pOFFMute] =		cache_get_field_content_int(0,"pOFFMute");
			cache_get_field_content(0,	"pAdminMute", 	PI[playerid][pAdminMute],DATABASE,24);
			cache_get_field_content(0,	"pCauseMute", 	PI[playerid][pCauseMute],pCause,50);
			cache_get_field_content(0,	"pBanAdmin", 	PI[playerid][pBanAdmin],DATABASE,24);
			cache_get_field_content(0,	"pBanInfo", 	PI[playerid][pBanInfo],pBanInfo,50);
			PI[playerid][pEmailStat] = 		cache_get_field_content_int(0,"pEmailStat");
			cache_get_field_content(0,	"pEmail", 	PI[playerid][pEmail],DATABASE,64);
			PI[playerid][pPinStat] = 		cache_get_field_content_int(0,"pPinStat");
			PI[playerid][pPinCode] = 		cache_get_field_content_int(0,"pPinCode");
			PI[playerid][pSPChange] = 		cache_get_field_content_int(0,"pSPChange");
			PI[playerid][pHospLS] =			cache_get_field_content_int(0,"pHospLS");
			PI[playerid][pHospSF] =			cache_get_field_content_int(0,"pHospSF");
			PI[playerid][pSiteSkin] =		cache_get_field_content_int(0,"pSiteSkin");
			cache_get_field_content(0, "pQuest",YCMDstr), sscanf(YCMDstr, "p<,>a<i>[17]",PI[playerid][pQuest]);
			//------------------------------------------------------------------
			PI[playerid][pLogin] = 1;
			//------------------------------------------------------------------
			format(YCMDstr,75, "UPDATE `accounts` SET pLogin = '1' WHERE Name = '%s'",Name(playerid));
			mysql_function_query(DATABASE,YCMDstr,false,"","");
			//------------------------------------------------------------------
			new current = getdate();
			if(PI[playerid][pBanMounth] > current && PI[playerid][pLocked] == 1)
			{
				format(YCMDstr, 256, "{FFD700}Информация:\n\n- Забанил: %s\n- Причина: %s\n\n{00FF00}- Разбан через: %d дней",PI[playerid][pBanAdmin],PI[playerid][pBanInfo],PI[playerid][pBanMounth]-current);
				SPDEx(playerid,178,0,"{FF0000}Аккаунт заблокирован!",YCMDstr,"X","");
				Kick(playerid);
				return 1;
			}
			else if(PI[playerid][pBanMounth] <= current && PI[playerid][pLocked] == 1)
			{
				PI[playerid][pLocked] = 0;
				PI[playerid][pBanMounth] = 0;
				PI[playerid][pBanDay] = 0;
			}
			//------------------------------------------------------------------
			if(PI[playerid][pEmailStat] == 1)
			{
				if(GetPVarInt(playerid,"Proverka") == 0)
				{
					PI[playerid][pLogin] = 0;
					mysql_format(DATABASE, YCMDstr, 75, "UPDATE `accounts` SET pLogin = '0' WHERE Name = '%s'",Name(playerid));
					mysql_function_query(DATABASE,YCMDstr,false,"","");
					TogglePlayerControllable(playerid, 0);
					new code;
					code = Random(10000,99999);
					SetPVarInt(playerid,"emailcode",code);
					new query[300];
					format(query,sizeof(query),"crystal-rp.ru/email_active.php?authkey=KnBvCPqQErR&email=%s&code=%d",PI[playerid][pEmail],code);
					new result = HTTP(0,HTTP_HEAD,query,"","");
					if(!result) return SCM(playerid,COLOR_GREY,"Ошибка! Перезайдите и попробуйте еще раз.");
					format(query,sizeof(query),"Вам на почтовый адрес было отправлено письмо с кодом подтверждения.\n Сверните игру, проверьте почту и введите этот код.");
					SPDEx(playerid,2302,1,"Проверка Email",query,"ОК","Отмена");
					return true;
				}
			}
			//------------------------------------------------------------------
			GangZoneShowForPlayer(playerid, Army, COLOR_YELLOW2);
			GangZoneShowForPlayer(playerid, ArmySF, COLOR_YELLOW2);
			GangZoneShowForPlayer(playerid, ArmyVoe, COLOR_YELLOW2);
			//------------------------------------------------------------------
			for(new i = 0; i < sizeof(GZInfo); i++)
			{
				if(!GZInfo[i][ZoneOnBattle]) continue;
				GangZoneStopFlashForAll(GZInfo[i][gID]);
				GangZoneFlashForAll(GZInfo[i][gID],GetGangColor(GZInfo[i][gNapad]));
			}
			//------------------------------------------------------------------
			new playersip[40];
			GetPlayerIp(playerid,playersip,sizeof(playersip));
			mysql_format(DATABASE, YCMDstr, 146, "UPDATE `accounts` SET pIp = '%s', pvIp = '%s' WHERE Name = '%s'",playersip,playersip,Name(playerid));
			mysql_function_query(DATABASE,YCMDstr,false,"","");
			//------------------------------------------------------------------
			if(PI[playerid][pOFFDMG] != 0)
			{
				SCMF(playerid, 0xFF6347AA, "[OFFLINE] Вы были посажены в ДеМорган Админом %s. Причина: %s",PI[playerid][pNameAdmin],PI[playerid][pCause]);
			}
			if(PI[playerid][pOFFMute] != 0)
			{
				SCMF(playerid, 0xFF6347AA, "[OFFLINE] Вам выдан мут Админом %s. Причина: %s",PI[playerid][pAdminMute],PI[playerid][pCauseMute]);
			}
			//------------------------------------------------------------------
			if(player_family[playerid] != 0)
			{
				SCMF(playerid, 0x269BD8FF, "Вы состоите в семье: {FFFFFF}%s.{269BD8} INFO: /family - меню семьи | /k - чат",family_info[player_family[playerid]][f_name]);
				if(player_family[playerid])family_info[player_family[playerid]][f_online]++;
			}
			//------------------------------------------------------------------
			FormaFrac[playerid] = PI[playerid][pForma];
			if(PI[playerid][pCash] < 0) PI[playerid][pCash] = 0;
			if(PI[playerid][pProcents] <= 3) PI[playerid][pProcents] = 4;
			if(PI[playerid][pProcents2] <= 3) PI[playerid][pProcents2] = 4;
			if(PI[playerid][pChar][PI[playerid][pViborChar]] == 0) PI[playerid][pChar][PI[playerid][pViborChar]] = FL[playerid][ChosenSkin];
			if(PI[playerid][pBSA] <= 0) PI[playerid][pDostup] = 521957921;
			if(PI[playerid][pDonateRank] > 0) SCM(playerid, 0xFEBC41AA, "Здравствуйте VIP игрок!"), format(YCMDstr, 80, "~w~Welcome ~n~~b~   %s", Name(playerid));
			else format(YCMDstr, 80, "~w~Welcome ~n~~b~   %s", Name(playerid));
			GameTextForPlayer(playerid, YCMDstr, 5000, 1);
			if(PI[playerid][pText] == 1) SCM(playerid, COLOR_LIGHTRED, "Вы были выселены за неуплату электроэнергии."), PI[playerid][pText] = 0;
			if(PI[playerid][pText] == 2) SCM(playerid, COLOR_YELLOW, "Ваш бизнес был продан государству за простой. Половина стоимости зачислена на Ваш банковский счет"), PI[playerid][pText] = 0;
			if(PI[playerid][pText] == 3) SCM(playerid, COLOR_WHITE, "Вы получили $500.000 за приглашённого друга"), PI[playerid][pText] = 0;
			if(PI[playerid][pText] == 4) SCM(playerid, COLOR_WHITE, "С Вас была снята лидерка организации"), PI[playerid][pText] = 0;
			if(PI[playerid][pText] == 5) SCM(playerid, COLOR_LIGHTRED, "Ваша фракция была расформирована. Теперь Вы гражданский!"), PI[playerid][pText] = 0;
			if(PI[playerid][pText] == 6) SCM(playerid, COLOR_YELLOW, "Ваша мастерская была продана государству за простой. Половина стоимости зачислена на Ваш банковский счет"), PI[playerid][pText] = 0;
			if(PI[playerid][pText] == 7) SCM(playerid, COLOR_WHITE, "Вы были уволены с организации в OFFLINE"), PI[playerid][pText] = 0;
			new house = PI[playerid][pPhousekey];
			if(PI[playerid][pPhousekey] != 999)
			{
				if(House[house][hGarage] == 0)
				{
					caridhouse[playerid][0] = CreateVehicle(PI[playerid][pCar1], House[house][hCarx], House[house][hCary], House[house][hCarz], House[house][hCarc] , PI[playerid][pColor][0] ,PI[playerid][pColor][1], 86400);
					CompVeh(playerid,caridhouse[playerid][0]);
					LockCar(caridhouse[playerid][0]);
					Fuell[caridhouse[playerid][0]] = PI[playerid][pFuelcar];
				}
				if(House[house][hGarage] == 1)
				{
					caridhouse[playerid][0] = CreateVehicle(PI[playerid][pCar1], 2491.6121,-2564.9578,2500.8130,73.1183, PI[playerid][pColor][0] ,PI[playerid][pColor][1], 86400);
					LinkVehicleToInterior(caridhouse[playerid][0],1);
					SetVehicleVirtualWorld(caridhouse[playerid][0],house+50);
					CompVeh(playerid,caridhouse[playerid][0]);
					LockCar(caridhouse[playerid][0]);
					Fuell[caridhouse[playerid][0]] = PI[playerid][pFuelcar];
				}
			}
			if(PI[playerid][pPhousekey] != 999)
			{
				if(House[house][hGarage] == 1)
				{
					caridhouse[playerid][1] = CreateVehicle(PI[playerid][pCar2], 2491.8872,-2559.2559,2500.8147,98.5833, PI[playerid][pColor1][0] ,PI[playerid][pColor1][1], 86400);
					LinkVehicleToInterior(caridhouse[playerid][1],1);
					SetVehicleVirtualWorld(caridhouse[playerid][1],house+50);
					CompVeh1(playerid,caridhouse[playerid][1]);
					LockCar(caridhouse[playerid][1]);
					Fuell[caridhouse[playerid][1]] = PI[playerid][pFuelcar1];
				}
			}
			if(PI[playerid][pPhotelkey] != 999)// Отель
			{
				new hotel = PI[playerid][pPhotelkey];
				caridhouse[playerid][0] = CreateVehicle(PI[playerid][pCar1], HotelInfo[hotel][oCarx], HotelInfo[hotel][oCary], HotelInfo[hotel][oCarz], HotelInfo[hotel][oCarc] , PI[playerid][pColor][0] ,PI[playerid][pColor][1], 86400);
				CompVeh(playerid,caridhouse[playerid][0]);
				LockCar(caridhouse[playerid][0]);
				Fuell[caridhouse[playerid][0]] = PI[playerid][pFuelcar];
			}
			FL[playerid][PEfir] = 255;
			FL[playerid][Pefir] = 999;
			SpawnPlayer(playerid);
			InitLockDoors(playerid);
			SetPlayerHealthAC(playerid, PI[playerid][pHP]);
			ResetPlayerMoney(playerid);
			SetPlayerWeapons(playerid);
		}
	case 1:
		{
			if(!r) return printf("[Loading ...] Error loading Frakbank");
			FracBank[0][fSfnews] = 		cache_get_row_int(0,0, DATABASE);
			FracBank[0][fKazna] = 		cache_get_row_int(0,1, DATABASE);
			healpric = 					cache_get_row_int(0,2, DATABASE);
			addd[0] = 					cache_get_row_int(0,3, DATABASE);
			addd[1] =					cache_get_row_int(0,4, DATABASE);
			addd[2] =					cache_get_row_int(0,5, DATABASE);
			FracBank[0][fBMoney] = 		cache_get_row_int(0,6, DATABASE);
			FracBank[0][fBDrugs] = 		cache_get_row_int(0,7, DATABASE);
			FracBank[0][fBMats] = 		cache_get_row_int(0,8, DATABASE);
			FracBank[0][fVMoney] = 		cache_get_row_int(0,9, DATABASE);
			FracBank[0][fVDrugs] = 		cache_get_row_int(0,10, DATABASE);
			FracBank[0][fVMats] = 		cache_get_row_int(0,11, DATABASE);
			FracBank[0][fGMoney] = 		cache_get_row_int(0,12, DATABASE);
			FracBank[0][fGDrugs] = 		cache_get_row_int(0,13, DATABASE);
			FracBank[0][fGMats] = 		cache_get_row_int(0,14, DATABASE);
			FracBank[0][fCMoney] = 		cache_get_row_int(0,15, DATABASE);
			FracBank[0][fCDrugs] = 		cache_get_row_int(0,16, DATABASE);
			FracBank[0][fCMats] = 		cache_get_row_int(0,17, DATABASE);
			FracBank[0][fRMoney] = 		cache_get_row_int(0,18, DATABASE);
			FracBank[0][fRDrugs] = 		cache_get_row_int(0,19, DATABASE);
			FracBank[0][fRMats] = 		cache_get_row_int(0,20, DATABASE);
			FracBank[0][farmmatbi] = 	cache_get_row_int(0,21, DATABASE);
			FracBank[0][farmmatsf] = 	cache_get_row_int(0,22, DATABASE);
			FracBank[0][flspdmatbi] = 	cache_get_row_int(0,23, DATABASE);
			FracBank[0][ffbimats] = 	cache_get_row_int(0,24, DATABASE);
			FracBank[0][fyakuzamats] = 	cache_get_row_int(0,25, DATABASE);
			FracBank[0][frmmats] = 		cache_get_row_int(0,26, DATABASE);
			FracBank[0][flcnmats] = 	cache_get_row_int(0,27, DATABASE);
			FracBank[0][fsfpdmats] = 	cache_get_row_int(0,28, DATABASE);
			FracBank[0][flvpdmats] = 	cache_get_row_int(0,29, DATABASE);
			FracBank[0][fMMoney] = 		cache_get_row_int(0,30, DATABASE);
			FracBank[0][fMDrugs] = 		cache_get_row_int(0,31, DATABASE);
			FracBank[0][fMMats] = 		cache_get_row_int(0,32, DATABASE);
			FracBank[0][fzmatbi] = 		cache_get_row_int(0,33, DATABASE);
			FracBank[0][fzsklad] = 		cache_get_row_int(0,34, DATABASE);
			FracBank[0][fsklballas] = 	cache_get_row_int(0,35, DATABASE);
			FracBank[0][fsklvagos] = 	cache_get_row_int(0,36, DATABASE);
			FracBank[0][fsklgrove] = 	cache_get_row_int(0,37, DATABASE);
			FracBank[0][fsklaztec] = 	cache_get_row_int(0,38, DATABASE);
			FracBank[0][fsklrifa] = 	cache_get_row_int(0,39, DATABASE);
			FracBank[0][fsklbiker] = 	cache_get_row_int(0,40, DATABASE);
			FracBank[0][fskllcn] = 		cache_get_row_int(0,41, DATABASE);
			FracBank[0][fsklyak] = 		cache_get_row_int(0,42, DATABASE);
			FracBank[0][fsklrus] = 		cache_get_row_int(0,43, DATABASE);
			FracBank[0][pCena] = 		cache_get_row_int(0,44, DATABASE);
			FracBank[0][pKol] = 		cache_get_row_int(0,45, DATABASE);
			FracBank[0][pSuma] = 		cache_get_row_int(0,46, DATABASE);
			FracBank[0][pCena2] = 		cache_get_row_int(0,47, DATABASE);
			FracBank[0][pKol2] = 		cache_get_row_int(0,48, DATABASE);
			FracBank[0][pSuma2] = 		cache_get_row_int(0,49, DATABASE);
			FracBank[0][nLcn] = 		cache_get_row_int(0,50, DATABASE);
			FracBank[0][nYakuza] = 		cache_get_row_int(0,51, DATABASE);
			FracBank[0][nRm] = 			cache_get_row_int(0,52, DATABASE);
			FracBank[0][lspdbenz] = 	cache_get_row_int(0,53, DATABASE);
			FracBank[0][fbibenz] = 		cache_get_row_int(0,54, DATABASE);
			FracBank[0][vmfbenz] = 		cache_get_row_int(0,55, DATABASE);
			FracBank[0][medsfbenz] = 	cache_get_row_int(0,56, DATABASE);
			FracBank[0][lcnbenz] = 		cache_get_row_int(0,57, DATABASE);
			FracBank[0][yakuzabenz] = 	cache_get_row_int(0,58, DATABASE);
			FracBank[0][medlsbenz] = 	cache_get_row_int(0,59, DATABASE);
			FracBank[0][ballasbenz] = 	cache_get_row_int(0,60, DATABASE);
			FracBank[0][vagosbenz] = 	cache_get_row_int(0,61, DATABASE);
			FracBank[0][pmbenz] = 		cache_get_row_int(0,62, DATABASE);
			FracBank[0][grovebenz] = 	cache_get_row_int(0,63, DATABASE);
			FracBank[0][aztecbenz] = 	cache_get_row_int(0,64, DATABASE);
			FracBank[0][rifabenz] = 	cache_get_row_int(0,65, DATABASE);
			FracBank[0][zonabenz] = 	cache_get_row_int(0,66, DATABASE);
			FracBank[0][pravbenz] = 	cache_get_row_int(0,67, DATABASE);
			FracBank[0][bikerbenz] = 	cache_get_row_int(0,68, DATABASE); 
			FracBank[0][kassbenz] = 	cache_get_row_int(0,69, DATABASE);
			FracBank[0][kassnafta] = 	cache_get_row_int(0,70, DATABASE);
			FracBank[0][kassbenzce] = 	cache_get_row_int(0,71, DATABASE);
			FracBank[0][sfpdbenz] = 	cache_get_row_int(0,72, DATABASE);
			FracBank[0][nFond] = 		cache_get_row_int(0,73, DATABASE);
			FracBank[0][musorbak1] = 	cache_get_row_int(0,74, DATABASE);
			FracBank[0][musorbak2] = 	cache_get_row_int(0,75, DATABASE);
			FracBank[0][musorbak3] = 	cache_get_row_int(0,76, DATABASE);
			FracBank[0][musorbak4] = 	cache_get_row_int(0,77, DATABASE);
			FracBank[0][musorbak5] = 	cache_get_row_int(0,78, DATABASE);
			FracBank[0][musorbak6] = 	cache_get_row_int(0,79, DATABASE);
			FracBank[0][musorbak7] = 	cache_get_row_int(0,80, DATABASE);
			
			new strings[100];
			format(strings, sizeof(strings), "Цистерна LSPD\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][lspdbenz]);
			BenzText[0] = CreateDynamic3DTextLabel(strings, 0x6495EDFF,1602.1592,-1619.5845,13.4887,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), "Цистерна FBI\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][fbibenz]);
			BenzText[1] = CreateDynamic3DTextLabel(strings, 0x6495EDFF,1013.2892,1155.4902,10.7010,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), "Цистерна ВМФ\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][vmfbenz]);
			BenzText[2] = CreateDynamic3DTextLabel(strings, 0x6495EDFF,-1390.0769,458.0238,7.1875,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), "Цистерна МЦСФ\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][medsfbenz]);
			BenzText[3] = CreateDynamic3DTextLabel(strings, 0x6495EDFF,-2592.5903,586.0273,14.4531,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), "Цистерна LCN\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][lcnbenz]);
			BenzText[4] = CreateDynamic3DTextLabel(strings, 0x6495EDFF,1429.3911,791.9945,10.8203,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), "Цистерна Yakuza\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][yakuzabenz]);
			BenzText[5] = CreateDynamic3DTextLabel(strings, 0x6495EDFF,1443.0621,2820.9695,10.8203,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), "Цистерна МЦЛС\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][medlsbenz]);
			BenzText[6] = CreateDynamic3DTextLabel(strings, 0x6495EDFF,1140.4194,-1327.8652,13.6605,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), "Цистерна Ballas\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][ballasbenz]);
			BenzText[7] = CreateDynamic3DTextLabel(strings, 0x6495EDFF,1971.0061,-1274.5997,23.9908,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), "Цистерна Vagos\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][vagosbenz]);
			BenzText[8] = CreateDynamic3DTextLabel(strings, 0x6495EDFF,2795.3508,-1587.0710,10.9271,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), "Цистерна PM\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][pmbenz]);
			BenzText[9] = CreateDynamic3DTextLabel(strings, 0x6495EDFF,964.0468,1810.7731,8.6484,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), "Цистерна Grove\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][grovebenz]);
			BenzText[10] = CreateDynamic3DTextLabel(strings, 0x6495EDFF,2458.5376,-1669.7819,13.4944,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), "Цистерна Aztec\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][aztecbenz]);
			BenzText[11] = CreateDynamic3DTextLabel(strings, 0x6495EDFF,2778.7441,-1944.7628,13.5469,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), "Цистерна Rifa\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][rifabenz]);
			BenzText[12] = CreateDynamic3DTextLabel(strings, 0x6495EDFF,2182.3706,-1776.5037,13.3649,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), "Цистерна СВ\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][zonabenz]);
			BenzText[13] = CreateDynamic3DTextLabel(strings, 0x6495EDFF,295.0532,1849.0668,17.6406,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), "Цистерна Адм. Президента\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][pravbenz]);
			BenzText[14] = CreateDynamic3DTextLabel(strings, 0x6495EDFF,1523.2502,-1843.1382,13.5469,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), "Цистерна Байкеров\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][bikerbenz]);
			BenzText[15] = CreateDynamic3DTextLabel(strings, 0x6495EDFF,673.5708,-444.2276,16.3359,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), "Цистерна K.A.C.C.\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][kassbenzce]);
			BenzText[16] = CreateDynamic3DTextLabel(strings, 0x6495EDFF,2549.5632,2721.5469,10.8203,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), "Цистерна SFPD\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][sfpdbenz]);
			BenzText[17] = CreateDynamic3DTextLabel(strings, 0x6495EDFF,-1635.7487,667.2200,7.1875,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
  			format(strings, sizeof(strings), " %d/1000",FracBank[0][musorbak1]);
			BenzText[18] = CreateDynamic3DTextLabel(strings, 0xE0FFFFAA,1230.3865,-915.3129,43.0938,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), " %d/1000",FracBank[0][musorbak2]);
			BenzText[19] = CreateDynamic3DTextLabel(strings, 0xE0FFFFAA,2119.9834,-1829.9453,13.5547,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
  			format(strings, sizeof(strings), " %d/1000",FracBank[0][musorbak3]);
			BenzText[20] = CreateDynamic3DTextLabel(strings, 0xE0FFFFAA,2379.4226,-1939.8505,13.5469,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), " %d/1000",FracBank[0][musorbak4]);
			BenzText[21] = CreateDynamic3DTextLabel(strings, 0xE0FFFFAA,782.6826,-1637.4572,13.3828,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), " %d/1000",FracBank[0][musorbak5]);
			BenzText[22] = CreateDynamic3DTextLabel(strings, 0xE0FFFFAA,1007.6278,-907.3857,42.1797,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
			format(strings, sizeof(strings), " %d/1000",FracBank[0][musorbak6]);
			BenzText[23] = CreateDynamic3DTextLabel(strings, 0xE0FFFFAA,1030.5369,-1363.9471,13.5732,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
  			format(strings, sizeof(strings), " %d/1000",FracBank[0][musorbak7]);
			BenzText[24] = CreateDynamic3DTextLabel(strings, 0xE0FFFFAA,2385.1328,-1486.7227,24.0000,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);

			printf("[Loading ...] Connected Frakbank");
		}
	case 2:
		{
			if(!r) return printf("[Loading ...] Error loading Bizz");
			for(x = 1; x <= r; x++)
			{
				BizzInfo[x][bID] = 				cache_get_row_int(x-1,0, DATABASE);
				BizzInfo[x][bOwned] = 			cache_get_row_int(x-1,1, DATABASE);
				cache_get_row(x-1, 2, 			BizzInfo[x][bOwner], DATABASE, 64);
				cache_get_row(x-1, 3, 			BizzInfo[x][bMessage], DATABASE, 64);
				BizzInfo[x][bEntranceX] = 		cache_get_row_float(x-1,4, DATABASE);
				BizzInfo[x][bEntranceY] = 		cache_get_row_float(x-1,5, DATABASE);
				BizzInfo[x][bEntranceZ] = 		cache_get_row_float(x-1,6, DATABASE);
				BizzInfo[x][bExitX] = 			cache_get_row_float(x-1,7, DATABASE);
				BizzInfo[x][bExitY] = 			cache_get_row_float(x-1,8, DATABASE);
				BizzInfo[x][bExitZ] = 			cache_get_row_float(x-1,9, DATABASE);
				BizzInfo[x][bBuyPrice] = 		cache_get_row_int(x-1,10, DATABASE);
				BizzInfo[x][bTill] = 			cache_get_row_int(x-1,11, DATABASE);
				BizzInfo[x][bLocked] = 			cache_get_row_int(x-1,12, DATABASE);
				BizzInfo[x][bInterior] = 		cache_get_row_int(x-1,13, DATABASE);
				BizzInfo[x][bProducts] = 		cache_get_row_int(x-1,14, DATABASE);
				BizzInfo[x][b2Till] = 			cache_get_row_int(x-1,15, DATABASE);
    			BizzInfo[x][bTovar1] = 			cache_get_row_int(x-1,16, DATABASE);
    			BizzInfo[x][bTovar2] = 			cache_get_row_int(x-1,17, DATABASE);
    			BizzInfo[x][bTovar3] = 			cache_get_row_int(x-1,18, DATABASE);
    			BizzInfo[x][bTovar4] = 			cache_get_row_int(x-1,19, DATABASE);
    			BizzInfo[x][bTovar5] = 			cache_get_row_int(x-1,20, DATABASE);
    			BizzInfo[x][bTovar6] = 			cache_get_row_int(x-1,21, DATABASE);
    			BizzInfo[x][bTovar7] = 			cache_get_row_int(x-1,22, DATABASE);
    			BizzInfo[x][bTovar8] = 			cache_get_row_int(x-1,23, DATABASE);
    			BizzInfo[x][bTovar9] = 			cache_get_row_int(x-1,24, DATABASE);
    			BizzInfo[x][bTovar10] = 		cache_get_row_int(x-1,25, DATABASE);
    			BizzInfo[x][bTovar11] = 		cache_get_row_int(x-1,26, DATABASE);
    			BizzInfo[x][bTovar12] = 		cache_get_row_int(x-1,27, DATABASE);
    			BizzInfo[x][bTovar13] = 		cache_get_row_int(x-1,28, DATABASE);
    			BizzInfo[x][bTovar14] = 		cache_get_row_int(x-1,29, DATABASE);
				BizzInfo[x][bBarX] = 			cache_get_row_float(x-1,30, DATABASE);
				BizzInfo[x][bBarY] = 			cache_get_row_float(x-1,31, DATABASE);
				BizzInfo[x][bBarZ] = 			cache_get_row_float(x-1,32, DATABASE);
				BizzInfo[x][bMafia] = 			cache_get_row_int(x-1,33, DATABASE);
				BizzInfo[x][bType] = 			cache_get_row_int(x-1,34, DATABASE);
				BizzInfo[x][bLockTime] = 		cache_get_row_int(x-1,35, DATABASE);
				BizzInfo[x][pBizLic] = 			cache_get_row_int(x-1,36, DATABASE);
				BizzInfo[x][bVirtualWorld] = 	cache_get_row_int(x-1,37, DATABASE);
				BizzInfo[x][bEntranceCost] = 	cache_get_row_int(x-1,38, DATABASE);
				cache_get_row(x-1, 39, 			BizzInfo[x][caKrupie1], DATABASE, 32);
				cache_get_row(x-1, 40, 			BizzInfo[x][caKrupie2], DATABASE, 32);
				cache_get_row(x-1, 41, 			BizzInfo[x][caKrupie3], DATABASE, 32);
				cache_get_row(x-1, 42, 			BizzInfo[x][caKrupie4], DATABASE, 32);
				cache_get_row(x-1, 43, 			BizzInfo[x][caKrupie5], DATABASE, 32);
				
				if(BizzInfo[x][bOwned] == 0 && BizzInfo[x][bType] != 4)
				{
					format(YCMDstr, 128, "%s\nПродаётся\nЦена:%d", BizzInfo[x][bMessage], BizzInfo[x][bBuyPrice]);
					BizzInfo[x][bLocked] = 1;
					BizzInfo[x][bLabel] = Create3DTextLabel(YCMDstr, 0xEAC700FF,BizzInfo[x][bEntranceX], BizzInfo[x][bEntranceY], BizzInfo[x][bEntranceZ],20.0,0,1);
				}
				if(BizzInfo[x][bOwned] == 1 && BizzInfo[x][bType] != 4)
				{
					format(YCMDstr, 128, "{FF4500}%s\n{008000}Владелец: %s\n\n{3CB371}Нажмите {00FF7F}<Alt> {3CB371}чтобы войти", BizzInfo[x][bMessage], BizzInfo[x][bOwner]);
					BizzInfo[x][bLabel] = Create3DTextLabel(YCMDstr,0x00D900FF,BizzInfo[x][bEntranceX], BizzInfo[x][bEntranceY], BizzInfo[x][bEntranceZ],20.0,0,1);
				}
				if(BizzInfo[x][bType] == 1 || BizzInfo[x][bType] == 2 || BizzInfo[x][bType] == 3 || BizzInfo[x][bType] == 5) CreateDynamic3DTextLabel("{ffff00}Нажмите {1e90ff}< H >",0xFF0000FF,BizzInfo[x][bBarX], BizzInfo[x][bBarY], BizzInfo[x][bBarZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
				if(BizzInfo[x][bType] == 1 || BizzInfo[x][bType] == 2 || BizzInfo[x][bType] == 3 || BizzInfo[x][bType] == 5) CreateDynamic3DTextLabel("{3CB371}Нажмите {00FF7F}<Alt> {3CB371}чтобы выйти",0xFF0000FF,BizzInfo[x][bExitX], BizzInfo[x][bExitY], BizzInfo[x][bExitZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
				if(BizzInfo[x][bType] == 4)
				{
					if(BizzInfo[x][bOwned] == 0)
					{
						format(YCMDstr, 128, "%s\nПродаётся\nЦена: $%d", BizzInfo[x][bMessage],BizzInfo[x][bBuyPrice]);
						BizzInfo[x][bLocked] = 1;
						BizzInfo[x][bLabel] = Create3DTextLabel(YCMDstr, 0xEAC700FF,BizzInfo[x][bEntranceX], BizzInfo[x][bEntranceY], BizzInfo[x][bEntranceZ],20.0,0,1);
					}
					if(BizzInfo[x][bOwned] == 1)
					{
						format(YCMDstr,128, "{FF4500}%s\n{008000}Владелец:\n %s\n{008080}Цена бензина: $%d", BizzInfo[x][bMessage], BizzInfo[x][bOwner],BizzInfo[x][bTovar14]);
						BizzInfo[x][bLabel] = Create3DTextLabel(YCMDstr,0x00D900FF,BizzInfo[x][bEntranceX], BizzInfo[x][bEntranceY], BizzInfo[x][bEntranceZ],5.0,0,1);
					}
				}
				TotalBizz++;
			}
			printf("[Loading ...] Connected Bizz (%i)",TotalBizz);
		}
	case 3:
		{
			if(!r) return printf("[Loading ...] Error loading House");
			for(x = 1; x <= r; x++)
			{
				House[x][hID] =             cache_get_row_int(x-1,0, DATABASE);
				House[x][hEntrancex] =      cache_get_row_float(x-1,1, DATABASE);
				House[x][hEntrancey] =      cache_get_row_float(x-1,2, DATABASE);
				House[x][hEntrancez] =      cache_get_row_float(x-1,3, DATABASE);
				House[x][hExitx] =          cache_get_row_float(x-1,4, DATABASE);
				House[x][hExity] =          cache_get_row_float(x-1,5, DATABASE);
				House[x][hExitz] =          cache_get_row_float(x-1,6, DATABASE);
				House[x][hCarx] =           cache_get_row_float(x-1,7, DATABASE);
				House[x][hCary] =           cache_get_row_float(x-1,8, DATABASE);
				House[x][hCarz] =           cache_get_row_float(x-1,9, DATABASE);
				House[x][hCarc] =           cache_get_row_float(x-1,10, DATABASE);
				cache_get_row(x-1, 11, 			House[x][hOwner], DATABASE, MAX_PLAYER_NAME);
				House[x][hValue] =          cache_get_row_int(x-1,12, DATABASE);
				House[x][hHel] =            cache_get_row_int(x-1,13, DATABASE);
				House[x][hInt] =            cache_get_row_int(x-1,14, DATABASE);
				House[x][hLock] =           cache_get_row_int(x-1,15, DATABASE);
				House[x][hOwned] =        	cache_get_row_int(x-1,16, DATABASE);
				House[x][hTakings] =        cache_get_row_int(x-1,17, DATABASE);
				House[x][hKlass] =          cache_get_row_int(x-1,18, DATABASE);
				House[x][hGarage] =         cache_get_row_int(x-1,19, DATABASE);
				House[x][hGun][0] =         cache_get_row_int(x-1,20, DATABASE);
				House[x][hGun][1] =         cache_get_row_int(x-1,21, DATABASE);
				House[x][hGun][2] =         cache_get_row_int(x-1,22, DATABASE);
				House[x][hGun][3] =         cache_get_row_int(x-1,23, DATABASE);
				House[x][hGun][4] =         cache_get_row_int(x-1,24, DATABASE);
				House[x][hGun][5] =         cache_get_row_int(x-1,25, DATABASE);
				House[x][hGun][6] =         cache_get_row_int(x-1,26, DATABASE);
				House[x][hGunAmmo][0] =     cache_get_row_int(x-1,27, DATABASE);
				House[x][hGunAmmo][1] =     cache_get_row_int(x-1,28, DATABASE);
				House[x][hGunAmmo][2] =     cache_get_row_int(x-1,29, DATABASE);
				House[x][hGunAmmo][3] =     cache_get_row_int(x-1,30, DATABASE);
				House[x][hGunAmmo][4] =     cache_get_row_int(x-1,31, DATABASE);
				House[x][hGunAmmo][5] =     cache_get_row_int(x-1,32, DATABASE);
				House[x][hGunAmmo][6] =     cache_get_row_int(x-1,33, DATABASE);
				House[x][hNarko] =         	cache_get_row_int(x-1,34, DATABASE);

				if(House[x][hOwned] == 0)
				{
					House[x][hPickup] = CreatePickup(1273, 23, House[x][hEntrancex], House[x][hEntrancey], House[x][hEntrancez],-1);
					pickups++;
					House[x][hMIcon] = CreateDynamicMapIcon(House[x][hEntrancex], House[x][hEntrancey], House[x][hEntrancez], 31, COLOR_WHITE, 0, -1, -1);
				}
				if(House[x][hOwned] == 1)
				{
					House[x][hPickup] = CreatePickup(1272, 23, House[x][hEntrancex], House[x][hEntrancey], House[x][hEntrancez],-1);
					pickups++;
					House[x][hMIcon] = CreateDynamicMapIcon(House[x][hEntrancex], House[x][hEntrancey], House[x][hEntrancez], 32, COLOR_WHITE, 0, -1, -1);
				}
				TotalHouse++;
			}
			printf("[Loading ...] Connected House (%i)",TotalHouse);
		}
	case 4:
		{
			if(!r) return printf("[Loading ...] Error loading Hotel");
			for(x = 1; x <= r; x++)
			{
				HotelInfo[x][oID] =             cache_get_row_int(x-1,0, DATABASE);
				HotelInfo[x][oEntrancex] =      cache_get_row_float(x-1,1, DATABASE);
				HotelInfo[x][oEntrancey] =      cache_get_row_float(x-1,2, DATABASE);
				HotelInfo[x][oEntrancez] =      cache_get_row_float(x-1,3, DATABASE);
				HotelInfo[x][oExitx] =          cache_get_row_float(x-1,4, DATABASE);
				HotelInfo[x][oExity] =          cache_get_row_float(x-1,5, DATABASE);
				HotelInfo[x][oExitz] =          cache_get_row_float(x-1,6, DATABASE);
				HotelInfo[x][oCarx] =           cache_get_row_float(x-1,7, DATABASE);
				HotelInfo[x][oCary] =           cache_get_row_float(x-1,8, DATABASE);
				HotelInfo[x][oCarz] =           cache_get_row_float(x-1,9, DATABASE);
				HotelInfo[x][oCarc] =           cache_get_row_float(x-1,10, DATABASE);
				cache_get_row(x-1, 11, 			HotelInfo[x][oOwner], DATABASE, MAX_PLAYER_NAME);
				HotelInfo[x][oValue] =          cache_get_row_int(x-1,12, DATABASE);
				HotelInfo[x][oInt] =            cache_get_row_int(x-1,13, DATABASE);
				HotelInfo[x][oVirt] =           cache_get_row_int(x-1,14, DATABASE);
				HotelInfo[x][oLock] =           cache_get_row_int(x-1,15, DATABASE);
				HotelInfo[x][oOwned] =        	cache_get_row_int(x-1,16, DATABASE);
				HotelInfo[x][oTakings] =        cache_get_row_int(x-1,17, DATABASE);
				HotelInfo[x][virtmir] =         cache_get_row_int(x-1,18, DATABASE);

				if(HotelInfo[x][oOwned] == 0)
				{
					HotelInfo[x][oPickup] = CreatePickup(1239, 23, HotelInfo[x][oEntrancex], HotelInfo[x][oEntrancey], HotelInfo[x][oEntrancez], HotelInfo[x][oVirt]);
					pickups++;
				}
				if(HotelInfo[x][oOwned] == 1)
				{
					HotelInfo[x][oPickup] = CreatePickup(1559, 23, HotelInfo[x][oEntrancex], HotelInfo[x][oEntrancey], HotelInfo[x][oEntrancez], HotelInfo[x][oVirt]);
					pickups++;
				}
				TotalHotel++;
			}
			printf("[Loading ...] Connected Hotel (%i)",TotalHotel);
		}
	case 5:
		{
			if(!r) return printf("[Loading ...] Error loading Plants!");
			for(x = 1; x <= r; x++)
			{
				NarkoInfo[x][nID] = 				cache_get_row_int(x-1,0, DATABASE);
				NarkoInfo[x][nX] = 					cache_get_row_float(x-1,1, DATABASE);
				NarkoInfo[x][nY] = 					cache_get_row_float(x-1,2, DATABASE);
				NarkoInfo[x][nZ] = 					cache_get_row_float(x-1,3, DATABASE);
				NarkoInfo[x][nWait] = 				cache_get_row_int(x-1,4, DATABASE);
				NarkoInfo[x][nZasev] = 				cache_get_row_int(x-1,5, DATABASE);
				NarkoInfo[x][nSobrat] = 			cache_get_row_int(x-1,6, DATABASE);
				if(NarkoInfo[x][nZasev] == 1 && NarkoInfo[x][nWait] >= 1)
				{
					NarkoInfo[x][nObject] = CreateObject(824,NarkoInfo[x][nX],NarkoInfo[x][nY],NarkoInfo[x][nZ],0.00,0.00,0.00);
					format(YCMDstr, 200,"%d часов осталось до того,\n когда плантацию можно будет собрать",NarkoInfo[x][nWait]);
				}
				else if(NarkoInfo[x][nZasev] == 0){ format(YCMDstr, 35,"Место свободно, можно засеять"); }
				else if(NarkoInfo[x][nZasev] == 1 && NarkoInfo[x][nWait] == 0)
				{
					NarkoInfo[x][nPickup] = CreatePickup(1578,23,NarkoInfo[x][nX],NarkoInfo[x][nY],NarkoInfo[x][nZ]);
					format(YCMDstr, 25,"Плантацию можно собрать");
				}
				NarkoInfo[x][nLabel] = Create3DTextLabel(YCMDstr, 0xC4DAADFF,NarkoInfo[x][nX],NarkoInfo[x][nY],NarkoInfo[x][nZ], 25.0,0,0);
				NARKO++;
			}
			printf("[Loading ...] Connected Plants (%i)",NARKO);
		}
	case 6:
		{
			if(!r) return printf("[Loading ...] Error loading Mast");
			for(x = 1; x <= r; x++)
			{
				AvtoMInfo[x][vID] = 			cache_get_row_int(x-1,0, DATABASE);
				AvtoMInfo[x][vOwned] = 			cache_get_row_int(x-1,1, DATABASE);
				cache_get_row(x-1, 2, 			AvtoMInfo[x][vOwner], DATABASE, 64);
				cache_get_row(x-1, 3, 			AvtoMInfo[x][vMessage], DATABASE, 128);
				AvtoMInfo[x][vEntranceX] = 		cache_get_row_float(x-1,4, DATABASE);
				AvtoMInfo[x][vEntranceY] = 		cache_get_row_float(x-1,5, DATABASE);
				AvtoMInfo[x][vEntranceZ] = 		cache_get_row_float(x-1,6, DATABASE);
				AvtoMInfo[x][vBuyPrice] = 		cache_get_row_int(x-1,7, DATABASE);
				AvtoMInfo[x][vTill] = 			cache_get_row_int(x-1,8, DATABASE);
				AvtoMInfo[x][vLocked] = 		cache_get_row_int(x-1,9, DATABASE);
				AvtoMInfo[x][vProducts] = 		cache_get_row_int(x-1,10, DATABASE);
				AvtoMInfo[x][v2Till] = 			cache_get_row_int(x-1,11, DATABASE);
				AvtoMInfo[x][vLockTime] = 		cache_get_row_int(x-1,12, DATABASE);
				AvtoMInfo[x][vBarX] = 			cache_get_row_float(x-1,13, DATABASE);
				AvtoMInfo[x][vBarY] = 			cache_get_row_float(x-1,14, DATABASE);
				AvtoMInfo[x][vBarZ] = 			cache_get_row_float(x-1,15, DATABASE);
				if(AvtoMInfo[x][vOwned] == 0)
				{
					format(YCMDstr, 128, "%s\nПродаётся\nЦена: $%d", AvtoMInfo[x][vMessage],AvtoMInfo[x][vBuyPrice]);
					AvtoMInfo[x][vLocked] = 1;
					AvtoMInfo[x][vLabel] = Create3DTextLabel(YCMDstr, 0x38FFD7FF,AvtoMInfo[x][vEntranceX], AvtoMInfo[x][vEntranceY], AvtoMInfo[x][vEntranceZ],20.0,0,1);
					AvtoMInfo[x][vPickup] = CreatePickup(1083,23,AvtoMInfo[x][vEntranceX], AvtoMInfo[x][vEntranceY], AvtoMInfo[x][vEntranceZ]);
					pickups++;
				}
				if(AvtoMInfo[x][vOwned] == 1)
				{
					format(YCMDstr, 128, "%s\nВладелец:\n %s", AvtoMInfo[x][vMessage], AvtoMInfo[x][vOwner]);
					AvtoMInfo[x][vLabel] = Create3DTextLabel(YCMDstr,0x38FFD7FF,AvtoMInfo[x][vEntranceX], AvtoMInfo[x][vEntranceY], AvtoMInfo[x][vEntranceZ],20.0,0,1);
					AvtoMInfo[x][vPickup] = CreatePickup(1083,23,AvtoMInfo[x][vEntranceX], AvtoMInfo[x][vEntranceY], AvtoMInfo[x][vEntranceZ]);
					pickups++;
				}
				TotalMast++;
			}
			printf("[Loading ...] Connected Mast (%i)",TotalMast);
		}
	case 7:
		{
			if(!r) return printf("[Loading ...] Error loading Floors");
			for(x = 1; x <= r; x++)
			{
				PodeezdInfo[x][pid] = 			cache_get_row_int(x-1,0, DATABASE);
				PodeezdInfo[x][podPicX] = 		cache_get_row_float(x-1,1, DATABASE);
				PodeezdInfo[x][podPicY] = 		cache_get_row_float(x-1,2, DATABASE);
				PodeezdInfo[x][podPicZ] = 		cache_get_row_float(x-1,3, DATABASE);
				PodeezdInfo[x][podEtazi] = 		cache_get_row_int(x-1,4, DATABASE);
				PodeezdInfo[x][podPic] = CreatePickup(1318, 1, PodeezdInfo[x][podPicX], PodeezdInfo[x][podPicY], PodeezdInfo[x][podPicZ]);
				for(new b = 1; b <= PodeezdInfo[x][podEtazi]; b++)
				{
					ALLPODEZD++;
					PodeezdInfo[x][podMir][b] = ALLPODEZD;
				}
				AllPODEZD++;
			}
			printf("[Loading ...] Connected Floors (%i)",AllPODEZD);
		}
	case 8:
		{
			if(!r) return printf("[Loading ...] Error loading Family");
			for(x = 1; x <= r; x++)
			{
				family_info[x][f_id] = 				cache_get_row_int(x-1,0, DATABASE);
				cache_get_row(x-1, 1, 				family_info[x][f_name], DATABASE, 64);
				family_info[x][f_chat_color] = 		cache_get_row_int(x-1,2, DATABASE);
				cache_get_row(x-1, 3, 				family_info[x][f_creator], DATABASE, 64);
				cache_get_row(x-1, 4, 				family_info[x][f_creating_data], DATABASE, 128);
				family_count ++;
			}
			printf("[Loading ...] Connected Family (%i)",family_count);
		}
	case 9:
		{
            if(!r)
			{
				SCM(playerid,COLOR_GREY,"Аккаунт не найден в базе данных");
				SPDEx(playerid,2625,DIALOG_STYLE_INPUT, "{FFFF00}По приглашению от:", "Введите ник игрока, пригласившего Вас на сервер", "Далее", "Пропуск");
				return true;
			}
			strmid(PI[playerid][pDrug], str, 0, strlen(str), strlen(str)+5);
		}
	case 10:
		{
			if(r)
			{
				format(string, 256, "{ffffff}Добро пожаловать на сервер {FFA500}EXSIGHT Role Play.\n\n{ffffff}Логин: {FFA500}%s\n{ffffff}Введите пароль:",Name(playerid));
				SPDEx(playerid,1,DIALOG_STYLE_PASSWORD, "Авторизация",string, "Войти", "Отмена");
				PlayerPlaySound(playerid, 1187, 0.0, 0.0, 0.0);
				SetPVarInt(playerid,"time_logged",30);
			}
			else
			{
				format(string, 256, "Добро пожаловать на сервер {FFA500}EXSIGHT Role Play.\n\n{ffffff}Для игры на сервере зарегистрируйте свой аккаунт.\n\n{ffffff}Логин: {FFA500}%s\n{ffffff}Введите пароль:",Name(playerid));
				SPDEx(playerid,2,DIALOG_STYLE_INPUT, "Регистрация",string, "Готово", "Отмена");
			}
		}
	case 11:
		{
			new Nick[50];
			if(!r) return printf("[Получение денег за друга ...] Аккаунт не найден!");
			cache_get_field_content(0,"pDrug",Nick,DATABASE,50);
			mysql_format(DATABASE,YCMDstr,100, "UPDATE `accounts` SET pCash = pCash + 300000, pText = '3' WHERE Name = '%s'",Nick);
			mysql_function_query(DATABASE,YCMDstr,false,"","");
		}
	case 12:
		{
			mysql_format(DATABASE,YCMDstr,114,"SELECT * FROM `accounts` WHERE `Name` = '%s' AND `pKey`= '%s'",Name(playerid),PI[playerid][pKey]);
			mysql_function_query(DATABASE,YCMDstr,true,"OnMySQL_QUERY","iis",0,playerid,"");
		}
	case 13:
		{
			if(!r) return SCM(playerid,COLOR_GREY,"Аккаунт не найден");
			cache_get_field_content(0,"pOnline",YCMDstr,DATABASE,30);
			SendMes(playerid,COLOR_BLUE,"Ник: %s | Последний вход: %s",str,YCMDstr);
		}
	case 14:
		{
			if(!r) return SCM(playerid,COLOR_GREY,"Аккаунтов с данным IP адресом не найдено");
			for new i = 0; i < r; i++ do
			{
				new akkip = cache_get_field_content_int(i,"pIp");
				cache_get_field_content(i,"Name",YCMDstr,DATABASE,MAX_PLAYER_NAME);
				SendMes(playerid,COLOR_BLUE,"- %s",YCMDstr,akkip);
			}
		}
	case 15:
		{
			if(!r) return SCM(playerid,COLOR_GREY,"Аккаунт не найден");
			cache_get_field_content(0,"pIp",YCMDstr,DATABASE,30);
			SendMes(playerid,COLOR_BLUE,"Ник: %s | IP: %s",str,YCMDstr);
		}
	case 16:
		{
			if(!r) return SCM(playerid,COLOR_GREY,"Аккаунт не найден");
			cache_get_field_content(0,"pIpReg",YCMDstr,DATABASE,30);
			SendMes(playerid,COLOR_BLUE,"Ник: %s | IP при регистрации: %s",str,YCMDstr);
		}
    case 17:
		{
		    if(!r) return SCM(playerid, COLOR_GRAD1, "Аккаунт не найден в базе данных!");
 	    	new Str[128], name[24], level, warn, number, money, bank, vip, leader, member, rank, biz, mast, hotel, house, car1, car2, car3, pip[16], regip[16], onli[11], datareg[11];
			//------------------------------------------------------------------
			for(new i = 0; i < sizeof(QUERY); i++) QUERY[i] = EOS;
			cache_get_field_content(0,"Name",name,DATABASE,24);
			level = cache_get_field_content_int(0,"pLevel",DATABASE);
			warn = cache_get_field_content_int(0,"pWarns",DATABASE);
			number = cache_get_field_content_int(0,"pPnumber",DATABASE);
   			money = cache_get_field_content_int(0,"pCash",DATABASE);
   			bank = cache_get_field_content_int(0,"pBank",DATABASE);
      		vip = cache_get_field_content_int(0,"pDonateRank",DATABASE);
         	leader = cache_get_field_content_int(0,"pLeader",DATABASE);
	        member = cache_get_field_content_int(0,"pMember",DATABASE);
	        rank = cache_get_field_content_int(0,"pRank",DATABASE);
	        biz = cache_get_field_content_int(0,"pPbiskey",DATABASE);
	        mast = cache_get_field_content_int(0,"pPviskey",DATABASE);
	        house = cache_get_field_content_int(0,"pPhousekey",DATABASE);
	        hotel = cache_get_field_content_int(0,"pPhotelkey",DATABASE);
	        car1 = cache_get_field_content_int(0,"pCar1",DATABASE);
	        car2 = cache_get_field_content_int(0,"pCar2",DATABASE);
	        car3 = cache_get_field_content_int(0,"pCar3",DATABASE);
	        cache_get_field_content(0,"pIp",pip,DATABASE,16);
	        cache_get_field_content(0,"pIpReg",regip,DATABASE,16);
	        cache_get_field_content(0,"pOnline",onli,DATABASE,11);
	        cache_get_field_content(0,"pDataReg",datareg,DATABASE,11);
	        //------------------------------------------------------------------
	        format(Str,sizeof(Str),"Ник:\t\t\t\t%s\n",name); strcat(QUERY,Str);
	        format(Str,sizeof(Str),"LvL:\t\t\t\t%d\n",level); strcat(QUERY,Str);
	        format(Str,sizeof(Str),"Warns:\t\t\t\t%d\n",warn); strcat(QUERY,Str);
	        format(Str,sizeof(Str),"Номер телефона:\t\t%d\n",number); strcat(QUERY,Str);
	        format(Str,sizeof(Str),"Наличка:\t\t\t$%d\n",money); strcat(QUERY,Str);
	        format(Str,sizeof(Str),"Банк:\t\t\t\t$%d\n",bank); strcat(QUERY,Str);
	        format(Str,sizeof(Str),"VIP статус:\t\t\t%d уровень\n\n",vip); strcat(QUERY,Str);
		  	format(Str,sizeof(Str),"Бизнес:\t\t\t№%d\n",biz); strcat(QUERY,Str);
		  	format(Str,sizeof(Str),"Автоматерская:\t\t№%d\n\n",mast); strcat(QUERY,Str);
		   	format(Str,sizeof(Str),"Дом:\t\t\t\t№ %d\n",house); strcat(QUERY,Str);
		   	format(Str,sizeof(Str),"Отель:\t\t\t\t№ %d\n",hotel); strcat(QUERY,Str);
		   	format(Str,sizeof(Str),"Car 1:\t\t\t\tID %d\n",car1); strcat(QUERY,Str);
		   	format(Str,sizeof(Str),"Car 2:\t\t\t\tID %d\n",car2); strcat(QUERY,Str);
      		format(Str,sizeof(Str),"Воздушный т/с:\t\tID %d\n\n",car3); strcat(QUERY,Str);
	        format(Str,sizeof(Str),"Последний IP:\t\t\t%s\n",pip); strcat(QUERY,Str);
	        format(Str,sizeof(Str),"Рег. IP:\t\t\t\t%s\n",regip); strcat(QUERY,Str);
	        format(Str,sizeof(Str),"Последний вход:\t\t%s\n",onli); strcat(QUERY,Str);
	        format(Str,sizeof(Str),"Рег. Дата:\t\t\t%s\n\n",datareg); strcat(QUERY,Str);
	        format(Str,sizeof(Str),"Лидер фракции\t\t%d ID\n",leader); strcat(QUERY,Str);
		  	format(Str,sizeof(Str),"Фракция:\t\t\t%d ID\n",member); strcat(QUERY,Str);
		  	format(Str,sizeof(Str),"Ранг:\t\t\t\t%d\n",rank); strcat(QUERY,Str);
	        SPDEx(playerid,22815,0,"Оффлайн статистика",QUERY,"Готово","");
		}
	}
	return true;
}

stock SaveMySQL(idx, i = 0)
{
	new temp[0x9e];
	switch(idx)
	{
	case 0:// Данные аккаунта
		{
			if(GetPVarInt(i,"player_save") || !PI[i][pLogin]) return true;
			SetPVarInt(i,"player_save",1);
			new year, month, day;
			getdate(year, month, day);

			for(new x = 1; x < 11; x++) GetPlayerWeaponData(i,x,PI[i][pGuns][x-1],PI[i][pAmmos][x-1]);
			format(PI[i][pWeapons],32,"%i, %i, %i, %i, %i, %i, %i, %i, %i, %i, %i",PI[i][pGuns][0],PI[i][pGuns][1],PI[i][pGuns][2],PI[i][pGuns][3],
			PI[i][pGuns][4],PI[i][pGuns][5],PI[i][pGuns][6],PI[i][pGuns][7],PI[i][pGuns][8],PI[i][pGuns][9],PI[i][pGuns][10]);
			format(PI[i][pAmmo],32,"%i, %i, %i, %i, %i, %i, %i, %i, %i, %i, %i",PI[i][pAmmos][0],PI[i][pAmmos][1],PI[i][pAmmos][2],PI[i][pAmmos][3],
			PI[i][pAmmos][4],PI[i][pAmmos][5],PI[i][pAmmos][6],PI[i][pAmmos][7],PI[i][pAmmos][8],PI[i][pAmmos][9],PI[i][pAmmos][10]);

			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_ACCOUNTS"` SET `pLevel` = '%i', `pPhousekey` = '%i', `pPbiskey` = '%i', `pBSA` = '%i', `pForma` = '%i'",
			PI[i][pLevel],PI[i][pPhousekey],PI[i][pPbiskey],PI[i][pBSA],PI[i][pForma]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pFuelcar` = '%f', `pText` = '%i', `pHP` = '%f', `pPhoneBook` = '%i', `pDirectory` = '%i'",
			QUERY,PI[i][pFuelcar],PI[i][pText],PI[i][pHP],PI[i][pPhoneBook],PI[i][pDirectory]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pCar1` = '%i', `pCar2` = '%i', `pCar3` = '%i', `pDonatemoney` = '%i', `pDonateRank` = '%i', `pSex` = '%i', `pArrested` = '%i', `pMuted` = '%i', `pExp` = '%i'",
			QUERY,PI[i][pCar1],PI[i][pCar2],PI[i][pCar3],PI[i][pDonatemoney],PI[i][pDonateRank],PI[i][pSex],PI[i][pArrested],PI[i][pMuted],PI[i][pExp]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pCash` = '%i', `pKills` = '%i', `pPayCheck` = '%i', `pJailed` = '%i', `pJailTime` = '%i', `pMats` = '%i', `pDrugs` = '%i', `pLeader` = '%i', `pMember` = '%i'",
			QUERY,PI[i][pCash],PI[i][pKills],PI[i][pPayCheck],PI[i][pJailed],PI[i][pJailTime],PI[i][pMats],PI[i][pDrugs],PI[i][pLeader],PI[i][pMember]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pRank` = '%i', `pSAPD` = '%i', `pMedic` = '%i', `pJob` = '%i', `pCarLic` = '%i', `pBizLic` = '%i', `pFlyLic` = '%i', `pBoatLic` = '%i', `pGunLic` = '%i'",
			QUERY,PI[i][pRank],PI[i][pSAPD],PI[i][pMedic],PI[i][pJob],PI[i][pCarLic],PI[i][pBizLic],PI[i][pFlyLic],PI[i][pBoatLic],PI[i][pGunLic]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pGunSkill1` = '%i', `pGunSkill2` = '%i', `pGunSkill3` = '%i', `pGunSkill4` = '%i', `pGunSkill5` = '%i', `pGunSkill6` = '%i'",
			QUERY,PI[i][pGunSkill][0],PI[i][pGunSkill][1],PI[i][pGunSkill][2],PI[i][pGunSkill][3],PI[i][pGunSkill][4],PI[i][pGunSkill][5]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pChar` = '%i', `pChar1` = '%i', `pChar2` = '%i', `pViborChar` = '%i', `pInt` = '%i', `pLocal` = '%i', `pModel` = '%i', `pPnumber` = '%i'",
			QUERY,PI[i][pChar][0],PI[i][pChar][1],PI[i][pChar][2],PI[i][pViborChar],PI[i][pInt],PI[i][pLocal],PI[i][pModel],PI[i][pPnumber]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pPayDay` = '%i', `pPayDayHad` = '%i', `pTut` = '%i', `pWarns` = '%i', `punWarns` = '%i', `punWarnstime` = '%i', `pFuel` = '%i'",
			QUERY,PI[i][pPayDay],PI[i][pPayDayHad],PI[i][pTut],PI[i][pWarns],PI[i][punWarns],PI[i][punWarnstime],PI[i][pFuel]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pMarried` = '%i', `pMarriedTo` = '%s', `pMuteTime` = '%i', `pMobile` = '%i', `pBank` = '%i', `pLocked` = '%i', `pBanDay` = '%i', `pBanMounth` = '%i', `pKrisha` = '%i'",
			QUERY,PI[i][pMarried],PI[i][pMarriedTo],PI[i][pMuteTime],PI[i][pMobile],PI[i][pBank],PI[i][pLocked],PI[i][pBanDay],PI[i][pBanMounth],PI[i][pKrisha]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pUseKrisha` = '%i', `pDolg` = '%i', `pBoxSkill` = '%i', `pKongfuSkill` = '%i', `pKickboxSkill` = '%i', `pZakonp` = '%i'",
			QUERY,PI[i][pUseKrisha],PI[i][pDolg],PI[i][pBoxSkill],PI[i][pKongfuSkill],PI[i][pKickboxSkill],PI[i][pZakonp]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pAddiction` = '%i', `pMats` = '%i', `pNarcoLomka` = '%i', `pProcents` = '%i', `pWheels` = '%i', `pPaintJob` = '%i'",
			QUERY,PI[i][pAddiction],PI[i][pMats],PI[i][pNarcoLomka],PI[i][pProcents],PI[i][pWheels],PI[i][pPaintJob]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pSpoiler` = '%i', `pBumper1` = '%i', `pBumper2` = '%i', `pColor1` = '%i', `pColor2` = '%i', `pNitro` = '%i'",
			QUERY,PI[i][pSpoiler],PI[i][pBumper1],PI[i][pBumper2],PI[i][pColor][0],PI[i][pColor][1],PI[i][pNitro]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pHydrawlic` = '%i', `pUbka` = '%i', `pVozduh` = '%i', `pVihlop` = '%i'",
			QUERY,PI[i][pHydrawlic],PI[i][pUbka],PI[i][pVozduh],PI[i][pVihlop]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pMestoJail` = '%i', `pSong` = '%i', `pHousecash` = '%i', `pWantedLevel` = '%i', `pChas` = '%i', `pMin` = '%i', `pLighter` = '%i'",
			QUERY,PI[i][pMestoJail],PI[i][pSong],PI[i][pHousecash],PI[i][pWantedLevel],PI[i][pChas],PI[i][pMin],PI[i][pLighter]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pCigarettes` = '%i', `pRobHouse` = '%i', `pGolod` = '%i', `pReport` = '%i', `pPviskey` = '%i', `pPhotelkey` = '%i'",
			QUERY,PI[i][pCigarettes],PI[i][pRobHouse],PI[i][pGolod],PI[i][pReport],PI[i][pPviskey],PI[i][pPhotelkey]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pWheels1` = '%i', `pPaintJob1` = '%i', `pSpoiler1` = '%i', `pBumper11` = '%i', `pBumper21` = '%i', `pColor11` = '%i', `pColor21` = '%i'",
			QUERY,PI[i][pWheels1],PI[i][pPaintJob1],PI[i][pSpoiler1],PI[i][pBumper11],PI[i][pBumper21],PI[i][pColor1][0],PI[i][pColor1][1]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pNitro1` = '%i', `pHydrawlic1` = '%i', `pUbka11` = '%i', `pVozduh11` = '%i', `pVihlop11` = '%i'",
			QUERY,PI[i][pNitro1],PI[i][pHydrawlic1],PI[i][pUbka11],PI[i][pVozduh11],PI[i][pVihlop11]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pProcents2` = '%i', `pColor31` = '%i', `pColor32` = '%i', `ptaxilvl` = '%i', `ptaxiexp` = '%i', `pFuelcar1` = '%f', `pFamily` = '%i', `pFLeader` = '%i', `pVoenBil` = '%i', `pMedKarta` = '%i'",
			QUERY,PI[i][pProcents2],PI[i][pColor3][0],PI[i][pColor3][1],PI[i][ptaxilvl],PI[i][ptaxiexp],PI[i][pFuelcar1],player_family[i],PI[i][pFLeader],PI[i][pVoenBil],PI[i][pMedKarta]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pVbiltime` = '%i', `pStraf` = '%i', `pPassport` = '%i', `pClock` = '%i', `pRadio` = '%i'",
			QUERY,PI[i][pVbiltime],PI[i][pStraf],PI[i][pPassport],PI[i][pClock],PI[i][pRadio]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pOnline` = '%02i/%02i/%02i', `pChas` = '%i', `pMin` = '%i', `pGiveExp` = '%i', `pWeapons` = '%s', `pAmmo` = '%s'",
			QUERY,day,month,year,PI[i][pChas],PI[i][pMin],PI[i][pGiveExp],PI[i][pWeapons], PI[i][pAmmo]);

            mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s, `pOFFDMG` = '%i', `pOFFMute` = '%i', `pEmailStat` = '%d', `pPinStat` = '%d', `pPinCode` = '%d', `pSPChange` = '%d', `pHospLS` = '%i', `pHospSF` = '%i', `pSiteSkin` = '%i'",
			QUERY,PI[i][pOFFDMG],PI[i][pOFFMute],PI[i][pEmailStat],PI[i][pPinStat],PI[i][pPinCode],PI[i][pSPChange],PI[i][pHospLS],PI[i][pHospSF],PI[i][pSiteSkin]);
   
			format(QUERY, sizeof(QUERY), "%s, `pQuest` = '%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i'",
			QUERY,PI[i][pQuest][0],PI[i][pQuest][1],PI[i][pQuest][2],PI[i][pQuest][3],PI[i][pQuest][4],PI[i][pQuest][5],PI[i][pQuest][6],PI[i][pQuest][7],PI[i][pQuest][8],PI[i][pQuest][9],PI[i][pQuest][10],PI[i][pQuest][11],PI[i][pQuest][12],PI[i][pQuest][13],PI[i][pQuest][14],PI[i][pQuest][15],PI[i][pQuest][16]);
			
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "%s WHERE `Name` = '%s'", QUERY, Name(i));
			mysql_function_query(DATABASE, QUERY, false, "", "");
			DeletePVar(i, "player_save");
		}
	case 1:// Общаки, склады
		{
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_FRAKBANK"` SET ");
			format(temp,sizeof(temp),"`FracBank[0][fSfnews]`= '%i',",FracBank[0][fSfnews]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fKazna]`= '%i',",FracBank[0][fKazna]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`healpric`= '%i',",healpric), 									strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`addd[0]`= '%i',",addd[0]), 										strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`addd[1]`= '%i',",addd[1]), 										strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`addd[2]`= '%i',",addd[2]), 										strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fBMoney]`= '%i',",FracBank[0][fBMoney]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fBDrugs]`= '%i',",FracBank[0][fBDrugs]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fBMats]`= '%i',",FracBank[0][fBMats]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fVMoney]`= '%i',",FracBank[0][fVMoney]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fVDrugs]`= '%i',",FracBank[0][fVDrugs]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fVMats]`= '%i',",FracBank[0][fVMats]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fGMoney]`= '%i',",FracBank[0][fGMoney]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fGDrugs]`= '%i',",FracBank[0][fGDrugs]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fGMats]`= '%i',",FracBank[0][fGMats]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fCMoney]`= '%i',",FracBank[0][fCMoney]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fCDrugs]`= '%i',",FracBank[0][fCDrugs]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fCMats]`= '%i',",FracBank[0][fCMats]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fRMoney]`= '%i',",FracBank[0][fRMoney]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fRDrugs]`= '%i',",FracBank[0][fRDrugs]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fRMats]`= '%i',",FracBank[0][fRMats]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][farmmatbi]`= '%i',",FracBank[0][farmmatbi]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][farmmatsf]`= '%i',",FracBank[0][farmmatsf]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][flspdmatbi]`= '%i',",FracBank[0][flspdmatbi]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][ffbimats]`= '%i',",FracBank[0][ffbimats]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fyakuzamats]`= '%i',",FracBank[0][fyakuzamats]), 	strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][frmmats]`= '%i',",FracBank[0][frmmats]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][flcnmats]`= '%i',",FracBank[0][flcnmats]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fsfpdmats]`= '%i',",FracBank[0][fsfpdmats]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][flvpdmats]`= '%i',",FracBank[0][flvpdmats]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fMMoney]`= '%i',",FracBank[0][fMMoney]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fMDrugs]`= '%i',",FracBank[0][fMDrugs]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fMMats]`= '%i',",FracBank[0][fMMats]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fzmatbi]`= '%i',",FracBank[0][fzmatbi]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fzsklad]`= '%i',",FracBank[0][fzsklad]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fsklballas]`= '%i',",FracBank[0][fsklballas]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fsklvagos]`= '%i',",FracBank[0][fsklvagos]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fsklgrove]`= '%i',",FracBank[0][fsklgrove]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fsklaztec]`= '%i',",FracBank[0][fsklaztec]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fsklrifa]`= '%i',",FracBank[0][fsklrifa]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fsklbiker]`= '%i',",FracBank[0][fsklbiker]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fskllcn]`= '%i',",FracBank[0][fskllcn]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fsklyak]`= '%i',",FracBank[0][fsklyak]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fsklrus]`= '%i',",FracBank[0][fsklrus]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][pCena]`= '%i',",FracBank[0][pCena]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][pKol]`= '%i',",FracBank[0][pKol]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][pSuma]`= '%i',",FracBank[0][pSuma]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][pCena2]`= '%i',",FracBank[0][pCena2]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][pKol2]`= '%i',",FracBank[0][pKol2]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][pSuma2]`= '%i',",FracBank[0][pSuma2]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][nLcn]`= '%i',",FracBank[0][nLcn]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][nYakuza]`= '%i',",FracBank[0][nYakuza]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][nRm]`= '%i',",FracBank[0][nRm]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][lspdbenz]`= '%i',",FracBank[0][lspdbenz]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][fbibenz]`= '%i',",FracBank[0][fbibenz]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][vmfbenz]`= '%i',",FracBank[0][vmfbenz]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][medsfbenz]`= '%i',",FracBank[0][medsfbenz]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][lcnbenz]`= '%i',",FracBank[0][lcnbenz]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][yakuzabenz]`= '%i',",FracBank[0][yakuzabenz]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][medlsbenz]`= '%i',",FracBank[0][medlsbenz]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][ballasbenz]`= '%i',",FracBank[0][ballasbenz]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][vagosbenz]`= '%i',",FracBank[0][vagosbenz]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][pmbenz]`= '%i',",FracBank[0][pmbenz]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][grovebenz]`= '%i',",FracBank[0][grovebenz]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][aztecbenz]`= '%i',",FracBank[0][aztecbenz]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][rifabenz]`= '%i',",FracBank[0][rifabenz]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][zonabenz]`= '%i',",FracBank[0][zonabenz]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][pravbenz]`= '%i',",FracBank[0][pravbenz]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][bikerbenz]`= '%i',",FracBank[0][bikerbenz]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][kassbenz]`= '%i',",FracBank[0][kassbenz]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][kassnafta]`= '%i',",FracBank[0][kassnafta]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][kassbenzce]`= '%i',",FracBank[0][kassbenzce]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][sfpdbenz]`= '%i',",FracBank[0][sfpdbenz]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][nFond]`= '%i',",FracBank[0][nFond]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][musorbak1]`= '%i',",FracBank[0][musorbak1]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][musorbak2]`= '%i',",FracBank[0][musorbak2]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][musorbak3]`= '%i',",FracBank[0][musorbak3]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][musorbak4]`= '%i',",FracBank[0][musorbak4]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][musorbak5]`= '%i',",FracBank[0][musorbak5]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][musorbak6]`= '%i',",FracBank[0][musorbak6]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`FracBank[0][musorbak7]`= '%i'",FracBank[0][musorbak7]), 			strcat(QUERY,temp,sizeof(QUERY));
			mysql_function_query(DATABASE, QUERY, true, "", "");
		}
	case 2:
		{
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_BIZZ"` SET ");
			format(temp,sizeof(temp),"`bOwned`= '%i',",BizzInfo[i][bOwned]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bOwner`= '%s',",BizzInfo[i][bOwner]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bMessage`= '%s',",BizzInfo[i][bMessage]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bEntranceX`= '%f',",BizzInfo[i][bEntranceX]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bEntranceY`= '%f',",BizzInfo[i][bEntranceY]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bEntranceZ`= '%f',",BizzInfo[i][bEntranceZ]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bExitX`= '%f',",BizzInfo[i][bExitX]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bExitY`= '%f',",BizzInfo[i][bExitY]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bExitZ`= '%f',",BizzInfo[i][bExitZ]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bBuyPrice`= '%i',",BizzInfo[i][bBuyPrice]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bTill`= '%i',",BizzInfo[i][bTill]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bLocked`= '%i',",BizzInfo[i][bLocked]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bInterior`= '%i',",BizzInfo[i][bInterior]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bProducts`= '%i',",BizzInfo[i][bProducts]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`b2Till`= '%i',",BizzInfo[i][b2Till]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bTovar1`= '%i',",BizzInfo[i][bTovar1]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bTovar2`= '%i',",BizzInfo[i][bTovar2]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bTovar3`= '%i',",BizzInfo[i][bTovar3]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bTovar4`= '%i',",BizzInfo[i][bTovar4]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bTovar5`= '%i',",BizzInfo[i][bTovar5]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bTovar6`= '%i',",BizzInfo[i][bTovar6]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bTovar7`= '%i',",BizzInfo[i][bTovar7]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bTovar8`= '%i',",BizzInfo[i][bTovar8]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bTovar9`= '%i',",BizzInfo[i][bTovar9]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bTovar10`= '%i',",BizzInfo[i][bTovar10]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bTovar11`= '%i',",BizzInfo[i][bTovar11]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bTovar12`= '%i',",BizzInfo[i][bTovar12]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bTovar13`= '%i',",BizzInfo[i][bTovar13]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bTovar14`= '%i',",BizzInfo[i][bTovar14]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bBarX`= '%f',",BizzInfo[i][bBarX]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bBarY`= '%f',",BizzInfo[i][bBarY]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bBarZ`= '%f',",BizzInfo[i][bBarZ]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bMafia`= '%i',",BizzInfo[i][bMafia]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bType`= '%i',",BizzInfo[i][bType]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bLockTime`= '%i',",BizzInfo[i][bLockTime]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`pBizLic`= '%i',",BizzInfo[i][pBizLic]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bVirtualWorld`= '%i',",BizzInfo[i][bVirtualWorld]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`bEntranceCost`= '%i',",BizzInfo[i][bEntranceCost]), 		strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Krupie1`= '%s',",BizzInfo[i][caKrupie1]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Krupie2`= '%s',",BizzInfo[i][caKrupie2]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Krupie3`= '%s',",BizzInfo[i][caKrupie3]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Krupie4`= '%s',",BizzInfo[i][caKrupie4]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`Krupie5`= '%s'",BizzInfo[i][caKrupie5]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp)," WHERE bID = '%i'",BizzInfo[i][bID]),						strcat(QUERY,temp,sizeof(QUERY));
			mysql_function_query(DATABASE, QUERY, true, "", "");
		}
	case 3: // Дома
		{
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_HOUSE"` SET ");
			format(temp,sizeof(temp),"`hEntrancex`= '%f',",House[i][hEntrancex]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hEntrancey`= '%f',",House[i][hEntrancey]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hEntrancez`= '%f',",House[i][hEntrancez]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hExitx`= '%f',",House[i][hExitx]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hExity`= '%f',",House[i][hExity]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hExitz`= '%f',",House[i][hExitz]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hCarx`= '%f',",House[i][hCarx]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hCary`= '%f',",House[i][hCary]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hCarz`= '%f',",House[i][hCarz]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hCarc`= '%f',",House[i][hCarc]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hOwner`= '%s',",House[i][hOwner]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hValue`= '%i',",House[i][hValue]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hHel`= '%i',",House[i][hHel]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hInt`= '%i',",House[i][hInt]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hLock`= '%i',",House[i][hLock]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hOwned`= '%i',",House[i][hOwned]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hTakings`= '%i',",House[i][hTakings]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hKlass`= '%i',",House[i][hKlass]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hGarage`= '%i',",House[i][hGarage]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hGun1`= '%i',",House[i][hGun][0]),					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hGun2`= '%i',",House[i][hGun][1]),					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hGun3`= '%i',",House[i][hGun][2]),					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hGun4`= '%i',",House[i][hGun][3]),					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hGun5`= '%i',",House[i][hGun][4]),					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hGun6`= '%i',",House[i][hGun][5]),					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hGun7`= '%i',",House[i][hGun][6]),					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hGunAmmo1`= '%i',",House[i][hGunAmmo][0]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hGunAmmo2`= '%i',",House[i][hGunAmmo][1]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hGunAmmo3`= '%i',",House[i][hGunAmmo][2]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hGunAmmo4`= '%i',",House[i][hGunAmmo][3]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hGunAmmo5`= '%i',",House[i][hGunAmmo][4]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hGunAmmo6`= '%i',",House[i][hGunAmmo][5]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hGunAmmo7`= '%i',",House[i][hGunAmmo][6]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`hNarko`= '%i'",House[i][hNarko]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"WHERE hID = '%i'",House[i][hID]),						strcat(QUERY,temp,sizeof(QUERY));
			mysql_function_query(DATABASE, QUERY, true, "", "");
		}
	case 4: // Отели
		{
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_HOTEL"` SET ");
			format(temp,sizeof(temp),"`oEntrancex`= '%f',",HotelInfo[i][oEntrancex]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`oEntrancey`= '%f',",HotelInfo[i][oEntrancey]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`oEntrancez`= '%f',",HotelInfo[i][oEntrancez]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`oExitx`= '%f',",HotelInfo[i][oExitx]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`oExity`= '%f',",HotelInfo[i][oExity]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`oExitz`= '%f',",HotelInfo[i][oExitz]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`oCarx`= '%f',",HotelInfo[i][oCarx]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`oCary`= '%f',",HotelInfo[i][oCary]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`oCarz`= '%f',",HotelInfo[i][oCarz]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`oCarc`= '%f',",HotelInfo[i][oCarc]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`oOwner`= '%s',",HotelInfo[i][oOwner]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`oValue`= '%i',",HotelInfo[i][oValue]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`oInt`= '%i',",HotelInfo[i][oInt]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`oVirt`= '%i',",HotelInfo[i][oVirt]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`oLock`= '%i',",HotelInfo[i][oLock]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`oOwned`= '%i',",HotelInfo[i][oOwned]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`oTakings`= '%i',",HotelInfo[i][oTakings]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`virtmir`= '%i'",HotelInfo[i][virtmir]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp)," WHERE oID = '%i'",HotelInfo[i][oID]),					strcat(QUERY,temp,sizeof(QUERY));
			mysql_function_query(DATABASE, QUERY, true, "", "");
		}
	case 5: // Плантации
		{
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_PLANTS"` SET ");
			format(temp,sizeof(temp),"`nX`= '%f',",NarkoInfo[i][nX]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`nY`= '%f',",NarkoInfo[i][nY]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`nZ`= '%f',",NarkoInfo[i][nZ]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`nWait`= '%i',",NarkoInfo[i][nWait]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`nZasev`= '%i',",NarkoInfo[i][nZasev]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`nSobrat`= '%i'",NarkoInfo[i][nSobrat]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp)," WHERE nID = '%i'",NarkoInfo[i][nID]),			strcat(QUERY,temp,sizeof(QUERY));
			mysql_function_query(DATABASE, QUERY, true, "", "");
		}
	case 6: // Автомастерские
		{
			mysql_format(DATABASE, QUERY, sizeof(QUERY), "UPDATE `"TABLE_MAST"` SET ");
			format(temp,sizeof(temp),"`vOwned`= '%i',", AvtoMInfo[i][vOwned]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`vOwner`= '%s',",AvtoMInfo[i][vOwner]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`vMessage`= '%s',",AvtoMInfo[i][vMessage]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`vEntranceX`= '%f',",AvtoMInfo[i][vEntranceX]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`vEntranceY`= '%f',",AvtoMInfo[i][vEntranceY]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`vEntranceZ`= '%f',",AvtoMInfo[i][vEntranceZ]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`vBuyPrice`= '%i',",AvtoMInfo[i][vBuyPrice]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`vTill`= '%i',",AvtoMInfo[i][vTill]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`vLocked`= '%i',",AvtoMInfo[i][vLocked]), 				strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`vProducts`= '%i',",AvtoMInfo[i][vProducts]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`v2Till`= '%i',",AvtoMInfo[i][v2Till]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`vLockTime`= '%i',",AvtoMInfo[i][vLockTime]), 			strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`vBarX`= '%f',",AvtoMInfo[i][vBarX]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`vBarY`= '%f',",AvtoMInfo[i][vBarY]), 					strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp),"`vBarZ`= '%f'",AvtoMInfo[i][vBarZ]), 						strcat(QUERY,temp,sizeof(QUERY));
			format(temp,sizeof(temp)," WHERE vID = '%i'",AvtoMInfo[i][vID]),					strcat(QUERY,temp,sizeof(QUERY));
			mysql_function_query(DATABASE, QUERY, true, "", "");
		}
	}
	return true;
}

publics: LoadGZ()
{
	new rows, fields, temp[64],i=0;
	cache_get_data (rows, fields);
	if(rows)
	{
		for(new g; g < rows ; g++)
		{
			cache_get_row(g, 1, temp),GZInfo[g][gFrakVlad] = strval(temp);
			cache_get_row(g, 2, temp), GZInfo[g][gCoords][0] = floatstr(temp);
			cache_get_row(g, 3, temp), GZInfo[g][gCoords][1] = floatstr(temp);
			cache_get_row(g, 4, temp), GZInfo[g][gCoords][2] = floatstr(temp);
			cache_get_row(g, 5, temp), GZInfo[g][gCoords][3] = floatstr(temp);
			i++;
			GZInfo[g][gID] = GangZoneCreate(GZInfo[g][gCoords][0],GZInfo[g][gCoords][1],GZInfo[g][gCoords][2],GZInfo[g][gCoords][3]);
		}
		printf("[Loading ...] Connected gangzone (%d)", i);
	}
	else printf("[Loading ...] Error loading gangzone");
	return true;
}

stock SaveGZ(i)
{
	mysql_format(DATABASE, YCMDstr, 128, "UPDATE "TABLE_GANGZONE" SET `gFrakVlad`= '%d' WHERE `gID` = '%d'",GZInfo[i][gFrakVlad],i);
	mysql_function_query(DATABASE, YCMDstr, false, "", "");
	return true;
}

stock BroadCast(color,const string[])
{
	SCMToAll(color, string);
	return true;
}
stock OOCOff(color,const string[])
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(!gOoc[i]) SCM(i, color, string);
	}
}
stock OOCNews(color,const string[])
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(!gNews[i] || PI[i][pMember] == 9 && gNews[i] == 1) SCM(i, color, string);
	}
}
publics: SendTeamMessage(team, color, string[])
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(IsAArm(i) || IsAMedic(i) || IsAMayor(i) || IsACop(i) || PI[i][pMember] == 9 || PI[i][pMember] == 24 || GetPVarInt(i,"Atisper") == 24) SCM(i, color, string);
	}
}
publics: SendPoliceMessage(pol, color, string[])
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(PI[i][pLeader] == 1 || PI[i][pMember] == 1 || PI[i][pLeader] == 2 || PI[i][pMember] == 2 || PI[i][pLeader] == 10 || PI[i][pMember] == 10 || PI[i][pLeader] == 21 || PI[i][pMember] == 21) SCM(i, color, string);
	}
}
stock SendRadioMessage(member, color, string[])
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(PI[i][pMember] == member || PI[i][pLeader] == member) SCM(i, color, string);
	}
}
stock family_message (family, color, text[])
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(player_family[i] == family) SCM(i, color, text);
	}
}
publics: ABroadCast(color,const string[],level)
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if (PI[i][pBSA] >= level) SCM(i, color, string);
	}
}
stock SendJobMessage(job, color, string[])
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(PI[i][pJob] == job) SCM(i, color, string);
	}
}
stock SendFamilyMessage(family, color, string[])
{
	foreach(Player, i)
	{
		if(FormaFrac[i] != 0)
		{
			if(PI[i][pMember] == family || GetPVarInt(i,"Atisper") == family)
			{
				SCM(i, color, string);
			}
		}
		else if(GetPVarInt(i,"Atisper") == family)
		{
			SCM(i, color, string);
		}
	}
}
publics: SendGangMessage(family, color, string[])
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(PI[i][pMember] == 12 || PI[i][pMember] == 13 || PI[i][pMember] == 15 || PI[i][pMember] == 17 || PI[i][pMember] == 18)
		{
			if(!gFam[i]) SCM(i, color, string);
		}
	}
}
publics: SendMafiaMessage(family, color, string[])
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(PI[i][pMember] == 5 && !gFam[i] || PI[i][pMember] == 6 && !gFam[i] || PI[i][pMember] == 14 && !gFam[i] ) SCM(i, color, string);
	}
}
publics: SendCopsMessage(family, color, string[])
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(PI[i][pMember] == 1 && !gFam[i] || PI[i][pMember] == 2 && !gFam[i] || PI[i][pMember] == 10 && !gFam[i] || PI[i][pMember] == 21 && !gFam[i] ) SCM(i, color, string);
	}
}
stock SendAdminMessage(color, string[])
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(PI[i][pBSA] >= 1) SCM(i, color, string); 
	}
}
//--------------------------------- Команды ------------------------------------
CMD:quest(playerid, params[])
{
    new String[740];
    format(String, sizeof(String), "1. %s - {00BFFF}Документы\n\
									2. %s - {00BFFF}Покупатель\n\
									3. %s - {00BFFF}Водитель\n\
									4. %s - {00BFFF}Моряк\n\
									5. %s - {00BFFF}Лётчик\n\
									6. %s - {00BFFF}Стрелок\n\
									7. %s - {00BFFF}Оружейник\n\
									8. %s - {00BFFF}Личный т/с\n\
									9. %s - {00BFFF}Военный билет\n\
									10. %s - {00BFFF}Мед. Карта\n\
									11. %s - {00BFFF}Бизнесмен\n\
									12. %s - {00BFFF}Глава\n\
									13. %s - {00BFFF}Семья\n\
									14. %s - {00BFFF}Дом\n\
									15. %s - {00BFFF}Свадьба\n\
									16. %s - {00BFFF}Законник\n\
									17. %s - {00BFFF}Боец",
	(PI[playerid][pQuest][0] == 0) ? ("{FF0000}Не выполнено") : ("{00FF00}Выполнено"),
	(PI[playerid][pQuest][1] == 0) ? ("{FF0000}Не выполнено") : ("{00FF00}Выполнено"),
	(PI[playerid][pQuest][2] == 0) ? ("{FF0000}Не выполнено") : ("{00FF00}Выполнено"),
	(PI[playerid][pQuest][3] == 0) ? ("{FF0000}Не выполнено") : ("{00FF00}Выполнено"),
	(PI[playerid][pQuest][4] == 0) ? ("{FF0000}Не выполнено") : ("{00FF00}Выполнено"),
	(PI[playerid][pQuest][5] == 0) ? ("{FF0000}Не выполнено") : ("{00FF00}Выполнено"),
	(PI[playerid][pQuest][6] == 0) ? ("{FF0000}Не выполнено") : ("{00FF00}Выполнено"),
	(PI[playerid][pQuest][7] == 0) ? ("{FF0000}Не выполнено") : ("{00FF00}Выполнено"),
	(PI[playerid][pQuest][8] == 0) ? ("{FF0000}Не выполнено") : ("{00FF00}Выполнено"),
	(PI[playerid][pQuest][9] == 0) ? ("{FF0000}Не выполнено") : ("{00FF00}Выполнено"),
	(PI[playerid][pQuest][10] == 0) ? ("{FF0000}Не выполнено") : ("{00FF00}Выполнено"),
	(PI[playerid][pQuest][11] == 0) ? ("{FF0000}Не выполнено") : ("{00FF00}Выполнено"),
	(PI[playerid][pQuest][12] == 0) ? ("{FF0000}Не выполнено") : ("{00FF00}Выполнено"),
	(PI[playerid][pQuest][13] == 0) ? ("{FF0000}Не выполнено") : ("{00FF00}Выполнено"),
	(PI[playerid][pQuest][14] == 0) ? ("{FF0000}Не выполнено") : ("{00FF00}Выполнено"),
	(PI[playerid][pQuest][15] == 0) ? ("{FF0000}Не выполнено") : ("{00FF00}Выполнено"),
	(PI[playerid][pQuest][16] == 0) ? ("{FF0000}Не выполнено") : ("{00FF00}Выполнено"));
	SPDEx(playerid, 722, 2, "Достижения", String, "Выбрать", "Закрыть");
	return true;
}
CMD:pm(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countingpm") > gettime()) return SCM(playerid, 0xFF0000FF, "Не Флуди.");
	if(PI[playerid][pBSA] < 1 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "us[256]",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /pm [id] [текст]");
	if(!IsPlayerConnected(params[0])) return true;
	format(YCMDstr, 256, "Ответ от %s: %s",Name(playerid),params[1]);
	SCM(params[0], COLOR_YELLOW, YCMDstr);
	PI[playerid][pReport] += 1;
	format(YCMDstr, 256, "{FFFFFF}[PM] От {FFA500}%s[%d] {FFFFFF}к {F0E68C}%s[%d]: {FFFFFF}%s",Name(playerid),playerid, Name(params[0]),params[0],params[1]);
	SendAdminMessage(COLOR_BLUE,YCMDstr);
	PlayerPlaySound(params[0], 40405, 0.0, 0.0, 0.0);
	SetPVarInt(playerid,"Countingpm",gettime() + 1);
	return true;
}
CMD:report(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pMuted] == 1) return SCM(playerid, 0xFF6347AA, "У Вас бан чата");
	if(GetPVarInt(playerid, "AntiReport") != 0) return SCM(playerid,COLOR_GREY,"Писать в репорт можно раз в 30 секунд");
	if(sscanf(params, "s[128]", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /report [вопрос/жалоба]");
	format(YCMDstr,128, "Жалоба от %s[%d]: %s", Name(playerid), playerid, (params[0]));
	SCM(playerid, COLOR_YELLOW, YCMDstr);
	format(YCMDstr,128, "{FF0000}< Репорт > %s[%d]: {ffffff}%s", Name(playerid), playerid, (params[0]));
	SendAdminMessage(0x00a86bAA,YCMDstr);
	SetPVarInt(playerid,"AntiReport",30);
	return true;
}
CMD:tpcor(playerid,params[])
{
	if(PI[playerid][pBSA] < 12 || GetPVarInt(playerid,"dostup") == 0) return true;
	new Float:id1,Float:id2,Float:id3;
	if(sscanf(params, "fff", id1,id2,id3)) return SendClientMessage(playerid,COLOR_GREY,"/tpcor [X точка] [Y точка] [Z точка]");
	SetPlayerPos(playerid,id1,id2, id3);
	return 1;
}
CMD:tpmp(playerid, params[])
{
    if(PI[playerid][pLogin] == 0) return true;
    if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_GREY, "Доступно только c 2+ лвл");
    if(PI[playerid][pJailed] != 0) return SCM(playerid, COLOR_GREY, "Вы в тюрьме/ДеМоргане!");
    if(PlayerCuffed[playerid] != 0) return SCM(playerid, COLOR_GREY, "Вы в наручниках!");
    if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, "С транспортным средством нельзя!");
    if(FL[playerid][PlayerTied] > 0) return SCM(playerid, COLOR_GREY, "Вы связаны!");
    if(Teleport == 0) return SCM(playerid, COLOR_GREY, "Функция отключена администрацией!");
    else SPDEx(playerid, 720, 0, "{d2be5a}Телепорт", "Вы уверены, что хотите попасть в место проведения мероприятия?", "Да", "Нет");
    return true;
}
CMD:awarehouse(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 5 || GetPVarInt(playerid,"dostup") == 0) return true;
	new string[370];
	format(string,370,"Склад К.А.С.С: %d/500к\nДетали К.А.С.С: %d/500к\n\nFBI: %d/50к\nLSPD: %d/100к\nSFPD: %d/50к\nLVPD: %d/50к\nВМФ: %d/300к\nСВ: %d/300к\n\nLCN: %d/50к\nYakuza: %d/50к\nPM: %d/50к\n\nBallas: %d/90к\nVagos: %d/90к\nGrove: %d/90к\nAztecas: %d/90к\nRifa: %d/90к\nБайкеры: %d/50к",
	FracBank[0][fzmatbi], FracBank[0][fzsklad],FracBank[0][ffbimats],FracBank[0][flspdmatbi],FracBank[0][fsfpdmats],FracBank[0][flvpdmats],FracBank[0][farmmatsf],FracBank[0][farmmatbi],FracBank[0][flcnmats],FracBank[0][fyakuzamats],FracBank[0][frmmats],FracBank[0][fBMats],FracBank[0][fVMats],FracBank[0][fGMats],FracBank[0][fCMats],FracBank[0][fRMats],FracBank[0][fMMats]);
	SPDEx(playerid,3844,0,"Склады фракций",string,"X","");
	return true;
}
CMD:setname(playerid, params[])
{
    new stext[MAX_PLAYER_NAME], strstre[11], year, month,day;
    if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 6 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_GREY, "Введите: /setname [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, "Игрок не найден!");
	if(!GetPVarInt(params[0], "ChangeName")) return SCM(playerid, COLOR_GREY, "Этот игрок не отправлял заявку на смену ника!");
	GetPVarString(params[0], "ChangeNameVariant", stext, 32);
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(strfind(Name(i),stext,true) != -1)
		{
			SCM(playerid, COLOR_GREY, "Ошибка! Такой ник сейчас на сервере!");
			DeletePVar(params[0], "ChangeNameVariant");
			DeletePVar(params[0], "ChangeName");
			return true;
		}
 	}
	format(YCMDstr, sizeof(YCMDstr), "[Смена ника]: %s теперь известен как %s",Name(params[0]),stext);
	SCMToAll(COLOR_LIGHTRED,YCMDstr);
	getdate(year, month, day);
	format(strstre, 11, "%d/%d/%d",day,month,year);
	mysql_format(DATABASE,YCMDstr, 175, "INSERT INTO `Setname` (`Old Name`, `New Name`, `Admin Name`, `Date`) VALUES ('%s', '%s', '%s', '%s')",Name(params[0]), stext, Name(playerid), strstre);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	format(YCMDstr,90,"{FF0000}Пропишите Ваш новый ник {00FF00}%s{FF0000} в окне SA:MP",stext);
	SCM(params[0],COLOR_ORANGE,YCMDstr);
	format(YCMDstr, sizeof(YCMDstr), "UPDATE `accounts` SET `Name` = '%s' WHERE `Name` = '%s'", stext, PI[params[0]][pName]);
    mysql_function_query(DATABASE, YCMDstr, false, "", "");
	SetPlayerName(params[0], stext), GetPlayerName(params[0], PI[params[0]][pName], 32), DeletePVar(params[0], "ChangeNameVariant"), DeletePVar(params[0], "ChangeName");
	new housekey = PI[params[0]][pPhousekey];
	if(housekey != 999)
	{
		strmid(House[housekey][hOwner], stext, 0, strlen(stext), 255);
		SaveMySQL(3,housekey);
	}
	new bizkey = PI[params[0]][pPbiskey];
	if(bizkey != 255)
	{
		strmid(BizzInfo[bizkey][bOwner], stext, 0, strlen(stext), 255);
		UpdateBizInfo(bizkey);
		SaveMySQL(2,bizkey);
	}
	new hotel = PI[params[0]][pPhotelkey];
	if(hotel != 999)
	{
		strmid(HotelInfo[hotel][oOwner], stext, 0, strlen(stext), 255);
		SaveMySQL(4,hotel);
	}
	new mast = PI[params[0]][pPviskey];
	if(mast != 255)
	{
		strmid(AvtoMInfo[mast][vOwner], stext, 0, strlen(stext), 255);
		SaveMySQL(6,mast);
	}
	Kick(params[0]);
	return true;
}
CMD:unarmour(playerid)
{
	if(PI[playerid][pLogin] == 0) return true;
	SCM(playerid,COLOR_GREY,"Вы сняли бронежилет.");
	SetPlayerArmour(playerid, 0);
	return true;
}
CMD:agl(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 7 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "dd", params[0], params[1]))
	{
		SCM(playerid, COLOR_GREY, "Введите: /agl [id] [значение]");
		SCM(playerid, COLOR_GREY, "- [1] Водительские права");
		SCM(playerid, COLOR_GREY, "- [2] Лицензия пилота");
		SCM(playerid, COLOR_GREY, "- [3] Лицензия на водный транспорт");
		SCM(playerid, COLOR_GREY, "- [4] Лицензия на оружие");
		SCM(playerid, COLOR_GREY, "- [5] Лицензия на бизнес");
		return true;
	}
	if(params[1] < 1 || params[1] > 5) return SCM(playerid, COLOR_GRAD1, "Нельзя меньше 1 и больше 5");
	switch(params[1])
	{
	case 1:
		{
			PI[params[0]][pCarLic] = 1;
			SCM(playerid, COLOR_WHITE, "Вы выдали игроку водительские права.");
			SCM(params[0], COLOR_WHITE, "Администратор выдал Вам водительские права.");
		}
	case 2:
		{
			PI[params[0]][pFlyLic] = 1;
			SCM(playerid, COLOR_WHITE, "Вы выдали игроку лицензию пилота.");
			SCM(params[0], COLOR_WHITE, "Администратор выдал Вам лицензию пилота.");
		}
	case 3:
		{
			PI[params[0]][pBoatLic] = 1;
			SCM(playerid, COLOR_WHITE, "Вы выдали игроку лицензию на водный транспорт.");
			SCM(params[0], COLOR_WHITE, "Администратор выдал Вам лицензию на водный транспорт.");
		}
	case 4:
		{
			PI[params[0]][pGunLic] = 1;
			SCM(playerid, COLOR_WHITE, "Вы выдали игроку лицензию на оружие.");
			SCM(params[0], COLOR_WHITE, "Администратор выдал Вам лицензию на оружие.");
		}
	case 5:
		{
			BizzInfo[PI[params[0]][pPbiskey]][pBizLic] = 1;
			SCM(playerid, COLOR_WHITE, "Вы выдали игроку лицензию на бизнес.");
			SCM(params[0], COLOR_WHITE, "Администратор выдал Вам лицензию на бизнес.");
		}
	}
	return true;
}
CMD:object(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 10 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "dd", params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /object [слот] [id объекта]");
	if(SlotObject[params[0]] != 0) return 1;
	new Float:x1,Float:y1,Float:z1;
	GetPlayerPos(playerid,x1,y1,z1);
	SlotObject[params[0]] = CreateObject(params[1],x1,y1,z1,0.00,0.00,0.00);
	return 1;
}
CMD:destroyobject(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 10 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /destroyobject [слот]");
	if(SlotObject[params[0]] != 0)
	{
		DestroyObject(SlotObject[params[0]]);
		SlotObject[params[0]] = 0;
	}
	return 1;
}
CMD:editobject(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 10 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "d", params[0])) { SelectObject(playerid); } else
	{
		if(SlotObject[params[0]] != 0) EditObject(playerid,SlotObject[params[0]]);
	}
	return 1;
}
CMD:drop(playerid, params[])
{
	if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
	{
		SPDEx(playerid,1426,2, "Выбросить:","- Наркотики\n- Материалы\n- Оружие", "Выбор", "Выход");
	}
	return true;
}
CMD:givefloor(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /givefloor [id]");
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	if(PI[params[0]][pBSA] >= 1) return SCM(playerid, COLOR_RED, "Игрок далеко от Вас.");
	if(PI[params[0]][pLevel] < 2) return SCM(playerid, COLOR_GRAD1, "Игрок должен быть 2+ LvL");
	if(PI[playerid][pFlr] != 1) return SCM(playerid, COLOR_WHITE, "У Вас нет цветов");
	{
		if(!IsPlayerConnected(params[0])) return true;
		if(params[0] == INVALID_PLAYER_ID) return true;
		PI[playerid][pFlr] = 0;
		_GiveGun(params[0], 14, 1);
		format(YCMDstr, 80, "%s подарил букет цветов %s",Name(playerid),Name(params[0]));
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return true;
}
CMD:givepassport(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /givepassport [id]");
	if(PI[playerid][pMember] != 22 && PI[playerid][pRank] != 3) return SCM(playerid,COLOR_GREY,"Функция недоступна!");
	if(PI[params[0]][pPassport] != 0) return SCM(playerid, COLOR_WHITE, "У него уже есть паспорт");
	if(PlayerToPoint(20.0, playerid, 938.8784,-22.6030,1503.8600))
	{
		if(!IsPlayerConnected(params[0])) return true;
		if(params[0] == INVALID_PLAYER_ID) return true;
		PI[params[0]][pPassport] = 1;
		PI[playerid][pCash] += 200;
		PI[params[0]][pCash] -= 100;
		GameTextForPlayer(playerid, "~r~+$200", 5000, 1);
		format(YCMDstr, 128,"Секретарь %s выдал Вам паспорт.",Name(playerid));
		SCM(params[0],COLOR_GREEN, YCMDstr);
		format(YCMDstr, 128,"Вы выдали паспорт %s",Name(params[0]));
		SCM(playerid,COLOR_GREEN, YCMDstr);
	}
	return true;
}
CMD:givelicgun(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /givelicgun [id]");
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, "Вы не полицейский!");
	if(PI[params[0]][pGunLic] != 0) return SCM(playerid, COLOR_WHITE, "У него уже есть лицензия на оружие");
	if(PI[params[0]][pCash] < 5000) return SCM(playerid,COLOR_GREY,"У него нет налички размером $5.000");
	if(PlayerToPoint(50.0, playerid, -1652.2794,696.9648,1008.7549))
	{
		if(!IsPlayerConnected(params[0])) return true;
		if(params[0] == INVALID_PLAYER_ID) return true;
		PI[params[0]][pGunLic] = 1;
		PI[playerid][pCash] += 5000;
		PI[params[0]][pCash] -= 5000;
		GameTextForPlayer(playerid, "~r~+$5000", 5000, 1);
		format(YCMDstr, 128,"Офицер %s выдал Вам лицензию на оружие.",Name(playerid));
		SCM(params[0],COLOR_GREEN, YCMDstr);
		format(YCMDstr, 128,"Вы выдали %s лицензию на оружие.",Name(params[0]));
		SCM(playerid,COLOR_GREEN, YCMDstr);
	}
	return true;
}
CMD:bpanel(playerid,params[])
{
	if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
	{
		new bmenu[500], bouse = PI[playerid][pPbiskey];
		if(PI[playerid][pLogin] == 0) return true;
		if(PI[playerid][pPbiskey] == 255) return SCM(playerid, COLOR_GREY, "Вы не владеете бизнесом!");
		if(!PlayerToPoint(5, playerid,BizzInfo[bouse][bEntranceX], BizzInfo[bouse][bEntranceY], BizzInfo[bouse][bEntranceZ])) return SCM(playerid, COLOR_GREY, "Вы не у своего бизнеса!");
		for(new i = 1; i <= TotalBizz; i++)
		{
			if(PlayerToPoint(10.0, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
			{
				format(bmenu, 500, "- Информация о бизнесе\n- Открыть бизнес\n- Установка цены\n- Установить цену за вход [Клубы/Бары/Казино]\n{FF6347}- Продать бизнес в Гос.\n{9ACD32}- Снять деньги с бизнеса\n- Заказать товары\n- Заказать топливо\n- Экспресс заказ товаров\n- Экспресс заказ топлива");
				SPDEx(playerid, 1746, 2, "Панель управления бизнесом", bmenu, "Принять", "Отмена");
			}
		}
	}
	return true;
}
CMD:mpanel(playerid,params[])
{
	if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
	{
	    new vouse = PI[playerid][pPviskey];
		if(PI[playerid][pLogin] == 0) return true;
		if(PI[playerid][pPviskey] == 255) return SCM(playerid, COLOR_GREY, "Вы не владеете Автомастерской!");
		if(!PlayerToPoint(5, playerid,AvtoMInfo[vouse][vEntranceX], AvtoMInfo[vouse][vEntranceY], AvtoMInfo[vouse][vEntranceZ])) return SCM(playerid, COLOR_GREY, "Вы должны быть возле своей автомастерской!");
		format(YCMDstr, 256, "[1] Информация об Автомастерской\n[2] Открыть Автомастерскую\n[3] Продать Автомастерскую\n[4] Снять заработанные деньги\n{9ACD32}[5] Заказать запчасти");
		SPDEx(playerid, 2746, 2, "Панель управления Автомастерской", YCMDstr, "Принять", "Отмена");
	}
	return true;
}
CMD:smoke(playerid,params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(IsSmoking[playerid] != 0) return SCM(playerid,COLOR_GREY,"Вы уже курите");
	if(PI[playerid][pLighter] == 0) return SCM(playerid,COLOR_GREY,"Нет зажигалки");
	if(PI[playerid][pCigarettes] == 0) return SCM(playerid,COLOR_GREY,"Нет сигарет");
	if(PlayerCuffed[playerid] != 0) return SCM(playerid, COLOR_GREY, "Вы в наручниках и не можете курить");
	new randsmoke = random(2)+1;
	if(randsmoke == 1)
	{
		PI[playerid][pCigarettes] -= 1;
		format(YCMDstr, 45, "%s прикурил(а) сигарету.",Name(playerid));
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		IsSmoking[playerid] = 60;
		SCM(playerid, COLOR_WHITE, "Используйте /dropcigarette чтобы выбросить сигарету.");
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
		return 1;
	}
	else format(YCMDstr, 50, "%s пытается прикурить сигарету",Name(playerid)), ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return true;
}
CMD:dropcigarette(playerid,params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(IsSmoking[playerid] == 0) return SCM(playerid,COLOR_GREY,"Вы не курите");
	IsSmoking[playerid] = 0;
	format(YCMDstr, 52, "%s выбросил(а) сигарету на землю", Name(playerid));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	return true;
}
CMD:ciga(playerid,params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	format(YCMDstr, 46, "%s открыл(а) пачку сигарет.", Name(playerid));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	format(YCMDstr, 28, "У Вас в пачке %d сигарет.", PI[playerid][pCigarettes]);
	SCM(playerid,-1,YCMDstr);
	return true;
}
CMD:saveall(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		SaveMySQL(0, i);
	}
	SaveMySQL(1);
	for(new i = 1; i <= TotalBizz; i++) SaveMySQL(2,i);
	for(new i = 1; i <= TotalHouse; i++) SaveMySQL(3,i);
	for(new i = 1; i <= TotalHotel; i++) SaveMySQL(4,i);
	for(new i = 1; i <= NARKO; i++) SaveMySQL(5,i);
	for(new i = 1; i <= TotalMast; i++) SaveMySQL(6,i);
	SCM(playerid, COLOR_GREY, "Все данные сохранены!");
	return true;
}
CMD:servergmx(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	OOCOff(COLOR_REDD, "Внимание! Происходит рестарт сервера. Введите /q для выхода из сервера.");
	mysql_format(DATABASE, YCMDstr, 35, "UPDATE `accounts` SET pLogin = '0'");
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	SendRconCommand("gmx");
	return true;
}
CMD:trailer(playerid)
{
    if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pMember] != 1 && PI[playerid][pMember] != 10 && PI[playerid][pMember] != 21 && PI[playerid][pJob] != 2) return SCM(playerid,COLOR_GREY,"Вам не доступна данная функция.");
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, "Вам нужно быть в автомобиле!");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SCM(playerid, COLOR_GREY, "Вам нужно быть в эвакуаторе!");
	if(GetPlayerState(playerid) != 2)return SCM(playerid, COLOR_GREY, "Вам нужно быть за рулём!");
	new Float:pX,Float:pY,Float:pZ;
	GetPlayerPos(playerid,pX,pY,pZ);
	new Float:vX,Float:vY,Float:vZ,bool:Found = false, vid = 0;
	while((vid < MAX_VEHICLES) && (!Found))
	{
		vid++;
		GetVehiclePos(vid,vX,vY,vZ);
		if((floatabs(pX-vX) < 7.0) && (floatabs(pY-vY) < 7.0) && (floatabs(pZ-vZ) < 7.0)&&(vid != GetPlayerVehicleID(playerid)))
		{
			Found = true;
			if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
			else AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
		}
	}
	if(!Found) SCM(playerid,0xFFFF00AA,"Рядом нет автомобиля");
	return 1;
}
CMD:untrailer(playerid)
{
    if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pMember] != 1 || PI[playerid][pMember] != 10 || PI[playerid][pMember] != 21 || PI[playerid][pJob] != 2) return SCM(playerid,COLOR_GREY,"Вам не доступна данная функция.");
	new vehplid=GetPlayerVehicleID(playerid);
	DetachTrailerFromVehicle(vehplid);
	SCM(playerid, 0x6ab1ffaa, "Вы отцепили автомобиль");
	return 1;
}
CMD:grab(playerid, params[])
{
	if(!IsABankomat(playerid)) return true;
	if(!IsAmbike(playerid)) return SCM(playerid,COLOR_GREY,"Только для байкеров!");
	if(GetPVarInt(playerid,"Countinggrab") > gettime() ) return SCM(playerid, 0xFF0000FF, "Грабить можно раз в час.");
	if(PI[playerid][pWantedLevel] >= 6) return SCM(playerid,COLOR_REDD, "У Вас уже 6 Звезд Грабить нельзя!");
	new money = 1000 + random(4999);
	PI[playerid][pWantedLevel] += 1;
	SetPlayerWantedLevel(playerid, PI[playerid][pWantedLevel] += 1);
	new babki = FracBank[0][fMMoney] + money;
	FracBank[0][fMMoney] = babki;
	format(YCMDstr, 128,"Вы ограбили банкомат на сумму %d\nВаш уровень розыска %d",money,PI[playerid][pWantedLevel]);
	SCM(playerid,COLOR_GREEN, YCMDstr);
	format(YCMDstr, 128, "Байкер %s ограбил банкомат на сумму %d ,деньги зачислены в общак", Name(playerid),money);
	SendFamilyMessage(23,COLOR_YELLOW2, YCMDstr);
	SetPVarInt(playerid,"Countinggrab",gettime() + 3600);
	return true;
}
CMD:tune(playerid, params[])
{
	for(new v = 1; v <= TotalMast; v++)
	{
		if(GetPVarInt(playerid,"Countingtune") > gettime()) return SCM(playerid, 0xFF0000FF, "Не Флуди.");
		if(PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
		{
			if(AvtoMInfo[v][vProducts] <= 0) return SCM(playerid,COLOR_GREY,"В Автомастерской нет запчастей"), AvtoMInfo[v][vProducts] = 0;
			if(GetPlayerState(playerid) != 2) return SCM(playerid, 0xAFAFAFAA, "Вы не за рулем транспорта!");
			ShowSTODialog(playerid);
		}
	}
	SetPVarInt(playerid,"Countingtune",gettime() + 10);
	return true;
}
CMD:hunger(playerid, params[])
{
	if(IsPlayerConnected(playerid))
	{
		format(YCMDstr, 26,"Ваша сытость: %d",PI[playerid][pGolod]);
		SCM(playerid,0xFF9900AA,YCMDstr);
	}
	return true;
}
CMD:connect(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 1 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(GetPVarInt(playerid,"OnOffChat") == 0)
	{
		for(new l; l < sizeof(stroki); l++) { TextDrawShowForPlayer(playerid, stroki[l]); }
		SetPVarInt(playerid, "OnOffChat", 1);
		SCM(playerid,0xAFAFAFAA, "Коннект лист включен. Введите /connect чтобы выключить");
	}
	else
	{
		for(new l; l < sizeof(stroki); l++) { TextDrawHideForPlayer(playerid, stroki[l]); }
		SetPVarInt(playerid, "OnOffChat", 0);
		SCM(playerid,0xAFAFAFAA, "Коннект лист выключен");
	}
	return 1;
}
CMD:gstats(playerid, params[])
{
	if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
	{
		if(!IsAGang(playerid)) return SCM(playerid,COLOR_GREY, "Вы не бандит");
		for(new i = 0; i < sizeof(VladGzone); i++)  VladGzone[i] = 0;
		for(new i = 0; i < sizeof(GZInfo); i++)
		{
			switch(GZInfo[i][gFrakVlad])
			{
			case 12: VladGzone[0]++;
			case 13: VladGzone[1]++;
			case 15: VladGzone[2]++;
			case 17: VladGzone[3]++;
			case 18: VladGzone[4]++;
			}
		}
		switch(PI[playerid][pMember])
		{
		case 12:format(YCMDstr, 256, "{FFFFFF}Территории под контролем: %i\nВ час банда зарабатывает: {37F222}$%i\n\nВ банке банды: {37F222}$%i",VladGzone[0],VladGzone[0]*800,FracBank[0][fBMoney]);
		case 13:format(YCMDstr, 256, "{FFFFFF}Территории под контролем: %i\nВ час банда зарабатывает: {37F222}$%i\n\nВ банке банды: {37F222}$%i",VladGzone[1],VladGzone[1]*800,FracBank[0][fVMoney]);
		case 15:format(YCMDstr, 256, "{FFFFFF}Территории под контролем: %i\nВ час банда зарабатывает: {37F222}$%i\n\nВ банке банды: {37F222}$%i",VladGzone[2],VladGzone[2]*800,FracBank[0][fGMoney]);
		case 17:format(YCMDstr, 256, "{FFFFFF}Территории под контролем: %i\nВ час банда зарабатывает: {37F222}$%i\n\nВ банке банды: {37F222}$%i",VladGzone[3],VladGzone[3]*800,FracBank[0][fCMoney]);
		case 18:format(YCMDstr, 256, "{FFFFFF}Территории под контролем: %i\nВ час банда зарабатывает: {37F222}$%i\n\nВ банке банды: {37F222}$%i",VladGzone[4],VladGzone[4]*800,FracBank[0][fRMoney]);
		}
		SPDEx(playerid,2234,0, "Статистика банды",YCMDstr,"Скрыть","");
		return true;
	}
}
CMD:narkoput(playerid,params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PlayerToPoint(3.0,playerid,291.3910,304.7809,999.1484))
	{
		if(narkot[playerid] == 0) return SCM(playerid,COLOR_GREY,"У тебя в руках ничего нет");
		FracBank[0][pKol] += narkot[playerid];
		if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid, 3);
		ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
		mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pKol]` = '%i' WHERE 1",narkot[playerid]);
		mysql_function_query(DATABASE,YCMDstr,false,"","");
		narkot[playerid] = 0;
		SaveMySQL(1);
	}
	else if(PlayerToPoint(3.0,playerid,1938.4286,165.4783,37.2813))
	{
		if(narkot[playerid] == 0) return SCM(playerid,COLOR_GREY,"У тебя в руках ничего нет");
		FracBank[0][pKol2] += narkot[playerid];
		if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid, 3);
		ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
		mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pKol2]` = '%i' WHERE 1",narkot[playerid]);
		mysql_function_query(DATABASE,YCMDstr,false,"","");
		narkot[playerid] = 0;
		SaveMySQL(1);
	}
	return true;
}
CMD:narkocena(playerid,params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /narkocena [цена за грамм]");
	if(params[0] < 5 || params[0] > 99) return SCM(playerid, COLOR_GRAD1, "Нельзя меньше $5 и больше $100.");
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && PI[playerid][pMember] == GZInfo[i][gFrakVlad])
		{
			if(PI[playerid][pMember] == 12 && PI[playerid][pRank] == 5)//Lider Ballas
			{
				FracBank[0][pCena] = params[0];
				SCM(playerid, COLOR_BLUE, "Стоимость установлена");
				mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pCena]` = '%i' WHERE 1",params[0]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				SaveMySQL(1);
			}
			else if(PI[playerid][pMember] == 13 && PI[playerid][pRank] == 5)//Lider Vagos
			{
				FracBank[0][pCena] = params[0];
				SCM(playerid, COLOR_BLUE, "Стоимость установлена");
				mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pCena]` = '%i' WHERE 1",params[0]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				SaveMySQL(1);
			}
			else if(PI[playerid][pMember] == 15 && PI[playerid][pRank] == 5)//Lider Grove
			{
				FracBank[0][pCena] = params[0];
				SCM(playerid, COLOR_BLUE, "Стоимость установлена");
				mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pCena]` = '%i' WHERE 1",params[0]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				SaveMySQL(1);
			}
			else if(PI[playerid][pMember] == 17 && PI[playerid][pRank] == 5)//Lider Aztec
			{
				FracBank[0][pCena] = params[0];
				SCM(playerid, COLOR_BLUE, "Стоимость установлена");
				mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pCena]` = '%i' WHERE 1",params[0]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				SaveMySQL(1);
			}
			else if(PI[playerid][pMember] == 18 && PI[playerid][pRank] == 5)//Lider Rifa
			{
				FracBank[0][pCena] = params[0];
				SCM(playerid, COLOR_BLUE, "Стоимость установлена");
				mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pCena]` = '%i' WHERE 1",params[0]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				SaveMySQL(1);
			}
		}
	}
	return true;
}
CMD:drugscena(playerid,params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /drugscena [цена за грамм]");
	if(params[0] < 5 || params[0] > 99) return SCM(playerid, COLOR_GRAD1, "Нельзя меньше $5 и больше $100.");
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && PI[playerid][pMember] == GZInfo[i][gFrakVlad])
		{
			if(PI[playerid][pMember] == 12 && PI[playerid][pRank] == 5)//Lider Ballas
			{
				FracBank[0][pCena2] = params[0];
				SCM(playerid, COLOR_BLUE, "Стоимость установлена");
				mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pCena2]` = '%i' WHERE 1",params[0]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				SaveMySQL(1);
			}
			else if(PI[playerid][pMember] == 13 && PI[playerid][pRank] == 5)//Lider Vagos
			{
				FracBank[0][pCena2] = params[0];
				SCM(playerid, COLOR_BLUE, "Стоимость установлена");
				mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pCena2]` = '%i' WHERE 1",params[0]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				SaveMySQL(1);
			}
			else if(PI[playerid][pMember] == 15 && PI[playerid][pRank] == 5)//Lider Grove
			{
				FracBank[0][pCena2] = params[0];
				SCM(playerid, COLOR_BLUE, "Стоимость установлена");
				mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pCena2]` = '%i' WHERE 1",params[0]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				SaveMySQL(1);
			}
			else if(PI[playerid][pMember] == 17 && PI[playerid][pRank] == 5)//Lider Aztec
			{
				FracBank[0][pCena2] = params[0];
				SCM(playerid, COLOR_BLUE, "Стоимость установлена");
				mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pCena2]` = '%i' WHERE 1",params[0]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				SaveMySQL(1);
			}
			else if(PI[playerid][pMember] == 18 && PI[playerid][pRank] == 5)//Lider Rifa
			{
				FracBank[0][pCena2] = params[0];
				SCM(playerid, COLOR_BLUE, "Стоимость установлена");
				mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pCena2]` = '%i' WHERE 1",params[0]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				SaveMySQL(1);
			}
		}
	}
	return true;
}
CMD:buydrugs(playerid,params[])
{
	if(!IsAGang(playerid) && !IsAmbike(playerid) && !IsAMafia(playerid)) return SCM(playerid,COLOR_GREY, "Найдите барыгу чтобы купить наркотики. (Барыги: банды, байкеры)");
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /buydrugs[количество]");
	if(PlayerToPoint(3.0, playerid, -111.4491,-10.7364,3.1094))
	{
		if(PI[playerid][pLevel] < 3) return SCM(playerid,COLOR_GRAD1, "Вы должны быть 3+ игрового уровня.");
		if(FracBank[0][pKol] < 1) return SCM(playerid,COLOR_GRAD1, "В наркопритоне закончился товар");
		if(PI[playerid][pDrugs]+params[0] >= 150) return SCM(playerid, COLOR_GREY, "Нельзя купить больше");
		if(params[0] > 150 || params[0] < 1) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1 или больше 150!");
		if(PI[playerid][pCash] < params[0]*20) return SCM(playerid, COLOR_GREY, "У Вас нет столько денег!");
		FracBank[0][pKol] -= params[0];
		PI[playerid][pCash] -= params[0]*20;
		PI[playerid][pDrugs] += params[0];
		FracBank[0][pSuma] += params[0]*20;
		format(YCMDstr, 156, "Вы купили %d грамм наркотиков за $%d (У Вас есть %d грамм)",params[0],params[0]*20, PI[playerid][pDrugs]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
		mysql_format(DATABASE, YCMDstr, 256, "UPDATE `frakbank` SET `FracBank[0][pKol]` = '%i', `FracBank[0][pSuma]` = '%i' WHERE 1",FracBank[0][pKol],FracBank[0][pSuma]);
		mysql_function_query(DATABASE,YCMDstr,false,"","");
		SaveMySQL(1);
	}
	else if(PlayerToPoint(3.0, playerid, 1945.6587,163.7341,37.2585))
	{
		if(PI[playerid][pLevel] < 3) return SCM(playerid,COLOR_GRAD1, "Вы должны быть 3+ игрового уровня.");
		if(FracBank[0][pKol2] < 1) return SCM(playerid,COLOR_GRAD1, "В наркопритоне закончился товар");
		if(PI[playerid][pDrugs]+params[0] >= 150) return SCM(playerid, COLOR_GREY, "Нельзя купить больше");
		if(params[0] > 150 || params[0] < 1) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1 или больше 150!");
		if(PI[playerid][pCash] < params[0]*20) return SCM(playerid, COLOR_GREY, "У Вас нет столько денег!");
		FracBank[0][pKol2] -= params[0];
		PI[playerid][pCash] -= params[0]*20;
		PI[playerid][pDrugs] += params[0];
		FracBank[0][pSuma2] += params[0]*20;
		format(YCMDstr, 156, "Вы купили %d грамм наркотиков за $%d (У вас есть %d грамм)",params[0],params[0]*20, PI[playerid][pDrugs]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
		mysql_format(DATABASE, YCMDstr, 256, "UPDATE `frakbank` SET `FracBank[0][pKol2]` = '%i', `FracBank[0][pSuma2]` = '%i' WHERE 1",FracBank[0][pKol2],FracBank[0][pSuma2]);
		mysql_function_query(DATABASE,YCMDstr,false,"","");
		SaveMySQL(1);
	}
	else
	{
		SCM(playerid, COLOR_GRAD1, "Вы не в притоне!");
		return true;
	}
	return true;
}
CMD:seit(playerid,params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && PI[playerid][pMember] == GZInfo[i][gFrakVlad])
		{
			SCM(playerid,COLOR_YELLOW,"Выберите место, куда хотите засеять марихуану");
			SPDEx(playerid,4425,2,"Наркотики","Место №1\nМесто №2\nМесто №3\nМесто №4\nМесто №5\nМесто №6\nМесто №7\nМесто №8\nМесто №9\nМесто №10\nМесто №11\nМесто №12\nМесто №13\nМесто №14\nМесто №15\nМесто №16\nМесто №17\nМесто №18\nМесто №19\nМесто №20\nМесто №21\nМесто №22\nМесто №23\nМесто №24","Далее","Отмена");
		}
	}
	return true;
}
CMD:posev(playerid,params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && PI[playerid][pMember] == GZInfo[i][gFrakVlad])
		{
			SCM(playerid,COLOR_YELLOW,"Выберите место, куда хотите засеять марихуану");
			SPDEx(playerid,4426,2,"Наркотики","Место №1\nМесто №2\nМесто №3\nМесто №4\nМесто №5\nМесто №6\nМесто №7\nМесто №8\nМесто №9\nМесто №10\nМесто №11\nМесто №12\nМесто №13\nМесто №14\nМесто №15\nМесто №16\nМесто №17\nМесто №18\nМесто №19\nМесто №20\nМесто №21\nМесто №22\nМесто №23\nМесто №24","Далее","Отмена");
		}
	}
	return true;
}
CMD:oborot(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /oborot [количество]");
	if(params[0] < 1) { SCM(playerid, COLOR_GREY, "Неправильный количество денег!"); return true; }
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && PI[playerid][pMember] == GZInfo[i][gFrakVlad])
		{
			if(PI[playerid][pMember] == 12 && PI[playerid][pRank] == 5)//Lider Ballas
			{
				if(FracBank[0][pSuma] <= 0) { SCM(playerid, COLOR_GREY, "Нет столько денег"); return true; }
				if(FracBank[0][pSuma] < params[0]) { SCM(playerid, COLOR_GREY, "В банке банды нет столько денег"); return true; }
				FracBank[0][fBMoney] += params[0];
				FracBank[0][pSuma] -= params[0];
				format(YCMDstr, 60, "Вы сняли оборот с наркопритона в банк банды: $%d", params[0]);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pSuma]` = '%i' WHERE 1",FracBank[0][pSuma]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				SaveMySQL(1);
			}
			else if(PI[playerid][pMember] == 13 && PI[playerid][pRank] == 5)//Lider Vagos
			{
				if(FracBank[0][pSuma] <= 0) { SCM(playerid, COLOR_GREY, "В банке банды нет денег"); return true; }
				if(FracBank[0][pSuma] < params[0]) { SCM(playerid, COLOR_GREY, "В банке банды нет столько денег"); return true; }
				FracBank[0][fVMoney] += params[0];
				FracBank[0][pSuma] -= params[0];
				format(YCMDstr, 60, "Вы сняли оборот с наркопритона в банк банды: $%d", params[0]);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pSuma]` = '%i' WHERE 1",FracBank[0][pSuma]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				SaveMySQL(1);
			}
			else if(PI[playerid][pMember] == 15 && PI[playerid][pRank] == 5)//Lider Grove
			{
				if(FracBank[0][pSuma] <= 0) { SCM(playerid, COLOR_GREY, "В банке банды нет денег"); return true; }
				if(FracBank[0][pSuma] < params[0]) { SCM(playerid, COLOR_GREY, "В банке банды нет столько денег"); return true; }
				FracBank[0][fGMoney] += params[0];
				FracBank[0][pSuma] -= params[0];
				format(YCMDstr, 60, "Вы сняли оборот с наркопритона в банк банды: $%d", params[0]);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pSuma]` = '%i' WHERE 1",FracBank[0][pSuma]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				SaveMySQL(1);
			}
			else if(PI[playerid][pMember] == 17 && PI[playerid][pRank] == 5)//Lider Aztec
			{
				if(FracBank[0][pSuma] <= 0) { SCM(playerid, COLOR_GREY, "В банке банды нет денег"); return true; }
				if(FracBank[0][pSuma] < params[0]) { SCM(playerid, COLOR_GREY, "В банке банды нет столько денег"); return true; }
				FracBank[0][fCMoney] += params[0];
				FracBank[0][pSuma] -= params[0];
				format(YCMDstr, 60, "Вы сняли оборот с наркопритона в банк банды: $%d", params[0]);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pSuma]` = '%i' WHERE 1",FracBank[0][pSuma]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				SaveMySQL(1);
			}
			else if(PI[playerid][pMember] == 18 && PI[playerid][pRank] == 5)//Lider Rifa
			{
				if(FracBank[0][pSuma] <= 0) { SCM(playerid, COLOR_GREY, "В банке банды нет денег"); return true; }
				if(FracBank[0][pSuma] < params[0]) { SCM(playerid, COLOR_GREY, "В банке банды нет столько денег"); return true; }
				FracBank[0][fRMoney] += params[0];
				FracBank[0][pSuma] -= params[0];
				format(YCMDstr, 60, "Вы сняли оборот с наркопритона в банк банды: $%d", params[0]);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pSuma]` = '%i' WHERE 1",FracBank[0][pSuma]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				SaveMySQL(1);
			}
		}
	}
	return true;
}
CMD:plantmoney(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /plantmoney [количество]");
	if(params[0] < 1) { SCM(playerid, COLOR_GREY, "Неправильный количество денег!"); return true; }
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && PI[playerid][pMember] == GZInfo[i][gFrakVlad])
		{
			if(PI[playerid][pMember] == 12 && PI[playerid][pRank] == 5)//Lider Ballas
			{
				if(FracBank[0][pSuma2] <= 0) { SCM(playerid, COLOR_GREY, "Нет столько денег"); return true; }
				if(FracBank[0][pSuma2] < params[0]) { SCM(playerid, COLOR_GREY, "В банке банды нет столько денег"); return true; }
				FracBank[0][fBMoney] += params[0];
				FracBank[0][pSuma2] -= params[0];
				format(YCMDstr, 60, "Вы сняли оборот с наркопритона в банк банды: $%d", params[0]);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pSuma2]` = '%i' WHERE 1",FracBank[0][pSuma2]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				SaveMySQL(1);
			}
			else if(PI[playerid][pMember] == 13 && PI[playerid][pRank] == 5)//Lider Vagos
			{
				if(FracBank[0][pSuma2] <= 0) { SCM(playerid, COLOR_GREY, "В банке банды нет денег"); return true; }
				if(FracBank[0][pSuma2] < params[0]) { SCM(playerid, COLOR_GREY, "В банке банды нет столько денег"); return true; }
				FracBank[0][fVMoney] += params[0];
				FracBank[0][pSuma2] -= params[0];
				format(YCMDstr, 60, "Вы сняли оборот с наркопритона в банк банды: $%d", params[0]);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pSuma2]` = '%i' WHERE 1",FracBank[0][pSuma2]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				SaveMySQL(1);
			}
			else if(PI[playerid][pMember] == 15 && PI[playerid][pRank] == 5)//Lider Grove
			{
				if(FracBank[0][pSuma2] <= 0) { SCM(playerid, COLOR_GREY, "В банке банды нет денег"); return true; }
				if(FracBank[0][pSuma2] < params[0]) { SCM(playerid, COLOR_GREY, "В банке банды нет столько денег"); return true; }
				FracBank[0][fGMoney] += params[0];
				FracBank[0][pSuma2] -= params[0];
				format(YCMDstr, 60, "Вы сняли оборот с наркопритона в банк банды: $%d", params[0]);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pSuma2]` = '%i' WHERE 1",FracBank[0][pSuma2]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				SaveMySQL(1);
			}
			else if(PI[playerid][pMember] == 17 && PI[playerid][pRank] == 5)//Lider Aztec
			{
				if(FracBank[0][pSuma2] <= 0) { SCM(playerid, COLOR_GREY, "В банке банды нет денег"); return true; }
				if(FracBank[0][pSuma2] < params[0]) { SCM(playerid, COLOR_GREY, "В банке банды нет столько денег"); return true; }
				FracBank[0][fCMoney] += params[0];
				FracBank[0][pSuma2] -= params[0];
				format(YCMDstr, 60, "Вы сняли оборот с наркопритона в банк банды: $%d", params[0]);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pSuma2]` = '%i' WHERE 1",FracBank[0][pSuma2]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				SaveMySQL(1);
			}
			else if(PI[playerid][pMember] == 18 && PI[playerid][pRank] == 5)//Lider Rifa
			{
				if(FracBank[0][pSuma2] <= 0) { SCM(playerid, COLOR_GREY, "В банке банды нет денег"); return true; }
				if(FracBank[0][pSuma2] < params[0]) { SCM(playerid, COLOR_GREY, "В банке банды нет столько денег"); return true; }
				FracBank[0][fRMoney] += params[0];
				FracBank[0][pSuma2] -= params[0];
				format(YCMDstr, 60, "Вы сняли оборот с наркопритона в банк банды: $%d", params[0]);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				mysql_format(DATABASE, YCMDstr, 128, "UPDATE `frakbank` SET `FracBank[0][pSuma2]` = '%i' WHERE 1",FracBank[0][pSuma2]);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				SaveMySQL(1);
			}
		}
	}
	return true;
}
CMD:achat(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 1 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /achat [id фракции] (0 - выключить прослушку, 24 - департамент)");
	if(params[0] > 24 || params[0] < 0) return SCM(playerid, COLOR_GREY, "Нельзя меньше 0 или больше 24");
	SetPVarInt(playerid,"Atisper",params[0]);
	if(params[0] == 0) SCM(playerid, COLOR_WHITE, "Прослушка отключена");
	else SCM(playerid, COLOR_WHITE, "Прослушка включена, для отключения введите /achat 0");
	return 1;
}
CMD:delshield(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	RemovePlayerAttachedObject(playerid, 1);
	return 1;
}
CMD:delmask(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	RemovePlayerAttachedObject(playerid, 3);
	return 1;
}
CMD:hbject(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 7 || GetPVarInt(playerid,"dostup") == 0) return true;
	new giveplayerids=-1,slot=-1,objectid=-1,bone=-1,Float:oX,Float:oY,Float:oZ,Float:rX,Float:rY,Float:rZ,Float:sX,Float:sY,Float:sZ;
	if(sscanf(params, "udddfffffffff",giveplayerids,slot,objectid,bone,oX,oY,oZ,rX,rY,rZ,sX,sY,sZ)) return SCM(playerid,COLOR_RED,"Введите: /hbject [id] [слот] [id объекта] [bone] [oX][oY][oZ] [rX][rY][rZ] [sX][sY][sZ]");
	if(IsPlayerAttachedObjectSlotUsed(giveplayerids, slot)) { RemovePlayerAttachedObject(giveplayerids, slot); }
	SetPlayerAttachedObject(giveplayerids, slot, objectid, bone,oX,oY,oZ,rX,rY,rZ,sX,sY,sZ);
	return 1;
}
CMD:hdel(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 7 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid,COLOR_RED,"Введите: /hdel [id]");
	for(new i = 0; i < 10; i++) { RemovePlayerAttachedObject(params[0], i); }
	return 1;
}
CMD:hobjectedit(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 7 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid,COLOR_RED,"Введите: /hobjectedit [id]");
	if(!IsPlayerAttachedObjectSlotUsed(playerid, params[0])) return SCM(playerid,COLOR_GREY,"Этот слот не занят.");
	EditAttachedObject(playerid, params[0]); return 1;
}
CMD:fm(playerid, params[])
{
	if(PI[playerid][pRadio] == 0) return SCM(playerid, COLOR_WHITE, "У вас нет плеера.Купите в магазине 24/7");
	if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
	{
		SPDEx(playerid, 1100, 2, "Выберите Радио волну:","[1] Радио Монте-Карло\n[2] Радио Шансон\n[3] Ретро FM\n[4] Europa Plus\n[5] Выключить радио", "Ок", "Выход");
		return true;
	}
}
CMD:taxiskill(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	format(YCMDstr, 256, "Ваш уровень таксиста %i. До следующего осталось %i/%i exp",PI[playerid][ptaxilvl], PI[playerid][ptaxiexp], PI[playerid][ptaxilvl]*8);
	SCM(playerid, 0x6495EDFF, YCMDstr);
	return true;
}
CMD:radio(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "d", params[0]))
	{
		SCM(playerid, COLOR_WHITE, "Введите: /radio [значение]");
		SCM(playerid, COLOR_WHITE, " [0] Выключить");
		SCM(playerid, COLOR_WHITE, " [1] SA News");
		return true;
	}
	switch(params[0])
	{
	case 1:
		{
			gNews[playerid] = 0;
			SCM(playerid, COLOR_WHITE, "Волна переключена на SA News");
		}
	case 0:
		{
			gNews[playerid] = 1;
			SCM(playerid, COLOR_WHITE, "Вы выключили радио");
		}
	}
	return true;
}
CMD:operation(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_GRAD2, "Введите: /operation [id]");
	if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Человек не найден");
	if(PI[playerid][pMember] != 2)return SCM(playerid, COLOR_GREY, "Вы не агент FBI");
	if(PI[playerid][pRank] < 8) return SCM(playerid,COLOR_ISPOLZUY,"Вы должны быть 8+ ранга!");
	if(PI[playerid][pMember] != PI[params[0]][pMember]) return SCM(playerid, COLOR_GREY, "Данный игрок не в Вашей фракции!");
	if(FL[params[0]][Operation] == true) return SCM(playerid, COLOR_GREY,"Этот агент уже на задании!");
	{
		SCM(playerid, COLOR_LIGHTBLUE,"Вы разрешили этому агенту проводить спец-операцию!");
		SCM(params[0], COLOR_LIGHTBLUE,"Вам разрешили провести спец-операцию!");
		SCM(params[0], COLOR_LIGHTRED,"Переоденьтесь в гражданку, а потом отправляйтесь на спец-операцию!");
		SCM(params[0], COLOR_YELLOW,"Вам выдана снайперская винтовка, выследите преступника с помощю /find");
		_GiveGun(params[0], 34, 100);
		FL[params[0]][Operation] = true;
	}
	format(YCMDstr, 256, "Агент %s разрешил проводить спец-операцию %s",Name(playerid),Name(params[0]));
	SendFamilyMessage(2, COLOR_GREY, YCMDstr);
	return 1;
}
CMD:givenewskeys(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /givenewskeys [id]");
	if(PI[playerid][pMember] != 9) return SCM(playerid, COLOR_WHITE, "Вы не сотрудник SAN");
	{
		if(!IsPlayerConnected(params[0])) return true;
		if(params[0] == INVALID_PLAYER_ID) return true;
		PI[params[0]][pNkeys] = 1;
		format(YCMDstr, 80, "Сотрудник News %s выдал пропуск в офис %s",Name(playerid),Name(params[0]));
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return true;
}
CMD:givepravkeys(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /givepravkeys [id]");
	if(PI[playerid][pMember] != 22) return SCM(playerid, COLOR_WHITE, "Вы не сотрудник Правительства");
	{
		if(!IsPlayerConnected(params[0])) return true;
		if(params[0] == INVALID_PLAYER_ID) return true;
		PI[params[0]][pPkeys] = 1;
		format(YCMDstr, 80, "Сотрудник правительства %s выдал пропуск %s",Name(playerid),Name(params[0]));
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return true;
}
CMD:flist(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pJob] != 8) return SCM(playerid, COLOR_GREY, "Вы не развозчик топлива!");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_GREY, "Вы должны находиться за рулем транспорта!");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 403) return SCM(playerid, COLOR_GREY, "Вы должны находится в фуре!");
	new trailcarid = GetVehicleTrailer(GetPlayerVehicleID(playerid));
	if(GetVehicleModel(trailcarid) != 584)
	{
		SCM(playerid, COLOR_GREEN, "У Вас нет прицепа, езжайте на завод");
		return true;
	}
	if(GetPVarInt(playerid, "FuelID") > 0) return SCM(playerid, COLOR_GREY, "Вы уже выполняете заказ!");
	if(!PlayerToPoint(50.0, playerid, -1012.1151,-667.0731,32.0078)) return SCM(playerid, COLOR_GREY, "Вы должны быть на заводе!");
	FuelList(playerid);
	return 1;
}
CMD:plist(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pJob] != 7) return SCM(playerid, COLOR_GREY, "Вы не развозчик товаров!");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_GREY, "Вы должны находиться за рулем транспорта!");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 440) return SCM(playerid, COLOR_GREY, "Вы должны находится в фуре!");
	if(GetPVarInt(playerid, "ProductID") > 0) return SCM(playerid, COLOR_GREY, "Вы уже выполняете заказ!");
	if(!PlayerToPoint(50.0, playerid, -503.4918,-492.9669,25.5234)) return SCM(playerid, COLOR_GREY, "Вы должны быть на складе!");
	ProductList(playerid);
	return true;
}
CMD:news(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new newcar = GetPlayerVehicleID(playerid);
	if(sscanf(params, "s[128]", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /news [текст]");
	if(PI[playerid][pMuted] == 1) return SCM(playerid, 0xFF6347AA, "У Вас бан чата");
	switch(PI[playerid][pMember])
	{
	case 9:
		{
			if(newcar >= cnncar[0] && newcar <= cnncar[1] || PlayerToPoint(30.0,playerid,2321.1382,-95.4250,1056.5680)) { } else { SCM(playerid, COLOR_GRAD1, "Вы не в репортёрской машине / вертолёте / офисе!"); return true;}
			format(YCMDstr, 128, "< SA News > %s: %s",Name(playerid), params[0]);
			OOCNews(COLOR_GREEN,YCMDstr);
			gNews[playerid] = 0;
		}
	}
	return true;
}
CMD:symbolcost(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pMember] == 22 && PI[playerid][pRank] == 5) return SPDEx(playerid,31,1, "Введите цену за 1 символ:", "Введите сумму", "Готово", "Отмена");
	return true;
}
ALT:npanel:n;
CMD:npanel(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new model = GetVehicleModel(GetPlayerVehicleID(playerid));
	if(model != 582 && model != 488 && !PlayerToPoint(30.0,playerid,2321.1382,-95.4250,1056.5680)) return SCM(playerid, COLOR_GRAD1, "Вы не в репортёрской машине / вертолёте / офисе!");
	if(PI[playerid][pMember] == 9) return SPDEx(playerid, 2223, 2, "[ NEWS MENU ]", "1. Прямой эфир\n2. Выйти из прямого эфира\n3. Начать принимать звонки / смс [Тел. 11555]\n4. Завершить принимать звонки / смс\n5. Установить цену за звонки и смс\n6. Объявления", "Enter", "Cancel");
	return true;
}
ALT:live:l;
CMD:live(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pMuted] == 1) return SCM(playerid, 0xFF6347AA, "У Вас бан чата!");
	if(PI[playerid][pMember] != 9) return SCM(playerid, 0xFF6347AA, "Вы не состоите в SAN!");
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /live [id]");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Вы не можете брать интервью у себя!");
	if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid,COLOR_GREY,"Вы должны находиться рядом друг с другом");
	if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "[Ошибка] Человек не найден!");
	new newcar = GetPlayerVehicleID(playerid);
    if(newcar >= cnncar[0] && newcar <= cnncar[1] || PlayerToPoint(30.0,playerid,2321.1382,-95.4250,1056.5680))
	{
		if(TalkingLive[playerid] != 999)
		{
			format(YCMDstr, 128, "Вы завершили прямой эфир с %s",Name(params[0]));
			SCM(playerid, 0x6495EDFF, YCMDstr);
			format(YCMDstr, 128, "Ведущий %s завершил с Вами прямой эфир.",Name(playerid));
			SCM(params[0], 0x6495EDFF, YCMDstr);
			TalkingLive[playerid] = 999;
			TalkingLive[params[0]] = 999;
			return true;
		}
		format(YCMDstr, 50, "Вы предложили %s снять интервью.",Name(params[0]));
		SCM(playerid, 0x6495EDFF, YCMDstr);
		format(YCMDstr, 53, "%s предлагает Вам снять интервью.",Name(playerid));
		SCM(params[0], 0x6495EDFF, YCMDstr);
		SCM(params[0], COLOR_WHITE, "Введите /accept live, чтобы согласиться");
		FL[params[0]][LiveOffer] = playerid;
	}
	else return SCM(playerid, COLOR_GREY, "Вы не в репортёрской машине/вертолёте/офисе!");
	return true;
}
CMD:selldrugs(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsAGang(playerid) && !IsAmbike(playerid)) return SCM(playerid,COLOR_GREY,"Вы не член бандитской группировки!");
	if(sscanf(params, "udd", params[0],params[1],params[2])) return SCM(playerid, COLOR_GRAD2, "Введите: /selldrugs [id] [кол-во] [Цена]");
	if(params[1] < 1 || params[1] > 150) { SCM(playerid, COLOR_GREY, "Вес не может быть меньше 1 и больше 150!"); return true; }
	if(params[2] < 1 || params[2] > 5000) { SCM(playerid, COLOR_GREY, "Цена не может быть меньше $1 и больше $5000!"); return true; }
	if(params[1] > PI[playerid][pDrugs]) { SCM(playerid, COLOR_GREY, "У вас нет столько наркотиков!"); return true; }
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid,COLOR_GREY,"Вы должны находиться рядом друг с другом");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Вы не можете продать себе наркотики!");
	format(YCMDstr, 75, "Вы предложили %s купить %d грамм наркоты за $%d",Name(params[0]),params[1],params[2]);
	SCM(playerid, 0x6495EDFF, YCMDstr);
	format(YCMDstr, 115, "%s предлагает Вам купить %d грам наркоты за $%d. ((Введите /accept drugs для покупки ))",Name(playerid),params[1],params[2]);
	SCM(params[0], 0x6495EDFF, YCMDstr);
	FL[params[0]][DrugOffer] = playerid;
	FL[params[0]][DrugPrice] = params[2];
	FL[params[0]][DrugGram] = params[1];
	return true;
}
CMD:sellmats(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countingmats") > gettime() ) return SCM(playerid, 0xFF0000FF, "Команду можно использовать раз в 30 секунд.");
	if(!IsAmbike(playerid)) return SCM(playerid,COLOR_GREY,"Вы не байкер!");
	if(sscanf(params, "udd", params[0],params[1],params[2])) return SCM(playerid, COLOR_GRAD2, "Введите: /sellmats [id] [кол-во] [Цена]");
	if(params[1] < 1 || params[1] > 300) { SCM(playerid, COLOR_GREY, "Количество не меньше 1 и не больше 300!"); return true; }
	if(params[2] < 1 || params[2] > 5000) { SCM(playerid, COLOR_GREY, "Цена не может быть меньше $1 и больше $5000!"); return true; }
	if(params[1] > PI[playerid][pMats]) { SCM(playerid, COLOR_GREY, "У вас нет столько материалов!"); return true; }
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid,COLOR_GREY,"Вы должны находиться рядом друг с другом");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Вы не можете продать себе материалы!");
	format(YCMDstr, 72, "Вы предложили %s купить %d материалов за $%d",Name(params[0]),params[1],params[2]);
	SCM(playerid, 0x6495EDFF, YCMDstr);
	format(YCMDstr, 112, "%s предлагает Вам купить %d материалов за $%d. ((Введите /accept mats для покупки ))",Name(playerid),params[1],params[2]);
	SCM(params[0], 0x6495EDFF, YCMDstr);
	FL[params[0]][MatsOffer] = playerid;
	FL[params[0]][MatsPrice] = params[2];
	FL[params[0]][MatsGram] = params[1];
	SetPVarInt(playerid,"Countingmats",gettime() + 30);
	return true;
}
CMD:quitjob(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	PI[playerid][pJob] = 0;
	SCM(playerid, COLOR_GREY, "Вы уволились с работы");
	return true;
}
CMD:sellmast(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(PI[playerid][pPviskey] == 255) return SCM(playerid, COLOR_GREY, "У Вас нет Автомастерской!");
	if(strcmp(Name(playerid), AvtoMInfo[PI[playerid][pPviskey]][vOwner], true) == 0)
	{
		new vouse = PI[playerid][pPviskey];
		if(!PlayerToPoint(3, playerid,AvtoMInfo[vouse][vEntranceX], AvtoMInfo[vouse][vEntranceY], AvtoMInfo[vouse][vEntranceZ])) return SCM(playerid, COLOR_GREY, "Вы не у Автомастерской!");
		AvtoMInfo[vouse][vLocked] = 1;
		AvtoMInfo[vouse][vOwned] = 0;
		AvtoMInfo[vouse][vProducts] = 0;
		strmid(AvtoMInfo[vouse][vOwner], "The State", 0, strlen("The State"), 32);
		PI[playerid][pBank] += AvtoMInfo[vouse][vTill] / 2;
		PI[playerid][pBank] += AvtoMInfo[vouse][v2Till];
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		SCM(playerid, COLOR_YELLOW2, "Автомастерская успешно продана");
		format(YCMDstr, 70, "Прибыль с продажи Автомастерской: $%d", AvtoMInfo[vouse][v2Till]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
		format(YCMDstr, 38, "Новый счёт в банке: $%d", PI[playerid][pBank]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
		AvtoMInfo[vouse][vTill] = 0;
		AvtoMInfo[vouse][v2Till] = 0;
		PI[playerid][pPviskey] = 255;
		format(YCMDstr, 128, "%s\nПродаётся\nЦена: %d", AvtoMInfo[vouse][vMessage],AvtoMInfo[vouse][vBuyPrice]);
		Update3DTextLabelText(AvtoMInfo[vouse][vLabel], 0x38FFD7FF, YCMDstr);
		SaveMySQL(6,vouse);
		return true;
	}
	return true;
}
CMD:prodatbiz(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(PI[playerid][pPbiskey] == 255) return SCM(playerid, COLOR_GREY, "У Вас нет бизнеса!");
	if(strcmp(Name(playerid), BizzInfo[PI[playerid][pPbiskey]][bOwner], true) == 0)
	{
		new bouse = PI[playerid][pPbiskey];
		if (!PlayerToPoint(3, playerid,BizzInfo[bouse][bEntranceX], BizzInfo[bouse][bEntranceY], BizzInfo[bouse][bEntranceZ])) return SCM(playerid, COLOR_GREY, "Вы не у своего бизнеса!");
		BizzInfo[bouse][bLocked] = 1;
		BizzInfo[bouse][bOwned] = 0;
		BizzInfo[bouse][bProducts] = 0;
		strmid(BizzInfo[bouse][bOwner], "The State", 0, strlen("The State"), 32);
		PI[playerid][pBank] +=BizzInfo[bouse][bTill] / 2;
		PI[playerid][pBank] +=BizzInfo[bouse][b2Till];
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		SCM(playerid, COLOR_YELLOW2, "Бизнес успешно продан");
		format(YCMDstr, 44, "Прибыль с продажи бизнеса: $%d", BizzInfo[bouse][bTill]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
		format(YCMDstr, 38, "Новый счёт в банке: $%d", PI[playerid][pBank]);
		SCM(playerid, COLOR_WHITE, YCMDstr);
		BizzInfo[bouse][bTill] = 0;
		BizzInfo[bouse][b2Till] = 0;
		BizzInfo[bouse][pBizLic] = 0;
		PI[playerid][pPbiskey] = 255;
		format(YCMDstr, 128, "%s\nПродаётся\nЦена: %d", BizzInfo[bouse][bMessage],BizzInfo[bouse][bBuyPrice]);
		Update3DTextLabelText(BizzInfo[bouse][bLabel], 0xEAC700FF, YCMDstr);
		SaveMySQL(2,bouse);
		return true;
	}
	return true;
}
CMD:capture(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(Flood[playerid] > 0)
	{
		SetPVarInt(playerid,"Flood",GetPVarInt(playerid,"Flood")+1);
		if(GetPVarInt(playerid,"Flood") >= 5) Kick(playerid);
		SCM(playerid, 0xFFD5BBAA, "Не флуди командой!");
		return true;
	}
	Flood[playerid] = 4;
	SetPVarInt(playerid,"Flood",0);
	if(GetPlayerInterior(playerid) != 0) return SCM(playerid,-1, "Ошибка!");
	if(!IsAGang(playerid)) return SCM(playerid,-1, "Вам не доступна эта функция");
	if(PI[playerid][pRank] < 4) return SCM(playerid, COLOR_GRAD1, "Вы не Зам/Лидер банды");
	if(FrakCD[PI[playerid][pMember]] > 0) return SCM(playerid,-1,"Ваша банда уже воевала за территорию");
	if(IsCapture == 1) return SCM(playerid, COLOR_GREY, "Уже происходит захват одной из зон. Дождитесь окончания!");
	new captureghetto = 0;
	new hour, minute, second;
	gettime(hour, minute, second);
	if(hour < 9 || hour > 23 ) return SCM(playerid, 0xAFAFAFAA, "Использовать команду можно только с 9:00 до 23:00");
	if(minute < 0 || minute > 30) return SCM(playerid, 0xAFAFAFAA, "Начать войну за территорию можно только после PayDay");
	if(second < 1 || second > 55) return SCM(playerid, 0xAFAFAFAA, "Сейчас нельзя закаптить. Попробуйте еще раз.");
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && GZInfo[i][ZoneOnBattle] == 0)
		{
			new playerss = 0;
			foreach(new m : Player) if(PI[m][pMember] == GZInfo[i][gFrakVlad]) playerss++;
			if(playerss < 3) return SCM(playerid,COLOR_GREY,"Невозможно захватить данную территорию, недостаточно игроков (минимум 3)");
			if(i == 28 || i == 34 || i == 46 || i == 58 || i == 82) return SCM(playerid, COLOR_GREY, "Данная территория прилегает к респавну, захват запрещен!");
			if(PI[playerid][pMember] == GZInfo[i][gFrakVlad]) return SCM(playerid,-1,"Необходимо находится на территории которую хотите завоевать");
			if(FrakCD[GZInfo[i][gFrakVlad]] > 0) return SCM(playerid,-1,"Банда на которую Вы хотите напасть уже воевала в этом часу");
			captureghetto++;
			GZInfo[i][gTime] = 600;
			GZInfo[i][gNapad] = PI[playerid][pMember];
			format(YCMDstr, 128,"[Внимание]: %s спровоцировал войну за территорию %s",Name(playerid),GFrac(GZInfo[i][gFrakVlad]));
			SendBand(PI[playerid][pMember],GZInfo[i][gFrakVlad],COLOR_REDD,YCMDstr);
			format(YCMDstr, 128, "[A] Началась война между бандами: %s vs %s", GFrac(PI[playerid][pMember]),GFrac(GZInfo[i][gFrakVlad]));
			ABroadCast(COLOR_REDD, YCMDstr, 1);
			foreach(Player, iw) BestScoreB{iw} = 0;
			GangZoneFlashForAll(GZInfo[i][gID],GetGangColor(GZInfo[i][gNapad]));
			GZInfo[i][ZoneOnBattle] = 1;
			IsCapture = 1;
			FracCD(PI[playerid][pMember],GZInfo[i][gFrakVlad],1);
			GZInfo[i][gzTimer] = SetTimerEx("GzCheck",1000,1,"iii",i,PI[playerid][pMember],GZInfo[i][gFrakVlad]);
			break;
		}
	}
	if(captureghetto == 0) return SCM(playerid,-1,"Необходимо находится на территории которую хотите завоевать");
	return true;
}
CMD:mafiawar(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"FloodCaptureM") > gettime()) return SCM(playerid, 0xFF0000FF, "Не флуди.");
	SetPVarInt(playerid,"FloodCaptureM",gettime() + 3);
	new t; gettime(t);
	if(t < 9 || t > 23 ) return SCM(playerid, 0xAFAFAFAA, "Использовать команду можно только с 9:00 до 23:00");
	if(!IsAMafia(playerid)) return SCM(playerid,COLOR_WHITE,"Вам не доступна данная команда.");
	if(BizWarTime > gettime()) return SCM(playerid,COLOR_WHITE,"Война за бизнес уже идет.");
	if(MafiaCapture[PI[playerid][pMember]] >= gettime())
	{
		SCM(playerid,COLOR_WHITE,"Стрелы за бизнес можно проводить раз в час!");
		return SCMF(playerid,COLOR_WHITE,"Возможность захвата будет доступна через %s",TimeConverter(MafiaCapture[PI[playerid][pMember]]-gettime()));
	}
	if(PI[playerid][pMember] == 5 && PI[playerid][pRank] < 4 || PI[playerid][pMember] == 6 && PI[playerid][pRank] < 4 || PI[playerid][pMember] == 14 && PI[playerid][pRank] < 4) return SCM(playerid,COLOR_WHITE,"Вам не доступна данная команда.");
	if(sscanf(params,"i",params[0])) return SCM(playerid,COLOR_WHITE,"Введите /mafiawar [1] - Заброшенный аэропорт, [2] - Дамба, [3] - Карьер");
	if(params[0] < 1 || params[0] > 3) return SCM(playerid,COLOR_WHITE,"[1] - Заброшенный аэропорт, [2] - Дамба, [3] - Карьер");
	for(new h = 1; h <= TotalBizz; h++)
	{
		if(IsPlayerInRangeOfPoint(playerid,5,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]))
		{
			if(BizzInfo[h][bMafia] == PI[playerid][pMember]) return SCM(playerid,COLOR_GREY,"Нельзя напасть на бизнес, который уже под Вашим контролем.");
			if(MafiaCapture[BizzInfo[h][bMafia]] >= gettime()) return SCM(playerid,COLOR_WHITE, "Эта мафия уже воевала в этих часах!");
			if(BizzInfo[h][bMafia] <= 0)
			{
				BizzInfo[h][bMafia] = PI[playerid][pMember];
				SCM(playerid, COLOR_WHITE, "Бизнес взят под Ваш контроль!");
				return true;
			}
			if(!IsPlayerInBandOnline(BizzInfo[h][bMafia])) return SCM(playerid,COLOR_WHITE, "Нельзя напасть на бизнес! Мафия которая им владеет - Offline");
			new mestoz[21];
			switch(params[0])
			{
			case 1: mestoz = "Заброшенный аэропорт";
			case 2: mestoz = "Дамба";
			case 3: mestoz = "Карьер";
			}
			GangZoneFlashForAll(ZonsWar[params[0]-1],GetColor(MZInfo[bNapad]));
			format(YCMDstr,256, "Внимание! {FF0000}%s{FFD700} назначила Вам стрелу за бизнес {00FF00}%s{FFD700}. Место встречи: %s.", GetMN(PI[playerid][pMember]),BizzInfo[h][bMessage],mestoz);
			SendFamilyMessage(BizzInfo[h][bMafia],COLOR_WHITE,YCMDstr);
			format(YCMDstr,256, "{FFD700}Вы забили стрелу мафии {FF0000}%s{FFD700} за бизнес {00FF00}%s{FFD700}. Место встречи: %s.", GetMN(BizzInfo[h][bMafia]),BizzInfo[h][bMessage],mestoz);
			SendFamilyMessage(PI[playerid][pMember],COLOR_WHITE,YCMDstr);
			format(YCMDstr, 200, "[A] Началась стрела между %s и %s | Бизнес: %s | Место: %s", GetMN(PI[playerid][pMember]), GetMN(BizzInfo[h][bMafia]), BizzInfo[h][bMessage], mestoz);
			ABroadCast(0xA14599AA, YCMDstr, 1);
			BizWarTime = gettime()+600;
			MZInfo[bNapad] = PI[playerid][pMember];
			MZInfo[bFrakVlad] = BizzInfo[h][bMafia];
			MZInfo[bBiz] = h;
			MZInfo[bMesto] = params[0];
			MZInfo[bCountDead][MZInfo[bNapad]] = 0;
			MZInfo[bCountDead][MZInfo[bFrakVlad]] = 0;
			new strstre[11], year, month,day;
			getdate(year, month, day);
			format(strstre, 11, "%d/%d/%d",day,month,year);
			mysql_format(DATABASE,YCMDstr, 111, "INSERT INTO `MafiaWar` (`Mafia 1`, `Mafia 2`, `Date`) VALUES ('%s', '%s', '%s')",GetMN(PI[playerid][pMember]),GetMN(BizzInfo[h][bMafia]),strstre);
			mysql_function_query(DATABASE,YCMDstr,false,"","");
			return true;
		}
	}
	SCM(playerid, COLOR_GREY, "Вы должны находится возле бизнеса.");
	return true;
}
CMD:bizlist(playerid, params[])
{
	if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
	{
		if(PI[playerid][pLogin] == 0) return true;
		if(!IsAMafia(playerid)) return SCM(playerid,COLOR_GREY,"Вам недоступна данная команда");
		new strrr[800];
		for(new h = 1; h <= TotalBizz; h++) if(BizzInfo[h][bMafia] == PI[playerid][pMember]) format(YCMDstr, 256, " [%i] %s\n",h, BizzInfo[h][bMessage]), strcat(strrr, YCMDstr);
		if (strlen(strrr) > 1) SPDEx(playerid, 11349, 2, "Завоёванные бизнесы", strrr, "Принять", "Отмена");
		else SCM(playerid,-1,"Нет бизнесов");
		return true;
	}
}
CMD:weather(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 11 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /weather [id погоды]");
	if(params[0] < 0||params[0] > 45) { SCM(playerid, COLOR_GREY, "ID погоды не может быть меньше 0 и больше 45!"); return true; }
	SetWeather(params[0]);
	SCM(playerid, COLOR_WHITE, "Погода изменена!");
	return true;
}
CMD:getcamera(playerid, params[])
{
    new
		Float:fPX, Float:fPY, Float:fPZ,
     	Float:fVX, Float:fVY, Float:fVZ,
      	Float:object_x, Float:object_y, Float:object_z;
 	const
  	Float:fScale = 5.0;
   	GetPlayerCameraPos(playerid, fPX, fPY, fPZ);
   	GetPlayerCameraFrontVector(playerid, fVX, fVY, fVZ);
   	object_x = fPX + floatmul(fVX, fScale);
   	object_y = fPY + floatmul(fVY, fScale);
   	object_z = fPZ + floatmul(fVZ, fScale);
   	format(YCMDstr, 144, "CameraPos: %f,%f,%f | LookAt: %f,%f,%f",fPX,fPY,fPZ,object_x,object_y,object_z);
   	SCM(playerid, 0xFFD800AA,YCMDstr);
	return true;
}
CMD:getbizstats(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	for(new h = 1; h <= TotalBizz; h++)
	{
		if(PlayerToPoint(3.0, playerid,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ])) PrintBizInfo(playerid,h);
	}
	return true;
}
CMD:getmaststats(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	for(new v = 1; v <= TotalMast; v++)
	{
		if(PlayerToPoint(3.0, playerid,AvtoMInfo[v][vEntranceX], AvtoMInfo[v][vEntranceY], AvtoMInfo[v][vEntranceZ])) PrintMastInfo(playerid,v);
	}
	return true;
}
CMD:bizstats(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(PI[playerid][pPbiskey] == 255) return SCM(playerid, COLOR_GREY, "У вас нет бизнеса!");
	PrintBizInfo(playerid,PI[playerid][pPbiskey]);
	return true;
}
CMD:maststats(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(PI[playerid][pPviskey] == 255) return SCM(playerid, COLOR_GREY, "У Вас нет Автомастерской!");
	PrintMastInfo(playerid,PI[playerid][pPviskey]);
	return true;
}
CMD:mastlock(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	for(new v = 1; v <= TotalMast; v++)
	{
		if(PlayerToPoint(3, playerid,AvtoMInfo[v][vEntranceX], AvtoMInfo[v][vEntranceY], AvtoMInfo[v][vEntranceZ]))
		{
			if(AvtoMInfo[v][vLocked] == 1)
			{
				AvtoMInfo[v][vLocked] = 0;
				SCM(playerid, COLOR_GRAD1, "Вы открыли бизнес");
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				return true;
			}
			if(AvtoMInfo[v][vLocked] == 0)
			{
				AvtoMInfo[v][vLocked] = 1;
				SCM(playerid, COLOR_GRAD1, "Вы закрыли бизнес");
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				return true;
			}
			else if(PI[playerid][pPviskey] == v)
			{
				if(AvtoMInfo[v][vLocked] == 0) return SCM(playerid, COLOR_GREY, "Бизнес уже открыт!");
				if(AvtoMInfo[v][vProducts] <= 0) return SCM(playerid, COLOR_GREY, "В Автомастерской нет запчастей!");
				AvtoMInfo[v][vLocked] = 0;
				AvtoMInfo[v][vLockTime] = 0;
				SCM(playerid, COLOR_LIGHTRED, "Вы открыли Автомастерскую. Всегда следите за её состоянием!");
				SCM(playerid, COLOR_LIGHTRED, "В противном случае Вы можете потерять Автомастерскую");
			}
		}
	}
	return true;
}
CMD:buyhouse(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	new cklass[15];
	for(new h = 1; h <= TotalHouse; h++)
	{
		if(PlayerToPoint(2.0, playerid, House[h][hEntrancex], House[h][hEntrancey], House[h][hEntrancez]) && House[h][hOwned] == 0)
		{
			if(PI[playerid][pPhousekey] != 999 && strcmp(Name(playerid), House[PI[playerid][pPhousekey]][hOwner], true) == 0)
			{
				SCM(playerid, COLOR_LIGHTGREEN, "У вас уже есть дом!");
				return true;
			}
			if(PI[playerid][pPhotelkey] != 999)  return SCM(playerid, COLOR_WHITE, "У Вас есть квартира в отеле.");
			if(PI[playerid][pCash] < House[h][hValue]) return SCM(playerid,COLOR_GREY,"Недостаточно денег для покупки!");
			PI[playerid][pPhousekey] = h;
			House[h][hOwned] = 1;
			House[h][hHel] = 0;
			strmid(House[h][hOwner],Name(playerid), 0, strlen(Name(playerid)), 32);
			PI[playerid][pCash] -= House[h][hValue];
			SetPlayerInterior(playerid,House[h][hInt]);
			SetPlayerPos(playerid,House[h][hExitx],House[h][hExity],House[h][hExitz]);
			PI[playerid][pInt] = House[h][hInt];
			SetPlayerVirtualWorld(playerid,h+50);
			PI[playerid][pLocal] = h;
			if(House[h][hKlass] == 0) { cklass = "50"; SetHouse(House[h][hID], "hTakings", 50); }
			else if(House[h][hKlass] == 1) { cklass = "100"; SetHouse(House[h][hID], "hTakings", 100); }
			else if(House[h][hKlass] == 2) { cklass = "150"; SetHouse(House[h][hID], "hTakings", 150); }
			else if(House[h][hKlass] == 3) { cklass = "100"; SetHouse(House[h][hID], "hTakings", 100); }
			else if(House[h][hKlass] == 4) { cklass = "50"; SetHouse(House[h][hID], "hTakings", 50); }
			SCM(playerid, COLOR_WHITE, "Поздравляем с покупкой!");
			format(YCMDstr, 105, "Внимание! Теперь каждый час со счёта Вашего дома будут снимать комунальные платежи в размере $%s",cklass);
			SCM(playerid, 0xFFD800AA,YCMDstr);
			SCM(playerid, 0xFFD800AA, "Если на счету недостаточно денег, Вас выселят");
			SCM(playerid, 0xFFD800AA, "Пополнить домашний счёт или узнать баланс можно через банк/банкомат (помощь: /mm -> команды)");
			GameTextForPlayer(playerid,"~w~welcome home~n~print:~g~ALT", 5000, 3);
			if(PI[playerid][pCar1] == 0)
			{
				PI[playerid][pCar1] = 462;
				PI[playerid][pColor][0] = 0;
				PI[playerid][pColor][1] = 0;
				PI[playerid][pProcents] = 100;
				CompVehDel(playerid);
			}
			new house = PI[playerid][pPhousekey];
			PI[playerid][pFuelcar] = 100;
			if(caridhouse[playerid][0] != 0) { DestroyVehicle(caridhouse[playerid][0]); caridhouse[playerid][0] = 0; }
			if(caridhouse[playerid][1] != 0) { DestroyVehicle(caridhouse[playerid][1]); caridhouse[playerid][1] = 0; }
			caridhouse[playerid][0] = CreateVehicle(PI[playerid][pCar1], 2490.7903,-2561.9753,2500.7900,89.3196, PI[playerid][pColor][0],PI[playerid][pColor][1], 86400);
			CompVeh(playerid,caridhouse[playerid][0]);
			LockCar(caridhouse[playerid][0]);
			BuyHouse(house);
			SaveMySQL(3,house);
			return true;
		}
	}
	return true;
}
CMD:buynomer(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	for(new h = 1; h <= TotalHotel; h++)
	{
		if(PlayerToPoint(2.0, playerid, HotelInfo[h][oEntrancex], HotelInfo[h][oEntrancey], HotelInfo[h][oEntrancez]) && HotelInfo[h][oOwned] == 0  && GetPlayerVirtualWorld(playerid) == HotelInfo[h][oVirt])
		{
			if(PI[playerid][pPhotelkey] != 999 && strcmp(Name(playerid), HotelInfo[PI[playerid][pPhotelkey]][oOwner], true) == 0)
			{
				SCM(playerid, COLOR_LIGHTGREEN, "У Вас уже есть квартира!");
				return true;
			}
			if(PI[playerid][pPhousekey] != 999)  return SCM(playerid, COLOR_WHITE, "У Вас есть дом!");
			if(PI[playerid][pCash] < HotelInfo[h][oValue]) return SCM(playerid,COLOR_GREY,"Недостаточно денег для покупки!");
			PI[playerid][pPhotelkey] = h;
			HotelInfo[h][oOwned] = 1;
			strmid(HotelInfo[h][oOwner],Name(playerid), 0, strlen(Name(playerid)), 32);
			PI[playerid][pCash] -= HotelInfo[h][oValue];
			SetPlayerInterior(playerid,HotelInfo[h][oInt]);
			SetPlayerPos(playerid,HotelInfo[h][oExitx],HotelInfo[h][oExity],HotelInfo[h][oExitz]);
			PI[playerid][pInt] = HotelInfo[h][oInt];
			SetPlayerVirtualWorld(playerid,h+9999);
			PI[playerid][pLocal] = h;
			SetHotel(HotelInfo[h][oID], "oTakings", 100);
			SCM(playerid, COLOR_MUSICA, "Поздравляем с заселением в номер отеля!");
			format(YCMDstr, 105, "Внимание! Теперь каждый час со счёта Вашего номера будут $100");
			SCM(playerid, 0x008F8FAA,YCMDstr);
			SCM(playerid, 0x008F8FAA, "Если на счету недостаточно денег, Вас выселят");
			SCM(playerid, 0x008F8FAA, "Пополнить счёт или узнать баланс можно через банк/банкомат (помощь: /mm -> команды)");
			GameTextForPlayer(playerid,"~w~welcome home~n~print:~g~/exit", 5000, 3);
			if(PI[playerid][pCar1] == 0)
			{
				PI[playerid][pCar1] = 462;
				PI[playerid][pColor][0] = 0;
				PI[playerid][pColor][1] = 0;
				PI[playerid][pProcents] = 100;
				CompVehDel(playerid);
			}
			PI[playerid][pFuelcar] = 100;
			new hotel = PI[playerid][pPhotelkey];
			if(caridhouse[playerid][0] != 0) { DestroyVehicle(caridhouse[playerid][0]); caridhouse[playerid][0] = 0; }
			if(caridhouse[playerid][1] != 0) { DestroyVehicle(caridhouse[playerid][1]); caridhouse[playerid][1] = 0; }
			caridhouse[playerid][0] = CreateVehicle(PI[playerid][pCar1], HotelInfo[hotel][oCarx], HotelInfo[hotel][oCary], HotelInfo[hotel][oCarz], HotelInfo[hotel][oCarc] , PI[playerid][pColor][0],PI[playerid][pColor][1], 86400);
			CompVeh(playerid,caridhouse[playerid][0]);
			LockCar(caridhouse[playerid][0]);
			BuyHotel(hotel);
			SaveMySQL(4,hotel);
			return true;
		}
	}
	return true;
}
CMD:buybiz(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countingbiz") > gettime() ) return SCM(playerid, 0xFF0000FF, "Команду можно использовать раз в 5 секунд.");
	if(!IsPlayerConnected(playerid)) return true;
	if(PI[playerid][pLevel] < 3) return SCM(playerid, COLOR_GRAD1, "Вам требуется 3 лвл");
	if(PI[playerid][pPbiskey] != 255)  return SCM(playerid, COLOR_WHITE, "У Вас уже есть бизнес, введите /sellbiz чтобы его продать.");
	for(new bizz = 1; bizz <= TotalBizz; bizz++)
	{
		if(PlayerToPoint(5.0, playerid, BizzInfo[bizz][bEntranceX], BizzInfo[bizz][bEntranceY], BizzInfo[bizz][bEntranceZ]) && BizzInfo[bizz][bOwned] == 0)
		{
			format(YCMDstr, 256, "У вас могут забрать бизнес если:\n	1. Он стоит в закрытом состоянии 12 или более часов.\n	2. Продукции менее 10 процентов, 12 или более часов.\n	3. Задолженность за электроэнергию.\n\nПри продаже бизнеса государством, Вам ничего не вернется!\nВы согласны с этими условиями?");
			SPDEx(playerid,9828,0, "Предупреждение",YCMDstr, "Согласен", "Отмена");
			return true;
		}
	}
	SetPVarInt(playerid,"Countingbiz",gettime() + 5);
	return true;
}
CMD:buymast(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(PI[playerid][pLevel] < 3) return SCM(playerid, COLOR_GRAD1, "Вам требуется 3 лвл");
	if(PI[playerid][pPviskey] != 255)  return SCM(playerid, COLOR_WHITE, "У Вас уже есть Автомастерская, введите /sellmast чтобы её продать.");
	for(new vizz = 1; vizz <= TotalMast; vizz++)
	{
		if(PlayerToPoint(5.0, playerid, AvtoMInfo[vizz][vEntranceX], AvtoMInfo[vizz][vEntranceY], AvtoMInfo[vizz][vEntranceZ]) && AvtoMInfo[vizz][vOwned] == 0)
		{
			format(YCMDstr, 290, "У Вас могут забрать Автомастерскую если:\n	1. Она стоит в закрытом состоянии 12 или более часов.\n	2. Запчастей менее 10 процентов, 12 или более часов.\n	3. Задолженность за электроэнергию.\n\nПри продаже Автомастерской государством, Вам ничего не вернется!\nВы согласны с этими условиями?");
			SPDEx(playerid,9838,0, "Предупреждение",YCMDstr, "Согласен", "Отмена");
			return true;
		}
	}
	return true;
}
CMD:changebiz(playerid,params[])
{
    if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pPbiskey] == 255) return SCM(playerid,COLOR_GREY,"У Вас нет бизнеса.");
	if(sscanf(params,"ui",params[0],params[1])) return SCM(playerid,COLOR_WHITE,"/changebiz [ID] [Цена]");
	if(params[0] == playerid) return SCM(playerid,COLOR_GRAD1, "[Ошибка] Вы указали свой ID");
	if(PI[params[0]][pLevel] < 3) return SCM(playerid, COLOR_GRAD1, "У него должен быть 3+ LvL");
	if(PI[params[0]][pPbiskey] != 255) return SCM(playerid,COLOR_GREY,"У него есть бизнес");
	if(GetPVarInt(params[0],"Prodaet") == 1) return SCM(playerid,COLOR_GREY,"У игрока не подтверждена другая сделка!");
	if(GetPVarInt(playerid,"ProdaetBiz") == 1) return SCM(playerid,COLOR_GREY,"Вы уже продаёте кому-то бизнес!");
	if(PlayerToPoint(10.0,playerid, BizzInfo[PI[playerid][pPbiskey]][bEntranceX], BizzInfo[PI[playerid][pPbiskey]][bEntranceY], BizzInfo[PI[playerid][pPbiskey]][bEntranceZ]))
	{
		if(params[1] < 1 || params[1] > 50000000) return SCM(playerid, COLOR_GREY, "Цена не может быть меньше $1 и больше $50.000.000");
		if(PI[params[0]][pBank] < params[1]) return SCM(playerid,COLOR_GREY,"У него нет столько денег на банковском счету");
		if(sellerbiz[params[0]] != INVALID_PLAYER_ID) return SCM(playerid,COLOR_GREY,"Ему уже кто-то предлагает бизнес.");
		if(ProxDetectorS(8.0, playerid, params[0]))
		{
			format(YCMDstr,200,"{FFFFFF}Внимание!\nИгрок %s хочет продать Вам свой бизнес %s\nЦена: %d $\n\nВы согласны?!",Name(playerid),BizzInfo[PI[playerid][pPbiskey]][bMessage],params[1]);
			SPDEx(params[0], 82, 0, "Покупка бизнеса", YCMDstr, "Да", "Нет");
			sellerbiz[params[0]] = playerid;
			bizcost[params[0]] = params[1];
			forwho[playerid] = params[0];
			SetPVarInt(params[0], "Prodaet", 1);
			SetPVarInt(playerid, "ProdaetBiz", 1);
			SCMF(playerid,COLOR_BLUE,"Вы предложили игроку %s купить Ваш бизнес %s за %d",Name(params[0]),BizzInfo[PI[playerid][pPbiskey]][bMessage],params[1]);
		}
		else return SCM(playerid,COLOR_GREY,"Вы находитесь далеко друг от друга");
	}
	return true;
}
CMD:healaddict(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pMember] != 4 && PI[playerid][pMember] != 8) return SCM(playerid,COLOR_GREY,"Вы не медик!");
	if(PI[playerid][pRank] < 6) return SCM(playerid,COLOR_ISPOLZUY,"Вы должны быть 6+ ранга!");
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /healaddict [id]");
	if(!IsPlayerConnected(params[0])) return 1;
	if(params[0] == playerid) return SCM(playerid,COLOR_GRAD1, "[Ошибка] Вы указали свой ID");
	if(PI[params[0]][pCash] < 500) return SCM(playerid,COLOR_GREY,"У него нет с собой $500.");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid,COLOR_GREY,"Вы должны находиться рядом друг с другом");
	if(PI[params[0]][pAddiction] == 0) return SCM(playerid, COLOR_GRAD1,"У него нет наркозависимости.");
	if(seans[params[0]] == 1) return SCM(playerid,COLOR_GREEN, "Следующий сеанс можно провести через час.");
	if(PI[playerid][pMember] == 4 || PI[playerid][pMember] == 8)
	{
		if(PlayerToPoint(50.0,playerid,-1036.0662,695.2768,1507.3469))
		{
			format(YCMDstr,sizeof(YCMDstr),"Вы предложили %s провести сеанс от наркозависимости.",Name(params[0]));
			SCM(playerid,COLOR_IVORY,YCMDstr);
			format(YCMDstr,sizeof(YCMDstr), "Медик хочет провести с Вами сеанс от наркозависимости. Стоимость: $500\nВы согласны?");
			SPDEx(params[0],5521,0, "Лечение", YCMDstr, "Да", "Нет");
			FL[params[0]][HealOffer] = playerid;
		}
	}
	return true;
}
CMD:usedrugs(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(sscanf(params,"d",params[0])) return	SCM(playerid, COLOR_GREY, "Введите: /usedrugs [количество]");
	new Float:health;
	GetPlayerHealth(playerid, health);
	if(PlayerCuffed[playerid] == 2) return SCM(playerid, COLOR_GREY, "Вы в наручниках!");
	if(PI[playerid][pDrugs] < params[0]) return SCM(playerid, COLOR_GREY, "Недостаточно наркотиков!");
	if(PI[playerid][pDrugtime] > 0) return SCM(playerid,COLOR_GRAD1, "Употребить наркотик можно через 2 минуты");
	if(PI[playerid][pHospital] == 1) return SCM(playerid, COLOR_GRAD1,"Нельзя употреблять наркотики во время лечения в больнице");
	if(PI[playerid][pAddiction] < 2000 && params[0] < 1 || PI[playerid][pAddiction] < 2000 && params[0] > 5) return SCM(playerid,COLOR_GRAD1,"Не более 5-х грамм");
	else if(PI[playerid][pAddiction] < 5000 && params[0] < 1 || PI[playerid][pAddiction] < 5000 && params[0] > 10) return SCM(playerid,COLOR_GRAD1,"Не более 10-х грамм");
	else if(PI[playerid][pAddiction] > 5000 && params[0] < 1 || params[0] > 15) return SCM(playerid,COLOR_GRAD1,"Не более 15-х грамм");
	if(PI[playerid][pAddiction] < 2000 && health+10.0*params[0] > 120)
	{
		SCM(playerid,COLOR_WHITE,"(( Здоровье пополнено до: 120 ))");
		SetPlayerHealthAC(playerid,120);
		SetPlayerWeather(playerid, -68);
		SetTimerEx("AddictionTimer", 10000, false, "i", playerid);
	}
	else if(PI[playerid][pAddiction] < 5000 && health+10.0*params[0] > 140)
	{
		SCM(playerid,COLOR_WHITE,"(( Здоровье пополнено до: 140 ))");
		SetPlayerHealthAC(playerid,140);
		SetTimerEx("AddictionTimer", 10000, false, "i", playerid);
	}
	else if(PI[playerid][pAddiction] > 5000 && health+10.0*params[0] > 160)
	{
		SCM(playerid,COLOR_WHITE,"(( Здоровье пополнено до: 160 ))");
		SetPlayerHealthAC(playerid,160);
		SetTimerEx("AddictionTimer", 10000, false, "i", playerid);
	}
	else
	{
		format(YCMDstr, 40, "(( Здоровье пополнено до: %.0f ))",health+10.0*params[0]);
		SCM(playerid,COLOR_WHITE,YCMDstr);
		SetPlayerHealthAC(playerid, health+10.0*params[0]);
		if(PI[playerid][pAddiction] < 2000)
		{
			SetPlayerWeather(playerid, -68);
			SetTimerEx("AddictionTimer", 10000, false, "i", playerid);
		}
	}
	SetPVarInt(playerid,"AntiSbivAnim",1);
	TogglePlayerControllable(playerid,0);
	SetTimerEx("AntiSbiv", 5000, false, "i", playerid);
	PI[playerid][pNarcoLomka] = 0;
	SetPlayerDrunkLevel (playerid, 0);
	PI[playerid][pDrugtime] = 120;
	PI[playerid][pDrugs] -= params[0];
	ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
	SetPlayerChatBubble(playerid,"употребил(a) наркотик",COLOR_PURPLE,30.0,10000);
	format(YCMDstr, 45, "%s употребил(a) наркотик",Name(playerid));
	ProxDetector(10.0, playerid,YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	PI[playerid][pAddiction] += 100;
    if(PI[playerid][pAddiction] > 10000) PI[playerid][pAddiction] = 10000;
    if(PI[playerid][pHP] > 160)
	{
		PI[playerid][pHP] = 160;
		SetPlayerHealthAC(playerid, PI[playerid][pHP]);
	}
	if(GetPVarInt(playerid,"startaddiction") == 1)
	{
		SetPVarInt(playerid, "startaddiction", 0);
		ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
		PI[playerid][pNarcoLomka] = 0;
	}
	return true;
}
CMD:gunlist(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsAGang(playerid)) return true;
	SPDEx(playerid,8321,0, "Cписок оружия", "\tИмя\t\t Материалов за патрон\t\t Материалов за обойму\n__________________________________________________________________\n\n[ID: 23] Sdpistol\t\t1м\t\t\t\t15м\n[ID: 24] Deagle\t\t\t3м\t\t\t\t21м\n[ID: 25] Shotgun\t\t3м\t\t\t\t-\n[ID: 29] MP5\t\t\t2м\t\t\t\t60м\n[ID: 30] AK-47\t\t\t3м\t\t\t\t90м\n[ID: 31] M4A1\t\t\t3м\t\t\t\t150м\n[ID: 33] Rifle\t\t\t5м\t\t\t\t-", "Закрыть", "");
	return true;
}
CMD:sellgun(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countinggun") > gettime()) return SCM(playerid, 0xFF0000FF, "Команду можно использовать раз в 10 секунд.");
	if(!IsPlayerConnected(playerid)) return true;
	if(!IsAGang(playerid)) return true;
	new gunname[22];
	if(sscanf(params, "s[18]ddu",gunname,params[0],params[1],params[2]))
	{
		SCM(playerid, COLOR_WHITE, "Введите: /sellgun [название оружия] [патроны] [цена] [id]");
		SCM(playerid, COLOR_WHITE, "Введите: /gunlist - название оружия и расходы материалов");
		SCM(playerid, COLOR_GREY, "Минимальная цена $4!");
		return true;
	}
	if(params[1] > 50000 || params[1] < 4 || params[0] < 0) return SCM(playerid,COLOR_GREY,"Неверная цена/патроны");
	if(params[2] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "Игрок не найден!");
	if(PI[params[1]][pCash] < 0) return SCM(playerid,COLOR_GRAD1, "Недостаточно денег");
	if(!ProxDetectorS(5.0, playerid, params[2])) return SCM(playerid, COLOR_GRAD2, "Человек должен быть рядом с вами");
	if(PI[params[2]][pLevel] < 2) return SCM(playerid, COLOR_GREY, "Игрок должен быть 2+ LvL");
	if(strcmp(gunname,"sdpistol", true) == 0) { sellgun1 = 23; }
	else if(strcmp(gunname,"deagle", true) == 0) { sellgun1 = 24; }
	else if(strcmp(gunname,"shotgun", true) == 0) { sellgun1 = 25; }
	else if(strcmp(gunname,"smg", true) == 0) { sellgun1 = 29; }
	else if(strcmp(gunname,"ak47", true) == 0) { sellgun1 = 30; }
	else if(strcmp(gunname,"m4", true) == 0) { sellgun1 = 31; }
	else if(strcmp(gunname,"rifle", true) == 0) { sellgun1 = 33; }
	else return SCM(playerid,COLOR_GREY,"Неизвестное оружие");
	if(PI[playerid][pMats] < (2*params[0])) return SCM(playerid, COLOR_GRAD2, "У вас недостаточно материалов");
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && PI[playerid][pMember] == GZInfo[i][gFrakVlad])
		{
			sellgun4 = playerid;
			sellgun = params[2];
			sellgun2 = params[0];
			sellgun3 = params[1];
			if(playerid == params[2])
			{
				_GiveGun(playerid,sellgun1,params[0]);
				PI[sellgun4][pMats] -= (2*params[0]);
				format(YCMDstr, 128, "%s сделал себе оружие из материалов",Name(playerid));
				ProxDetector(10.0, playerid,YCMDstr, COLOR_YELLOW2,COLOR_YELLOW2,COLOR_YELLOW2,COLOR_YELLOW2,COLOR_YELLOW2);
				SetPlayerChatBubble(playerid,YCMDstr,COLOR_YELLOW2,30.0,10000);
				return true;
			}
			format(YCMDstr,sizeof(YCMDstr), " {FFFFFF}Вам предложили купить оружие:\n%s\n Стоимость %d\n Патроны %d",gunname,params[1],params[0]);
			SPDEx(params[2], 22572, 0, "Покупка оружия",YCMDstr, "Купить", "Отмена");
			SCM(playerid, 0x6495EDFF, "Вы предложили купить оружие!");
		}
	}
	SetPVarInt(playerid,"Countinggun",gettime() + 10);
	return true;
}
CMD:getgun(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerConnected(playerid)) return 1;
	switch(PI[playerid][pMember])
	{
	case 5:
		{
			if(PlayerToPoint(10.0,playerid,1438.5959,780.1974,11.0234))
			{
				if(params[0] == INVALID_PLAYER_ID) return true;
				{
					if(sscanf(params, "u",params[0]))
					{
						if(FracBank[0][fskllcn] != 0) return SCM(playerid,COLOR_GRAD1, "Склад закрыт Лидером/Замом мафии");
						if(PI[playerid][pRank] < 2) return SCM(playerid,COLOR_GRAD1, "Оружие можно взять с 2 ранга!");
						new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
						SPDEx(playerid, 2014, 2, "Взять оружие со склада", listitems, "Выбрать", "Отмена");
						FL[playerid][getgunsid] = playerid;
						SCM(playerid,COLOR_WHITE,"Вы так же можете использовать:{FFFF82} /getgun [playerid]{ffffff} для выдачи оружия члену мафии");
					}
					else
					{
						if(params[0] == INVALID_PLAYER_ID) return true;
						{
							if(FracBank[0][fskllcn] != 0) return SCM(playerid,COLOR_GRAD1, "Склад закрыт Лидером/Замом мафии");
							if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GRAD2, "Человек должен быть рядом с Вами");
							if(PI[params[0]][pMember] != PI[playerid][pMember]) return SCM(playerid,COLOR_GREY,"Игрок не состоит в вашей организации");
							if(PI[playerid][pRank] <= 3) return SCM(playerid,COLOR_GRAD1, "Оружие можно выдать с 3 ранга!");
							new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
							SPDEx(playerid, 2014, 2, "Взять оружие со склада", listitems, "Выбрать", "Отмена");
							FL[playerid][getgunsid] = params[0];
						}
					}
				}
			}
		}
	case 6:
		{
			if(PlayerToPoint(10.0,playerid,1436.9312,2816.4539,10.8203))
			{
				if(params[0] == INVALID_PLAYER_ID) return true;
				{
					if(sscanf(params, "u",params[0]))
					{
						if(FracBank[0][fsklyak] != 0) return SCM(playerid,COLOR_GRAD1, "Склад закрыт Лидером/Замом мафии");
						if(PI[playerid][pRank] < 2) return SCM(playerid,COLOR_GRAD1, "Оружие можно взять с 2 ранга!");
						new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
						SPDEx(playerid, 2013, 2, "Взять оружие со склада", listitems, "Выбрать", "Отмена");
						FL[playerid][getgunsid] = playerid;
						SCM(playerid,COLOR_WHITE,"Вы так же можете использовать:{FFFF82} /getgun [playerid]{ffffff} для выдачи оружия члену мафии");
					}
					else
					{
						if(params[0] == INVALID_PLAYER_ID) return true;
						{
							if(FracBank[0][fsklyak] != 0) return SCM(playerid,COLOR_GRAD1, "Склад закрыт Лидером/Замом мафии");
							if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GRAD2, "Человек должен быть рядом с Вами");
							if(PI[params[0]][pMember] != PI[playerid][pMember]) return SCM(playerid,COLOR_GREY,"Игрок не состоит в вашей организации");
							if(PI[playerid][pRank] <= 3) return SCM(playerid,COLOR_GRAD1, "Оружие можно выдать с 3 ранга!");
							new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
							SPDEx(playerid, 2013, 2, "Взять оружие со склада", listitems, "Выбрать", "Отмена");
							FL[playerid][getgunsid] = params[0];
						}
					}
				}
			}
		}
	case 14:
		{
			if(PlayerToPoint(10.0,playerid,968.7349,1781.6455,8.8581))
			{
				if(params[0] == INVALID_PLAYER_ID) return true;
				{
					if(sscanf(params, "u",params[0]))
					{
						if(FracBank[0][fsklrus] != 0) return SCM(playerid,COLOR_GRAD1, "Склад закрыт Лидером/Замом мафии");
						if(PI[playerid][pRank] < 2)return SCM(playerid,COLOR_GRAD1, "Оружие можно взять с 2 ранга!");
						new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
						SPDEx(playerid, 2015, 2, "Взять оружие со склада", listitems, "Выбрать", "Отмена");
						FL[playerid][getgunsid] = playerid;
						SCM(playerid,COLOR_WHITE,"Вы так же можете использовать:{FFFF82} /getgun [playerid]{ffffff} для выдачи оружия члену мафии");
					}
					else
					{
						if(params[0] == INVALID_PLAYER_ID) return true;
						{
							if(FracBank[0][fsklrus] != 0) return SCM(playerid,COLOR_GRAD1, "Склад закрыт Лидером/Замом мафии");
							if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GRAD2, "Человек должен быть рядом с Вами");
							if(PI[params[0]][pMember] != PI[playerid][pMember]) return SCM(playerid,COLOR_GREY,"Игрок не состоит в вашей организации");
							if(PI[playerid][pRank] < 3) return SCM(playerid,COLOR_GRAD1, "Оружие можно выдать с 3 ранга!");
							new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
							SPDEx(playerid, 2015, 2, "Взять оружие со склада", listitems, "Выбрать", "Отмена");
							FL[playerid][getgunsid] = params[0];
						}
					}
				}
			}
		}
	case 23:
		{
			if(PlayerToPoint(10.0,playerid,510.9678,-74.1802,998.7578))
			{
				if(params[0] == INVALID_PLAYER_ID) return true;
				{
					if(sscanf(params, "u",params[0]))
					{
						if(FracBank[0][fsklbiker] != 0) return SCM(playerid,COLOR_GRAD1, "Склад закрыт Лидером/Замом байкеров");
						if(PI[playerid][pRank] < 2) return SCM(playerid,COLOR_GRAD1, "Оружие можно взять с 2 ранга!");
						new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
						SPDEx(playerid, 2016, 2, "Взять оружие со склада", listitems, "Выбрать", "Отмена");
						FL[playerid][getgunsid] = playerid;
						SCM(playerid,COLOR_WHITE,"Вы так же можете использовать:{FFFF82} /getgun [playerid]{ffffff} для выдачи оружия байкеру");
					}
					else
					{
						if(params[0] == INVALID_PLAYER_ID) return true;
						{
							if(FracBank[0][fsklbiker] != 0) return SCM(playerid,COLOR_GRAD1, "Склад закрыт Лидером/Замом байкеров");
							if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GRAD2, "Человек должен быть рядом с Вами");
							if(PI[params[0]][pMember] != PI[playerid][pMember]) return SCM(playerid,COLOR_GREY,"Игрок не состоит в вашей организации");
							if(PI[playerid][pRank] < 3)return SCM(playerid,COLOR_GRAD1, "Оружие можно выдать с 3 ранга!");
							new listitems[] = " [1] Deagle\t[70 материалов/50 патронов]\n [2] Shotgun\t[50 материалов/15 патронов]\n [3] Rifle\t[100 материалов/10 патронов]\n [4] M4\t[500 материалов/100 патронов]\n [5] AK-47\t[500 материалов/100 патронов]\n [6] MP5\t[400 материалов/200 патронов]\n [7] SDPistol\t[100 материалов/100 патронов])";
							SPDEx(playerid, 2016, 2, "Взять оружие со склада", listitems, "Выбрать", "Отмена");
							FL[playerid][getgunsid] = params[0];
						}
					}
				}
			}
		}
	}
	return true;
}
CMD:unloading(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new tmpcar = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 459) return SCM(playerid,COLOR_GREY, "Вы не в фургоне!");
	if(PI[playerid][pMember] == 12)
	{
		if(Furi[tmpcar-matsfura][gBallas] == 0) return SCM(playerid,COLOR_GREY, "Фургон пустой!");
		if(PlayerToPoint(6.0,playerid,1440.8108,780.1008,11.0234))
		{
			if(FracBank[0][flcnmats] >= 50000) return SCM(playerid,COLOR_GREY, "Склад заполнен");
			FracBank[0][flcnmats] += Furi[tmpcar-matsfura][gBallas];
			Furi[tmpcar-matsfura][gBallas] = 0;
			if(FracBank[0][flcnmats] > 50000) FracBank[0][flcnmats] = 50000;
			format(YCMDstr, 55, "Материалы разргружены! В фургоне: %d/5000 материалов", Furi[tmpcar-matsfura][gBallas]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 30, "Склад мафии LCN: %d/50000", FracBank[0][flcnmats]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,968.2533,1783.9307,8.8581))
		{
			if(FracBank[0][frmmats] >= 50000) return  SCM(playerid,COLOR_GREY, "Склад заполнен");
			FracBank[0][frmmats] += Furi[tmpcar-matsfura][gBallas];
			Furi[tmpcar-matsfura][gBallas] = 0;
			if(FracBank[0][frmmats] > 50000) FracBank[0][frmmats] = 50000;
			format(YCMDstr, 55, "Материалы разргружены! В фургоне: %d/5000 материалов", Furi[tmpcar-matsfura][gBallas]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 35, "Склад Русской мафии: %d/50000", FracBank[0][frmmats]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,1434.6439,2816.4175,10.8203))
		{
			if(FracBank[0][fyakuzamats] >= 50000) return  SCM(playerid,COLOR_GREY, "Склад заполнен");
			FracBank[0][fyakuzamats] += Furi[tmpcar-matsfura][gBallas];
			Furi[tmpcar-matsfura][gBallas] = 0;
			if(FracBank[0][fyakuzamats] > 50000) FracBank[0][fyakuzamats] = 50000;
			format(YCMDstr, 55, "Материалы разргружены! В фургоне: %d/5000 материалов",Furi[tmpcar-matsfura][gBallas]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 28, "Склад Якудза: %d/50000", FracBank[0][fyakuzamats]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			return true;
		}
		if(!IsATerra(playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
		if(FracBank[0][fBMats] >= 90000) return SCM(playerid,COLOR_GREY, "Склад заполнен");
		FracBank[0][fBMats] += Furi[tmpcar-matsfura][gBallas];
		Furi[tmpcar-matsfura][gBallas] = 0;
		if(FracBank[0][fBMats] > 90000) FracBank[0][fBMats] = 90000;
		SCM(playerid,COLOR_GREEN, "Материалы разгружены");
	}
	else if(PI[playerid][pMember] == 13)
	{
		if(Furi[tmpcar-matsfuravagos][gVagos] == 0) return SCM(playerid,COLOR_GREY, "Фургон пустой!");
		if(PlayerToPoint(6.0,playerid,1440.8108,780.1008,11.0234))
		{
			if(FracBank[0][flcnmats] >= 50000) return  SCM(playerid,COLOR_GREY, "Склад заполнен");
			FracBank[0][flcnmats] += Furi[tmpcar-matsfuravagos][gVagos];
			Furi[tmpcar-matsfuravagos][gVagos] = 0;
			if(FracBank[0][flcnmats] > 50000) FracBank[0][flcnmats] = 50000;
			format(YCMDstr, 55, "Материалы разргружены! В фургоне: %d/5000 материалов", Furi[tmpcar-matsfuravagos][gVagos]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 30, "Склад мафии LCN: %d/50000", FracBank[0][flcnmats]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,968.2533,1783.9307,8.8581))
		{
			if(FracBank[0][frmmats] >= 50000) return  SCM(playerid,COLOR_GREY, "Склад заполнен");
			FracBank[0][frmmats] += Furi[tmpcar-matsfuravagos][gVagos];
			Furi[tmpcar-matsfuravagos][gVagos] = 0;
			if(FracBank[0][frmmats] > 50000) FracBank[0][frmmats] = 50000;
			format(YCMDstr, 55, "Материалы разргружены! В фургоне: %d/5000 материалов", Furi[tmpcar-matsfuravagos][gVagos]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 35, "Склад Русской мафии: %d/50000", FracBank[0][frmmats]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,1434.6439,2816.4175,10.8203))
		{
			if(FracBank[0][fyakuzamats] >= 50000) return  SCM(playerid,COLOR_GREY, "Склад заполнен");
			FracBank[0][fyakuzamats] += Furi[tmpcar-matsfuravagos][gVagos];
			Furi[tmpcar-matsfuravagos][gVagos] = 0;
			if(FracBank[0][fyakuzamats] > 50000) FracBank[0][fyakuzamats] = 50000;
			format(YCMDstr, 55, "Материалы разргружены! В фургоне: %d/5000 материалов", Furi[tmpcar-matsfuravagos][gVagos]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 28, "Склад Якудза: %d/50000", FracBank[0][fyakuzamats]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			return true;
		}
		if(!IsATerra(playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
		if(FracBank[0][fVMats] >= 90000) return SCM(playerid,COLOR_GREY, "Склад заполнен");
		FracBank[0][fVMats] += Furi[tmpcar-matsfuravagos][gVagos];
		Furi[tmpcar-matsfuravagos][gVagos] = 0;
		if(FracBank[0][fVMats] > 90000) FracBank[0][fVMats] = 90000;
		SCM(playerid,COLOR_GREEN, "Материалы разгружены");
	}
	else if(PI[playerid][pMember] == 15)
	{
		if(Furi[tmpcar-matsfuragrove][gGrove] == 0) return SCM(playerid,COLOR_GREY, "Фургон пустой!");
		if(PlayerToPoint(6.0,playerid,1440.8108,780.1008,11.0234))
		{
			if(FracBank[0][flcnmats] >= 50000) return SCM(playerid,COLOR_GREY, "Склад заполнен");
			FracBank[0][flcnmats] += Furi[tmpcar-matsfuragrove][gGrove];
			Furi[tmpcar-matsfuragrove][gGrove] = 0;
			if(FracBank[0][flcnmats] > 50000) FracBank[0][flcnmats] = 50000;
			format(YCMDstr, 55, "Материалы разргружены! В фургоне: %d/5000 материалов", Furi[tmpcar-matsfuragrove][gGrove]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 30, "Склад мафии LCN: %d/50000", FracBank[0][flcnmats]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,968.2533,1783.9307,8.8581))
		{
			if(FracBank[0][frmmats] >= 50000) return SCM(playerid,COLOR_GREY, "Склад заполнен");
			FracBank[0][frmmats] += Furi[tmpcar-matsfuragrove][gGrove];
			Furi[tmpcar-matsfuragrove][gGrove] = 0;
			if(FracBank[0][frmmats] > 50000) FracBank[0][frmmats] = 50000;
			format(YCMDstr, 55, "Материалы разргружены! В фургоне: %d/5000 материалов", Furi[tmpcar-matsfuragrove][gGrove]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 35, "Склад Русской мафии: %d/50000", FracBank[0][frmmats]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,1434.6439,2816.4175,10.8203))
		{
			if(FracBank[0][fyakuzamats] >= 50000) return SCM(playerid,COLOR_GREY, "Склад заполнен");
			FracBank[0][fyakuzamats] += Furi[tmpcar-matsfuragrove][gGrove];
			Furi[tmpcar-matsfuragrove][gGrove] = 0;
			if(FracBank[0][fyakuzamats] > 50000) FracBank[0][fyakuzamats] = 50000;
			format(YCMDstr, 55, "Материалы разргружены! В фургоне: %d/5000 материалов", Furi[tmpcar-matsfuragrove][gGrove]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 28, "Склад Якудза: %d/50000", FracBank[0][fyakuzamats]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			return true;
		}
		if(!IsATerra(playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
		if(FracBank[0][fGMats] >= 90000) return SCM(playerid,COLOR_GREY, "Склад заполнен");
		FracBank[0][fGMats] += Furi[tmpcar-matsfuragrove][gGrove];
		Furi[tmpcar-matsfuragrove][gGrove] = 0;
		if(FracBank[0][fGMats] > 90000) FracBank[0][fGMats] = 90000;
		SCM(playerid,COLOR_GREEN, "Материалы разгружены");
	}
	else if(PI[playerid][pMember] == 17)
	{
		if(Furi[tmpcar-matsfuraactek][gAztek] == 0) return  SCM(playerid,COLOR_GREY, "Фургон пустой!");
		if(PlayerToPoint(6.0,playerid,1440.8108,780.1008,11.0234))
		{
			if(FracBank[0][flcnmats] >= 50000) return SCM(playerid,COLOR_GREY, "Склад заполнен");
			FracBank[0][flcnmats] +=  Furi[tmpcar-matsfuraactek][gAztek];
			Furi[tmpcar-matsfuraactek][gAztek] = 0;
			if(FracBank[0][flcnmats] > 50000) FracBank[0][flcnmats] = 50000;
			format(YCMDstr, 55, "Материалы разргружены! В фургоне: %d/5000 матов", Furi[tmpcar-matsfuraactek][gAztek]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 30, "Склад мафии LCN: %d/50000", FracBank[0][flcnmats]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,968.2533,1783.9307,8.8581))
		{
			if(FracBank[0][frmmats] >= 50000) return SCM(playerid,COLOR_GREY, "Склад заполнен");
			FracBank[0][frmmats] += Furi[tmpcar-matsfuraactek][gAztek];
			Furi[tmpcar-matsfuraactek][gAztek] = 0;
			if(FracBank[0][frmmats] > 50000) FracBank[0][frmmats] = 50000;
			format(YCMDstr, 55, "Материалы разргружены! В фургоне: %d/5000 матов", Furi[tmpcar-matsfuraactek][gAztek]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 35, "Склад Русской мафии: %d/50000", FracBank[0][frmmats]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,1434.6439,2816.4175,10.8203))
		{
			if(FracBank[0][fyakuzamats] >= 50000) return SCM(playerid,COLOR_GREY, "Склад заполнен");
			FracBank[0][fyakuzamats] += Furi[tmpcar-matsfuraactek][gAztek];
			Furi[tmpcar-matsfuraactek][gAztek] = 0;
			if(FracBank[0][fyakuzamats] > 50000) FracBank[0][fyakuzamats] = 50000;
			format(YCMDstr, 55, "Материалы разргружены! В фургоне: %d/5000 матов", Furi[tmpcar-matsfuraactek][gAztek]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 28, "Склад Якудза: %d/50000", FracBank[0][fyakuzamats]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			return true;
		}
		if(!IsATerra(playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
		if(FracBank[0][fCMats] >= 90000) return SCM(playerid,COLOR_GREY, "Склад заполнен");
		FracBank[0][fCMats] += Furi[tmpcar-matsfuraactek][gAztek];
		Furi[tmpcar-matsfuraactek][gAztek] = 0;
		if(FracBank[0][fCMats] > 90000) FracBank[0][fCMats] = 90000;
		SCM(playerid,COLOR_GREEN, "Материалы разгружены");
	}
	else if(PI[playerid][pMember] == 18)
	{
		if(Furi[tmpcar-matsfurarifa][gRifa] == 0) return SCM(playerid,COLOR_GREY, "Фургон пустой!");
		if(PlayerToPoint(6.0,playerid,1440.8108,780.1008,11.0234))
		{
			if(FracBank[0][flcnmats] >= 50000) return SCM(playerid,COLOR_GREY, "Склад заполнен");
			FracBank[0][flcnmats] += Furi[tmpcar-matsfurarifa][gRifa];
			Furi[tmpcar-matsfurarifa][gRifa] = 0;
			if(FracBank[0][flcnmats] > 50000) FracBank[0][flcnmats] = 50000;
			format(YCMDstr, 55, "Материалы разргружены! В фургоне: %d/5000 матов", Furi[tmpcar-matsfurarifa][gRifa]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 30, "Склад мафии LCN: %d/50000", FracBank[0][flcnmats]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,968.2533,1783.9307,8.8581))
		{
			if(FracBank[0][frmmats] >= 50000) return SCM(playerid,COLOR_GREY, "Склад заполнен");
			FracBank[0][frmmats] += Furi[tmpcar-matsfurarifa][gRifa];
			Furi[tmpcar-matsfurarifa][gRifa] = 0;
			if(FracBank[0][frmmats] > 50000) FracBank[0][frmmats] = 50000;
			format(YCMDstr, 55, "Материалы разргружены! В фургоне: %d/5000 матов", Furi[tmpcar-matsfurarifa][gRifa]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 35, "Склад Русской мафии: %d/50000", FracBank[0][frmmats]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,1434.6439,2816.4175,10.8203))
		{
			if(FracBank[0][fyakuzamats] >= 50000) return SCM(playerid,COLOR_GREY, "Склад заполнен");
			FracBank[0][fyakuzamats] += Furi[tmpcar-matsfurarifa][gRifa];
			Furi[tmpcar-matsfurarifa][gRifa] = 0;
			if(FracBank[0][fyakuzamats] > 50000) FracBank[0][fyakuzamats] = 50000;
			format(YCMDstr, 55, "Материалы разргружены! В фургоне: %d/5000 матов", Furi[tmpcar-matsfurarifa][gRifa]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 28, "Склад Якудза: %d/50000", FracBank[0][fyakuzamats]);
			SCM(playerid, COLOR_WHITE,YCMDstr);
			return true;
		}
		if(!IsATerra(playerid)) return SCM(playerid, COLOR_GRAD1, "Вы не на своей базе");
		if(FracBank[0][fRMats] >= 90000) return SCM(playerid,COLOR_GREY, "Склад заполнен");
		FracBank[0][fRMats] += Furi[tmpcar-matsfurarifa][gRifa];
		Furi[tmpcar-matsfurarifa][gRifa] = 0;
		if(FracBank[0][fRMats] > 90000) FracBank[0][fRMats] = 90000;
		SCM(playerid,COLOR_GREEN, "Материалы разгружены");
	}
	else if(PI[playerid][pMember] == 23)
	{
		if(Furgon[tmpcar-furabiker[0]][gBiker] == 0) return SCM(playerid,COLOR_GREY, "Фургон пустой!");
		if(PlayerToPoint(6.0,playerid,1440.8108,780.1008,11.0234))
		{
			if(FracBank[0][flcnmats] >= 50000) return SCM(playerid,COLOR_GREY, "Склад заполнен");
			FracBank[0][flcnmats] += Furgon[tmpcar-furabiker[0]][gBiker];
			Furgon[tmpcar-furabiker[0]][gBiker] = 0;
			if(FracBank[0][flcnmats] > 50000) FracBank[0][flcnmats] = 50000;
			format(YCMDstr, 55, "Материалы разргружены! В фургоне: %d/5000 матов", Furgon[tmpcar-furabiker[0]][gBiker]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 30, "Склад мафии LCN: %d/50000", FracBank[0][flcnmats]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,968.2533,1783.9307,8.8581))
		{
			if(FracBank[0][frmmats] >= 50000) return SCM(playerid,COLOR_GREY, "Склад заполнен");
			FracBank[0][frmmats] += Furgon[tmpcar-furabiker[0]][gBiker];
			Furgon[tmpcar-furabiker[0]][gBiker] = 0;
			if(FracBank[0][frmmats] > 50000) FracBank[0][frmmats] = 50000;
			format(YCMDstr, 55, "Материалы разргружены! В фургоне: %d/5000 матов", Furgon[tmpcar-furabiker[0]][gBiker]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 35, "Склад Русской мафии: %d/50000", FracBank[0][frmmats]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,1434.6439,2816.4175,10.8203))
		{
			if(FracBank[0][fyakuzamats] >= 50000) return SCM(playerid,COLOR_GREY, "Склад заполнен");
			FracBank[0][fyakuzamats] += Furgon[tmpcar-furabiker[0]][gBiker];
			Furgon[tmpcar-furabiker[0]][gBiker] = 0;
			if(FracBank[0][fyakuzamats] > 50000) FracBank[0][fyakuzamats] = 50000;
			format(YCMDstr, 55, "Материалы разргружены! В фургоне: %d/5000 матов", Furgon[tmpcar-furabiker[0]][gBiker]);
			SCM(playerid, TEAM_GROVE_COLOR, YCMDstr);
			format(YCMDstr, 28, "Склад Якудза: %d/50000", FracBank[0][fyakuzamats]);
			SCM(playerid, COLOR_WHITE,YCMDstr);
			return true;
		}
		else if(PlayerToPoint(6.0,playerid,681.7425,-441.0584,16.3359))
		{
			if(FracBank[0][fMMats] >= 50000) return SCM(playerid,COLOR_GREY, "Склад заполнен");
			FracBank[0][fMMats] += Furgon[tmpcar-furabiker[0]][gBiker];
			Furgon[tmpcar-furabiker[0]][gBiker] = 0;
			if(FracBank[0][fMMats] > 50000) FracBank[0][fMMats] = 50000;
			SCM(playerid,COLOR_GREEN, "Материалы разгружены");
		}
	}
	return true;
}
CMD:vertmat(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pMember] != 3) return true;
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 548) return SCM(playerid,COLOR_GREY, "Вы не в загрузочном вертолёте!");
	SCM(playerid,COLOR_WHITE, "Отправляйтесь на корабль, для загрузки деталей для оружия!");
	SetPlayerRaceCheckpoint(playerid, 2,-1420.4194,1485.6796,11.8084,0.0,0.0,0.0, 6.0);
	SetPVarInt(playerid, "loading_vert", 1);
	return true;
}
CMD:newsbank(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	switch(PI[playerid][pMember])
	{
	case 9: format(YCMDstr, 35, "В банке SA News: $%d", FracBank[0][fSfnews]);
	default:return true;
	}
	SCM(playerid, 0x6495EDFF, YCMDstr);
	return true;
}
CMD:newswithdraw(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pLeader] == 9)
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /newswithdraw [количество]");
	if(params[0] < 1) return SCM(playerid, COLOR_GREY, "Неправильное количество денег!");
	if(PI[playerid][pMember] == 9 && PI[playerid][pRank] == 7)
	{
		if(FracBank[0][fSfnews] == 0) { SCM(playerid, COLOR_GREY, "В банке SA News нет денег"); return true; }
		if(FracBank[0][fSfnews] < params[0]) { SCM(playerid, COLOR_GREY, "В банке SA News нет столько денег"); return true; }
		FracBank[0][fSfnews] -= params[0];
		PI[playerid][pCash] += params[0];
		format(YCMDstr, 45, "Вы сняли с банка SA News: $%d", params[0]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
	}
	SaveMySQL(1);
	return true;
}
CMD:ginfo(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(PI[playerid][pLeader] > 15 || PI[playerid][pMember] > 15) return SCM(playerid,COLOR_GREY,"• У Вас нет доступа к общаку Groove Street Gang!");
	if(PI[playerid][pLogin] == 0) return true;
	if(!PlayerToPoint(3.0,playerid,2490.7520,-1700.0209,1014.7344)) return SCM(playerid, COLOR_RED, "{ffffff}• Вы не возле общака!");
	format(YCMDstr, 40,"- Деньги\n- Наркотики\n- Материалы");
	SPDEx(playerid,5220,2,"{0B9B17}Общак Grove Street Gang",YCMDstr,"Далее","Отмена");
	return true;
}
CMD:vinfo(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(PI[playerid][pLeader] > 13 || PI[playerid][pMember] > 13) return SCM(playerid,COLOR_GREY,"• У Вас нет доступа к общаку Vagos Gang!");
	if(PI[playerid][pLogin] == 0) return true;
	if(!PlayerToPoint(3.0,playerid,301.2966,302.2870,1003.5391)) return SCM(playerid, COLOR_RED, "{ffffff}• Вы не возле общака!");
	format(YCMDstr, 40,"- Деньги\n- Наркотики\n- Материалы");
	SPDEx(playerid,7220,2,"{CCEB04}Общак Vagos Gang",YCMDstr,"Далее","Отмена");
	return true;
}
CMD:ainfo(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(PI[playerid][pLeader] > 17 || PI[playerid][pMember] > 17) return SCM(playerid,COLOR_GREY,"• У Вас нет доступа к общаку  Aztec Gang!");
	if(PI[playerid][pLogin] == 0) return true;
	if(!PlayerToPoint(3.0,playerid,-45.9877,1411.1875,1084.4297)) return SCM(playerid, COLOR_RED, "{ffffff}• Вы не возле общака!");
	format(YCMDstr, 40,"- Деньги\n- Наркотики\n- Материалы");
	SPDEx(playerid,8220,2,"{05DADA}Общак Aztec Gang",YCMDstr,"Далее","Отмена");
	return true;
}
CMD:rinfo(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(PI[playerid][pLeader] > 18 || PI[playerid][pMember] > 18) return SCM(playerid,COLOR_GREY,"• У Вас нет доступа к общаку  Rifa Gang!");
	if(PI[playerid][pLogin] == 0) return true;
	if(!PlayerToPoint(3.0,playerid,2805.7529,-1171.4226,1025.5703)) return SCM(playerid, COLOR_RED, "{ffffff}• Вы не возле общака!");
	format(YCMDstr, 40,"- Деньги\n- Наркотики\n- Материалы");
	SPDEx(playerid,9330,2,"{3582AE}Общак Rifa Gang",YCMDstr,"Далее","Отмена");
	return true;
}
CMD:binfo(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(PI[playerid][pLeader] > 12 || PI[playerid][pMember] > 12) return SCM(playerid,COLOR_GREY,"• У Вас нет доступа к общаку   Ballas Gang!");
	if(PI[playerid][pLogin] == 0) return true;
	if(!PlayerToPoint(3.0,playerid,-2170.3979,646.4745,1057.5938)) return SCM(playerid, COLOR_RED, "{ffffff}• Вы не возле общака!");
	format(YCMDstr, 40,"- Деньги\n- Наркотики\n- Материалы");
	SPDEx(playerid,1140,2,"{A600C0}Общак Ballas Gang",YCMDstr,"Далее","Отмена");
	return true;
}
CMD:minfo(playerid, params[])
{
	if(!IsPlayerConnected(playerid)) return true;
	if(PI[playerid][pLeader] > 23 || PI[playerid][pMember] > 23) return SCM(playerid,COLOR_GREY,"• У Вас нет доступа к общаку байкеров!");
	if(PI[playerid][pLogin] == 0) return true;
	if(!PlayerToPoint(3.0,playerid,510.9678,-74.1802,998.7578)) return SCM(playerid, COLOR_RED, "{ffffff}• Вы не возле общака!");
	format(YCMDstr, 40,"- Деньги\n- Наркотики\n- Материалы");
	SPDEx(playerid,2330,2,"{A600C0}Общак байкеров",YCMDstr,"Далее","Отмена");
	return true;
}
CMD:sklad(playerid,params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pMember] == 5 && PI[playerid][pRank] >= 4)
	{
		if(FracBank[0][fskllcn] == 0)
		{
			FracBank[0][fskllcn] = 1;
			format(YCMDstr, 128, "Общак закрыт Замом/Лидером %s", Name(playerid));
			SendFamilyMessage(5,COLOR_REDD, YCMDstr);
		}
		else
		{
			FracBank[0][fskllcn] = 0;
			format(YCMDstr, 128, "Общак открыт Замом/Лидером %s", Name(playerid));
			SendFamilyMessage(5,COLOR_GREEN, YCMDstr);
		}
	}
	if(PI[playerid][pMember] == 6 && PI[playerid][pRank] >= 4)
	{
		if(FracBank[0][fsklyak] == 0)
		{
			FracBank[0][fsklyak] = 1;
			format(YCMDstr, 128, "Общак закрыт Замом/Лидером %s", Name(playerid));
			SendFamilyMessage(6,COLOR_REDD, YCMDstr);
		}
		else
		{
			FracBank[0][fsklyak] = 0;
			format(YCMDstr, 128, "Общак открыт Замом/Лидером %s", Name(playerid));
			SendFamilyMessage(6,COLOR_GREEN, YCMDstr);
		}
	}
	if(PI[playerid][pMember] == 14 && PI[playerid][pRank] >= 4)
	{
		if(FracBank[0][fsklrus] == 0)
		{
			FracBank[0][fsklrus] = 1;
			format(YCMDstr, 128, "Общак закрыт Замом/Лидером %s", Name(playerid));
			SendFamilyMessage(14,COLOR_REDD, YCMDstr);
		}
		else
		{
			FracBank[0][fsklrus] = 0;
			format(YCMDstr, 128, "Общак открыт Замом/Лидером %s", Name(playerid));
			SendFamilyMessage(14,COLOR_GREEN, YCMDstr);
		}
	}
	if(PI[playerid][pMember] == 12 && PI[playerid][pRank] >= 4)
	{
		if(FracBank[0][fsklballas] == 0)
		{
			FracBank[0][fsklballas] = 1;
			format(YCMDstr, 128, "Общак закрыт Замом/Лидером %s", Name(playerid));
			SendFamilyMessage(12,COLOR_REDD, YCMDstr);
		}
		else
		{
			FracBank[0][fsklballas] = 0;
			format(YCMDstr, 128, "Общак открыт Замом/Лидером %s", Name(playerid));
			SendFamilyMessage(12,COLOR_GREEN, YCMDstr);
		}
	}
	if(PI[playerid][pMember] == 13 && PI[playerid][pRank] >= 4)
	{
		if(FracBank[0][fsklvagos] == 0)
		{
			FracBank[0][fsklvagos] = 1;
			format(YCMDstr, 128, "Общак закрыт Замом/Лидером %s", Name(playerid));
			SendFamilyMessage(13,COLOR_REDD, YCMDstr);
		}
		else
		{
			FracBank[0][fsklvagos] = 0;
			format(YCMDstr, 128, "Общак открыт Замом/Лидером %s", Name(playerid));
			SendFamilyMessage(13,COLOR_GREEN, YCMDstr);
		}
	}
	if(PI[playerid][pMember] == 15 && PI[playerid][pRank] >= 4)
	{
		if(FracBank[0][fsklgrove] == 0)
		{
			FracBank[0][fsklgrove] = 1;
			format(YCMDstr, 128, "Общак закрыт Замом/Лидером %s", Name(playerid));
			SendFamilyMessage(15,COLOR_REDD, YCMDstr);
		}
		else
		{
			FracBank[0][fsklgrove] = 0;
			format(YCMDstr, 128, "Общак открыт Замом/Лидером %s", Name(playerid));
			SendFamilyMessage(15,COLOR_GREEN, YCMDstr);
		}
	}
	if(PI[playerid][pMember] == 17 && PI[playerid][pRank] >= 4)
	{
		if(FracBank[0][fsklaztec] == 0)
		{
			FracBank[0][fsklaztec] = 1;
			format(YCMDstr, 128, "Общак закрыт Замом/Лидером %s", Name(playerid));
			SendFamilyMessage(17,COLOR_REDD, YCMDstr);
		}
		else
		{
			FracBank[0][fsklaztec] = 0;
			format(YCMDstr, 128, "Общак открыт Замом/Лидером %s", Name(playerid));
			SendFamilyMessage(17,COLOR_GREEN, YCMDstr);
		}
	}
	if(PI[playerid][pMember] == 18 && PI[playerid][pRank] >= 4)
	{
		if(FracBank[0][fsklrifa] == 0)
		{
			FracBank[0][fsklrifa] = 1;
			format(YCMDstr, 128, "Общак закрыт Замом/Лидером %s", Name(playerid));
			SendFamilyMessage(18,COLOR_REDD, YCMDstr);
		}
		else
		{
			FracBank[0][fsklrifa] = 0;
			format(YCMDstr, 128, "Общак открыт Замом/Лидером %s", Name(playerid));
			SendFamilyMessage(18,COLOR_GREEN, YCMDstr);
		}
	}
	if(PI[playerid][pMember] == 23 && PI[playerid][pRank] >= 4)
	{
		if(FracBank[0][fsklbiker] == 0)
		{
			FracBank[0][fsklbiker] = 1;
			format(YCMDstr, 128, "Общак закрыт Замом/Лидером %s", Name(playerid));
			SendFamilyMessage(23,COLOR_REDD, YCMDstr);
		}
		else
		{
			FracBank[0][fsklbiker] = 0;
			format(YCMDstr, 128, "Общак открыт Замом/Лидером %s", Name(playerid));
			SendFamilyMessage(23,COLOR_GREEN, YCMDstr);
		}
	}
	return true;
}
CMD:govbalance(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pLeader] != 22) return SCM(playerid,COLOR_GREY,"Вы не Президент Штата СА");
	if(PlayerToPoint(3.0,playerid,-469.3982,293.0259,2004.5850))
	{
		format(YCMDstr, 40, "Баланс фонда составляет: $%d", FracBank[0][nFond]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
	}
	else SCM(playerid, COLOR_GREY, "Вы не возле сейфа!");
	return true;
}
CMD:govwithdraw(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pLeader] != 22) return SCM(playerid,COLOR_GREY,"Вы не Президент Штата СА");
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /govwithdraw [количество]");
	if(params[0] < 1) { SCM(playerid, COLOR_GREY, "Неправильный количество денег!"); return true; }
	if(PlayerToPoint(3.0,playerid,-469.3982,293.0259,2004.5850))
	{
		if(PI[playerid][pMember] == 22 && PI[playerid][pRank] == 9)
		{
			if(FracBank[0][nFond] <= 0) { SCM(playerid, COLOR_GREY, "В фонде нет денег"); return true; }
			if(FracBank[0][nFond] < params[0]) { SCM(playerid, COLOR_GREY, "В фонде нет столько денег"); return true; }
			FracBank[0][nFond] -= params[0];
			PI[playerid][pCash] += params[0];
			format(YCMDstr, 60, "Вы сняли с фонда: $%d", params[0]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
		}
	}
	else SCM(playerid, COLOR_GREY, "Вы не возле сейфа!");
	return true;
}
CMD:govfond(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pLeader] != 22) return SCM(playerid,COLOR_GREY,"Вы не Президент Штата СА");
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /govfond [количество]");
	if(params[0] < 1 || PI[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, "Неправильный количество денег!"); return true; }
	if(PlayerToPoint(3.0,playerid,-469.3982,293.0259,2004.5850))
	{
		if(PI[playerid][pMember] == 22)
		{
			FracBank[0][nFond] += params[0];
			PI[playerid][pCash] -= params[0];
			format(YCMDstr, 60, "Вы положили в фонд: $%d", params[0]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
		}
	}
	else SCM(playerid, COLOR_GREY, "Вы не возле сейфа!");
	return true;
}
CMD:mafiabalance(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	switch(PI[playerid][pMember])
	{
	case 6: format(YCMDstr, 40, "В банке мафии Yakuza: $%d", FracBank[0][nYakuza]);
	case 14: format(YCMDstr, 45, "В банке Русской мафии: $%d", FracBank[0][nRm]);
	case 5: format(YCMDstr, 40, "В банке мафии LCN: $%d", FracBank[0][nLcn]);
	default:return true;
	}
	SCM(playerid, 0x6495EDFF, YCMDstr);
	return true;
}
CMD:mafiawithdraw(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pLeader] == 6 || PI[playerid][pLeader] == 14 || PI[playerid][pLeader] == 5)
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /mafiawithdraw [количество]");
	if(params[0] < 1) { SCM(playerid, COLOR_GREY, "Неправильный количество денег!"); return true; }
	if(PI[playerid][pMember] == 6 && PI[playerid][pRank] == 5)
	{
		if(FracBank[0][nYakuza] <= 0) { SCM(playerid, COLOR_GREY, "В банке мафии Yakuza нет денег"); return true; }
		if(FracBank[0][nYakuza] < params[0]) { SCM(playerid, COLOR_GREY, "В банке мафии Yakuza нет столько денег"); return true; }
		FracBank[0][nYakuza] -= params[0];
		PI[playerid][pCash] += params[0];
		format(YCMDstr, 60, "Вы сняли с банка мафии Yakuza: $%d", params[0]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
	}
	else if(PI[playerid][pMember] == 14 && PI[playerid][pRank] == 5)
	{
		if(FracBank[0][nRm] <= 0) { SCM(playerid, COLOR_GREY, "В банке Русской мафии нет денег"); return true; }
		if(FracBank[0][nRm] < params[0]) { SCM(playerid, COLOR_GREY, "В банке Русской мафии нет столько денег"); return true; }
		FracBank[0][nRm] -= params[0];
		PI[playerid][pCash] += params[0];
		format(YCMDstr, 60, "Вы сняли с банка Русской мафии: $%d", params[0]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
	}
	else if(PI[playerid][pMember] == 5 && PI[playerid][pRank] == 5)
	{
		if(FracBank[0][nLcn] <= 0) { SCM(playerid, COLOR_GREY, "В банке мафии LCN нет денег"); return true; }
		if(FracBank[0][nLcn] < params[0]) { SCM(playerid, COLOR_GREY, "В банке мафии LCN нет столько денег"); return true; }
		FracBank[0][nLcn] -= params[0];
		PI[playerid][pCash] += params[0];
		format(YCMDstr, 60, "Вы сняли с банка мафии LCN: $%d", params[0]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
	}
	return true;
}
CMD:mafiabank(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pMember] == 6 || PI[playerid][pMember] == 14 || PI[playerid][pMember] == 5)
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /mafiabank [количество]");
	if(params[0] < 1 || PI[playerid][pCash] < params[0]) { SCM(playerid, COLOR_GREY, "Неправильный количество денег!"); return true; }
	if(PI[playerid][pMember] == 6)
	{
		FracBank[0][nYakuza] += params[0];
		PI[playerid][pCash] -= params[0];
		format(YCMDstr, 60, "Вы положили в банк мафии Yakuza: $%d", params[0]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
	}
	else if(PI[playerid][pMember] == 14)
	{
		FracBank[0][nRm] += params[0];
		PI[playerid][pCash] -= params[0];
		format(YCMDstr, 60, "Вы положили в банк Русской Мафии: $%d", params[0]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
	}
	else if(PI[playerid][pMember] == 5)
	{
		FracBank[0][nLcn] += params[0];
		PI[playerid][pCash] -= params[0];
		format(YCMDstr, 60, "Вы положили в банк мафии LCN: $%d", params[0]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
	}
	return true;
}
CMD:weapons(playerid, params[])
{
	new x_nr[256];
	if(IsPlayerConnected(playerid))
	{
		if(sscanf(params, "s[64]", x_nr))
		{
			SCM(playerid, 0xAFAFAFAA, "Введите: /weapons [значение]");
			return true;
		}
		if(strcmp(x_nr, "put",true) == 0)
		{
			new tmpcar = GetNearestVehicle(playerid);
			new Float:cx,Float:cy,Float:cz;
			GetVehiclePos(tmpcar, cx, cy, cz);
			if(!PlayerToPoint(4.0, playerid, cx, cy, cz)) return true;
			if(GetVehicleModel(GetNearestVehicle(playerid)) != 459) return SCM(playerid,COLOR_GREY, "Вы не возле фургона байкеров!");
			if(PI[playerid][pMember] == 23)
			{
				if(PI[playerid][pMats] < 250)
				{
					SCM(playerid,0xB4B5B7FF, "У Вас нет материалов с собой");
					format(YCMDstr, 128, "Материалы в фургоне: %d/10000", Furgon[tmpcar-furabiker[0]][gBiker]);
					SCM(playerid, 0xFF3300, YCMDstr);
					return true;
				}
				if(Furgon[tmpcar-furabiker[0]][gBiker] >= 5000) return SCM(playerid,0xB4B5B7FF, "Фургон байкеров заполнен");
				SCM(playerid, 0x99CC00, "Вы положили в фургон байкеров 250 материалов");
				Furgon[tmpcar-furabiker[0]][gBiker] += 250;
				PI[playerid][pMats] -= 250;
				FL[playerid][usemats] = 0;
				format(YCMDstr, 128, "Материалы в фургоне: %d/5000", Furgon[tmpcar-furabiker[0]][gBiker]);
				SCM(playerid, 0xFF3300, YCMDstr);
				RemovePlayerAttachedObject(playerid, 1);
				ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
			}
		}
		else if(strcmp(x_nr, "get",true) == 0)
		{
			new tmpcar = GetNearestVehicle(playerid);
			new Float:cx,Float:cy,Float:cz;
			GetVehiclePos(tmpcar, cx, cy, cz);
			if(!PlayerToPoint(4.0, playerid, cx, cy, cz)) return true;
			if(GetVehicleModel(GetNearestVehicle(playerid)) != 609) return SCM(playerid,COLOR_GREY, "Вы не возле фургона завода К.А.С.С");
			{
				if(PI[playerid][pMember] == 23)
				{
					if(MatHaulZ[tmpcar-zcar[0]][mLoadZ] <= 0) return SCM(playerid, COLOR_GRAD1, "В фургоне завода К.А.С.С. нет оружия!");
					if(PI[playerid][pMats] >= 250) return SCM(playerid,COLOR_GRAD1, "Вы не можете взять больше");
					SCM(playerid, 0xCC9933, "Вы взяли 250 материалов с фургона завода К.А.С.С");
					SCM(playerid, 0xCC0033, "Положите ящик в фургон байкеров, используйте /weapons put, чтобы положить материалы в фургон");
					PI[playerid][pMats] += 250;
					SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
					ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
					FL[playerid][usemats] = 1;
					MatHaulZ[tmpcar-zcar[0]][mLoadZ] -= 250;
				}
			}
		}
	}
	return true;
}
CMD:loadmus(playerid, params[])
{
	if(!PI[playerid][pLogin] || PI[playerid][pJob] != 11) return true;
	new tmpcar = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 408) return SCM(playerid,COLOR_GREY, "Вы не в мусоровозе!");
	if(MusorWork[tmpcar-muscar[0]][MusGruz] == 500) return SCM(playerid,0xB4B5B7FF, "Машина заполнена");
	if(PlayerToPoint(6.0,playerid,1230.3865,-915.3129,43.0938))
    {
	    if(FracBank[0][musorbak1] < 500) return SCM(playerid,0xB4B5B7FF, "Недостаточно мусора, приходите позже!");
		MusorWork[tmpcar-muscar[0]][MusGruz] += 500;
		format(YCMDstr,36,"+%d/500",MusorWork[tmpcar-muscar[0]][MusGruz]);
		GameTextForPlayer(playerid,YCMDstr,1000,4);
		format(YCMDstr, 74, "Вы загрузили контейнер с мусором. Кол-во [%d]. Отвезите на свалку.",MusorWork[tmpcar-muscar[0]][MusGruz]);
	    SCM(playerid, COLOR_GRAD1, YCMDstr);
	    FracBank[0][musorbak1] -= 500;
		SetPlayerCheckpoint(playerid,2183.1965,-1993.3499,14.1243,8);
		mysql_format(DATABASE, YCMDstr, 56, "UPDATE `frakbank` SET `FracBank[0][musorbak1]` = '%i'",FracBank[0][musorbak1]);
		mysql_function_query(DATABASE,YCMDstr,false,"","");
		BenzFrac();
	}
	if(PlayerToPoint(6.0,playerid,2119.9834,-1829.9453,13.5547))
	{
	    if(FracBank[0][musorbak2] < 500) return SCM(playerid,0xB4B5B7FF, "Недостаточно мусора, приходите позже!");
		MusorWork[tmpcar-muscar[0]][MusGruz] += 500;
		format(YCMDstr,36,"+%d/500",MusorWork[tmpcar-muscar[0]][MusGruz]);
		GameTextForPlayer(playerid,YCMDstr,1000,4);
		format(YCMDstr, 74, "Вы загрузили контейнер с мусором. Кол-во [%d]. Отвезите на свалку.",MusorWork[tmpcar-muscar[0]][MusGruz]);
	    SCM(playerid, COLOR_GRAD1, YCMDstr);
	    FracBank[0][musorbak2] -= 500;
	    SetPlayerCheckpoint(playerid,2183.1965,-1993.3499,14.1243,8);
		mysql_format(DATABASE, YCMDstr, 56, "UPDATE `frakbank` SET `FracBank[0][musorbak2]` = '%i'",FracBank[0][musorbak2]);
		mysql_function_query(DATABASE,YCMDstr,false,"","");
		BenzFrac();
	}
	if(PlayerToPoint(6.0,playerid,2379.4226,-1939.8505,13.5469))
	{
	    if(FracBank[0][musorbak3] < 500) return SCM(playerid,0xB4B5B7FF, "Недостаточно мусора, приходите позже!");
		MusorWork[tmpcar-muscar[0]][MusGruz] += 500;
		format(YCMDstr,36,"+%d/500",MusorWork[tmpcar-muscar[0]][MusGruz]);
		GameTextForPlayer(playerid,YCMDstr,1000,4);
		format(YCMDstr, 74, "Вы загрузили контейнер с мусором. Кол-во [%d]. Отвезите на свалку.",MusorWork[tmpcar-muscar[0]][MusGruz]);
	    SCM(playerid, COLOR_GRAD1, YCMDstr);
	    FracBank[0][musorbak3] -= 500;
	    SetPlayerCheckpoint(playerid,2183.1965,-1993.3499,14.1243,8);
		mysql_format(DATABASE, YCMDstr, 56, "UPDATE `frakbank` SET `FracBank[0][musorbak3]` = '%i'",FracBank[0][musorbak3]);
		mysql_function_query(DATABASE,YCMDstr,false,"","");
		BenzFrac();
	}
	if(PlayerToPoint(6.0,playerid,782.6826,-1637.4572,13.3828))
	{
	    if(FracBank[0][musorbak4] < 500) return SCM(playerid,0xB4B5B7FF, "Недостаточно мусора, приходите позже!");
		MusorWork[tmpcar-muscar[0]][MusGruz] += 500;
		format(YCMDstr,36,"+%d/500",MusorWork[tmpcar-muscar[0]][MusGruz]);
		GameTextForPlayer(playerid,YCMDstr,1000,4);
		format(YCMDstr, 74, "Вы загрузили контейнер с мусором. Кол-во [%d]. Отвезите на свалку.",MusorWork[tmpcar-muscar[0]][MusGruz]);
	    SCM(playerid, COLOR_GRAD1, YCMDstr);
	    FracBank[0][musorbak4] -= 500;
	    SetPlayerCheckpoint(playerid,2183.1965,-1993.3499,14.1243,8);
		mysql_format(DATABASE, YCMDstr, 56, "UPDATE `frakbank` SET `FracBank[0][musorbak4]` = '%i'",FracBank[0][musorbak4]);
		mysql_function_query(DATABASE,YCMDstr,false,"","");
		BenzFrac();
	}
	if(PlayerToPoint(6.0,playerid,1007.9167,-907.3416,42.1797))
	{
	    if(FracBank[0][musorbak5] < 500) return SCM(playerid,0xB4B5B7FF, "Недостаточно мусора, приходите позже!");
		MusorWork[tmpcar-muscar[0]][MusGruz] += 500;
		format(YCMDstr,36,"+%d/500",MusorWork[tmpcar-muscar[0]][MusGruz]);
		GameTextForPlayer(playerid,YCMDstr,1000,4);
		format(YCMDstr, 74, "Вы загрузили контейнер с мусором. Кол-во [%d]. Отвезите на свалку.",MusorWork[tmpcar-muscar[0]][MusGruz]);
	    SCM(playerid, COLOR_GRAD1, YCMDstr);
	    FracBank[0][musorbak5] -= 500;
	    SetPlayerCheckpoint(playerid,2183.1965,-1993.3499,14.1243,8);
		mysql_format(DATABASE, YCMDstr, 56, "UPDATE `frakbank` SET `FracBank[0][musorbak5]` = '%i'",FracBank[0][musorbak5]);
		mysql_function_query(DATABASE,YCMDstr,false,"","");
		BenzFrac();
	}
	if(PlayerToPoint(6.0,playerid,1030.5369,-1363.9471,13.5732))
	{
	    if(FracBank[0][musorbak6] < 500) return SCM(playerid,0xB4B5B7FF, "Недостаточно мусора, приходите позже!");
		MusorWork[tmpcar-muscar[0]][MusGruz] += 500;
		format(YCMDstr,36,"+%d/500",MusorWork[tmpcar-muscar[0]][MusGruz]);
		GameTextForPlayer(playerid,YCMDstr,1000,4);
		format(YCMDstr, 64, "Вы загрузили контейнер с мусором. Кол-во [%d]. Отвезите на свалку.",MusorWork[tmpcar-muscar[0]][MusGruz]);
	    SCM(playerid, COLOR_GRAD1, YCMDstr);
	    FracBank[0][musorbak6] -= 500;
	    SetPlayerCheckpoint(playerid,2183.1965,-1993.3499,14.1243,8);
		mysql_format(DATABASE, YCMDstr, 56, "UPDATE `frakbank` SET `FracBank[0][musorbak6]` = '%i'",FracBank[0][musorbak6]);
		mysql_function_query(DATABASE,YCMDstr,false,"","");
		BenzFrac();
	}
	if(PlayerToPoint(6.0,playerid,2385.2700,-1486.5580,24.0000))
	{
	    if(FracBank[0][musorbak7] < 500) return SCM(playerid,0xB4B5B7FF, "Недостаточно мусора, приходите позже!");
		MusorWork[tmpcar-muscar[0]][MusGruz] += 500;
		format(YCMDstr,36,"+%d/500",MusorWork[tmpcar-muscar[0]][MusGruz]);
		GameTextForPlayer(playerid,YCMDstr,1000,4);
		format(YCMDstr, 74, "Вы загрузили контейнер с мусором. Кол-во [%d]. Отвезите на свалку.",MusorWork[tmpcar-muscar[0]][MusGruz]);
	    SCM(playerid, COLOR_GRAD1, YCMDstr);
	    FracBank[0][musorbak7] -= 500;
	    SetPlayerCheckpoint(playerid,2183.1965,-1993.3499,14.1243,8);
		mysql_format(DATABASE, YCMDstr, 56, "UPDATE `frakbank` SET `FracBank[0][musorbak7]` = '%i'",FracBank[0][musorbak7]);
		mysql_function_query(DATABASE,YCMDstr,false,"","");
		BenzFrac();
	}
    return true;
}
CMD:unloadmus(playerid, params[])
{
	if(!PI[playerid][pLogin] || PI[playerid][pJob] != 11) return true;
	if(IsPlayerConnected(playerid))
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 408) return SCM(playerid,COLOR_GREY, "Вы не в мусоровозе!");
    new tmpcar = GetPlayerVehicleID(playerid);
    if(MusorWork[tmpcar-muscar[0]][MusGruz] == 0) return SCM(playerid,0xB4B5B7FF, "Машина пуста");
	if(PlayerToPoint(7.0,playerid,2183.1965,-1993.3499,14.1243))
	{
		format(YCMDstr, 128, "Вы разгрузили [%d] мешков с мусором. Ваш Заработок {FF0000}$%d{20B2AA}",MusorWork[tmpcar-muscar[0]][MusGruz],MusorWork[tmpcar-muscar[0]][MusGruz]*2);
	    SCM(playerid, COLOR_GRAD1, YCMDstr);
	    PI[playerid][pCash] += MusorWork[tmpcar-muscar[0]][MusGruz]*2;
	    MusorWork[tmpcar-muscar[0]][MusGruz] = 0;
	}
    return true;
}
CMD:materials(playerid, params[])
{
	new x_nr[256];
	if(IsPlayerConnected(playerid))
	{
		if(sscanf(params, "s[64]", x_nr))
		{
			SCM(playerid, 0xAFAFAFAA, "Введите: /materials [значение]");
			return true;
		}
		if(strcmp(x_nr, "put",true) == 0)
		{
			new tmpcar = GetNearestVehicle(playerid);
			if(GetVehicleModel(GetNearestVehicle(playerid)) != 482) return SCM(playerid,COLOR_GREY, "Вы не в фургоне/Около фургона!");
			switch(PI[playerid][pMember])
			{
			case 12:
				{
					if(PI[playerid][pMats] < 250)
					{
						SCM(playerid,0xB4B5B7FF, "У Вас нет материалов с собой");
						format(YCMDstr, 128, "Материалы в фургоне: %d/5000", Furi[tmpcar-matsfura][gBallas]);
						SCM(playerid, 0x00D900C8, YCMDstr);
						return true;
					}
					if(Furi[tmpcar-matsfura][gBallas] >= 5000) return SCM(playerid,0xB4B5B7FF, "Фургон заполнен");
					SCM(playerid, 0xFFFFFFAA, "Вы положили в фургон 250 матов");
					Furi[tmpcar-matsfura][gBallas] += 250;
					PI[playerid][pMats] -=250;
					FL[playerid][usemats] = 0;
					RemovePlayerAttachedObject(playerid, 1);
					format(YCMDstr, 128, "Материалы в фургоне: %d/5000", Furi[tmpcar-matsfura][gBallas]);
					SCM(playerid, 0x00D900C8, YCMDstr);
					ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
				}
			case 13:
				{
					if(PI[playerid][pMats] < 250)
					{
						SCM(playerid,0xB4B5B7FF, "У вас нет материалов с собой");
						format(YCMDstr, 128, "Материалы: %d/5000", Furi[tmpcar-matsfuravagos][gVagos]);
						SCM(playerid, 0x00D900C8, YCMDstr);
						return true;
					}
					if(Furi[tmpcar-matsfuravagos][gVagos] >= 5000) return SCM(playerid,0xB4B5B7FF, "Фургон заполнен");
					SCM(playerid, 0xFFFFFFAA, "Вы положили в фургон 250 матов");
					Furi[tmpcar-matsfuravagos][gVagos] += 250;
					PI[playerid][pMats] -= 250;
					FL[playerid][usemats] = 0;
					RemovePlayerAttachedObject(playerid, 1);
					format(YCMDstr, 128, "Материалы: %d/5000", Furi[tmpcar-matsfuravagos][gVagos]);
					SCM(playerid, 0x00D900C8, YCMDstr);
					ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
				}
			case 15:
				{
					if(PI[playerid][pMats] < 250)
					{
						SCM(playerid,0xB4B5B7FF, "У вас нет материалов с собой");
						format(YCMDstr, 128, "Материалы: %d/5000", Furi[tmpcar-matsfuragrove][gGrove]);
						SCM(playerid, 0x00D900C8, YCMDstr);
						return true;
					}
					if(Furi[tmpcar-matsfuragrove][gGrove] >= 5000) return SCM(playerid,0xB4B5B7FF, "Фургон заполнен");
					SCM(playerid, 0xFFFFFFAA, "Вы положили в фургон 250 матов");
					Furi[tmpcar-matsfuragrove][gGrove] += 250;
					PI[playerid][pMats] -=250;
					FL[playerid][usemats] = 0;
					RemovePlayerAttachedObject(playerid, 1);
					format(YCMDstr, 128, "Материалы: %d/5000", Furi[tmpcar-matsfuragrove][gGrove]);
					SCM(playerid, 0x00D900C8, YCMDstr);
					ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
				}
			case 17:
				{
					if(PI[playerid][pMats] < 250)
					{
						SCM(playerid,0xB4B5B7FF, "У вас нет материалов с собой");
						format(YCMDstr, 128, "Материалы: %d/5000", Furi[tmpcar-matsfuraactek][gAztek]);
						SCM(playerid, 0x00D900C8, YCMDstr);
						return true;
					}
					if(Furi[tmpcar-matsfuraactek][gAztek] >= 5000)return SCM(playerid,0xB4B5B7FF, "Фургон заполнен");
					SCM(playerid, 0xFFFFFFAA, "Вы положили в фургон 250 матов");
					Furi[tmpcar-matsfuraactek][gAztek] += 250;
					PI[playerid][pMats] -= 250;
					FL[playerid][usemats] = 0;
					RemovePlayerAttachedObject(playerid, 1);
					format(YCMDstr, 128, "Материалы: %d/5000", Furi[tmpcar-matsfuraactek][gAztek]);
					SCM(playerid, 0x00D900C8, YCMDstr);
					ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
				}
			case 18:
				{
					if(PI[playerid][pMats] < 250)
					{
						SCM(playerid, 0xB4B5B7FF, "У вас нет материалов с собой");
						format(YCMDstr, 128, "Материалы: %d/5000", Furi[tmpcar-matsfurarifa][gRifa]);
						SCM(playerid, 0x00D900C8, YCMDstr);
						return true;
					}
					if(Furi[tmpcar-matsfurarifa][gRifa] >= 5000)return SCM(playerid,0xB4B5B7FF, "Фургон заполнен");
					SCM(playerid, 0xFFFFFFAA, "Вы положили в фургон 250 матов");
					Furi[tmpcar-matsfurarifa][gRifa] += 250;
					PI[playerid][pMats] -= 250;
					FL[playerid][usemats] = 0;
					RemovePlayerAttachedObject(playerid, 1);
					format(YCMDstr, 128, "Материалы: %d/5000", Furi[tmpcar-matsfurarifa][gRifa]);
					SCM(playerid, 0x00D900C8, YCMDstr);
					ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
				}
			}
		}
		else if(strcmp(x_nr, "get",true) == 0)
		{
			if(IsAGang(playerid))
			{
				if(PlayerToPoint(10.0,playerid,-1290.9072,501.4489,11.1953))
				{
					if(FracBank[0][farmmatsf] == 0)return SCM(playerid,0xB4B5B7FF, "Склад армии пуст");
					if(PI[playerid][pMats] >= 250) return SCM(playerid,0xB4B5B7FF, "Вы не можете взять больше");
					SCM(playerid, 0x6495EDFF, "Вы взяли 250 материалов со склада армии");
					SCM(playerid, 0xFFFFFFAA, "Несите ящик в грузовик, используйте /materials put, чтобы положить материалы в фургон");
					PI[playerid][pMats] += 250;
					SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
					ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
					FL[playerid][usemats] = 1;
					FracBank[0][farmmatsf] -= 250;
				}
				if(PlayerToPoint(10.0,playerid,316.8127,-167.5395,999.5938))
				{
					if(FracBank[0][farmmatbi] == 0) return SCM(playerid,0xB4B5B7FF, "Склад армии пуст");
					if(PI[playerid][pMats] >= 250) return SCM(playerid,0xB4B5B7FF, "Вы не можете взять больше");
					SCM(playerid, 0x6495EDFF, "Вы взяли 250 материалов со склада армии");
					SCM(playerid, 0xFFFFFFAA, "Несите ящик в грузовик, используйте /materials put, чтобы положить материалы в фургон");
					PI[playerid][pMats] += 250;
					SetPlayerAttachedObject(playerid, 1 , 2358, 1,0.11,0.36,0.0,0.0,90.0);
					ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
					FL[playerid][usemats] = 1;
					FracBank[0][farmmatbi] -= 250;
				}
			}
		}
	}
	return true;
}
CMD:warehouse(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	switch(PI[playerid][pMember])
	{
	case 1:
		{
			format(YCMDstr, 37, "Склад LSPD: %d/100000 материалов", FracBank[0][flspdmatbi]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			return true;
		}
	case 2:
		{
			format(YCMDstr, 34, "Склад FBI: %d/50000 материалов", FracBank[0][ffbimats]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			return true;
		}
	case 3:
		{
			format(YCMDstr, 41, "Склад ВМФ: %d/300000 материалов", FracBank[0][farmmatsf]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			format(YCMDstr, 128, "Склад завода К.А.С.С: %d/500000 ящиков оружия | %d/500000 деталей", FracBank[0][fzmatbi], FracBank[0][fzsklad]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			return true;
		}
	case 5:
		{
			format(YCMDstr, 34, "Склад LCN: %d/50000 материалов", FracBank[0][flcnmats]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			return true;
		}
	case 6:
		{
			format(YCMDstr, 37, "Склад Yakuza: %d/50000 материалов", FracBank[0][fyakuzamats]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			return true;
		}
	case 10:
		{
			format(YCMDstr, 35, "Склад SFPD: %d/50000 материалов", FracBank[0][fsfpdmats]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			return true;
		}
	case 12:
		{
			format(YCMDstr, 57, "Общак Ballas: %d/90000 материалов, %d наркотиков", FracBank[0][fBMats],FracBank[0][fBDrugs]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			return true;
		}
	case 13:
		{
			format(YCMDstr, 56, "Общак Vagos: %d/90000 материалов, %d наркотиков", FracBank[0][fVMats],FracBank[0][fVDrugs]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			return true;
		}
	case 14:
		{
			format(YCMDstr, 44, "Склад Russian Mafia: %d/50000 материалов", FracBank[0][frmmats]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			return true;
		}
	case 15:
		{
			format(YCMDstr, 56, "Общак Grove: %d/90000 материалов, %d наркотиков", FracBank[0][fGMats], FracBank[0][fGDrugs]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			return true;
		}
	case 17:
		{
			format(YCMDstr, 56, "Общак Aztec: %d/90000 материалов, %d наркотиков", FracBank[0][fCMats], FracBank[0][fCDrugs]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			return true;
		}
	case 18:
		{
			format(YCMDstr, 55, "Общак Rifa: %d/90000 материалов, %d наркотиков", FracBank[0][fRMats], FracBank[0][fRDrugs]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			return true;
		}
	case 19:
		{
			new string[171];
			format(string,171,"Склад К.А.С.С: %d/500000\nДетали К.А.С.С: %d/500000\n\nFBI: %d/50000\nLSPD: %d/100000\nSFPD: %d/50000\nLVPD: %d/50000\n\nВМФ: %d/300000\nСВ: %d/300000",
			FracBank[0][fzmatbi], FracBank[0][fzsklad],FracBank[0][ffbimats],FracBank[0][flspdmatbi],FracBank[0][fsfpdmats],FracBank[0][flvpdmats],FracBank[0][farmmatsf],FracBank[0][farmmatbi]);
			SPDEx(playerid,3845,0,"Склады фракций",string,"X","");
		}
	case 21:
		{
			format(YCMDstr, 35, "Склад LVPD: %d/50000 материалов", FracBank[0][flvpdmats]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			return true;
		}
	case 23:
		{
			format(YCMDstr, 70, "Общак: %d/50000 материалов, %d наркотиков | Денег: %d", FracBank[0][fMMats],FracBank[0][fMDrugs],FracBank[0][fMMoney]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			return true;
		}
	case 24:
		{
			new string[370];
			format(string,370,"Ящиков с оружием: %d/500000\nДеталей: %d/500000\nБензина: %d/50000\nНефти: %d/50000\n\nСклад СВ: %d/300000\n\nЦистерна LSPD: %d/10000\nЦистерна FBI: %d/10000\nЦистерна ВМФ: %d/10000\nЦистерна МЦСФ: %d/10000\nЦистерна МЦЛС: %d/10000\nЦистерна СВ: %d/10000\nЦистерна АП: %d/10000\nЦистерна К.А.С.С: %d/10000\nЦистерна SFPD: %d/10000",
			FracBank[0][fzmatbi],FracBank[0][fzsklad],FracBank[0][kassbenz],FracBank[0][kassnafta],FracBank[0][farmmatbi],FracBank[0][lspdbenz], FracBank[0][fbibenz], FracBank[0][vmfbenz], FracBank[0][medsfbenz], FracBank[0][medlsbenz], FracBank[0][zonabenz], FracBank[0][pravbenz], FracBank[0][kassbenzce], FracBank[0][sfpdbenz]);
			SPDEx(playerid,3843,0,"INFO",string,"X","");
		}
	}
	return true;
}
CMD:payday(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	PayDay();
	return true;
}
CMD:repaydebt(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pJob] == 0) return true;
	if(PI[playerid][pDolg] < 50) return SCM(playerid, COLOR_GRAD1, "Не достаточная сумма, для возврата долга!");
	switch(PI[playerid][pKrisha])
	{
	case 6:
		{
			SCM(playerid, COLOR_YELLOW, "Долг был возвращён мафии Yakuza!");
			format(YCMDstr, 256, "%s вернул долг в размере $%s",Name(playerid),PI[playerid][pDolg]);
			SendFamilyMessage(6,COLOR_YELLOW2, YCMDstr);
			FracBank[0][nYakuza] +=PI[playerid][pDolg] ;
			PI[playerid][pDolg] = 0;
		}
	case 5:
		{
			if(PI[playerid][pDolg] < 50) return SCM(playerid, COLOR_GRAD1, "Не достаточная сумма, для возврата долга!");
			SCM(playerid, COLOR_YELLOW, "Долг был возвращён LCN!");
			format(YCMDstr, 128, "%s вернул долг в размере $%s",Name(playerid),PI[playerid][pDolg]);
			SendFamilyMessage(5,COLOR_YELLOW2, YCMDstr);
			FracBank[0][nLcn] +=PI[playerid][pDolg];
			PI[playerid][pDolg] = 0;
		}
	case 14:
		{
			if(PI[playerid][pDolg] < 50) return SCM(playerid, COLOR_GRAD1, "Не достаточная сумма, для возврата долга!");
			SCM(playerid, COLOR_YELLOW, "Долг был возвращён Русской мафии!");
			format(YCMDstr, 128, "%s вернул долг в размере $%s",Name(playerid),PI[playerid][pDolg]);
			SendFamilyMessage(14, COLOR_YELLOW2, YCMDstr);
			FracBank[0][nRm] +=PI[playerid][pDolg] ;
			PI[playerid][pDolg] = 0;
		}
	}
	return true;
}
CMD:mydebts(playerid, params[])
{
	if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
	{
		if(PI[playerid][pLogin] == 0) return true;
		if(PI[playerid][pJob] == 0) return true;
		new mafiatext[10];
		if(PI[playerid][pKrisha] == 6) { mafiatext = "Yakuza"; }
		else if(PI[playerid][pKrisha] == 14) { mafiatext = "RM"; }
		else if(PI[playerid][pKrisha] == 5) { mafiatext = "LCN"; }
		else if(PI[playerid][pKrisha] == 0) { mafiatext = "Нет"; }
		format(YCMDstr,sizeof(YCMDstr), "Крыша: %s\nДолг: $%d",
		mafiatext,PI[playerid][pDolg]);
		SPDEx(playerid,69,0, "Информация о себе",YCMDstr, "Готово", "");
		return true;
	}
}
CMD:fgstyle(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pJob] != 6) return true;
	if(!PlayerToPoint(30.0,playerid,768.1588,6.5715,1000.7144)) return 	SCM(playerid, COLOR_GRAD1, "Вы не в спортзале.");
	new listitems[] = " [0] Начать урок по стилю Box\n [1] Начать урок по стилю Kong - Fu\n [2] Начать урок по стилю Kick - Box\n [3] Завершить урок Box\n [4] Завершить урок Kong - Fu\n [5] Завершить урок Kick - Box";
	SPDEx(playerid, 3439, 2, "Уроки боевых искусств", listitems, "Выбрать", "Отмена");
	return true;
}
CMD:unrent(playerid, params[])
{
 	if(GetPVarInt(playerid, "ArendKey") == -1)
	{
		SCM(playerid, 0xAFAFAFFF, "Вы не арендуете транспорт.");
		return 1;
	}
	new rc = GetPVarInt(playerid, "ArendKey");
	if(ArendInfo[rc][aPlayerID] != playerid)
	{
		SCM(playerid, 0xAFAFAFFF, "Вы не арендуете транспорт.");
		SetPVarInt(playerid, "ArendKey", -1);
		return 1;
	}
	new lockstatus = gCarLock[ArendInfo[rc][aID]];
	switch (lockstatus)
	{
	case 0:
		{
			UnLockCar(ArendInfo[rc][aID]);
			IsLocked[ArendInfo[rc][aID]] = 0;
		}
	case 1:
		{
			UnLockCar(ArendInfo[rc][aID]);
			IsLocked[ArendInfo[rc][aID]] = 0;
		}
	default:
		{
			SCM(playerid, COLOR_RED, "Ошибка!");
		}
	}
	SCM(playerid, 0xFFFFFFFF, "Вы отказались от аренды.");
	ArendInfo[rc][aPlayerID] = INVALID_PLAYER_ID;
	SetVehicleToRespawn(ArendInfo[rc][aID]);
	Fuell[ArendInfo[rc][aID]] = 100;
	arendtime[playerid] = 0;
	return true;
}
CMD:spawn(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 1 || GetPVarInt(playerid,"dostup") == 0) return true;
	SpawnPlayer(playerid);
	return true;
}
ALT:spawn:sp;
CMD:spcar(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 4 || GetPVarInt(playerid,"dostup") == 0) return true;
	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	return true;
}
CMD:fuellr(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 5 || GetPVarInt(playerid,"dostup") == 0) return true;
	new Float:pos;
	if(sscanf(params, "f",pos)) return SCM(playerid,COLOR_GRAD2, "Введите: /fuellr [радиус]");
	if(pos < 1 || pos > 300) return SCM(playerid, COLOR_GRAD2, "Радиус должен быть не меньше 1 и не больше 300");
	new Float:car_x,Float:car_y,Float:car_z;
	for(new cars = 0; cars < MAX_VEHICLES; cars++)
	{
		if(GetVehicleModel(cars) > 399)
		{
			GetVehiclePos(cars,car_x,car_y,car_z);
			if(IsPlayerInRangeOfPoint(playerid,pos,car_x,car_y,car_z)) Fuell[cars] = 100;
		}
	}
	format(YCMDstr,128, "Администратор %s заправил транспорт в радиусе", Name(playerid));
	ABroadCast(COLOR_LIGHTRED, YCMDstr, 1);
	return true;
}
CMD:fuelall(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(PI[playerid][pBSA] < 6 || GetPVarInt(playerid,"dostup") == 0) return true;
	SCMToAll(COLOR_LIGHTRED, "Администратор заправил весь транспорт на 100 литров");
	for(new c = 0; c < MAX_VEHICLES; c++) Fuell[c] = 100;
	return true;
}
CMD:spcars(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(PI[playerid][pBSA] < 7 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /spcars [время]");
	if(params[0] < 1 || params[0] > 60) return SCM(playerid, COLOR_GRAD2, "Время не меньше 1 и не больше 60");
	format(YCMDstr, 64, "Администратор обновит весь незанятый транспорт через %d секунд!",params[0]);
	SCMToAll(COLOR_LIGHTRED,YCMDstr);
	SetTimerEx("SpcarsAvto",params[0]*1000,false,"i",playerid);
	return true;
}
CMD:spcard(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 2 || GetPVarInt(playerid,"dostup") == 0) return true;
	new Float:pos;
	if(sscanf(params, "f",pos)) return SCM(playerid,COLOR_GRAD2, "Введите: /spcard [радиус]");
	if(pos < 1 || pos > 300) return SCM(playerid, COLOR_GRAD2, "Радиус должен быть не меньше 1 и не больше 300");
	new Float:car_x,Float:car_y,Float:car_z;
	for(new cars = 0; cars < MAX_VEHICLES; cars++)
	{
		if(GetVehicleModel(cars) > 399)
		{
			GetVehiclePos(cars,car_x,car_y,car_z);
			if(IsPlayerInRangeOfPoint(playerid,pos,car_x,car_y,car_z)) SetVehicleToRespawn(cars);
		}
	}
	format(YCMDstr,128, "Администратор %s заспавнил транспорт в радиусе", Name(playerid));
	ABroadCast(COLOR_LIGHTRED, YCMDstr, 1);
	return true;
}
CMD:setskin(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new memberrs = PI[playerid][pMember], rankk = PI[playerid][pRank];
	if(IsACop(playerid) && rankk >= 9 || IsAArm(playerid) && rankk >= 15 || memberrs == 2 && rankk >= 9 || memberrs == 9 && rankk >= 6 || IsAMedic(playerid) && rankk >= 9 || IsAMafia(playerid) && rankk >= 4
			|| IsAGang(playerid) && rankk >= 4 || IsAMayor(playerid) && rankk >= 13 || memberrs == 23 && rankk >= 4 || memberrs == 24 && rankk >= 5) { } else { SCM(playerid,COLOR_GREY,"Вы не Зам/Лидер"); return 1; }
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /setskin [id]");
	if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "Игрок не найден!");
	if(PI[playerid][pMember] != PI[params[0]][pMember]) return SCM(playerid, COLOR_GREY, "Данный игрок не в Вашей фракции!");
	if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GRAD1, "Вы слишком далеко.");
 	SetPVarInt(playerid,"actplayerid",params[0]);
 	SetPVarInt(playerid,"my_ID",playerid);
	switch(PI[params[0]][pMember])
	{
		case 1,10,21: { SPDEx(playerid, 8000, 2, "{ffbf00}Выбор скина: SAPD", " {FFFFFF}Скин № [284]\n Скин № [280]\n Скин № [281]\n Скин № [282]\n Скин № [265]\n Скин № [266]\n Скин № [285]\n Скин № [288]\n Скин № [76] - Жен.", "Далее", "Отмена"); } // SAPD
		case 2: { SPDEx(playerid, 8001, 2, "{ffbf00}Выбор скина: FBI", " {FFFFFF}Скин № [163]\n Скин № [164]\n Скин № [286]\n Скин № [285]\n Скин № [165]\n Скин № [166]\n Скин № [141] - Жен.", "Далее", "Отмена"); } // FBI
		case 3,19: { SPDEx(playerid, 8002, 2, "{ffbf00}Выбор скина: МО", " {FFFFFF}Скин № [287]\n Скин № [179]\n Скин № [191] - Жен.", "Далее", "Отмена"); } // МО
		case 5: { SPDEx(playerid, 8003, 2, "{ffbf00}Выбор скина: LCN", " {FFFFFF}Скин № [124]\n Скин № [240]\n Скин № [126]\n Скин № [223]\n Скин № [113]\n Скин № [43]\n Скин № [214] - Жен.", "Далее", "Отмена"); } // LCN
		case 6: { SPDEx(playerid, 8004, 2, "{ffbf00}Выбор скина: Yakuza", " {FFFFFF}Скин № [121]\n Скин № [122]\n Скин № [123]\n Скин № [120]\n Скин № [208]\n Скин № [117]\n Скин № [186]\n Скин № [169] - Жен.", "Далее", "Отмена"); } // Yakuza
		case 8: { SPDEx(playerid, 8005, 2, "{ffbf00}Выбор скина: Мед.Центр", " С{FFFFFF}кин № [274]\n Скин № [276]\n Скин № [275]\n Скин № [219] - Жен.", "Далее", "Отмена"); } // МЗ
		case 9: { SPDEx(playerid, 8006, 2, "{ffbf00}Выбор скина: SAN", " {FFFFFF}Скин № [250]\n Скин № [170]\n Скин № [188]\n Скин № [217]\n Скин № [240]\n Скин № [261]\n Скин № [211] - Жен.", "Далее", "Отмена"); } // SAN
		case 12: { SPDEx(playerid, 8007, 2, "{ffbf00}Выбор скина: The Ballas", " {FFFFFF}Скин № [103]\n Скин № [104]\n Скин № [102]\n Скин № [195] - Жен.", "Далее", "Отмена"); } // Ballas
		case 13: { SPDEx(playerid, 8008, 2, "{ffbf00}Выбор скина: The Vagos", " {FFFFFF}Скин № [108]\n Скин № [109]\n Скин № [110]\n Скин № [56] - Жен.", "Далее", "Отмена"); } // Vagos
		case 14: { SPDEx(playerid, 8009, 2, "{ffbf00}Выбор скина: Russiam Mafia", " {FFFFFF}Скин № [112]\n Скин № [111]\n Скин № [127]\n Скин № [125]\n Скин № [46]\n Скин № [98]\n Скин № [272]\n Скин № [263] - Жен.", "Далее", "Отмена"); } // РМ
		case 15: { SPDEx(playerid, 8010, 2, "{ffbf00}Выбор скина: The Grove St.", " {FFFFFF}Скин № [105]\n Скин № [106]\n Скин № [107]\n Скин № [271]\n Скин № [65] - Жен.", "Далее", "Отмена"); } // Grove
		case 17: { SPDEx(playerid, 8011, 2, "{ffbf00}Выбор скина: The Aztecas", " {FFFFFF}Скин № [114]\n Скин № [115]\n Скин № [116]\n Скин № [193] - Жен.", "Далее", "Отмена"); } // Aztecas
		case 18: { SPDEx(playerid, 8012, 2, "{ffbf00}Выбор скина: The Rifa", " {FFFFFF}Скин № [175]\n Скин № [174]\n Скин № [173]\n Скин № [226] - Жен.", "Далее", "Отмена"); } // Rifa
		case 22: { SPDEx(playerid, 8013, 2, "{ffbf00}Выбор скина: Правительство", " {FFFFFF}Скин № [163]\n Скин № [98]\n Скин № [57]\n Скин № [187]\n Скин № [227]\n Скин № [17]\n Скин № [255]\n Скин № [228]\n Скин № [147]\n Скин № [150] - Жен.", "Далее", "Отмена"); } // АП
		case 23: { SPDEx(playerid, 8014, 2, "{ffbf00}Выбор скина: Байкеры", " {FFFFFF}Скин № [254]\n Скин № [248]\n Скин № [181]\n Скин № [100]\n Скин № [298] - Жен.", "Далее", "Отмена"); } // Байкеры
		case 24: { SPDEx(playerid, 8015, 2, "{ffbf00}Выбор скина: К.А.С.С.", " {FFFFFF}Скин № [27]\n Скин № [258]\n Скин № [71]\n Скин № [119]\n Скин № [153]\n Скин № [69] - Жен.", "Далее", "Отмена"); } // КАСС
	}
	format(YCMDstr, 69, " %s выбирает для Вас одежду",Name(playerid));
	SCM(params[0], COLOR_BLUE, YCMDstr);
	return true;
}
CMD:tskin(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 12 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /tskin [id игрока] [id скина]");
	if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "Игрок не найден!");
	if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GRAD1, "Вы слишком далеко.");
	if(params[1] > 311 || params[1] < 1) return SCM(playerid, COLOR_GREY, "Неправильный ID скина!");
	SetPlayerSkin(params[0], params[1]);
	return true;
}
CMD:skin(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 3 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /skin [id скина]");
	if(params[0] > 299 || params[0] < 1) { SCM(playerid, COLOR_GREY, "Неправильный ID скина!"); return true; }
	PI[playerid][pChar][PI[playerid][pViborChar]] = params[0];
	SetPlayerSkin(playerid, PI[playerid][pChar][PI[playerid][pViborChar]]);
	return true;
}
CMD:askin(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /askin [id игрока/ник] [id скина]");
	if(params[1] > 299 || params[1] < 1) { SCM(playerid, COLOR_GREY, "Неправильный ID скина!"); return true; }
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == INVALID_PLAYER_ID) return true;
	PI[params[0]][pChar][PI[params[0]][pViborChar]] = params[1];
	format(YCMDstr, 256, "Ваш скин был изменен администратором %s", Name(playerid));
	SCM(params[0], 0x6495EDFF, YCMDstr);
	format(YCMDstr, 256, "Вы изменили скин %s на номер: %d",Name(params[0]),params[1]);
	SCM(playerid, 0x6495EDFF, YCMDstr);
	SetPlayerSkin(params[0], PI[params[0]][pChar][PI[params[0]][pViborChar]]);
	return true;
}
CMD:pay(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countingpay") > gettime()) return SCM(playerid, 0xFF0000FF, "Команду можно использовать раз в 10 секунд!");
	if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /pay [id] [сумма]");
	if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "Игрок не найден!");
	if(PI[playerid][pLevel] < 2) return SCM(playerid, COLOR_LIGHTRED, "У Вас должен быть 2 уровень");
	if(PI[params[0]][pBSA] >= 1) return SCM(playerid, COLOR_LIGHTRED, "Вы слишком далеко.");
	if(params[1] > 10000 && PI[playerid][pPayDayHad] < 5) return SCM(playerid, COLOR_GRAD1, "Вы должны отыграть 5 часов, чтобы передать больше $10000!");
	if(params[1] < 1 || params[1] > 100000) return SCM(playerid, COLOR_GRAD1, "Нельзя передать меньше $1 и больше $99999.");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == INVALID_PLAYER_ID) return true;
	if(!ProxDetectorS(2.0, playerid, params[0])) return SCM(playerid, COLOR_GRAD1, "Вы слишком далеко.");
	if(GetSRVMoney(playerid) < params[1]) return true;
	PI[params[0]][pCash] += params[1];
	PI[playerid][pCash] -= params[1];
	format(YCMDstr, 256, "Вы передали %s[%d], $%d.",Name(params[0]),params[0],params[1]);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	SCM(playerid, COLOR_GRAD1, YCMDstr);
	format(YCMDstr, 256, "Вы получили $%d от %s[%d].",params[1],Name(playerid), playerid);
	SCM(params[0], COLOR_GRAD1, YCMDstr);
	PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
	format(YCMDstr,sizeof(YCMDstr), "достал бумажник и передал деньги %s",Name(params[0]));
	SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
	SetPVarInt(playerid,"Countingpay",gettime() + 10);
	return true;
}
CMD:setmats(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 11 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "dd", params[0],params[1]))
	{
		SCM(playerid, COLOR_WHITE, "Введите: /setmats [номер] [количество]");
		SCM(playerid, COLOR_WHITE, "[1] - СВ, [2] - SFA, [4] - FBI, [5] - LSPD, [6] - SFPD, [7] - LVPD");
		SCM(playerid, COLOR_WHITE, "[8] - Yakuza, [9] - LCN, [10] - RM, [11] - Ballas, [12] - Vagos, [13] - Grove, [14] - Aztec, [15] - Rifa, [16] - Bikers");
		SCM(playerid, COLOR_WHITE, "[17] - Склад К.А.С.С., [18] - Детали К.А.С.С.");
		return true;
	}
	switch (params[0])
	{
	case 1:
		{
			FracBank[0][farmmatbi] = params[1];
			format(YCMDstr, 50, "Материалы СВ изменены на: %d", params[1]);
		}
	case 2:
		{
			FracBank[0][farmmatsf] = params[1];
			format(YCMDstr, 50, "Материалы SFA изменены на: %d", params[1]);
		}
	case 4:
		{
			FracBank[0][ffbimats] = params[1];
			format(YCMDstr, 50, "Материалы FBI изменены на: %d", params[1]);
		}
	case 5:
		{
			FracBank[0][flspdmatbi] = params[1];
			format(YCMDstr, 50, "Материалы LSPD изменены на: %d", params[1]);
		}
	case 6:
		{
			FracBank[0][fsfpdmats] = params[1];
			format(YCMDstr, 50, "Материалы SFPD изменены на: %d", params[1]);
		}
	case 7:
		{
			FracBank[0][flvpdmats] = params[1];
			format(YCMDstr, 50, "Материалы LVPD изменены на: %d", params[1]);
		}
	case 8:
		{
			FracBank[0][fyakuzamats] = params[1];
			format(YCMDstr, 50, "Материалы Yakuza изменены на: %d", params[1]);
		}
	case 9:
		{
			FracBank[0][flcnmats] = params[1];
			format(YCMDstr, 50, "Материалы LCN изменены на: %d", params[1]);
		}
	case 10:
		{
			FracBank[0][frmmats] = params[1];
			format(YCMDstr, 50, "Материалы RM изменены на: %d", params[1]);
		}
	case 11:
		{
			FracBank[0][fBMats] = params[1];
			format(YCMDstr, 50, "Материалы Ballas изменены на: %d", params[1]);
		}
	case 12:
		{
			FracBank[0][fVMats] = params[1];
			format(YCMDstr, 50, "Материалы Vagos изменены на: %d", params[1]);
		}
	case 13:
		{
			FracBank[0][fGMats] = params[1];
			format(YCMDstr, 50, "Материалы Grove изменены на: %d", params[1]);
		}
	case 14:
		{
			FracBank[0][fCMats] = params[1];
			format(YCMDstr, 50, "Материалы Aztec изменены на: %d", params[1]);
		}
	case 15:
		{
			FracBank[0][fRMats] = params[1];
			format(YCMDstr, 50, "Материалы Rifa изменены на: %d", params[1]);
		}
	case 16:
		{
			FracBank[0][fMMats] = params[1];
			format(YCMDstr, 50, "Материалы Bikers изменены на: %d", params[1]);
		}
	case 17:
		{
			FracBank[0][fzmatbi] = params[1];
			format(YCMDstr, 50, "Склад К.А.С.С. изменён на: %d", params[1]);
		}
	case 18:
		{
			FracBank[0][fzsklad] = params[1];
			format(YCMDstr, 50, "Склад деталей К.А.С.С. изменён на: %d", params[1]);
		}
	default:
		{
			format(YCMDstr, 10, "[Ошибка]");
		}
	}
	SCM(playerid, COLOR_GRAD1, YCMDstr);
	return true;
}
CMD:setstat(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new giveplayerid;
	new stat, amount;
	new year, month,day;
	getdate(year, month, day);
	if(PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "udd",giveplayerid,stat,amount))
	{
		SCM(playerid, COLOR_WHITE, "Введите: /setstat [id] [номер] [количество]");
		SCM(playerid, COLOR_GRAD4, "[1] Уровень|[2] Законопослушность|[3] Материалы|[4] Скин|[5] Убийств");
		SCM(playerid, COLOR_GRAD3, "[6] Номер телефона|[7] Exp|[8] Ключ от дома |[9] Номер бизнеса");
		SCM(playerid, COLOR_GRAD2, "[10] VIP [1-3]|[11] Работа игрока|[12] Деньги");
		SCM(playerid, COLOR_GRAD2, "[13] Счёт мобильного|[14] Счёт в банке|[15] Варны|[16] Наркотики");
		SCM(playerid, COLOR_GRAD2, "[17] Член орг|[18] Донат| [19] Box|[20] Kong Fu|[21] Kick Box");
		SCM(playerid, COLOR_GRAD2, "[22] Машина|[23] Наркозависимость|[24] Проценты Авто|[25] Сытость|[26] Квартира|[27] Машина 2");
		return true;
	}
	if(!IsPlayerConnected(giveplayerid)) return true;
	if(giveplayerid == INVALID_PLAYER_ID) return true;
	switch (stat)
	{
	case 1:
		{
			PI[giveplayerid][pLevel] = amount;
			format(YCMDstr, 128, "LVL игрока изменён на: %d", amount);
			DollahScoreUpdate(giveplayerid);
		}
	case 2:
		{
			PI[giveplayerid][pZakonp] = amount;
			format(YCMDstr, 128, "Законопослушность: %d", amount);
		}
	case 3:
		{
			PI[giveplayerid][pMats] = amount;
			format(YCMDstr, 128, "Материалы: %d", amount);
		}
	case 4:
		{
			PI[giveplayerid][pChar][PI[giveplayerid][pViborChar]] = amount;
			format(YCMDstr, 128, "Скин игрока установлен на: %d", amount);
		}
	case 5:
		{
			PI[giveplayerid][pKills] = amount;
			format(YCMDstr, 128, "Убийства: %d", amount);
		}
	case 6:
		{
			PI[giveplayerid][pPnumber] = amount;
			format(YCMDstr, 128, "Номер телефона игрока изменён на: %d", amount);
		}
	case 7:
		{
			PI[giveplayerid][pExp] = amount;
			format(YCMDstr, 128, "EXP игрока изменены на: %d", amount);
		}
	case 8:
		{
			PI[giveplayerid][pPhousekey] = amount;
			format(YCMDstr, 128, "Дом: %d", amount);
		}
	case 9:
		{
			PI[giveplayerid][pPbiskey] = amount;
			format(YCMDstr, 128, "Бизнес: %d", amount);
		}
	case 10:
		{
			PI[giveplayerid][pDonateRank] = amount;
			format(YCMDstr, 128, "VIP аккаунт уровня: %d", amount);
		}
	case 11:
		{
			PI[giveplayerid][pJob] = amount;
			format(YCMDstr, 128, "Работа: %d", amount);
		}
	case 12:
		{
			PI[giveplayerid][pCash] = amount;
			format(YCMDstr, 128, "Деньги изменены на: $%d", amount);
		}
	case 13:
		{
			PI[giveplayerid][pMobile] = amount;
			format(YCMDstr, 128, "Счёт мобильного: $%d", amount);
		}
	case 14:
		{
			PI[giveplayerid][pBank] = amount;
			format(YCMDstr, 128, "Счёт в банке изменены на: $%d", amount);
		}
	case 15:
		{
			PI[giveplayerid][pWarns] = amount;
			format(YCMDstr, 128, "Количество варнов изменено на: %d", amount);
		}
	case 16:
		{
			PI[giveplayerid][pDrugs] = amount;
			format(YCMDstr, 128, "Количество наркотиков изменено на: %d", amount);
		}
	case 17:
		{
			PI[giveplayerid][pMember] = amount;
			PI[giveplayerid][pRank] = 1;
			format(YCMDstr, 128, "Организация: %d", amount);
		}
	case 18:
		{
			PI[giveplayerid][pDonatemoney] = amount;
			format(YCMDstr, 128, "Донат изменены на: %d", amount);
		}
	case 19:
		{
			PI[giveplayerid][pBoxSkill] = amount;
			format(YCMDstr, 128, "Уровень боевых искусств Box: %d", amount);
		}
	case 20:
		{
			PI[giveplayerid][pKongfuSkill] = amount;
			format(YCMDstr, 128, "Уровень боевых искусств Kong Fu: %d", amount);
		}
	case 21:
		{
			PI[giveplayerid][pKickboxSkill] = amount;
			format(YCMDstr, 128, "Уровень боевых искусств Kick Box: %d", amount);
		}
	case 22:
		{
			PI[giveplayerid][pCar1] = amount;
			format(YCMDstr, 128, "Машина: %d", amount);
		}
	case 23:
		{
			PI[giveplayerid][pAddiction] = amount;
			format(YCMDstr, 128, "Зависимость %d", amount);
		}
	case 24:
		{
			PI[giveplayerid][pProcents] = amount;
			format(YCMDstr, 128, "Проценты Автомобиля: %d", amount);
		}
	case 25:
		{
			PI[giveplayerid][pGolod] = amount;
			format(YCMDstr, 128, "Голод: %d", amount);
		}
	case 26:
		{
			PI[giveplayerid][pPhotelkey] = amount;
			format(YCMDstr, 128, "Квартира: %d", amount);
		}
	case 27:
		{
			PI[giveplayerid][pCar2] = amount;
			format(YCMDstr, 128, "Машина 2: %d", amount);
		}
	}
	SCM(playerid, COLOR_GRAD1, YCMDstr);
	return true;
}
CMD:setklass(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 12 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "dd",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /setklass [дом] [класс]");
	House[params[0]][hKlass] = params[1];
	SCM(playerid, COLOR_WHITE, "Класс установлен");
	return true;
}
CMD:getschet(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 12 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /getschet [дом]");
	format(YCMDstr, 30, "Счёт домашний: %d",House[params[0]][hTakings]);
	SCM(playerid, COLOR_WHITE, YCMDstr);
	return true;
}
CMD:setschet(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "dd",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /setschet [дом] [счет]");
	House[params[0]][hTakings] = params[1];
	SetHouse(House[params[0]][hID], "hTakings", params[1]);
	SCM(playerid, COLOR_WHITE, "Домашний счет установлен");
	return true;
}
CMD:setcost(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "dd",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /setscost [дом] [цена]");
	House[params[0]][hValue] = params[1];
	SCM(playerid, COLOR_WHITE, "Стоимость установлена");
	return true;
}
CMD:setmcost(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "dd",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /setmcost [мастерс] [цена]");
	AvtoMInfo[params[0]][vBuyPrice] = params[1];
	SCM(playerid, COLOR_WHITE, "Стоимость установлена");
	return true;
}
CMD:sethousepos(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /sethousepos [дом]");
	new Float: lwx, Float:lwy, Float:lwz;
	GetPlayerPos(playerid, lwx, lwy, lwz);
	House[params[0]][hEntrancex] = lwx;
	House[params[0]][hEntrancey]= lwy;
	House[params[0]][hEntrancez] = lwz;
	BuyHouse(params[0]);
	return true;
}
CMD:setnomerpos(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /setnomerpos [квартира]");
	new Float: lwx, Float:lwy, Float:lwz;
	GetPlayerPos(playerid, lwx, lwy, lwz);
	HotelInfo[params[0]][oEntrancex] = lwx;
	HotelInfo[params[0]][oEntrancey]= lwy;
	HotelInfo[params[0]][oEntrancez] = lwz;
	BuyHotel(params[0]);
	return true;
}
CMD:sethousecarpos(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /sethousecarpos [дом]");
	new Float: lwx, Float:lwy, Float:lwz,Float:a;
	GetPlayerPos(playerid, lwx, lwy, lwz);
	GetPlayerFacingAngle(playerid,a);
	House[params[0]][hCarx] = lwx;
	House[params[0]][hCary]= lwy;
	House[params[0]][hCarz] = lwz;
	House[params[0]][hCarc] = a;
	SCM(playerid, COLOR_GREY, "Координаты транспорта на улице установлены");
	return true;
}
CMD:sethotelcarpos(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /sethotelcarpos [дом]");
	new Float: lwx, Float:lwy, Float:lwz,Float:a;
	GetPlayerPos(playerid, lwx, lwy, lwz);
	GetPlayerFacingAngle(playerid,a);
	HotelInfo[params[0]][oCarx] = lwx;
	HotelInfo[params[0]][oCary]= lwy;
	HotelInfo[params[0]][oCarz] = lwz;
	HotelInfo[params[0]][oCarc] = a;
	SCM(playerid, COLOR_GREY, "Координаты транспорта установлены");
	return true;
}
CMD:addgarage(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "i", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /addgarage [ID дома]");
	House[params[0]][hGarage] = 1;
	SCM(playerid, COLOR_WHITE,"Гараж успешно добавлен к этому дому.");
	mysql_format(DATABASE, YCMDstr, 128, "UPDATE `"TABLE_HOUSE"` SET hGarage = '%i' WHERE ID = '%i'",House[params[0]][hGarage],params[0]);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	return 1;
}
CMD:addnomer(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "dd",params[0]))
	{
		SCM(playerid, COLOR_WHITE, "Введите: /addnomer [цена]");
		return true;
	}
	new Float: posX, Float: posY, Float: posZ, VW;
	GetPlayerPos(playerid, posX, posY, posZ);
	VW = GetPlayerVirtualWorld(playerid);
	mysql_format(DATABASE,YCMDstr, 256, "INSERT INTO `"TABLE_HOTEL"` (`oEntrancex`, `oEntrancey`,`oEntrancez`, `oLock`, `oVirt`) VALUES ('%f', '%f', '%f', '1', '%d')",posX,posY,posZ,VW);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	TotalHotel++;
	HotelInfo[TotalHotel][oID] = TotalHotel;
	HotelInfo[TotalHotel][oEntrancex] = posX;
	HotelInfo[TotalHotel][oEntrancey] = posY;
	HotelInfo[TotalHotel][oEntrancez] = posZ;
	HotelInfo[TotalHotel][oLock] = 1;
	HotelInfo[TotalHotel][oValue] = params[0];
	HotelInfo[TotalHotel][oInt] = 1;
	HotelInfo[TotalHotel][oExitx] = 2233.7314;
	HotelInfo[TotalHotel][oExity] = -1115.2582;
	HotelInfo[TotalHotel][oExitz] = 1050.8828;
	HotelInfo[TotalHotel][oVirt] = VW;
	HotelInfo[TotalHotel][virtmir] = GetPVarInt(playerid, "podeezd");
	HotelInfo[TotalHotel][oPickup] = CreatePickup(1239, 23, HotelInfo[TotalHotel][oEntrancex], HotelInfo[TotalHotel][oEntrancey], HotelInfo[TotalHotel][oEntrancez], HotelInfo[TotalHotel][oVirt]);
	pickups++;
	SCM(playerid,COLOR_WHITE,"Вы создали квартиру. Используйте /sethotelcarpos (Указать позицию транспорта)");
	BuyHotel(TotalHotel);
	return true;
}
CMD:getip(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 4 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid,COLOR_WHITE, "Введите: /getip [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Человек не найден");
	new ips[64];
	GetPlayerIp(params[0],ips,sizeof(ips));
	format(YCMDstr, 128, "[%s] IP: %s",Name(params[0]),ips);
	SCM(playerid,0x6495EDFF,YCMDstr);
	return true;
}
CMD:offgs(playerid, params[])
{
    if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 2 || GetPVarInt(playerid,"dostup") == 0) return true;
    if(sscanf(params, "s[24]",params[0])) return SCM(playerid,COLOR_GREY, "Введите: /offgs [Имя_Аккаунта]");
    mysql_format(DATABASE,YCMDstr, 68, "SELECT * FROM `accounts` WHERE `Name` = '%s'",params[0]);
	mysql_function_query(DATABASE,YCMDstr,true,"OnMySQL_QUERY","iis",17,playerid,params[0]);
    return true;
}
CMD:getstats(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 2 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /getstats [id]");
	if(!IsPlayerConnected(params[0])) return true;
	ShowStats(playerid,params[0]);
	return true;
}
CMD:o(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 2 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /o [текст]");
	format(YCMDstr, 128, "{B22222}(( Администратор %s[%d]: %s ))",Name(playerid), playerid, params[0]);
	OOCOff(COLOR_OOC,YCMDstr);
	return true;
}
CMD:number(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /number [id]");
	if(!IsPlayerConnected(params[0])) return true;
	format(YCMDstr, 128, "Владелец: %s. Телефон: %d",Name(params[0]),PI[params[0]][pPnumber]);
	SCM(playerid, COLOR_WHITE, YCMDstr);
	return true;
}
CMD:gps(playerid, params[])
{
	if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
	{
		if(PI[playerid][pLogin] == 0) return true;
		if(FL[playerid][CP] == 777) { DisablePlayerCheckpoint(playerid), FL[playerid][CP] = 0; }
		SPDEx(playerid, 10000, 2, "{2641FE}- GPS -", "[1] Гос. Организации\n[2] Работа\n[3] Транспортные школы\n[4] Мафии\n[5] Банды\n[6] Развлечения\n[7] Банки\n[8] Автосалоны\n[9] Автомастерские\n[10] Магазины оружия\n[11] Магазины одежды\n[12] Отели\n[13] Военкомат\n[14] Приём металла\n[15] Бизнесы\n[16] Аренда транспорта\n[17] Церковь СФ\n[18] Плантации", "Выбрать", "Отмена");
		return true;
	}
}
ALT:goverment:gov;
CMD:goverment(playerid, params[])
{
	if(GetPVarInt(playerid,"Countingg") > gettime() ) return SCM(playerid, 0xFF0000FF, "Не Флуди.");
	if(IsACop(playerid) || IsAArm(playerid) || IsAMayor(playerid) || IsAMedic(playerid) || PI[playerid][pMember] == 24 || PI[playerid][pMember] == 9)
	{
		if(!CanInvitePlayer(playerid)) return SCM(playerid, COLOR_WHITE, "Вам недоступна эта команда");
		if(PI[playerid][pMuted] == 1) return SCM(playerid, 0xFF6347AA, "У Вас бан чата");
		if(sscanf(params, "s[128]", params[0])) return	SCM(playerid, 0xAFAFAFAA, "Введите: (/gov)erment [текст]");
		AntiReklama(playerid,params[0],"/gov");
		if(GetPVarInt(playerid, "antireklamka") == 1) return SetPVarInt(playerid, "antireklamka", 0);
		if(PI[playerid][pMember] == 1 || PI[playerid][pLeader] == 1)
		{
			format(YCMDstr, 256, "[Новости SAPD] %s: %s", Name(playerid), params[0]);
			SCMToAll(0x20A9FFFF, YCMDstr);
		}
		else if(PI[playerid][pMember] == 2 || PI[playerid][pLeader] == 2)
		{
			format(YCMDstr, 256, "[Новости FBI] %s: %s", Name(playerid), params[0]);
			SCMToAll(0x20A9FFFF, YCMDstr);
		}
		else if(PI[playerid][pMember] == 3 || PI[playerid][pLeader] == 3)
		{
			format(YCMDstr, 256, "[Новости ВМФ] %s: %s", Name(playerid), params[0]);
			SCMToAll(0x20A9FFFF, YCMDstr);
		}
		else if(PI[playerid][pMember] == 4)
		{
			format(YCMDstr, 256, "[Новости Мед.Центра] %s: %s", Name(playerid), params[0]);
			SCMToAll(0x20A9FFFF, YCMDstr);
		}
		else if(PI[playerid][pLeader] == 8 || PI[playerid][pMember] == 8)
		{
			format(YCMDstr, 256, "[Новости Мед.Центра] %s: %s", Name(playerid), params[0]);
			SCMToAll(0x20A9FFFF, YCMDstr);
		}
		else if(PI[playerid][pLeader] == 9 || PI[playerid][pMember] == 9)
		{
			format(YCMDstr, 256, "[Новости SAN] %s: %s", Name(playerid), params[0]);
			SCMToAll(0x20A9FFFF, YCMDstr);
		}
		else if(PI[playerid][pMember] == 10)
		{
			format(YCMDstr, 256, "[Новости SFPD] %s: %s", Name(playerid), params[0]);
			SCMToAll(0x20A9FFFF, YCMDstr);
		}
		else if(PI[playerid][pLeader] == 19 || PI[playerid][pMember] == 19)
		{
			format(YCMDstr, 256, "[Новости СВ] %s: %s", Name(playerid), params[0]);
			SCMToAll(0x20A9FFFF, YCMDstr);
		}
		else if(PI[playerid][pMember] == 21 || PI[playerid][pLeader] == 21)
		{
			format(YCMDstr, 256, "[Новости LVPD] %s: %s", Name(playerid), params[0]);
			SCMToAll(0x20A9FFFF, YCMDstr);
		}
		else if(PI[playerid][pLeader] == 22 || PI[playerid][pMember] == 22)
		{
			format(YCMDstr, 256, "[Новости Адм. Президента] %s: %s", Name(playerid), params[0]);
			SCMToAll(0x20A9FFFF, YCMDstr);
		}
		else if(PI[playerid][pLeader] == 24 || PI[playerid][pMember] == 24)
		{
			format(YCMDstr, 256, "[Новости К.А.С.С] %s: %s", Name(playerid), params[0]);
			SCMToAll(0x20A9FFFF, YCMDstr);
		}
	}
	SetPVarInt(playerid,"Countingg",gettime() + 5);
	return true;
}
CMD:fstyle(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid,COLOR_WHITE, "Введите: /fstyle [0-3]");
	if(params[0] < 0 || params[0] > 3) return SCM(playerid,COLOR_WHITE, "Введите: /fstyle [0-3]");
	if(params[0] == 0)
	{
		SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
		SCM(playerid, COLOR_WHITE, "Обычный стиль");
	}
	else if(params[0] == 1)
	{
		if(PI[playerid][pBoxSkill] >= 5000) SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING), SCM(playerid, COLOR_LIGHTGREEN, "Вы установили новый стиль боя [Box]");
		else return SCM(playerid,COLOR_GREY,"Вы не изучали этот стиль боя");
	}
	else if(params[0] == 2)
	{
		if(PI[playerid][pKongfuSkill] >= 5000) SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU), SCM(playerid, COLOR_LIGHTGREEN, "Вы установили новый стиль боя [Kong - Fu]");
		else return SCM(playerid,COLOR_GREY,"Вы не изучали этот стиль боя");
	}
	else if(params[0] == 3)
	{
		if(PI[playerid][pKickboxSkill] >= 5000) SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD), SCM(playerid, COLOR_LIGHTGREEN, "Вы установили новый стиль боя [Kick - Box]");
		else return SCM(playerid,COLOR_GREY,"Вы не изучали этот стиль боя");
	}
	return true;
}
CMD:en(playerid, params[])
{
	if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
	{
	    new carid = GetPlayerVehicleID(playerid);
		if(PI[playerid][pLogin] == 0) return true;
		if(GetPVarInt(playerid,"Zavodka") > gettime()) return SCM(playerid, 0xFF0000FF, "Нельзя так часто заводить двигатель!");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 481 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 509 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 510) return SCM(playerid,-1,"Недопустимый транспорт");
		if(GetPlayerVehicleID(playerid) == INVALID_VEHICLE_ID) return true;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || SpeedVehicle(playerid) > 25) return true;
		if(zavodis[carid] < 1)
  		{
			if(Fuell[carid] > 0.0)
	  		{
	    		new Float:Health, string[50];
			    GetVehicleHealth(carid, Health);
			    if(Health > 1000) Health = 1000.0;
			    else if(Health < 100) return SCM(playerid, COLOR_GREY, "Вы не можете завести двигатель. Для его починки вызовите механика: /phone -> Service");
			    new UNEngine = floatround(2000.0 - Health);
			    if(UNEngine < 0) UNEngine = 0;
			    else if(UNEngine > 2000) UNEngine = 2000;
		   		SetTimerEx("EngineVehicle", UNEngine, false, "ii", playerid, carid);
			    format(string, sizeof(string), "%s пытается завести двигатель", Name(playerid));
			    ProxDetector(25.0, playerid, string, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
		    }
		    else return SCM(playerid,COLOR_GREY,"В транспорте нет бензина!");
		}
		else
		{
			new string[70];
			GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
			zavodis[GetPlayerVehicleID(playerid)] = 0;
			format(string,sizeof(string),"%s заглушил(а) двигатель",Name(playerid));
			ProxDetector(25.0, playerid, string, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
		}
	}
	SetPVarInt(playerid,"Zavodka",gettime() + 4);
	return true;
}
CMD:lights(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPlayerVehicleID(playerid) == INVALID_VEHICLE_ID) return true;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
	if(Light[GetPlayerVehicleID(playerid)] == 0)
	{
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
		Light[GetPlayerVehicleID(playerid)] = 1;
	}
	else
	{
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
		Light[GetPlayerVehicleID(playerid)] = 0;
	}
	return true;
}
CMD:vipuninvite(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pLeader] != 0) return SCM(playerid, COLOR_GREY, "Вы лидер!");
	if(PI[playerid][pMember] > 0 && PI[playerid][pDonateRank] >= 3)
	{
		PI[playerid][pMember] = 0;
		PI[playerid][pRank] = 0;
		PI[playerid][pJob] = 0;
		PI[playerid][pSong] = 0;
		PI[playerid][pSPChange] = 1;
		SetPlayerArmour(playerid,0);
		FormaFrac[playerid] = 0;
		_ResetGun(playerid);
		SetPlayerColor(playerid, TEAM_HIT_COLOR);
		SetPlayerSkin(playerid, PI[playerid][pChar][PI[playerid][pViborChar]]);
		SCM(playerid, COLOR_BLUE, "Вы были уволены по собственному желанию");
		SCM(playerid, 0x6495EDFF, "Теперь Вы снова гражданский");
	}
	return true;
}
CMD:togphone(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pDonateRank] >= 1 || PI[playerid][pBSA] >= 1 || PI[playerid][pLeader] >= 1)
	{
		if(!PhoneOnline[playerid])
		{
			PhoneOnline[playerid] = 1;
			format(YCMDstr, 128, "%s выключил телефон",Name(playerid));
			ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else if(PhoneOnline[playerid])
		{
			PhoneOnline[playerid] = 0;
			format(YCMDstr, 128, "%s включил телефон",Name(playerid));
			ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
	else
	{
		SCM(playerid, COLOR_GREY, "Вы не VIP/Администратор/Лидер!");
		return true;
	}
	return true;
}
CMD:do(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countingdo") > gettime() ) return SCM(playerid, 0xFF0000FF, "Не флуди!");
	if(PI[playerid][pMuted] == 1) return SCM(playerid, 0xFF6347AA, "У Вас бан чата");
	if(sscanf(params, "s[64]", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /do [действие]");
	AntiReklama(playerid,params[0],"/do");
	if(GetPVarInt(playerid, "antireklamka") == 1)
	{
		SetPVarInt(playerid, "antireklamka", 0);
		return true;
	}
	format(YCMDstr, 128, "%s (( %s ))",params[0],Name(playerid));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPlayerChatBubble(playerid,params[0],COLOR_PURPLE,30.0,10000);
	SetPVarInt(playerid,"Countingdo",gettime() + 1);
	return true;
}
CMD:me(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countingme") > gettime()) return SCM(playerid, 0xFF0000FF, "Не флуди!");
	if(PI[playerid][pMuted] == 1) return SCM(playerid, 0xFF6347AA, "У Вас бан чата");
	if(sscanf(params, "s[128]", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /me [действие]");
	AntiReklama(playerid,params[0],"/me");
	if(GetPVarInt(playerid, "antireklamka") == 1)
	{
		SetPVarInt(playerid, "antireklamka", 0);
		return true;
	}
	format(YCMDstr, 128, "%s %s", Name(playerid), params[0]);
	ProxDetector(30.0, playerid,YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPVarInt(playerid,"Countingme",gettime() + 1);
	return true;
}
ALT:s:shout;
CMD:s(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countings") > gettime() ) return SCM(playerid, 0xFF0000FF, "Команду можно использовать раз в 10 секунд!");
	if(PI[playerid][pMuted] == 1) return SCM(playerid, 0xFF6347AA, "У Вас бан чата");
	if(sscanf(params, "s[128]", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: (/s)hout [текст]");
	AntiReklama(playerid,params[0],"/s");
	if(GetPVarInt(playerid, "antireklamka") == 1)
	{
		SetPVarInt(playerid, "antireklamka", 0);
		return true;
	}
	format(YCMDstr, 128, "%s кричит: %s!!",Name(playerid),params[0]);
	ProxDetector(60.0, playerid, YCMDstr,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid, "ON_LOOKERS", "shout_01",1000.0,0,0,0,0,0,1);
	SetPlayerChatBubble(playerid,params[0],COLOR_YELLOW,60.0,10000);
	SetPVarInt(playerid,"Countings",gettime() + 10);
	return true;
}
CMD:licenses(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	SCM(playerid, 0x059BD3AA, "-----------===[ LICENSES ]===-----------");
	format(YCMDstr, 128, " Водительские права:  %s",(!PI[playerid][pCarLic])?("Отсутствует") : ("Есть"));
	SCM(playerid, 0xC5EEFEAA, YCMDstr);
	format(YCMDstr, 128, " Лицензия пилота:  %s",(!PI[playerid][pFlyLic])?("Отсутствует") : ("Есть"));
	SCM(playerid, 0xC5EEFEAA, YCMDstr);
	format(YCMDstr, 128, " Лицензия на катера:  %s",(!PI[playerid][pBoatLic])?("Отсутствует") : ("Есть"));
	SCM(playerid, 0xC5EEFEAA, YCMDstr);
	format(YCMDstr, 128, " Лицензия на оружие:  %s",(!PI[playerid][pGunLic])?("Отсутствует") : ("Есть"));
	SCM(playerid, 0xC5EEFEAA, YCMDstr);
	SCM(playerid, 0x059BD3AA, "=============================");
	return true;
}
CMD:showlicenses(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /showlicenses [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PI[params[0]][pBSA] >= 1) return SCM(playerid, COLOR_LIGHTRED, "Вы слишком далеко.");
	if(!ProxDetectorS(3.0, playerid, params[0])) return true;
	format(YCMDstr, 128, "-----------===[ LICENSES %s ]===-----------", Name(playerid));
	SCM(params[0], 0x059BD3AA, YCMDstr);
	format(YCMDstr, 128, " Водительские права:  %s",(!PI[playerid][pCarLic])?("Отсутствует") : ("Есть"));
	SCM(params[0], 0xC5EEFEAA, YCMDstr);
	format(YCMDstr, 128, " Лицензия пилота:  %s",(!PI[playerid][pFlyLic])?("Отсутствует") : ("Есть"));
	SCM(params[0], 0xC5EEFEAA, YCMDstr);
	format(YCMDstr, 128, " Лицензия на катера:  %s",(!PI[playerid][pBoatLic])?("Отсутствует") : ("Есть"));
	SCM(params[0], 0xC5EEFEAA, YCMDstr);
	format(YCMDstr, 128, " Лицензия на оружие:  %s",(!PI[playerid][pGunLic])?("Отсутствует") : ("Есть"));
	SCM(params[0], 0xC5EEFEAA, YCMDstr);
	SCM(playerid, 0x059BD3AA, "=============================");
	format(YCMDstr,sizeof(YCMDstr), "%s показал свои лицензии %s'у",Name(playerid),Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	format(YCMDstr,sizeof(YCMDstr), "показал свои лицензии %s'у",Name(params[0]));
	SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
	return true;
}
CMD:divorce(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pMarried] < 1) return SCM(playerid, COLOR_GREY, "Вы не женаты (замужем)!");
	SCM(playerid, COLOR_GREY, "Вы развелись");
	PI[playerid][pMarried] = 0;
	ClearMarriage(playerid);
	return true;
}
CMD:propose(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pCash] < 100000) return SCM(playerid, COLOR_GREY, "Вам нужно 100 000 на свадьбу!");
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /propose [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PI[params[0]][pMarried] > 0) return SCM(playerid, COLOR_GREY, "Человек уже состоит в браке!");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, "Человек не рядом с вами!");
	if(params[0] == playerid) { SCM(playerid, COLOR_GREY, "[Ошибка] Вы указали свой ID"); return true; }
	format(YCMDstr, 256, "Вы предложили руку и сердце %s.",Name(params[0]));
	SCM(playerid, 0x6495EDFF, YCMDstr);
	format(YCMDstr, 256, "%s предлагает Вам руку и сердце. (( Введите: /accept marriage, чтобы принять )).",Name(playerid));
	SCM(params[0], COLOR_BLUE, YCMDstr);
	FL[params[0]][ProposeOffer] = playerid;
	return true;
}
CMD:ram(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(IsACop(playerid) || IsAArm(playerid) || PI[playerid][pBSA] >= 5)
	{
		for(new i = 1; i <= TotalHouse; i++)
		{
			if (PlayerToPoint(3, playerid,House[i][hEntrancex], House[i][hEntrancey], House[i][hEntrancez]))
			{
				SetPlayerVirtualWorld(playerid,i+50);
				SetPlayerInterior(playerid,House[i][hInt]);
				SetPlayerPos(playerid,House[i][hExitx],House[i][hExity],House[i][hExitz]);
				PI[playerid][pInt] = House[i][hInt];
				PI[playerid][pLocal] = i;
			}
		}
	}
	return true;
}
CMD:take(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(FormaFrac[playerid] == 1 || FormaFrac[playerid] == 2 || FormaFrac[playerid] == 10 || FormaFrac[playerid] == 21 && PI[playerid][pRank] >= 3)
	{
		new listitems[] = "- Отобрать водительские права\n- Отобрать лицензию на полёты \n- Отобрать лицензию на вождение водного транспорта\n- Отобрать лицензию на оружие\n- Отобрать Наркотики\n- Отобрать Оружие\n- Отобрать Материалы";
		SPDEx(playerid, 7779, 2, "Меню", listitems, "Готово", "Отмена");
	}
	else
	{
		SCM(playerid, COLOR_GREY, "Вы не можете использовать данную команду!");
	}
	return true;
}
CMD:su(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsACop(playerid)) return SCM(playerid,COLOR_WHITE,"Вы не полицейский!");
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /su [id]");
	if(params[0] == playerid) return true;
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return true;
	if(PI[params[0]][pJailed] != 0) return true;
	if(GetPVarInt(params[0],"mask") == 1) return SCM(playerid,COLOR_GREY,"Игрок в маске. Личность не установлена!");
	if(IsANonf(params[0])) return SCM(playerid, COLOR_GRAD2, "Вы не можете давать розыск законникам!");
	if(PI[params[0]][pWantedLevel] >= 6) return SCM(playerid, COLOR_GREY, "У данного игрока уже 6 уровней розыска!");
	if(PI[params[0]][pLevel] == 1) return SCM(playerid, COLOR_GRAD2, "Нельзя дать розыск игроку 1 LvL");
	if(PI[params[0]][pBSA] >= 1) return SCM(playerid, COLOR_RED, "Ошибка!");
	SuspectList[ItemsSuspect] = 0; ItemsSuspect = 0; new string[900];
	for(new i; i != sizeof(sSuspect); i++) format(string,900,"%s{FF6F00}%d.{FFFFFF} %s\n",string,i+1,sSuspect[i][sNames]), SuspectList[ItemsSuspect] = i, ItemsSuspect++;
	SPDEx(playerid, 9681, 2, PI[params[0]][pName], string, "Далее", "Отмена");
	SetPVarInt(playerid, #id_suspect, params[0]);
	return true;
}
CMD:spawnchange(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "d", params[0]))
	{
		SCM(playerid, COLOR_GREY, "Введите: /spawnchange [значение]");
		SCM(playerid, COLOR_GREY, "Подсказка: [1] Дом [2] Отель [3] Организация;");
		return true;
	}
	if(params[0] < 1 || params[0] > 3) return SCM(playerid, COLOR_GREY, "Ошибка!");
	switch(params[0])
	{
	case 1:
		{
		    if(PI[playerid][pPhousekey] == 999) return SCM(playerid, COLOR_GREY, "У Вас нет дома!");
			PI[playerid][pSPChange] = 1;
			SCM(playerid,COLOR_GREY,"Теперь Вы будете появлятся дома.");
		}
    case 2:
		{
		    if(PI[playerid][pPhotelkey] == 999) return SCM(playerid, COLOR_GREY, "У Вас нет номера в отеле!");
			PI[playerid][pSPChange] = 1;
			SCM(playerid,COLOR_GREY,"Теперь Вы будете появлятся в номере отеля.");
		}
	case 3:
		{
			if(PI[playerid][pMember] == 0) return SCM(playerid,COLOR_GREY,"Вы должны состоять в организации!");
			PI[playerid][pSPChange] = 0;
			SCM(playerid,COLOR_GREY,"Теперь Вы будете появлятся на базе организации.");
		}
	}
	return true;
}
CMD:findhouse(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /findhouse [дом]");
	SetPlayerCheckpoint(playerid,House[params[0]][hEntrancex], House[params[0]][hEntrancey], House[params[0]][hEntrancez], 4.0);
	SCM(playerid, COLOR_WHITE, "Метка на карте установлена");
	FL[playerid][CP] = 0;
	return true;
}
CMD:home(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pPhousekey] != 999)
	{
		SetPlayerCheckpoint(playerid,House[PI[playerid][pPhousekey]][hEntrancex], House[PI[playerid][pPhousekey]][hEntrancey], House[PI[playerid][pPhousekey]][hEntrancez], 4.0);
		SCM(playerid, COLOR_YELLOW, "Ваш дом обозначен на карте красной меткой");
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;
	}
	return true;
}
CMD:clear(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, "Вы не полицейский!");
	if(sscanf(params, "u", params[0])) return  SCM(playerid, COLOR_WHITE, "Введите: /clear [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PlayerToPoint(50.0, playerid, -1650.3894,700.2397,1008.7549))
	{
		if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "[Ошибка] Человек не найден!");
		if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, "Человек далеко от Вас!");
		if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Вы не можете снять розыск себе!");
		format(YCMDstr, 128, "Вы сняли уровни розыска у %s.", Name(params[0]));
		SCM(playerid, 0x6495EDFF, YCMDstr);
		format(YCMDstr, 128, "Законник %s снял с Вас уровни розыска.", Name(playerid));
		SCM(params[0], 0x6495EDFF, YCMDstr);
		PI[params[0]][pWantedLevel] = 0;
		SetPlayerWantedLevel(params[0], 0);
	}
	return true;
}
CMD:ticket(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, "Вы не полицейский!");
	if(sscanf(params, "uds[50]",params[0],params[1],params[2])) return	SCM(playerid, COLOR_WHITE, "Введите: /ticket [id] [цена] [причина]");
	if(params[1] < 1 || params[1] > 10000) { SCM(playerid, COLOR_GREY, "Штраф не должен прeвышать $10000 и не должен быть меньше $0!"); return true; }
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	if(GetSRVMoney(params[0]) < params[1]) 	return 	SCM(playerid, COLOR_GRAD1, "У этого  нет столько денег!");
	if(params[0] == playerid) { SCM(playerid, COLOR_GREY, "[Ошибка] Вы указали свой ID"); return true; }
	format(YCMDstr, 256, "Вы выписали штраф в размере $%d %s. Причина: %s",params[1],Name(params[0]),params[2]);
	SCM(playerid, COLOR_BLUE, YCMDstr);
	format(YCMDstr, 256, "Офицер %s выписал вам штраф в размере $%d. Причина: %s",Name(playerid),params[1],params[2]);
	SCM(params[0], COLOR_BLUE, YCMDstr);
	SCM(params[0], COLOR_WHITE, "(( Введите: /accept ticket, чтобы оплатить штраф ))");
	FL[params[0]][TicketOffer] = playerid;
	FL[params[0]][TicketMoney] = params[1];
	return true;
}
CMD:givebilet(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /givebilet [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PI[params[0]][pVoenBil] >= 1) return SCM(playerid, COLOR_WHITE,"У этого игрока уже есть военный билет!");
	if(PI[playerid][pLeader] == 3)
	{
		format(YCMDstr, 128, "[R] Адмирал %s: вручил военный билет армейцу %s", Name(playerid), Name(params[0]));
		SendFamilyMessage(3, TEAM_BLUE_COLOR, YCMDstr);
		format(YCMDstr, 128, "Адмирал Армии %s вручил Вам военный билет", Name(playerid));
		SCM(params[0], COLOR_BLUE, YCMDstr);
		SCM(playerid, COLOR_WHITE,"Вы вручили солдату военный билет.");
		PI[params[0]][pVoenBil] = 1;
	}
	if(PI[playerid][pLeader] == 19)
	{
		format(YCMDstr, 128, "[R] Генерал %s: вручил военный билет армейцу %s", Name(playerid), Name(params[0]));
		SendFamilyMessage(19, TEAM_BLUE_COLOR, YCMDstr);
		format(YCMDstr, 128, "Генерал Армии %s вручил Вам военный билет", Name(playerid));
		SCM(params[0], COLOR_BLUE, YCMDstr);
		SCM(playerid, COLOR_WHITE,"Вы вручили военный билет.");
		PI[params[0]][pVoenBil] = 1;
	}
	return true;
}
CMD:takebilet(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /takebilet [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PI[params[0]][pVoenBil] == 0) return SCM(playerid, COLOR_WHITE,"У этого игрока нет военного билета!");
	if(PI[playerid][pLeader] == 3)
	{
		format(YCMDstr, 128, "[R] Адмирал %s: аннулировал военный билет армейцу %s", Name(playerid), Name(params[0]));
		SendFamilyMessage(3, TEAM_BLUE_COLOR, YCMDstr);
		format(YCMDstr, 128, "Адмирал Армии %s аннулировал Ваш военный билет", Name(playerid));
		SCM(params[0], COLOR_BLUE, YCMDstr);
		SCM(playerid, COLOR_WHITE,"Вы аннулировали военный билет");
		PI[params[0]][pVoenBil] = 0;
	}
	if(PI[playerid][pLeader] == 19)
	{
		format(YCMDstr, 128, "[R] Генерал %s: аннулировал военный билет армейцу %s", Name(playerid), Name(params[0]));
		SendFamilyMessage(19, TEAM_BLUE_COLOR, YCMDstr);
		format(YCMDstr, 128, "Генерал Армии %s аннулировал Ваш военный билет", Name(playerid));
		SCM(params[0], COLOR_BLUE, YCMDstr);
		SCM(playerid, COLOR_WHITE,"Вы аннулировали военный билет");
		PI[params[0]][pVoenBil] = 0;
	}
	return true;
}
CMD:showkarta(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /showkarta [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	if(PI[playerid][pMedKarta] == 0) return SCM(playerid, COLOR_WHITE,"У Вас нет медицинской карты!");
	format(YCMDstr, 128, "------------- [Медицинская карта] -------------");
	SCM(params[0], 0xBE4141FF, YCMDstr);
	format(YCMDstr, 128, "- Имя Фамилия: %s", Name(playerid));
	SCM(params[0], 0xBE4141FF, YCMDstr);
	format(YCMDstr, 128, "- Наркозависимость: %d", PI[playerid][pAddiction]);
	SCM(params[0], 0xBE4141FF, YCMDstr);
	format(YCMDstr, 128, "- Здоровье:  %.0f", PI[playerid][pHP]);
	SCM(params[0], 0xBE4141FF, YCMDstr);
	format(YCMDstr,sizeof(YCMDstr), "%s показал свою медицинскую карту %s'у",Name(playerid),Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	format(YCMDstr,sizeof(YCMDstr), "показал свою медицинскую карту %s'у",Name(params[0]));
	SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
	return true;
}
CMD:givekarta(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /givekarta [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	if(PI[playerid][pMember] == 4)
	{
		if(PI[params[0]][pMedKarta] != 0) return SCM(playerid, COLOR_WHITE,"У этого игрока уже есть медицинская карта!");
		format(YCMDstr, 128, "[R] Медик %s: выдал медицинскую карту %s", Name(playerid), Name(params[0]));
		SendFamilyMessage(4, TEAM_BLUE_COLOR, YCMDstr);
		format(YCMDstr, 128, "Медик %s выдал Вам медицинскую карту", Name(playerid));
		SCM(params[0], COLOR_BLUE, YCMDstr);
		PI[params[0]][pMedKarta] = 1;
		SCM(params[0],COLOR_GREY,"Вы получили медицинскую карточку. Она потребуется для вступления в Гос. организацию.");
		SCM(params[0],COLOR_GREY,"(( Чтобы посмотреть медицинскую карту, введите: /showkarta");
	}
	else if(PI[playerid][pMember] == 8)
	{
		if(PI[params[0]][pMedKarta] != 0) return SCM(playerid, COLOR_WHITE,"У этого игрока уже есть медицинская карта!");
		format(YCMDstr, 128, "[R] Медик %s: выдал медицинскую карту %s", Name(playerid), Name(params[0]));
		SendFamilyMessage(8, TEAM_BLUE_COLOR, YCMDstr);
		format(YCMDstr, 128, "Медик %s выдал Вам медицинскую карту", Name(playerid));
		SCM(params[0], COLOR_BLUE, YCMDstr);
		PI[params[0]][pMedKarta] = 1;
		SCM(params[0],COLOR_GREY,"Вы получили медицинскую карточку. Она потребуется для вступления в Гос. организацию.");
		SCM(params[0],COLOR_GREY,"(( Чтобы посмотреть медицинскую карту, введите: /showkarta");
	}
	return true;
}
CMD:showbilet(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /showbilet [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PI[params[0]][pBSA] >= 1) return SCM(playerid, COLOR_LIGHTRED, "Вы слишком далеко.");
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	format(YCMDstr, 128, "-----------===[Военный билет]===-----------");
	SCM(params[0], 0x33AA33AA, YCMDstr);
	format(YCMDstr, 128, "Имя Фамилия: %s", Name(playerid));
	SCM(params[0], 0x008F8FAA, YCMDstr);
	format(YCMDstr, 128, "Проживание в Штате: %d лет",PI[playerid][pLevel]);
	SCM(params[0], 0x008F8FAA, YCMDstr);
	format(YCMDstr, 128, "Дата регистрации в Штате: %s",PI[playerid][pDataReg]);
	SCM(params[0], 0x008F8FAA, YCMDstr);
	format(YCMDstr, 128, "Служба:  %s",(!PI[playerid][pVoenBil])?("Не служил") : ("В запасе (Служил)"));
	SCM(params[0], 0x008F8FAA, YCMDstr);
	SCM(params[0], 0x33AA33AA, "=============================");
	format(YCMDstr,sizeof(YCMDstr), "%s показал свой военный билет %s'у",Name(playerid),Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	format(YCMDstr,sizeof(YCMDstr), "показал свой военный билет %s'у",Name(params[0]));
	SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
	return true;
}
CMD:parrest(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(FormaFrac[playerid] == 1 || FormaFrac[playerid] == 2 || FormaFrac[playerid] == 10 || FormaFrac[playerid] == 21 || FormaFrac[playerid] == 25)
	if(PlayerToPoint(5.0, playerid, 2537.8635,-1293.5372,1031.4219))
	{
		if(sscanf(params, "ud",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /parrest [id] [время]");
		if(params[1] < 10 || params[1] > 40) return SCM(playerid, COLOR_GREY, "Количество минут от 10 до 40");
		if(!IsPlayerConnected(params[0])) return true;
		if(!ProxDetectorS(4.0, playerid, params[0])) return true;
		if(IsANonf(params[0])) return SCM(playerid, COLOR_GRAD2, "Этот игрок законник!");
		if(!PI[params[0]][pWantedLevel]) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Человек не является преступником");
		if(PI[params[0]][pWantedLevel] < 3) return SCM(playerid, COLOR_GREY, "Человек должен иметь не менее 3 уровня розыска!");
		format(YCMDstr, 256, "Вы арестовали %s",Name(params[0]));
		SCM(playerid, COLOR_WHITE, YCMDstr);
		_ResetGun(params[0]);
		switch(PI[playerid][pMember])
		{
		case 1,10,21: format(YCMDstr, 128, "< Офицер %s посадил в Федеральную тюрьму %s >",Name(playerid),Name(params[0]));
		case 2: format(YCMDstr, 128, "< Агент FBI %s посадил в Федеральную тюрьму %s >",Name(playerid),Name(params[0]));
		}
		if(GetPVarInt(playerid,"walk_goto_me_player"))
		{
			walk_goto_me[GetPVarInt(playerid,"walk_goto_me_player") - 1] = 0;
			ClearAnimations(GetPVarInt(playerid,"walk_goto_me_player") - 1, true);
			DeletePVar(playerid,"walk_goto_me_player");
		}
		if(PlayerToPoint(5.0, playerid, 2537.8635,-1293.5372,1031.4219))// Федеральная Тюрьма
		{
			new randsetpos=random(8);
			switch(randsetpos)
			{
			case 0:SetPlayerPos(params[0],2534.1277,-1283.4602,1031.4219);
			case 1:SetPlayerPos(params[0],2543.5046,-1283.6619,1031.4219);
			case 2:SetPlayerPos(params[0],2551.9973,-1283.7877,1031.4219);
			case 3:SetPlayerPos(params[0],2561.0088,-1283.7921,1031.4219);
			case 4:SetPlayerPos(params[0],2560.7585,-1304.2552,1031.4219);
			case 5:SetPlayerPos(params[0],2550.6531,-1304.2961,1031.4219);
			case 6:SetPlayerPos(params[0],2543.2322,-1304.1515,1031.4219);
			case 7:SetPlayerPos(params[0],2534.2549,-1303.8744,1031.4219);
			}
			SetPlayerSkin(params[0],268);
			SetPlayerInterior(params[0], 2);
			SetPlayerVirtualWorld(params[0], 1);
			PI[params[0]][pJailed] = 1;
			PI[params[0]][pWantedLevel] = 0;
			PI[params[0]][pJailTime] = params[1]*60;
			PI[params[0]][pArrested] += 1;
			PI[params[0]][pMestoJail] = 5;
			PI[params[0]][pZakonp] -= 2;
			SetPlayerWantedLevel(params[0], 0);
			TogglePlayerControllable(params[0], 1);
			SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(params[0],0);
			PlayerCuffed[params[0]] = 0;
			PlayerCuffedTime[params[0]] = 0;
			Tazed[params[0]] = 0;
			PlayerPlaySound(params[0], 31202, 0.0, 0.0, 0.0);
		}
	}
	return true;
}
CMD:arrest(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"FloodArrest") > gettime()) return SCM(playerid, 0xFF0000FF, "Команду можно использовать раз в 10 секунд.");
	SetPVarInt(playerid,"FloodArrest",gettime() + 10);
	if(FormaFrac[playerid] == 1 || FormaFrac[playerid] == 2 || FormaFrac[playerid] == 10 || FormaFrac[playerid] == 21)
	if(PlayerToPoint(6.0, playerid, -1647.6201,701.9776,1001.8149) || PlayerToPoint(6.0, playerid, -1653.9175,702.0230,1001.8049))
	{
		if(sscanf(params, "ud",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /arrest [id] [время]");
		if(params[1] < 10 || params[1] > 40) return SCM(playerid, COLOR_GREY, "Количество минут от 10 до 40");
		if(!IsPlayerConnected(params[0])) return true;
		if(!ProxDetectorS(4.0, playerid, params[0])) return true;
		if(IsANonf(params[0])) return SCM(playerid, COLOR_GRAD2, "Этот игрок законник!");
		if(!PI[params[0]][pWantedLevel]) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Человек не является преступником");
		if(PI[params[0]][pWantedLevel] > 3) return SCM(playerid, COLOR_GREY, "У игрока больше 3 уровня розыска. Везите его в Федеральную тюрьму!");
		format(YCMDstr, 256, "Вы арестовали %s",Name(params[0]));
		SCM(playerid, COLOR_WHITE, YCMDstr);
		_ResetGun(params[0]);
		SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(params[0],0);
		PlayerCuffed[params[0]] = 0;
		PlayerCuffedTime[params[0]] = 0;
		Tazed[params[0]] = 0;
		switch(PI[playerid][pMember])
		{
		case 1,10,21: format(YCMDstr, 128, "< Офицер %s арестовал %s >",Name(playerid),Name(params[0]));
		case 2: format(YCMDstr, 128, "< Агент FBI %s арестовал %s >",Name(playerid),Name(params[0]));
		}
		if(GetPVarInt(playerid,"walk_goto_me_player"))
		{
			walk_goto_me[GetPVarInt(playerid,"walk_goto_me_player") - 1] = 0;
			ClearAnimations(GetPVarInt(playerid,"walk_goto_me_player") - 1, true);
			DeletePVar(playerid,"walk_goto_me_player");
		}
		if(GetPlayerVirtualWorld(playerid) == 1) // Тюрьма LSPD
		{
			new randsetpos = random(2);
			switch(randsetpos)
			{
			case 0: SetPlayerPos(params[0],-1645.8052,697.2281,1001.8049);
			case 1: SetPlayerPos(params[0],-1653.4485,697.7252,1001.8049);
			}
			SetPlayerInterior(params[0], 6);
			SetPlayerVirtualWorld(params[0], 1);
			PI[params[0]][pJailed] = 1;
			PI[params[0]][pWantedLevel] = 0;
			PI[params[0]][pJailTime] = params[1]*60;
			PI[params[0]][pArrested] += 1;
			PI[params[0]][pMestoJail] = 1;
			PI[params[0]][pZakonp] -= 2;
			SetPlayerWantedLevel(params[0], 0);
			TogglePlayerControllable(params[0], 1);
		}
		if(GetPlayerVirtualWorld(playerid) == 2) // Тюрьма СФПД
		{
			new randsetpos = random(2);
			switch(randsetpos)
			{
			case 0: SetPlayerPos(params[0],-1645.8052,697.2281,1001.8049);
			case 1: SetPlayerPos(params[0],-1653.4485,697.7252,1001.8049);
			}
			SetPlayerInterior(params[0], 6);
			SetPlayerVirtualWorld(params[0], 2);
			PI[params[0]][pJailed] = 1;
			PI[params[0]][pJailTime] = params[1]*60;
			PI[params[0]][pArrested] += 1;
			PI[params[0]][pWantedLevel] = 0;
			PI[params[0]][pMestoJail] = 2;
			PI[params[0]][pZakonp] -= 2;
			SetPlayerWantedLevel(params[0], 0);
			TogglePlayerControllable(params[0], 1);
		}
		if(GetPlayerVirtualWorld(playerid) == 122) // Тюрьма ЛВПД
		{
			new randsetpos = random(2);
			switch(randsetpos)
			{
			case 0: SetPlayerPos(params[0],-1645.8052,697.2281,1001.8049);
			case 1: SetPlayerPos(params[0],-1653.4485,697.7252,1001.8049);
			}
			SetPlayerInterior(params[0], 6);
			SetPlayerVirtualWorld(params[0], 122);
			PI[params[0]][pJailed] = 1;
			PI[params[0]][pJailTime] = params[1]*60;
			PI[params[0]][pArrested] += 1;
			PI[params[0]][pWantedLevel] = 0;
			PI[params[0]][pMestoJail] = 3;
			PI[params[0]][pZakonp] -= 2;
			SetPlayerWantedLevel(params[0], 0);
			TogglePlayerControllable(params[0], 1);
		}
	}
	return true;
}
CMD:fare(playerid, params[])
{
	if(!PI[playerid][pLogin] || PI[playerid][pJob] != 4) return true;
	if(GetPVarInt(playerid,"TaxiDuty") > 0)
	{
		Delete3DTextLabel(JobText3D[GetPVarInt(playerid,"rentcar_job")]);
		DeletePVar(playerid,"TaxiDuty");
		return true;
	}
	new Veh = GetPlayerVehicleID(playerid);
	if(Veh != GetPVarInt(playerid,"rentcar_job")) return SCM(playerid,COLOR_GREY,"Это не ваш автомобиль");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid,COLOR_GREY,"Вы должны находиться за рулем автомобиля!");
	if(Veh >= taxicar[0] && Veh <= taxicar[1])
	{
		SetPVarInt(playerid,"TaxiDuty",Veh);
		JobText3D[Veh] = Create3DTextLabel("<< Taxi San Andreas >>", 0xFFFF00FF, 9999.0, 9999.0, 9999.0, 30.0,0,1);
		Attach3DTextLabelToVehicle(JobText3D[Veh], Veh, 0, 0, 1.5);
	}
	return true;
}
CMD:frisk(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsACop(playerid)) return SCM(playerid,COLOR_GREY,"Вам недоступна данная команда");
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /frisk [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(3.0, playerid, params[0])) return true;
	if(PI[params[0]][pBSA] >= 1) return SCM(playerid, COLOR_RED, "Рядом с Вами никого нет!");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Вы не можете обыскать себя!");
	format(YCMDstr, 256, "Вещи %s", Name(params[0]));
	SCM(playerid, COLOR_WHITE, YCMDstr);
	format(YCMDstr, 256, " %s.",(PI[params[0]][pDrugs])?("| Наркотики.") : ("| Пустой карман."));
	SCM(playerid, COLOR_GREY, YCMDstr);
	format(YCMDstr, 256, " %s.",(PI[params[0]][pDrugs])?("| Материалы.") : ("| Пустой карман."));
	SCM(playerid, COLOR_GREY, YCMDstr);
	format(YCMDstr, 256, "%s обыскал %s", Name(playerid) ,Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return true;
}
CMD:wanted(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new sctring[500];
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, "Вы не законник");
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(PI[i][pWantedLevel] >= 1)
		{
			format(YCMDstr,sizeof(YCMDstr), "%s\t\t\t|\tУровень розыска: %d\n",Name(i),PI[i][pWantedLevel]);
			strcat(sctring,YCMDstr);
		}
	}
	if(strlen(sctring) > 1) SPDEx(playerid, 11349,0, "Розыскиваются", sctring, "Закрыть", "");
	else SCM(playerid,-1,"Нет розыскиваемых");
	return true;
}
ALT:megaphone:m;
CMD:megaphone(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: (/m)egaphone [текст ]");
	if(PI[playerid][pMuted] == 1) return SCM(playerid, 0xFF6347AA, "У Вас бан чата");
	switch(PI[playerid][pMember])
	{
	case 1,10,21:
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 596 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 597 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 598 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 599 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 560 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 541) return SCM(playerid, COLOR_GRAD2, "Вы не в полицейской машине");
			format(YCMDstr, 256, "{{ Офицер %s: %s }}",Name(playerid),params[0]);
			ProxDetector(80.0, playerid, YCMDstr,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		}
	case 2:
		{
			if(GetPlayerVehicleID(playerid) >= fbicar[0] && GetPlayerVehicleID(playerid) <= fbicar[10])
			{
				format(YCMDstr, 256, "{{ Агент FBI %s: %s }}",Name(playerid),params[0]);
				ProxDetector(80.0, playerid, YCMDstr,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
			}
		}
	}
	return true;
}
CMD:f(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countingf") > gettime() ) return SCM(playerid, 0xFF0000FF, "Не Флуди.");
	if(PI[playerid][pMuted] == 1) return SCM(playerid, 0xFF6347AA, "У Вас бан чата");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SCM(playerid, COLOR_WHITE, "Введите: (/f)amily [текст]");
	AntiReklama(playerid,result,"/f");
	if(GetPVarInt(playerid, "antireklamka") == 1)
	{
		SetPVarInt(playerid, "antireklamka", 0);
		return true;
	}
	if(FormaFrac[playerid] >= 1)
	{
		switch(PI[playerid][pMember])
		{
		case 5:
			{
				switch(PI[playerid][pRank])
				{
				case 5:{ format(YCMDstr, 128, "[F] Крестный отец %s[%d]: %s", Name(playerid), playerid, result); }
				case 4:{ format(YCMDstr, 128, "[F] Младший босс %s[%d]: %s", Name(playerid), playerid, result); }
				case 3:{ format(YCMDstr, 128, "[F] Капореджиме %s[%d]: %s", Name(playerid), playerid, result); }
				case 2:{format(YCMDstr, 128, "[F] Боец %s[%d]: %s", Name(playerid), playerid, result); }
				case 1:{ format(YCMDstr, 128, "[F] Новицио %s[%d]: %s", Name(playerid), playerid, result); }
				}
				SendFamilyMessage(PI[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
				if(tipsteron == PI[playerid][pMember])
				{
					for(new idx=0, i=0; idx<cvector_size(players); idx++)
					{
						i = cvector_get(players, idx);
						if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, YCMDstr);
					}
				}
			}
		case 6:
			{
				switch(PI[playerid][pRank])
				{
				case 5:{ format(YCMDstr, 128, "[F] Оябун %s[%d]: %s", Name(playerid), playerid, result); }
				case 4:{ format(YCMDstr, 128, "[F] Сайко-комон %s[%d]: %s", Name(playerid), playerid, result); }
				case 3:{ format(YCMDstr, 128, "[F] Вака-гасира %s[%d]: %s", Name(playerid), playerid, result); }
				case 2:{ format(YCMDstr, 128, "[F] Кёдай %s[%d]: %s", Name(playerid), playerid, result); }
				case 1:{ format(YCMDstr, 128, "[F] Куми-ин %s[%d]: %s", Name(playerid), playerid, result); }
				}
				SendFamilyMessage(PI[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
				if(tipsteron == PI[playerid][pMember])
				{
					for(new idx=0, i=0; idx<cvector_size(players); idx++)
					{
						i = cvector_get(players, idx);
						if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, YCMDstr);
					}
				}
			}
		case 12:
			{
				switch(PI[playerid][pRank])
				{
				case 5:{ format(YCMDstr, 128, "[F] Биг Вилли %s[%d]: %s", Name(playerid), playerid, result); }
				case 4:{ format(YCMDstr, 128, "[F] Райч нига %s[%d]: %s", Name(playerid), playerid, result); }
				case 3:{ format(YCMDstr, 128, "[F] Фолкс %s[%d]: %s", Name(playerid), playerid, result); }
				case 2:{ format(YCMDstr, 128, "[F] Гэнгста %s[%d]: %s", Name(playerid), playerid, result); }
				case 1:{ format(YCMDstr, 128, "[F] Гун бро %s[%d]: %s", Name(playerid), playerid, result); }
				}
				SendFamilyMessage(PI[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
				if(tipsteron == PI[playerid][pMember])
				{
					for(new idx=0, i=0; idx<cvector_size(players); idx++)
					{
						i = cvector_get(players, idx);
						if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, YCMDstr);
					}
				}
			}
		case 13:
			{
				switch(PI[playerid][pRank])
				{
				case 5:{ format(YCMDstr, 128, "[F] Падре %s[%d]: %s", Name(playerid), playerid, result); }
				case 4:{ format(YCMDstr, 128, "[F] Падрино %s[%d]: %s", Name(playerid), playerid, result); }
				case 3:{ format(YCMDstr, 128, "[F] Бандито %s[%d]: %s", Name(playerid), playerid, result); }
				case 2:{ format(YCMDstr, 128, "[F] Локал %s[%d]: %s", Name(playerid), playerid, result); }
				case 1:{ format(YCMDstr, 128, "[F] Новито %s[%d]: %s", Name(playerid), playerid, result); }
				}
				SendFamilyMessage(PI[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
				if(tipsteron == PI[playerid][pMember])
				{
					for(new idx=0, i=0; idx<cvector_size(players); idx++)
					{
						i = cvector_get(players, idx);
						if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, YCMDstr);
					}
				}
			}
		case 14:
			{
				switch(PI[playerid][pRank])
				{
				case 5:{ format(YCMDstr, 128, "[F] Вор в законе %s[%d]: %s", Name(playerid), playerid, result); }
				case 4:{ format(YCMDstr, 128, "[F] Авторитет %s[%d]: %s", Name(playerid), playerid, result); }
				case 3:{ format(YCMDstr, 128, "[F] Бригадир %s[%d]: %s", Name(playerid), playerid, result); }
				case 2:{ format(YCMDstr, 128, "[F] Вор %s[%d]: %s", Name(playerid), playerid, result); }
				case 1:{ format(YCMDstr, 128, "[F] Шестерка %s[%d]: %s", Name(playerid), playerid, result); }
				}
				SendFamilyMessage(PI[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
				if(tipsteron == PI[playerid][pMember])
				{
					for(new idx=0, i=0; idx<cvector_size(players); idx++)
					{
						i = cvector_get(players, idx);
						if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, YCMDstr);
					}
				}
			}
		case 15:
			{
				switch(PI[playerid][pRank])
				{
				case 5:{ format(YCMDstr, 128, "[F] Медд Дог %s[%d]: %s", Name(playerid), playerid, result); }
				case 4:{ format(YCMDstr, 128, "[F] Де Кинг %s[%d]: %s", Name(playerid), playerid, result); }
				case 3:{ format(YCMDstr, 128, "[F] Мобста %s[%d]: %s", Name(playerid), playerid, result); }
				case 2:{ format(YCMDstr, 128, "[F] Гэнгста %s[%d]: %s", Name(playerid), playerid, result); }
				case 1:{ format(YCMDstr, 128, "[F] Килла %s[%d]: %s", Name(playerid), playerid, result); }
				}
				SendFamilyMessage(PI[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
				if(tipsteron == PI[playerid][pMember])
				{
					for(new idx=0, i=0; idx<cvector_size(players); idx++)
					{
						i = cvector_get(players, idx);
						if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, YCMDstr);
					}
				}
			}
		case 17:
			{
				switch(PI[playerid][pRank])
				{
				case 5:{ format(YCMDstr, 128, "[F] Падре %s[%d]: %s", Name(playerid), playerid, result); }
				case 4:{ format(YCMDstr, 128, "[F] Нестро %s[%d]: %s", Name(playerid), playerid, result); }
				case 3:{ format(YCMDstr, 128, "[F] Тесосеро %s[%d]: %s", Name(playerid), playerid, result); }
				case 2:{ format(YCMDstr, 128, "[F] Мирандо %s[%d]: %s", Name(playerid), playerid, result); }
				case 1:{ format(YCMDstr, 128, "[F] Геттор %s[%d]: %s", Name(playerid), playerid, result); }
				}
				SendFamilyMessage(PI[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
				if(tipsteron == PI[playerid][pMember])
				{
					for(new idx=0, i=0; idx<cvector_size(players); idx++)
					{
						i = cvector_get(players, idx);
						if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, YCMDstr);
					}
				}
			}
		case 18:
			{
				switch(PI[playerid][pRank])
				{
				case 5:{ format(YCMDstr, 128, "[F] Падре %s[%d]: %s", Name(playerid), playerid, result); }
				case 4:{ format(YCMDstr, 128, "[F] Ауторидад %s[%d]: %s", Name(playerid), playerid, result); }
				case 3:{ format(YCMDstr, 128, "[F] Бандидо %s[%d]: %s", Name(playerid), playerid, result); }
				case 2:{ format(YCMDstr, 128, "[F] Джуниор %s[%d]: %s", Name(playerid), playerid, result); }
				case 1:{ format(YCMDstr, 128, "[F] Новато %s[%d]: %s", Name(playerid), playerid, result); }
				}
				SendFamilyMessage(PI[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
				if(tipsteron == PI[playerid][pMember])
				{
					for(new idx=0, i=0; idx<cvector_size(players); idx++)
					{
						i = cvector_get(players, idx);
						if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, YCMDstr);
					}
				}
			}
		case 23:
			{
				switch(PI[playerid][pRank])
				{
				case 5:{ format(YCMDstr, 128, "[F] Вожак стаи %s[%d]: %s", Name(playerid), playerid, result); }
				case 4:{ format(YCMDstr, 128, "[F] Старый Волк %s[%d]: %s", Name(playerid), playerid, result); }
				case 3:{ format(YCMDstr, 128, "[F] Неуловимый %s[%d]: %s", Name(playerid), playerid, result); }
				case 2:{ format(YCMDstr, 128, "[F] Охотник за головами %s[%d]: %s", Name(playerid), playerid, result); }
				case 1:{ format(YCMDstr, 128, "[F] Заблудший %s[%d]: %s", Name(playerid), playerid, result); }
				}
				SendFamilyMessage(PI[playerid][pMember], TEAM_AZTECAS_COLOR, YCMDstr);
				if(tipsteron == PI[playerid][pMember])
				{
					for(new idx=0, i=0; idx<cvector_size(players); idx++)
					{
						i = cvector_get(players, idx);
						if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, YCMDstr);
					}
				}
			}
		}
		SetPVarInt(playerid,"Countingf",gettime() + 5);
		return true;
	}
	else
	{
		SCM(playerid, COLOR_GRAD2, "Вы не член какой-либо фракции!");
		return true;
	}
}
CMD:k(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!player_family[playerid])return SCM(playerid, -1, "Вы не состоите в семье!");
	if(sscanf(params, "s[128]", params[0]))return SCM(playerid, -1, "Ввведите: /k [текст]" ) ;
	AntiReklama(playerid,params[0],"/k");
	if(GetPVarInt(playerid, "antireklamka") == 1)
	{
		SetPVarInt(playerid, "antireklamka", 0);
		return true;
	}
	if(PI[playerid][pMuted] == 1) return SCM(playerid, 0xFF6347AA, "У Вас бан чата");
	format(YCMDstr,144,"{%s}[< %s >] %s: %s",family_chat_color[family_info[player_family[playerid]][f_chat_color]],family_info[player_family[playerid]][f_name],Name(playerid),params[0]);
	family_message(player_family[playerid],-1, YCMDstr);
	return true;
}
CMD:r(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countingr") > gettime() ) return SCM(playerid, 0xFF0000FF, "Не Флуди.");
	new result[128];
	if(sscanf(params, "s[128]",result)) return	SCM(playerid, COLOR_GRAD2, "Введите: (/r)adio [текст]");
	AntiReklama(playerid,result,"/r");
	if(GetPVarInt(playerid, "antireklamka") == 1)
	{
		SetPVarInt(playerid, "antireklamka", 0);
		return true;
	}
	if(PI[playerid][pMuted] == 1) return SCM(playerid, 0xFF6347AA, "У Вас бан чата");
	if(FormaFrac[playerid] == 0) return true;
	SetPlayerChatBubble(playerid,"Сказал(a) что-то в рацию",COLOR_PURPLE,30.0,10000);
	if(PI[playerid][pMember] == 1 || PI[playerid][pLeader] == 1)
	{
		if(PI[playerid][pRank] == 10) { format(YCMDstr, 128, "[LSPD] Комиссар %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 9) { format(YCMDstr, 128, "[LSPD] Пом. Комиссара %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 8) { format(YCMDstr, 128, "[LSPD] Инспектор %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 7) { format(YCMDstr, 128, "[LSPD] SWAT %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 6) { format(YCMDstr, 128, "[LSPD] Лейтенант %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 5) { format(YCMDstr, 128, "[LSPD] Сержант %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 4) { format(YCMDstr, 128, "[LSPD] Детектив %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 3) { format(YCMDstr, 128, "[LSPD] Офицер %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 2) { format(YCMDstr, 128, "[LSPD] Патрульный %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 1) { format(YCMDstr, 128, "[LSPD] Кадет %s[%d]: %s", Name(playerid), playerid, result); }
		else { format(YCMDstr, 128, "[LSPD] Кадет %s[%d]: %s", Name(playerid), playerid, result); }
		SendFamilyMessage(1, TEAM_BLUE_COLOR, YCMDstr);
		SendFamilyMessage(10, TEAM_BLUE_COLOR, YCMDstr);
		SendFamilyMessage(21, TEAM_BLUE_COLOR, YCMDstr);
		if(tipsteron == PI[playerid][pMember])
		{
			for(new idx=0, i=0; idx<cvector_size(players); idx++)
			{
				i = cvector_get(players, idx);
				if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, YCMDstr);
			}
		}
		return true;
	}
	else if(PI[playerid][pMember] == 2 || PI[playerid][pLeader] == 2)
	{
		if(PI[playerid][pRank] == 10) { format(YCMDstr, 128, "[R] Директор %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 9) { format(YCMDstr, 128, "[R] Зам.Директора %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 8) { format(YCMDstr, 128, "[R] Инспектор %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 7) { format(YCMDstr, 128, "[R] SWAT FBI %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 6) { format(YCMDstr, 128, "[R] Нач. Секции %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 5) { format(YCMDstr, 128, "[R] Спец. Aгент %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 4) { format(YCMDstr, 128, "[R] Ст. Агент %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 3) { format(YCMDstr, 128, "[R] Агент %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 2) { format(YCMDstr, 128, "[R] Мл. Агент %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 1) { format(YCMDstr, 128, "[R] Стажёр %s[%d]: %s", Name(playerid), playerid, result); }
		else { format(YCMDstr, 128, "[R] Стажёр %s[%d]: %s", Name(playerid), playerid, result); }
		SendFamilyMessage(2, TEAM_BLUE_COLOR, YCMDstr);
		if(tipsteron == PI[playerid][pMember])
		{
			for(new idx=0, i=0; idx<cvector_size(players); idx++)
			{
				i = cvector_get(players, idx);
				if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, YCMDstr);
			}
		}
		return true;
	}
	else if(PI[playerid][pMember] == 3 || PI[playerid][pLeader] == 3)
	{
		if(PI[playerid][pRank] == 16) { format(YCMDstr, 128, "[R] Адмирал %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 15) { format(YCMDstr, 128, "[R] Кап. 1 ранга %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 14) { format(YCMDstr, 128, "[R] Кап. 2 ранга %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 13) { format(YCMDstr, 128, "[R] Кап. 3 ранга %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 12) { format(YCMDstr, 128, "[R] Капитан-Лейтенант %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 11) { format(YCMDstr, 128, "[R] Ст. лейтенант %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 10) { format(YCMDstr, 128, "[R] Лейтенант %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 9) { format(YCMDstr, 128, "[R] Мл. лейтенант %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 8) { format(YCMDstr, 128, "[R] Ст. мичман %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 7) { format(YCMDstr, 128, "[R] Мичман %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 6) { format(YCMDstr, 128, "[R] Боцман %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 5) { format(YCMDstr, 128, "[R] Гл. Старшина %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 4) { format(YCMDstr, 128, "[R] Старшина %s[%d]: %s",  Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 3) { format(YCMDstr, 128, "[R] Канонир %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 2) { format(YCMDstr, 128, "[R] Ст. Матрос %s[%d]: %s",  Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 1) { format(YCMDstr, 128, "[R] Матрос %s[%d]: %s",  Name(playerid), playerid, result); }
		else { format(YCMDstr, 128, "[R] Матрос %s[%d]: %s", Name(playerid), playerid, result); }
		SendFamilyMessage(3, TEAM_BLUE_COLOR, YCMDstr);
		if(tipsteron == PI[playerid][pMember])
		{
			for(new idx=0, i=0; idx<cvector_size(players); idx++)
			{
				i = cvector_get(players, idx);
				if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, YCMDstr);
			}
		}
		return true;
	}
	else if(PI[playerid][pMember] == 4 || PI[playerid][pLeader] == 4)
	{
		if(PI[playerid][pRank] == 10) { format(YCMDstr, 128, "[R] Глав. Врач %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 9) { format(YCMDstr, 128, "[R] Зав. Отделением %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 8) { format(YCMDstr, 128, "[R] Хирург %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 7) { format(YCMDstr, 128, "[R] Психиатр %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 6) { format(YCMDstr, 128, "[R] Нарколог %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 5) { format(YCMDstr, 128, "[R] Терапевт %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 4) { format(YCMDstr, 128, "[R] Парамедик %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 3) { format(YCMDstr, 128, "[R] Интерн %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 2) { format(YCMDstr, 128, "[R] Мед. Брат %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 1) { format(YCMDstr, 128, "[R] Санитар %s[%d]: %s", Name(playerid), playerid, result); }
		else { format(YCMDstr, 128, "[R] Санитар %s[%d]: %s", Name(playerid), playerid, result); }
		SendFamilyMessage(4, TEAM_BLUE_COLOR, YCMDstr);
		SendFamilyMessage(8, TEAM_BLUE_COLOR, YCMDstr);
		if(tipsteron == PI[playerid][pMember])
		{
			for(new idx=0, i=0; idx<cvector_size(players); idx++)
			{
				i = cvector_get(players, idx);
				if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, YCMDstr);
			}
		}
		return true;
	}
	else if(PI[playerid][pMember] == 8 || PI[playerid][pLeader] == 8)
	{
		if(PI[playerid][pRank] == 10) { format(YCMDstr, 128, "[R] Глав. Врач %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 9) { format(YCMDstr, 128, "[R] Зав. Отделением %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 8) { format(YCMDstr, 128, "[R] Хирург %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 7) { format(YCMDstr, 128, "[R] Психиатр %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 6) { format(YCMDstr, 128, "[R] Нарколог %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 5) { format(YCMDstr, 128, "[R] Терапевт %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 4) { format(YCMDstr, 128, "[R] Парамедик %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 3) { format(YCMDstr, 128, "[R] Интерн %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 2) { format(YCMDstr, 128, "[R] Мед. Брат %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 1) { format(YCMDstr, 128, "[R] Санитар %s[%d]: %s", Name(playerid), playerid, result); }
		else { format(YCMDstr, 128, "[R] Санитар %s[%d]: %s", Name(playerid), playerid, result); }
		SendFamilyMessage(4, TEAM_BLUE_COLOR, YCMDstr);
		SendFamilyMessage(8, TEAM_BLUE_COLOR, YCMDstr);
		if(tipsteron == PI[playerid][pMember])
		{
			for(new idx=0, i=0; idx<cvector_size(players); idx++)
			{
				i = cvector_get(players, idx);
				if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, YCMDstr);
			}
		}
		return true;
	}
	else if(PI[playerid][pMember] == 9 || PI[playerid][pLeader] == 9)
	{
		if(PI[playerid][pRank] == 7) { format(YCMDstr, 128, "[R] Ген. Директор %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 6) { format(YCMDstr, 128, "[R] Шеф-Редактор %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 5) { format(YCMDstr, 128, "[R] Редактор %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 4) { format(YCMDstr, 128, "[R] Ведущий %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 3) { format(YCMDstr, 128, "[R] Репортер %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 2) { format(YCMDstr, 128, "[R] Копирайтер %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 1) { format(YCMDstr, 128, "[R] Стажер %s[%d]: %s", Name(playerid), playerid, result); }
		else { format(YCMDstr, 128, "[R] Стажер %s[%d]: %s", Name(playerid), playerid, result); }
		SendFamilyMessage(9, TEAM_BLUE_COLOR, YCMDstr);
		if(tipsteron == PI[playerid][pMember])
		{
			for(new idx=0, i=0; idx<cvector_size(players); idx++)
			{
				i = cvector_get(players, idx);
				if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, YCMDstr);
			}
		}
		return true;
	}
	else if(PI[playerid][pMember] == 10 || PI[playerid][pLeader] == 10)
	{
		if(PI[playerid][pRank] == 10) { format(YCMDstr, 128, "[SFPD] Комиссар %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 9) { format(YCMDstr, 128, "[SFPD] Пом. Комиссара %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 8) { format(YCMDstr, 128, "[SFPD] Инспектор %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 7) { format(YCMDstr, 128, "[SFPD] SWAT %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 6) { format(YCMDstr, 128, "[SFPD] Лейтенант %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 5) { format(YCMDstr, 128, "[SFPD] Сержант %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 4) { format(YCMDstr, 128, "[SFPD] Детектив %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 3) { format(YCMDstr, 128, "[SFPD] Офицер %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 2) { format(YCMDstr, 128, "[SFPD] Патрульный %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 1) { format(YCMDstr, 128, "[SFPD] Кадет %s[%d]: %s", Name(playerid), playerid, result); }
		else { format(YCMDstr, 128, "[SFPD] Кадет %s[%d]: %s", Name(playerid), playerid, result); }
		SendFamilyMessage(1, TEAM_BLUE_COLOR, YCMDstr); SendFamilyMessage(10, TEAM_BLUE_COLOR, YCMDstr); SendFamilyMessage(21, TEAM_BLUE_COLOR, YCMDstr);
		if(tipsteron == PI[playerid][pMember])
		{
			for(new idx=0, i=0; idx<cvector_size(players); idx++)
			{
				i = cvector_get(players, idx);
				if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, YCMDstr);
			}
		}
		return true;
	}
	else if(PI[playerid][pMember] == 19 || PI[playerid][pLeader] == 19)
	{
		if(PI[playerid][pRank] == 16) { format(YCMDstr, 128, "[R] Генерал %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 15) { format(YCMDstr, 128, "[R] Полковник %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 14) { format(YCMDstr, 128, "[R] Подполковник %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 13) { format(YCMDstr, 128, "[R] Майор %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 12) { format(YCMDstr, 128, "[R] Капитан %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 11) { format(YCMDstr, 128, "[R] 1-лейтенант %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 10) { format(YCMDstr, 128, "[R] 2-лейтенант %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 9) { format(YCMDstr, 128, "[R] Ст. Уорент-офицер %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 8) { format(YCMDstr, 128, "[R] Уорент-офицер %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 7) { format(YCMDstr, 128, "[R] Ст. Сержант %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 6) { format(YCMDstr, 128, "[R] Штаб-Сержант %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 5) { format(YCMDstr, 128, "[R] Сержант %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 4) { format(YCMDstr, 128, "[R] Капрал %s[%d]: %s",  Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 3) { format(YCMDstr, 128, "[R] Мл. Капрал %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 2) { format(YCMDstr, 128, "[R] Рядовой %s[%d]: %s",  Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 1) { format(YCMDstr, 128, "[R] Рекрут %s[%d]: %s",  Name(playerid), playerid, result); }
		else { format(YCMDstr, 128, "[R] Рекрут %s[%d]: %s", Name(playerid), playerid, result); }
		SendFamilyMessage(19, TEAM_BLUE_COLOR, YCMDstr);
		if(tipsteron == PI[playerid][pMember])
		{
			for(new idx=0, i=0; idx<cvector_size(players); idx++)
			{
				i = cvector_get(players, idx);
				if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, YCMDstr);
			}
		}
		return true;
	}
	else if(PI[playerid][pMember] == 21 || PI[playerid][pLeader] == 21)
	{
		if(PI[playerid][pRank] == 10) { format(YCMDstr, 128, "[LVPD] Комиссар %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 9) { format(YCMDstr, 128, "[LVPD] Пом. Комиссара %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 8) { format(YCMDstr, 128, "[LVPD] Инспектор %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 7) { format(YCMDstr, 128, "[LVPD] SWAT %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 6) { format(YCMDstr, 128, "[LVPD] Лейтенант %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 5) { format(YCMDstr, 128, "[LVPD] Сержант %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 4) { format(YCMDstr, 128, "[LVPD] Детектив %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 3) { format(YCMDstr, 128, "[LVPD] Офицер %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 2) { format(YCMDstr, 128, "[LVPD] Патрульный %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 1) { format(YCMDstr, 128, "[LVPD] Кадет %s[%d]: %s", Name(playerid), playerid, result); }
		else { format(YCMDstr, 128, "[LVPD] Кадет %s[%d]: %s", Name(playerid), playerid, result); }
		SendFamilyMessage(1, TEAM_BLUE_COLOR, YCMDstr); SendFamilyMessage(10, TEAM_BLUE_COLOR, YCMDstr); SendFamilyMessage(21, TEAM_BLUE_COLOR, YCMDstr);
		if(tipsteron == PI[playerid][pMember])
		{
			for(new idx=0, i=0; idx<cvector_size(players); idx++)
			{
				i = cvector_get(players, idx);
				if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, YCMDstr);
			}
		}
		return true;
	}
	else if(PI[playerid][pMember] == 22 || PI[playerid][pLeader] == 22)
	{
		if(PI[playerid][pRank] == 14) { format(YCMDstr, 128, "[R] Президент %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 13) { format(YCMDstr, 128, "[R] Вице-Президент %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 12) { format(YCMDstr, 128, "[R] Гос. Секретарь %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 11) { format(YCMDstr, 128, "[R] Мин. Обороны %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 10) { format(YCMDstr, 128, "[R] Зам. МО %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 9) { format(YCMDstr, 128, "[R] Мин. Внутренних Дел %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 8) { format(YCMDstr, 128, "[R] Зам. МВД %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 7) { format(YCMDstr, 128, "[R] Мин. Здравоохранения %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 6) { format(YCMDstr, 128, "[R] Зам. МЗ %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 5) { format(YCMDstr, 128, "[R] Министр Культуры %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 4) { format(YCMDstr, 128, "[R] Зам. МК %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 3) { format(YCMDstr, 128, "[R] Пресс-секретарь %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 2) { format(YCMDstr, 128, "[R] Нач. охраны %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 1) { format(YCMDstr, 128, "[R] Охранник %s[%d]: %s", Name(playerid), playerid, result); }
		else { format(YCMDstr, 128, "[R] Охранник: %s[%d]", Name(playerid), playerid, result); }
		SendFamilyMessage(22, TEAM_BLUE_COLOR, YCMDstr);
		if(tipsteron == PI[playerid][pMember])
		{
			for(new idx=0, i=0; idx<cvector_size(players); idx++)
			{
				i = cvector_get(players, idx);
				if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, YCMDstr);
			}
		}
		return true;
	}
	else if(PI[playerid][pMember] == 24 || PI[playerid][pLeader] == 24)
	{
		if(PI[playerid][pRank] == 6) { format(YCMDstr, 128, "[R] Директор %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 5) { format(YCMDstr, 128, "[R] Гл.Инженер %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 4) { format(YCMDstr, 128, "[R] Нач.Охраны %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 3) { format(YCMDstr, 128, "[R] Охранник %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 2) { format(YCMDstr, 128, "[R] Экспедитор %s[%d]: %s", Name(playerid), playerid, result); }
		else if(PI[playerid][pRank] == 1) { format(YCMDstr, 128, "[R] Технолог %s[%d]: %s", Name(playerid), playerid, result); }
		else { format(YCMDstr, 128, "[R] Технолог %s[%d]: %s", Name(playerid), playerid, result); }
		SendFamilyMessage(24, TEAM_BLUE_COLOR, YCMDstr);
		if(tipsteron == PI[playerid][pMember])
		{
			for(new idx=0, i=0; idx<cvector_size(players); idx++)
			{
				i = cvector_get(players, idx);
				if(tipsterlisten[i]) SCM(i, COLOR_LIGHTRED, YCMDstr);
			}
		}
		return true;
	}
	SetPVarInt(playerid,"Countingr",gettime() + 5);
	return true;
}
ALT:departments:d;
CMD:departments(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countingd") > gettime()) return SCM(playerid, 0xFF0000FF, "Не Флуди.");
	SetPVarInt(playerid,"Countingd",gettime() + 15);
	new result[128];
	if(sscanf(params, "s[128]",result)) return SCM(playerid, COLOR_WHITE, "Введите: (/d)epartments [текст]");
	AntiReklama(playerid,result,"/d");
	if(GetPVarInt(playerid, "antireklamka") == 1)
	{
		SetPVarInt(playerid, "antireklamka", 0);
		return true;
	}
	if(PI[playerid][pMuted] == 1) return SCM(playerid, 0xFF6347AA, "У Вас бан чата");
	if(PI[playerid][pRank] < 2) return true;
	SetPlayerChatBubble(playerid,"Сказал(a) что-то в рацию",COLOR_PURPLE,30.0,10000);
	switch(PI[playerid][pMember])
	{
	case 1:
		{
			switch(PI[playerid][pRank])
			{
			case 10:{ format(YCMDstr, 128, "[LSPD] Комиссар %s: %s", Name(playerid), result); }
			case 9:{ format(YCMDstr, 128, "[LSPD] Пом. Комиссара %s: %s", Name(playerid), result); }
			case 8:{ format(YCMDstr, 128, "[LSPD] Инспектор %s: %s", Name(playerid),result); }
			case 7:{ format(YCMDstr, 128, "[LSPD] SWAT %s: %s", Name(playerid),result); }
			case 6:{ format(YCMDstr, 128, "[LSPD] Лейтенант %s: %s", Name(playerid),result); }
			case 5:{ format(YCMDstr, 128, "[LSPD] Сержант %s: %s", Name(playerid), result); }
			case 4:{ format(YCMDstr, 128, "[LSPD] Детектив %s: %s", Name(playerid), result); }
			case 3:{ format(YCMDstr, 128, "[LSPD] Офицер %s: %s", Name(playerid), result); }
			case 2:{ format(YCMDstr, 128, "[LSPD] Патрульный %s: %s", Name(playerid),result); }
			case 1:{ format(YCMDstr, 128, "[LSPD] Кадет %s: %s", Name(playerid), result); }
			}
			SendTeamMessage(1, COLOR_ALLDEPT, YCMDstr);
			return true;
		}
	case 2:
		{
			switch(PI[playerid][pRank])
			{
			case 10:{ format(YCMDstr, 128, "[FBI] Директор FBI %s: %s", Name(playerid), result); }
			case 9:{ format(YCMDstr, 128, "[FBI] Зам.Директора FBI %s: %s", Name(playerid), result); }
			case 8:{ format(YCMDstr, 128, "[FBI] Инспектор FBI %s: %s", Name(playerid), result); }
			case 7:{ format(YCMDstr, 128, "[FBI] SWAT FBI %s: %s", Name(playerid), result); }
			case 6:{ format(YCMDstr, 128, "[FBI] Нач. секции %s: %s", Name(playerid), result); }
			case 5:{ format(YCMDstr, 128, "[FBI] Спец Aгент %s: %s", Name(playerid), result); }
			case 4:{ format(YCMDstr, 128, "[FBI] Ст. Агент %s: %s", Name(playerid), result); }
			case 3:{ format(YCMDstr, 128, "[FBI] Агент %s: %s", Name(playerid), result); }
			case 2:{ format(YCMDstr, 128, "[FBI] Мл. Агент %s: %s", Name(playerid), result); }
			case 1:{ format(YCMDstr, 128, "[FBI] Стажёр %s: %s", Name(playerid), result); }
			}
			SendTeamMessage(1, COLOR_ALLDEPT, YCMDstr);
			return true;
		}
	case 3:
		{
			switch(PI[playerid][pRank])
			{
			case 16:{ format(YCMDstr, 128, "[ВМФ] Адмирал %s: %s", Name(playerid), result); }
			case 15:{ format(YCMDstr, 128, "[ВМФ] Кап. 1 ранга %s: %s", Name(playerid), result); }
			case 14:{ format(YCMDstr, 128, "[ВМФ] Кап. 2 ранга %s: %s", Name(playerid), result); }
			case 13:{ format(YCMDstr, 128, "[ВМФ] Кап. 3 ранга %s: %s", Name(playerid), result); }
			case 12:{ format(YCMDstr, 128, "[ВМФ] Капитан-Лейтенант %s: %s", Name(playerid), result); }
			case 11:{ format(YCMDstr, 128, "[ВМФ] Ст. лейтенант %s: %s", Name(playerid), result); }
			case 10:{ format(YCMDstr, 128, "[ВМФ] Лейтенант %s: %s", Name(playerid), result); }
			case 9:{ format(YCMDstr, 128, "[ВМФ] Мл. лейтенант %s: %s", Name(playerid), result); }
			case 8:{ format(YCMDstr, 128, "[ВМФ] Ст. мичман %s: %s", Name(playerid), result); }
			case 7:{ format(YCMDstr, 128, "[ВМФ] Мичман %s: %s", Name(playerid), result); }
			case 6:{ format(YCMDstr, 128, "[ВМФ] Боцман %s: %s", Name(playerid), result); }
			case 5:{ format(YCMDstr, 128, "[ВМФ] Гл. Старшина %s: %s", Name(playerid), result); }
			case 4:{ format(YCMDstr, 128, "[ВМФ] Старшина %s: %s",  Name(playerid), result); }
			case 3:{ format(YCMDstr, 128, "[ВМФ] Канонир %s: %s", Name(playerid), result); }
			case 2:{ format(YCMDstr, 128, "[ВМФ] Ст. Матрос %s: %s",  Name(playerid), result); }
			case 1:{ format(YCMDstr, 128, "[ВМФ] Матрос %s: %s",  Name(playerid), result); }
			}
			SendTeamMessage(1, COLOR_ALLDEPT, YCMDstr);
			return true;
		}
	case 4:
		{
			switch(PI[playerid][pRank])
			{
			case 10:{ format(YCMDstr, 128, "[Мед. Центр СФ] Глав. Врач %s: %s", Name(playerid), result); }
			case 9:{ format(YCMDstr, 128, "[Мед. Центр СФ] Зав. Отделением %s: %s", Name(playerid), result); }
			case 8:{ format(YCMDstr, 128, "[Мед. Центр СФ] Хирург %s: %s", Name(playerid), result); }
			case 7:{ format(YCMDstr, 128, "[Мед. Центр СФ] Психиатр %s: %s", Name(playerid), result); }
			case 6:{ format(YCMDstr, 128, "[Мед. Центр СФ] Нарколог %s: %s", Name(playerid), result); }
			case 5:{ format(YCMDstr, 128, "[Мед. Центр СФ] Терапевт %s: %s. ", Name(playerid), result); }
			case 4:{ format(YCMDstr, 128, "[Мед. Центр СФ] Парамедик %s: %s. ", Name(playerid), result); }
			case 3:{ format(YCMDstr, 128, "[Мед. Центр СФ] Интерн %s: %s. ", Name(playerid), result); }
			case 2:{ format(YCMDstr, 128, "[Мед. Центр СФ] Мед. Брат %s: %s. ", Name(playerid), result); }
			case 1:{ format(YCMDstr, 128, "[Мед. Центр СФ] Санитар %s: %s", Name(playerid), result); }
			}
			SendTeamMessage(1, COLOR_ALLDEPT, YCMDstr);
			return true;
		}
	case 8:
		{
			switch(PI[playerid][pRank])
			{
			case 10:{ format(YCMDstr, 128, "[Мед. Центр ЛС] Глав. Врач %s: %s", Name(playerid), result); }
			case 9:{ format(YCMDstr, 128, "[Мед. Центр ЛС] Зав. Отделением %s: %s", Name(playerid), result); }
			case 8:{ format(YCMDstr, 128, "[Мед. Центр ЛС] Хирург %s: %s", Name(playerid), result); }
			case 7:{ format(YCMDstr, 128, "[Мед. Центр ЛС] Психиатр %s: %s", Name(playerid), result); }
			case 6:{ format(YCMDstr, 128, "[Мед. Центр ЛС] Нарколог %s: %s", Name(playerid), result); }
			case 5:{ format(YCMDstr, 128, "[Мед. Центр ЛС] Терапевт %s: %s. ", Name(playerid), result); }
			case 4:{ format(YCMDstr, 128, "[Мед. Центр ЛС] Парамедик %s: %s. ", Name(playerid), result); }
			case 3:{ format(YCMDstr, 128, "[Мед. Центр ЛС] Интерн %s: %s. ", Name(playerid), result); }
			case 2:{ format(YCMDstr, 128, "[Мед. Центр ЛС] Мед. Брат %s: %s. ", Name(playerid), result); }
			case 1:{ format(YCMDstr, 128, "[Мед. Центр ЛС] Санитар %s: %s", Name(playerid), result); }
			}
			SendTeamMessage(1, COLOR_ALLDEPT, YCMDstr);
			return true;
		}
	case 9:
		{
			switch(PI[playerid][pRank])
			{
			case 7:{ format(YCMDstr, 128, "[SAN] Ген. Директор %s: %s", Name(playerid), result); }
			case 6:{ format(YCMDstr, 128, "[SAN] Шеф-Редактор %s: %s", Name(playerid), result); }
			case 5:{ format(YCMDstr, 128, "[SAN] Редактор %s: %s. ", Name(playerid), result); }
			case 4:{ format(YCMDstr, 128, "[SAN] Ведущий %s: %s. ", Name(playerid), result); }
			case 3:{ format(YCMDstr, 128, "[SAN] Репортер %s: %s. ", Name(playerid), result); }
			case 2:{ format(YCMDstr, 128, "[SAN] Копирайтер %s: %s. ", Name(playerid), result); }
			case 1:{ format(YCMDstr, 128, "[SAN] Стажер %s: %s", Name(playerid), result); }
			}
			SendTeamMessage(1, COLOR_ALLDEPT, YCMDstr);
			return true;
		}
	case 10:
		{
			switch(PI[playerid][pRank])
			{
			case 10:{ format(YCMDstr, 128, "[SFPD] Комиссар %s: %s", Name(playerid), result); }
			case 9:{ format(YCMDstr, 128, "[SFPD] Пом. Комиссара %s: %s", Name(playerid), result); }
			case 8:{ format(YCMDstr, 128, "[SFPD] Инспектор %s: %s", Name(playerid),result); }
			case 7:{ format(YCMDstr, 128, "[SFPD] SWAT %s: %s", Name(playerid),result); }
			case 6:{ format(YCMDstr, 128, "[SFPD] Лейтенант %s: %s", Name(playerid),result); }
			case 5:{ format(YCMDstr, 128, "[SFPD] Сержант %s: %s", Name(playerid), result); }
			case 4:{ format(YCMDstr, 128, "[SFPD] Детектив %s: %s", Name(playerid), result); }
			case 3:{ format(YCMDstr, 128, "[SFPD] Офицер %s: %s", Name(playerid), result); }
			case 2:{ format(YCMDstr, 128, "[SFPD] Патрульный %s: %s", Name(playerid),result); }
			case 1:{ format(YCMDstr, 128, "[SFPD] Кадет %s: %s", Name(playerid), result); }
			}
			SendTeamMessage(1, COLOR_ALLDEPT, YCMDstr);
			return true;
		}
	case 19:
		{
			switch(PI[playerid][pRank])
			{
			case 16:{ format(YCMDstr, 128, "[СВ] Генерал %s: %s", Name(playerid), result); }
			case 15:{ format(YCMDstr, 128, "[СВ] Полковник %s: %s", Name(playerid), result); }
			case 14:{ format(YCMDstr, 128, "[СВ] Подполковник %s: %s", Name(playerid), result); }
			case 13:{ format(YCMDstr, 128, "[СВ] Майор %s: %s", Name(playerid), result); }
			case 12:{ format(YCMDstr, 128, "[СВ] Капитан %s: %s", Name(playerid), result); }
			case 11:{ format(YCMDstr, 128, "[СВ] 1-лейтенант %s: %s", Name(playerid), result); }
			case 10:{ format(YCMDstr, 128, "[СВ] 2-лейтенант %s: %s", Name(playerid), result); }
			case 9:{ format(YCMDstr, 128, "[СВ] Ст. Уорент-офицер %s: %s", Name(playerid), result); }
			case 8:{ format(YCMDstr, 128, "[СВ] Уорент-офицер %s: %s", Name(playerid), result); }
			case 7:{ format(YCMDstr, 128, "[СВ] Ст. Сержант %s: %s", Name(playerid), result); }
			case 6:{ format(YCMDstr, 128, "[СВ] Штаб-Сержант %s: %s", Name(playerid), result); }
			case 5:{ format(YCMDstr, 128, "[СВ] Сержант %s: %s", Name(playerid), result); }
			case 4:{ format(YCMDstr, 128, "[СВ] Капрал %s: %s",  Name(playerid), result); }
			case 3:{ format(YCMDstr, 128, "[СВ] Мл. Капрал %s: %s", Name(playerid), result); }
			case 2:{ format(YCMDstr, 128, "[СВ] Рядовой %s: %s",  Name(playerid), result); }
			case 1:{ format(YCMDstr, 128, "[СВ] Рекрут %s: %s",  Name(playerid), result); }
			}
			SendTeamMessage(1, COLOR_ALLDEPT, YCMDstr);
			return true;
		}
	case 21:
		{
			switch(PI[playerid][pRank])
			{
			case 10:{ format(YCMDstr, 128, "[LVPD] Комиссар %s: %s", Name(playerid), result); }
			case 9:{ format(YCMDstr, 128, "[LVPD] Пом. Комиссара %s: %s", Name(playerid), result); }
			case 8:{ format(YCMDstr, 128, "[LVPD] Инспектор %s: %s", Name(playerid),result); }
			case 7:{ format(YCMDstr, 128, "[LVPD] SWAT %s: %s", Name(playerid),result); }
			case 6:{ format(YCMDstr, 128, "[LVPD] Лейтенант %s: %s", Name(playerid),result); }
			case 5:{ format(YCMDstr, 128, "[LVPD] Сержант %s: %s", Name(playerid), result); }
			case 4:{ format(YCMDstr, 128, "[LVPD] Детектив %s: %s", Name(playerid), result); }
			case 3:{ format(YCMDstr, 128, "[LVPD] Офицер %s: %s", Name(playerid), result); }
			case 2:{ format(YCMDstr, 128, "[LVPD] Патрульный %s: %s", Name(playerid),result); }
			case 1:{ format(YCMDstr, 128, "[LVPD] Кадет %s: %s", Name(playerid), result); }
			}
			SendTeamMessage(1, COLOR_ALLDEPT, YCMDstr);
			return true;
		}
	case 22:
		{
			switch(PI[playerid][pRank])
			{
			case 14:{ format(YCMDstr, 128, "[Правительство] Президент %s: %s", Name(playerid), result); }
			case 13:{ format(YCMDstr, 128, "[Правительство] Вице-Президент %s: %s", Name(playerid), result); }
			case 12:{ format(YCMDstr, 128, "[Правительство] Гос. Секретарь %s: %s", Name(playerid), result); }
			case 11:{ format(YCMDstr, 128, "[Правительство] Мин. Обороны %s: %s", Name(playerid), result); }
			case 10:{ format(YCMDstr, 128, "[Правительство] Зам. МО %s: %s", Name(playerid), result); }
			case 9:{ format(YCMDstr, 128, "[Правительство] Мин. Внутренних Дел %s: %s", Name(playerid), result); }
			case 8:{ format(YCMDstr, 128, "[Правительство] Зам. МВД %s: %s", Name(playerid), result); }
			case 7:{ format(YCMDstr, 128, "[Правительство] Мин. Здравоохранения %s: %s", Name(playerid), result); }
			case 6:{ format(YCMDstr, 128, "[Правительство] Зам. МЗ %s: %s", Name(playerid), result); }
			case 5:{ format(YCMDstr, 128, "[Правительство] Министр Культуры %s: %s", Name(playerid), result); }
			case 4:{ format(YCMDstr, 128, "[Правительство] Зам. МК %s: %s", Name(playerid), result); }
			case 3:{ format(YCMDstr, 128, "[Правительство] Пресс-секретарь %s: %s", Name(playerid), result); }
			case 2:{ format(YCMDstr, 128, "[Правительство] Нач. охраны %s: %s", Name(playerid), result); }
			case 1:{ format(YCMDstr, 128, "[Правительство] Охранник %s: %s", Name(playerid), result); }
			}
			SendTeamMessage(1, COLOR_ALLDEPT, YCMDstr);
			return true;
		}
	case 24:
		{
			switch(PI[playerid][pRank])
			{
			case 6:{ format(YCMDstr, 128, "[К.А.С.С.] Директор %s: %s", Name(playerid), result); }
			case 5:{ format(YCMDstr, 128, "[К.А.С.С.] Гл.Инженер %s: %s", Name(playerid), result); }
			case 4:{ format(YCMDstr, 128, "[К.А.С.С.] Нач.Охраны %s: %s", Name(playerid), result); }
			case 3:{ format(YCMDstr, 128, "[К.А.С.С.] Охранник %s: %s", Name(playerid), result); }
			case 2:{ format(YCMDstr, 128, "[К.А.С.С.] Экспедитор %s: %s", Name(playerid), result); }
			case 1:{ format(YCMDstr, 128, "[К.А.С.С.] Технолог %s: %s", Name(playerid), result); }
			}
			SendTeamMessage(1, COLOR_ALLDEPT, YCMDstr);
			return true;
		}
	default: return SCM(playerid,COLOR_GREY,"Вам недоступна данная функция");
	}
	return true;
}
CMD:sms(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countingsms") > gettime() ) return SCM(playerid, 0xFF0000FF, "SMS сообщение можно отправлять раз в 5 секунд!");
	SetPVarInt(playerid,"Countingsms",gettime() + 5);
	if(sscanf(params, "ds[128]",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /sms [id] [текст]");
	if(PI[playerid][pMuted] == 1) return SCM(playerid, COLOR_LIGHTRED, "У Вас бан чата!");
	if(PhoneOnline[playerid] > 0) return SCM(playerid, COLOR_GREY, "У Вас выключен телефон!");
	if(PI[playerid][pMobile] <= 0) return SCM(playerid, COLOR_GREY, "Недостаточно денег для отправки SMS. Пожалуйста, пополните Ваш счёт.");
	AntiReklama(playerid,params[1],"SMS");
	if(GetPVarInt(playerid, "antireklamka") == 1)
	{
		SetPVarInt(playerid, "antireklamka", 0);
		return true;
	}
	switch (params[0])
	{
	case 11555:
		{
			if(smssf == 0) return SCM(playerid, COLOR_GREY, "Приём SMS отключен");
			format(YCMDstr, 128, "[Эфир] %s. Отправитель: %s[%d]",params[1],Name(playerid), playerid);
			SendFamilyMessage(9, COLOR_YELLOW, YCMDstr);
			format(YCMDstr, 128, "SMS: %s. Получатель: SF NEWS",params[1]);
			SCM(playerid,  COLOR_YELLOW, YCMDstr);
			PI[playerid][pMobile] -= smspricesf;
			FracBank[0][fSfnews] += smspricesf;
		}
	}
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(params[0] == PI[i][pPnumber])
		{
			if(PhoneOnline[i] > 0)
			{
				SCM(playerid, COLOR_GREY, "Телефон абонента выключен...");
				format(YCMDstr, 128, "%s достаёт мобильник",Name(playerid));
				ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			PI[playerid][pMobile] -= 50;
			format(YCMDstr, 256, "SMS: %s. Отправитель: %s[%d]",params[1],Name(playerid), playerid);
			SCM(i, 0xFDE640AA, YCMDstr);
			PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(YCMDstr, 256, "SMS: %s. Получатель: %s[%d]",params[1],Name(i), i);
			SCM(playerid,  0xFDE640AA, YCMDstr);
			SCM(playerid,  COLOR_WHITE, "- Сообщение доставлено");
			format(YCMDstr, 128, "%s достаёт мобильный телефон",Name(playerid));
			ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return true;
		}
		else if(IsPlayerConnected(params[0]))
		{
			if(PhoneOnline[params[0]] > 0)
			{
				SCM(playerid, COLOR_GREY, "Телефон абонента выключен.");
				format(YCMDstr, 128, "%s достаёт мобильник",Name(playerid));
				ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			format(YCMDstr, 256, "SMS: %s. Отправитель: %s[%d]",params[1],Name(playerid), playerid);
			SCM(params[0], COLOR_YELLOW, YCMDstr);
			PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(YCMDstr, 128, "%s достаёт мобильный телефон",Name(playerid));
			ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			format(YCMDstr, 256, "SMS: %s. Получатель: %s[%d]",params[1],Name(params[0]),params[0]);
			SCM(playerid,  COLOR_YELLOW, YCMDstr);
			SCM(playerid,  COLOR_WHITE, "Сообщение доставлено");
			PI[playerid][pMobile] -= 50;
			foreach(new admin : Player)
			{
				if(GetPVarInt(admin,"adminreadsms") == 1)
				{
					format(YCMDstr,100,"[SMS]:От ID:%i к ID:%i: %s",playerid,params[0],params[1]);
					SCM(admin,0xFEBC41AA,YCMDstr);
				}
			}
			return true;
		}
	}
	return true;
}
CMD:yes(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pMember] == 9)
	{
		if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /yes [id]");
		if(!IsPlayerConnected(params[0])) return true;
		if(zvonok[params[0]] != 1) return SCM(playerid, COLOR_GRAD1, "Этот человек не звонил в студию!");
		if(FL[params[0]][Tel] == 1) return SCM(playerid, COLOR_GREY, "Вы уже приняли звонок. Введите /off чтобы завершить звонок.");
		format(YCMDstr, 128, "Вы приняли звонок от %s",Name(params[0]));
		SCM(playerid, COLOR_WHITE, YCMDstr);
		FL[params[0]][Tel] = 1;
		SCM(params[0], COLOR_YELLOW, "Вы попали в студию, говорите.");
		if(PI[playerid][pMember] == 9)
		{
			TalkingLive[params[0]] = 1;
			PI[params[0]][pMobile] -= smspricesf;
			FracBank[0][fSfnews] += smspricesf;
		}
	}
	return true;
}
CMD:off(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pMember] == 9)
	{
		if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /off [id]");
		if(!IsPlayerConnected(params[0])) return true;
		if(zvonok[params[0]] != 1) return SCM(playerid, COLOR_GRAD1, "Этот человек не звонил в студию!");
		format(YCMDstr, 128, "Вы завершили звонок от %s",Name(params[0]));
		SCM(playerid, COLOR_BLUE, YCMDstr);
		SetPlayerSpecialAction(params[0],SPECIAL_ACTION_STOPUSECELLPHONE);
		SCM(params[0], COLOR_YELLOW, "Звонок завершён.");
		zvonok[params[0]] = 0;
		FL[params[0]][Tel] = 999;
		if(PI[playerid][pMember] == 9) TalkingLive[params[0]] = 999;
	}
	return true;
}
CMD:phone(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(OnMobile[playerid] != 0) return SCM(playerid,COLOR_GREY,"У Вас уже открыто меню телефона!");
	if(OnMobile[playerid] == 0)
	{
		OnMobile[playerid] = 1;
		for(new q; q < 27; q++) TextDrawShowForPlayer(playerid, Mobilka[q]);
		PlayerTextDrawShow(playerid, MobNom);
		SelectTextDraw(playerid, 0x0080FFFF);
	}
	return true;
}
ALT:advertise:ad;
CMD:advertise(playerid, params[])
{
	if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
	{
		if(PI[playerid][pLogin] == 0) return true;
		if(!IsPlayerConnected(playerid)) return true;
		if(GetPVarInt(playerid,"Countingad") > gettime()) return SCM(playerid, 0xFF0000FF, "Объявление можно подавать раз в 30 сек.");
		SetPVarInt(playerid,"Countingad",gettime() + 30);
		if(sscanf(params, "s[256]",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: (/ad)vertise [текст]");
		if(PI[playerid][pMuted] == 1) return SCM(playerid, 0xFF6347AA, "У Вас бан чата");
		if(gNews[playerid] == 1) return SCM(playerid, COLOR_WHITE, "Включите радио ( /radio )");
		if(strlen(params[0]) >= 128) return SCM(playerid, COLOR_GREY,"Сократите количество вводимых символов.");
		strmid(ReportQ[playerid],params[0], 0, strlen(params[0]), 128);
		if(gNews[playerid] == 0)
		{
			format(YCMDstr, 256,"{B8B8B8}Вы собираетесь отправить объявление:\n               {00FF5E}%s\n\n{B8B8B8}Стоимость:{00FF5E} $%d\n\n\n{56839C}Объявление будет подано после проверки!\nСпасибо что воспользовались услугами EXSIGHT Role Play",params[0],strlen(params[0])*addd[1]);
			SPDEx(playerid,8455,0,"{FFFFFF}Проверка",YCMDstr,"Отправить","Отмена");
		}
		return true;
	}
}
CMD:house(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 7 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /house [housenumber]");
	SetPlayerPos(playerid,House[params[0]][hEntrancex],House[params[0]][hEntrancey],House[params[0]][hEntrancez]);
	GameTextForPlayer(playerid, "~w~HOUSE", 5000, 1);
	return true;
}
ALT:recon:re;
CMD:recon(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 2 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /re(con) [id]");
	if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "Игрок не найден!");
	if(params[0] == playerid) return SCM(playerid, COLOR_GRAD1, "Нельзя наблюдать за самим собой!");
	if(PI[params[0]][pBSA] > PI[playerid][pBSA]) return SCM(playerid,COLOR_GRAD1, "Наблюдение за администрацией запрещено!");
	if(GetPlayerState(params[0]) == PLAYER_STATE_SPECTATING && gSpectateID[params[0]] != INVALID_PLAYER_ID) return SCM(playerid, COLOR_GRAD1, "Администратор в режиме наблюдения");
	if(GetPlayerState(params[0]) != 1 && GetPlayerState(params[0]) != 2 && GetPlayerState(params[0]) != 3) return SCM(playerid, COLOR_GRAD1, "Игрок не вступил в игру");
	StartSpectate(playerid, params[0]);
	return true;
}
ALT:admin:a;
CMD:admin(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countinga") > gettime()) return SCM(playerid, 0xFF0000FF, "Не флуди!");
	if(PI[playerid][pBSA] < 1 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: (/a)dmin [текст]");
	format(YCMDstr, 160, "{ffcc00}[{42aaff}A{ffcc00}][%d lvl][%s][%d]: {bbbbbb}%s",PI[playerid][pBSA],Name(playerid),playerid,params[0]);
	SendAdminMessage(COLOR_YELLOW, YCMDstr);
	SetPVarInt(playerid,"Countinga",gettime() + 3);
	return true;
}
ALT:demorgan:dem;
CMD:demorgan(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 1 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "uds[128]",params[0],params[1],params[2]))
	{
		SCM(playerid, COLOR_WHITE, "Введите: /dem(organ) [id] [минуты] [причина]");
		SCM(playerid, COLOR_WHITE, "[1 чаc - 60 мин.] [2 часа - 120 мин.] [3 часа - 180 мин.]");
		return true;
	}
	if(params[1] < 1 || params[1] > 180) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1, и больше 180 минут!");
	if(!IsPlayerConnected(params[0])) return true;
	if(GetPVarInt(playerid,"walk_goto_me_player"))
	{
		walk_goto_me[GetPVarInt(playerid,"walk_goto_me_player") - 1] = 0;
		ClearAnimations(GetPVarInt(playerid,"walk_goto_me_player") - 1, true);
		DeletePVar(playerid,"walk_goto_me_player");
	}
	format(YCMDstr, 256, "Вы были посажены в ДеМорган администратором %s на %d минут(ы)",Name(playerid), params[1]);
	SCM(params[0], COLOR_LIGHTRED, YCMDstr);
	format(YCMDstr, 256, "Администратор %s посадил в ДеМорган %s на %d минут(ы). Причина: %s",Name(playerid),Name(params[0]), params[1], params[2]);
	SCMToAll(COLOR_LIGHTRED,YCMDstr);
	PI[playerid][pWantedLevel] = 0;
	SetPlayerWantedLevel(params[0],0 );
	PI[params[0]][pJailed] = 1;
	PI[params[0]][pMestoJail] = 4;
	PI[params[0]][pJailTime] = params[1]*60;
	SetPlayerPos(params[0],-10101.6230,5360.6963,6797.0000);
	SetPlayerVirtualWorld(params[0],74);
	_ResetGun(params[0]);
	PlayerPlaySound(params[0], 31202, 0.0, 0.0, 0.0);
	return true;
}
CMD:slap(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 1 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /slap [id]");
	new Float:shealth;
	new Float:slx, Float:sly, Float:slz;
	if(!IsPlayerConnected(params[0])) return true;
	GetPlayerHealth(params[0], shealth);
	SetPlayerHealthAC(params[0], shealth-5);
	GetPlayerPos(params[0], slx, sly, slz);
	SetPlayerPos(params[0], slx, sly, slz+5);
	PlayerPlaySound(params[0], 1130, slx, sly, slz+5);
	format(YCMDstr, 256, "Администратор %s подкинул %s",Name(playerid),Name(params[0]));
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	return true;
}
CMD:settime(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "d",params[0])) return	SCM(playerid, COLOR_WHITE, "Введите: /settime [час] (0-23)");
	SetWorldTime(params[0]);
	format(YCMDstr, 128, "Время установлено на %d часов.",params[0]);
	BroadCast(COLOR_WHITE, YCMDstr);
	return true;
}
CMD:vig(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new memberrs = PI[playerid][pMember], rankk = PI[playerid][pRank];
	if(IsACop(playerid) && rankk >= 9 || IsAArm(playerid) && rankk >= 13 || memberrs == 2 && rankk >= 9 || memberrs == 9 && rankk >= 6 || IsAMedic(playerid) && rankk >= 9 || IsAMafia(playerid) && rankk >= 4
			|| IsAGang(playerid) && rankk >= 4 || memberrs == 22 && rankk >= 13 || memberrs == 23 && rankk >= 4 || memberrs == 24 && rankk >= 5) { } else { SCM(playerid,COLOR_GREY,"Вы не Зам/Лидер"); return 1; }
	if(sscanf(params, "ds[64]",params[0],params[1])) return SCM(playerid, COLOR_RED, "Введите: /vig [id] [причина]");
	if(params[0] == playerid) { SCM(playerid, COLOR_GRAD1, "Нельзя дать выговор самому себе!"); return true; }
	if(PI[params[0]][pLeader] > 0) return SCM(playerid, COLOR_GREY, "Вы указали ID лидера");
	if(PI[playerid][pMember] != PI[params[0]][pMember]) return SCM(playerid, COLOR_GREY, "Данный игрок не в Вашей фракции!");
	if(PI[playerid][pRank] <= PI[params[0]][pRank]) return SCM(playerid, COLOR_GREY, "Этот игрок выше или равен с Вами рангом");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GRAD1,"Такого игрока не существует!");
	if(PI[params[0]][pSong] < 3)
	{
		PI[params[0]][pSong] += 1;
		format(YCMDstr, 128, "Вы выдали %s выговор. Причина: %s",Name(params[0]),params[1] );
		SCM(playerid, COLOR_RED, YCMDstr);
		format(YCMDstr, 128, "%s выдал Вам выговор. Причина: %s",Name(playerid),params[1] );
		SCM(params[0], COLOR_RED, YCMDstr);
		return true;
	}
	else if(PI[params[0]][pSong] >= 2)
	{
		format(YCMDstr, 128, "Вы уволили %s (3 выговора). Причина: %s",Name(params[0]),params[1] );
		SCM(playerid, COLOR_RED, YCMDstr);
		format(YCMDstr, 128, "%s уволил Вас (3 выговора). Причина: %s",Name(playerid),params[1] );
		SCM(params[0], COLOR_RED, YCMDstr);
		SCM(params[0], COLOR_WHITE, "Вы сново гражданский...");
		PI[params[0]][pMember] = 0;
		PI[params[0]][pLeader] = 0;
		PI[params[0]][pRank] = 0;
		PI[params[0]][pForma] = 0;
		PI[params[0]][pSong] = 0;
		SetPlayerArmour(params[0],0);
		_ResetGun(params[0]);
		FormaFrac[params[0]] = 0;
		PI[params[0]][pSPChange] = 1;
		SetPlayerColor(params[0], TEAM_HIT_COLOR);
		SetPlayerSkin(params[0], PI[params[0]][pChar][PI[playerid][pViborChar]]);
		return true;
	}
	return true;
}
CMD:unvig(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new memberrs = PI[playerid][pMember], rankk = PI[playerid][pRank];
	if(IsACop(playerid) && rankk >= 9 || IsAArm(playerid) && rankk >= 13 || memberrs == 2 && rankk >= 9 || memberrs == 9 && rankk >= 6 || IsAMedic(playerid) && rankk >= 9 || IsAMafia(playerid) && rankk >= 4
			|| IsAGang(playerid) && rankk >= 4 || memberrs == 22 && rankk >= 13 || memberrs == 23 && rankk >= 4 || memberrs == 24 && rankk >= 5) { } else { SCM(playerid,COLOR_GREY,"Вы не Зам/Лидер"); return 1; }
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_RED, "Введите: /unvig [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GRAD1,"Такого игрока не существует!");
	if(params[0] == playerid) { SCM(playerid, COLOR_GRAD1, "Нельзя снять выговор у самого себя!"); return true; }
	if(PI[params[0]][pLeader] > 0) return SCM(playerid, COLOR_GREY, "Вы указали ID лидера");
	if(PI[playerid][pMember] != PI[params[0]][pMember]) return SCM(playerid, COLOR_GREY, "Данный игрок не в Вашей фракции!");
	if(PI[playerid][pRank] <= PI[params[0]][pRank]) return SCM(playerid, COLOR_GREY, "Этот игрок выше или равен с Вами рангом");
	if(PI[params[0]][pSong] == 0) return SCM(playerid, COLOR_GREY, "У этого игрока нет выговоров!");
	if(PI[params[0]][pSong] < 3)
	{
		PI[params[0]][pSong] -= 1;
		format(YCMDstr, 128, "Вы сняли с %s один выговор",Name(params[0]));
		SCM(playerid, COLOR_RED, YCMDstr);
		format(YCMDstr, 128, "%s снял с Вас один выговор",Name(playerid));
		SCM(params[0], COLOR_RED, YCMDstr);
		return true;
	}
	return true;
}
CMD:setpd(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pMember] != 1) return SCM(playerid,COLOR_WHITE,"Вы не состоите в LSPD");
	if(PI[playerid][pRank] < 9) return SCM(playerid,COLOR_WHITE,"Вы не помощник комиссара/комиссар");
	if(FormaFrac[playerid] == 0) return SCM(playerid, COLOR_WHITE, "Вам нужно начать рабочий день.");
	if(sscanf(params, "dd", params[0], params[1])) return SCM(playerid, COLOR_GREY, "Введите: /setpd [id игрока] [номер PD] | INFO: [1] - LSPD | [2] - SFPD | [3] - LVPD");
	if(params[1] > 3 || params[1] < 1) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1 или больше 3!");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_WHITE, "Игрок не найден");
	if(!IsASAPD(params[0])) return SCM(playerid, COLOR_GREY, "Игрок не состоит в SAPD!");
	if(IsPlayerInAnyVehicle(params[0])) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
	if(PI[params[0]][pWarns] >= 1) return SCM(playerid, COLOR_WHITE,"У игрока имеется Warn.");
	if(params[0] == playerid) return SCM(playerid, COLOR_WHITE, "Вы указали свой ID.");
	if(PI[params[0]][pLeader] != 0) return SCM(playerid, COLOR_WHITE, "Этот игрок лидер");
	switch(params[1])
	{
	case 1:
		{
			FormaFrac[params[0]] = 1;
			PI[params[0]][pMember] = 1;
			FormaFrac[params[0]] = PI[params[0]][pMember];
			format(YCMDstr, 128, "Вы переназначили %s в полицейский депортамент г. Los Santos", Name(params[0]));
			SCM(playerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 128, "%s переназначил Вас в полицейский депортамент г. Los Santos", Name(playerid));
			SCM(params[0], COLOR_BLUE, YCMDstr);
		}
	case 2:
		{
			FormaFrac[params[0]] = 10;
			PI[params[0]][pMember] = 10;
			FormaFrac[params[0]] = PI[params[0]][pMember];
			format(YCMDstr, 128, "Вы переназначили %s в полицейский депортамент г. San Fierro", Name(params[0]));
			SCM(playerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 128, "%s переназначил Вас в полицейский депортамент г. San Fierro", Name(playerid));
			SCM(params[0], COLOR_BLUE, YCMDstr);
		}
	case 3:
		{
			FormaFrac[params[0]] = 21;
			PI[params[0]][pMember] = 21;
			FormaFrac[params[0]] = PI[params[0]][pMember];
			format(YCMDstr, 128, "Вы переназначили %s в полицейский депортамент г. Las Venturas", Name(params[0]));
			SCM(playerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 128, "%s переназначил Вас в полицейский депортамент г. Las Venturas", Name(playerid));
			SCM(params[0], COLOR_BLUE, YCMDstr);
		}
	}
	return true;
}
CMD:setrankpd(playerid, params[])
{
	new rankk = PI[playerid][pRank];
	if(IsASAPD(playerid) && rankk >= 9) { } else { SCM(playerid,COLOR_GREY,"Вы не помощник комиссара/комиссар"); return 1; }
	if(sscanf(params, "ud",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /setrankpd [id] [ранг]");
	switch(PI[playerid][pMember])
	{
	case 1,10,21: if(params[1] > 9 || params[1] < 1) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!");
	}
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SCM(playerid,COLOR_GREY,"Игрок не найден");
	if(!IsASAPD(params[0])) return SCM(playerid, COLOR_GREY, "Игрок не состоит в SAPD!");
	if(PI[params[0]][pLeader] > 0) return SCM(playerid, COLOR_GREY, "Вы указали ID лидера");
	if(params[1] >= PI[playerid][pRank]) return SCM(playerid,COLOR_GREY,"Вы не можете повысить до своего ранга или выше");
	if(PI[playerid][pRank] <= PI[params[0]][pRank]) return SCM(playerid, COLOR_GREY, "Этот игрок выше или равен с Вами рангом");
	SCMF(params[0], 0x6BB3FFAA, "%s повысил/понизил Вас до %d ранга.", Name(playerid),params[1]);
	SCMF(playerid, 0x6BB3FFAA, "Вы повысили/понизили %s до %d ранга.", Name(params[0]),params[1]);
	PI[params[0]][pRank] = params[1];
	switch(PI[params[0]][pMember])
	{
	case 1,10,21:// LSPD, SFPD, LVPD
		{
			switch(PI[params[0]][pRank])
			{
			case 1: PI[params[0]][pModel] = 284;
			case 2: PI[params[0]][pModel] = 280;
			case 3: PI[params[0]][pModel] = 281;
			case 4: PI[params[0]][pModel] = 282;
			case 5: PI[params[0]][pModel] = 265;
			case 6: PI[params[0]][pModel] = 266;
			case 7: PI[params[0]][pModel] = 285;
			case 8: PI[params[0]][pModel] = 288;
			case 9: PI[params[0]][pModel] = 288;
			}
		}
	}
	if(PI[params[0]][pSex] == 2)
	{
		switch(PI[params[0]][pMember])
		{
		case 1,10,21: { PI[params[0]][pModel] = 76; }
		}
	}
	SetPlayerSkin(params[0],PI[params[0]][pModel]);
	return true;
}
CMD:pduninvite(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pMember] != 1) return SCM(playerid,COLOR_WHITE,"Вы не состоите в LSPD");
	if(PI[playerid][pRank] < 9) return SCM(playerid,COLOR_WHITE,"Вы не помощник комиссара/комиссар");
	if(FormaFrac[playerid] == 0) return SCM(playerid, COLOR_WHITE, "Вам нужно начать рабочий день.");
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_GREY, "Введите: /pduninvite [id игрока]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_WHITE, "Игрок не найден");
	if(!IsASAPD(params[0])) return SCM(playerid, COLOR_GREY, "Игрок не состоит в SAPD!");
	if(params[0] == playerid) return SCM(playerid, COLOR_WHITE, "Вы указали свой ID.");
	if(PI[params[0]][pLeader] != 0) return SCM(playerid, COLOR_WHITE, "Этот игрок лидер");
	format(YCMDstr, 256, "%s уволил Вас из организации. Причина: %s",Name(playerid), params[1]);
	SCM(params[0], 0x6495EDFF, YCMDstr);
	format(YCMDstr, 256, "Вы уволили %s из организации. Причина: %s",Name(params[0]), params[1]);
	SCM(playerid, 0x6495EDFF, YCMDstr);
	SCM(params[0], 0x6495EDFF, "Теперь Вы снова гражданский");
	PI[params[0]][pMember] = 0;
	PI[params[0]][pRank] = 0;
	PI[params[0]][pForma] = 0;
	PI[params[0]][pSong] = 0;
	PI[params[0]][pSPChange] = 1;
	SetPlayerArmour(params[0],0);
	_ResetGun(params[0]);
	FormaFrac[params[0]] = 0;
	SetPlayerColor(params[0], TEAM_HIT_COLOR);
	SetPlayerSkin(params[0],PI[params[0]][pChar][PI[params[0]][pViborChar]]);
	return true;
}
CMD:setmed(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pMember] != 8) return SCM(playerid,COLOR_WHITE,"Вы не состоите в Мед.Центре");
	if(PI[playerid][pRank] < 9) return SCM(playerid,COLOR_WHITE,"Вы не Зав. Отделением/Глав. Врач");
	if(FormaFrac[playerid] == 0) return SCM(playerid, COLOR_WHITE, "Вам нужно начать рабочий день.");
	if(sscanf(params, "dd", params[0], params[1])) return SCM(playerid, COLOR_GREY, "Введите: /setmed [id игрока] [номер Мед.Центра] | INFO: [1] - LS | [2] - SF");
	if(params[1] > 2 || params[1] < 1) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1 или больше 2!");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_WHITE, "Игрок не найден");
	if(!IsAMedic(params[0])) return SCM(playerid, COLOR_GREY, "Игрок не состоит в Мед. Центре!");
	if(IsPlayerInAnyVehicle(params[0])) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
	if(PI[params[0]][pWarns] >= 1) return SCM(playerid, COLOR_WHITE,"У игрока имеется Warn.");
	if(params[0] == playerid) return SCM(playerid, COLOR_WHITE, "Вы указали свой ID.");
	if(PI[params[0]][pLeader] != 0) return SCM(playerid, COLOR_WHITE, "Этот игрок лидер");
	switch(params[1])
	{
	case 1:
		{
			FormaFrac[params[0]] = 8;
			PI[params[0]][pMember] = 8;
			FormaFrac[params[0]] = PI[params[0]][pMember];
			format(YCMDstr, 128, "Вы переназначили %s в Мед.Центр г. Los Santos", Name(params[0]));
			SCM(playerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 128, "%s переназначил Вас в Мед.Центр г. Los Santos", Name(playerid));
			SCM(params[0], COLOR_BLUE, YCMDstr);
		}
	case 2:
		{
			FormaFrac[params[0]] = 4;
			PI[params[0]][pMember] = 4;
			FormaFrac[params[0]] = PI[params[0]][pMember];
			format(YCMDstr, 128, "Вы переназначили %s в Мед.Центр г. San Fierro", Name(params[0]));
			SCM(playerid, COLOR_BLUE, YCMDstr);
			format(YCMDstr, 128, "%s переназначил Вас в Мед.Центр г. San Fierro", Name(playerid));
			SCM(params[0], COLOR_BLUE, YCMDstr);
		}
	}
	return true;
}
CMD:setrankmed(playerid, params[])
{
	if(PI[playerid][pMember] != 8) return SCM(playerid,COLOR_WHITE,"Вы не состоите в Мед.Центре");
	if(PI[playerid][pRank] < 9) return SCM(playerid,COLOR_WHITE,"Вы не Зав. Отделением/Глав. Врач");
	if(FormaFrac[playerid] == 0) return SCM(playerid, COLOR_WHITE, "Вам нужно начать рабочий день.");
	if(sscanf(params, "ud",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /setrankmed [id] [ранг]");
	switch(PI[playerid][pMember])
	{
	case 4,8: if(params[1] > 9 || params[1] < 1) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!");
	}
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SCM(playerid,COLOR_GREY,"Игрок не найден");
	if(!IsAMedic(params[0])) return SCM(playerid, COLOR_GREY, "Игрок не состоит в Мед.Центре!");
	if(PI[params[0]][pLeader] > 0) return SCM(playerid, COLOR_GREY, "Вы указали ID лидера");
	if(params[1] >= PI[playerid][pRank]) return SCM(playerid,COLOR_GREY,"Вы не можете повысить до своего ранга или выше");
	if(PI[playerid][pRank] <= PI[params[0]][pRank]) return SCM(playerid, COLOR_GREY, "Этот игрок выше или равен с Вами рангом");
	SCMF(params[0], 0x6BB3FFAA, "%s повысил/понизил Вас до %d ранга.", Name(playerid),params[1]);
	SCMF(playerid, 0x6BB3FFAA, "Вы повысили/понизили %s до %d ранга.", Name(params[0]),params[1]);
	PI[params[0]][pRank] = params[1];
	switch(PI[params[0]][pMember])
	{
	case 4,8:
		{
			switch(PI[params[0]][pRank])
			{
			case 1..3: PI[params[0]][pModel] = 274;
			case 4..7: PI[params[0]][pModel] = 276;
			case 8..9: PI[params[0]][pModel] = 275;
			}
		}
	}
	if(PI[params[0]][pSex] == 2)
	{
		switch(PI[params[0]][pMember])
		{
		case 4,8: { PI[params[0]][pModel] = 219; }
		}
	}
	SetPlayerSkin(params[0],PI[params[0]][pModel]);
	return true;
}
CMD:meduninvite(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pMember] != 8) return SCM(playerid,COLOR_WHITE,"Вы не состоите в Мед.Центре");
	if(PI[playerid][pRank] < 9) return SCM(playerid,COLOR_WHITE,"Вы не Зав. Отделением/Глав. Врач");
	if(FormaFrac[playerid] == 0) return SCM(playerid, COLOR_WHITE, "Вам нужно начать рабочий день.");
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_GREY, "Введите: /meduninvite [id игрока]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_WHITE, "Игрок не найден");
	if(!IsAMedic(params[0])) return SCM(playerid, COLOR_GREY, "Игрок не состоит в Мед.Центре!");
	if(params[0] == playerid) return SCM(playerid, COLOR_WHITE, "Вы указали свой ID.");
	if(PI[params[0]][pLeader] != 0) return SCM(playerid, COLOR_WHITE, "Этот игрок лидер");
	format(YCMDstr, 256, "%s уволил Вас из организации. Причина: %s",Name(playerid), params[1]);
	SCM(params[0], 0x6495EDFF, YCMDstr);
	format(YCMDstr, 256, "Вы уволили %s из организации. Причина: %s",Name(params[0]), params[1]);
	SCM(playerid, 0x6495EDFF, YCMDstr);
	SCM(params[0], 0x6495EDFF, "Теперь Вы снова гражданский");
	PI[params[0]][pMember] = 0;
	PI[params[0]][pLeader] = 0;
	PI[params[0]][pRank] = 0;
	PI[params[0]][pForma] = 0;
	PI[params[0]][pSong] = 0;
	PI[params[0]][pSPChange] = 1;
	SetPlayerArmour(params[0],0);
	_ResetGun(params[0]);
	FormaFrac[params[0]] = 0;
	SetPlayerColor(params[0], TEAM_HIT_COLOR);
	SetPlayerSkin(params[0],PI[params[0]][pChar][PI[params[0]][pViborChar]]);
	return true;
}
CMD:invite(playerid, params[])
{
	if(!CanInvitePlayer(playerid)) return SCM(playerid, COLOR_WHITE, "Вам недоступна эта команда");
	if(FormaFrac[playerid] == 0) return SCM(playerid, COLOR_WHITE, "Вам нужно начать рабочий день.");
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /invite [id игрока]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_WHITE, "Игрок не найден");
	if(IsPlayerInAnyVehicle(params[0])) return SCM(playerid, COLOR_GREY, "Игрок в машине!");
	if(PI[params[0]][pWarns] >= 1) return SCM(playerid, COLOR_WHITE,"У игрока имеется Warn.");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_WHITE, "Этот человек не рядом с Вами.");
	if(params[0] == playerid) return SCM(playerid, COLOR_WHITE, "Вы указали свой ID.");
	if(PI[params[0]][pLeader] != 0) return SCM(playerid, COLOR_WHITE, "Этот игрок лидер");
	new ftext[50],invite[100];
	switch(PI[playerid][pMember])
	{
	case 1:
		{
			if(PI[playerid][pMember] == 1 && PI[playerid][pRank] < 2 || PI[params[0]][pLevel] < 3) return SCM(playerid, COLOR_GREY, "Приём в LSPD возможен с 3 LvL");
			if(PI[params[0]][pVoenBil] != 1) return SCM(playerid, COLOR_GREY, "Игрок не проходил службу в Армии!");
			if(PI[params[0]][pZakonp] < 30) return SCM(playerid, COLOR_GREY, "Игрок должен иметь +30 законопослушности.");
			if(PI[params[0]][pMedKarta] != 1) return SCM(playerid, COLOR_GREY, "У игрока нет медицинской карточки!");
			ftext = "LSPD";
			FormaFrac[params[0]] = 1;
			PI[params[0]][pSAPD] = 1;
			switch(PI[params[0]][pSex])
			{
			case 1: InviteSkin[params[0]] = 284;
			case 2: InviteSkin[params[0]] = 76;
			}
		}
	case 2:
		{
			if(PI[playerid][pMember] == 2 && PI[playerid][pRank] < 2 || PI[params[0]][pLevel] < 4) return   SCM(playerid, COLOR_GREY, "Приём в FBI возможен с 4 LvL");
			if(PI[params[0]][pMember] != 1 && PI[params[0]][pMember] != 10 && PI[params[0]][pMember] != 21) return SCM(playerid, COLOR_GREY, "Игрок не состоит в SAPD");
			if(PI[params[0]][pRank] < 4) return SCM(playerid, COLOR_GREY, "Игрок должен иметь 4+ ранг");
			if(PI[params[0]][pZakonp] < 80) return SCM(playerid, COLOR_GREY, "Игрок должен иметь +80 законопослушности.");
			if(PI[params[0]][pMedKarta] != 1) return SCM(playerid, COLOR_GREY, "У игрока нет медицинской карточки!");
			ftext = "FBI";
			FormaFrac[params[0]] = 2;
			switch(PI[params[0]][pSex])
			{
			case 1: InviteSkin[params[0]] = 163;
			case 2: InviteSkin[params[0]] = 141;
			}
		}
	case 3:
		{
			if(PI[playerid][pMember] == 3 && PI[playerid][pRank] < 2 || PI[params[0]][pLevel] < 2) return   SCM(playerid, COLOR_GREY, "Приём в SFA возможен с 2 LvL");
			if(PI[params[0]][pZakonp] < 20) return	SCM(playerid, COLOR_GREY, "Игрок должен иметь +20 законопослушности.");
			if(PI[params[0]][pWantedLevel] != 0) return	SCM(playerid, COLOR_GREY, "Игрок находится в розыске");
			if(PI[params[0]][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок уже где то состоит");
			if(PI[params[0]][pMedKarta] != 1) return SCM(playerid, COLOR_GREY, "У игрока нет медицинской карточки!");
			ftext = "ВМФ";
			FormaFrac[params[0]] = 3;
			switch(PI[params[0]][pSex])
			{
			case 1: InviteSkin[params[0]] = 287;
			case 2: InviteSkin[params[0]] = 191;
			}
		}
	case 4:
		{
			if(PI[playerid][pMember] == 4 && PI[playerid][pRank] < 2 || PI[params[0]][pLevel] < 3) return SCM(playerid, COLOR_GREY, "Приём в Больницу СФ возможен с 3 LvL");
			if(PI[params[0]][pZakonp] < 30) return   SCM(playerid, COLOR_GREY, "Игрок должен иметь +30 законопослушности.");
			if(PI[params[0]][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок уже где то состоит");
			if(PI[params[0]][pMedKarta] != 1) return SCM(playerid, COLOR_GREY, "У игрока нет медицинской карточки!");
			ftext = "Мед. Центр СФ";
			FormaFrac[params[0]] = 4;
			PI[params[0]][pMedic] = 1;
			switch(PI[params[0]][pSex])
			{
			case 1: InviteSkin[params[0]] = 274;
			case 2: InviteSkin[params[0]] = 219;
			}
		}
	case 5:
		{
			if(PI[playerid][pMember] == 5 && PI[playerid][pRank] < 2 || PI[params[0]][pLevel] < 2) return   SCM(playerid, COLOR_GREY, "Приём в LCN возможен с 2 LvL");
			if(PI[params[0]][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок уже где то состоит");
			ftext = "ЛКН";
			FormaFrac[params[0]] = 5;
			switch(PI[params[0]][pSex])
			{
			case 1: InviteSkin[params[0]] = 124;
			case 2: InviteSkin[params[0]] = 214;
			}
		}
	case 6:
		{
			if (PI[playerid][pMember] == 6 && PI[playerid][pRank] < 2 || PI[params[0]][pLevel] < 2) return   SCM(playerid, COLOR_GREY, "Приём в Yakuza возможен с 2 LvL");
			if(PI[params[0]][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок уже где то состоит");
			ftext = "Якудза";
			FormaFrac[params[0]] = 6;
			switch(PI[params[0]][pSex])
			{
			case 1: InviteSkin[params[0]] = 121;
			case 2: InviteSkin[params[0]] = 169;
			}
		}
	case 8:
		{
			if(PI[playerid][pMember] == 8 && PI[playerid][pRank] < 2 || PI[params[0]][pLevel] < 3) return   SCM(playerid, COLOR_GREY, "Приём в Больницу ЛС возможен с 3 LvL");
			if(PI[params[0]][pZakonp] < 30) return SCM(playerid, COLOR_GREY, "Игрок должен иметь +30 законопослушности.");
			if(PI[params[0]][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок уже где то состоит");
			if(PI[params[0]][pMedKarta] != 1) return SCM(playerid, COLOR_GREY, "У игрока нет медицинской карточки!");
			ftext = "Мед. Центр ЛС";
			FormaFrac[params[0]] = 8;
			PI[params[0]][pMedic] = 1;
			switch(PI[params[0]][pSex])
			{
			case 1: InviteSkin[params[0]] = 274;
			case 2: InviteSkin[params[0]] = 219;
			}
		}
	case 9:
		{
			if (PI[playerid][pMember] == 9 && PI[playerid][pRank] < 2 || PI[params[0]][pLevel] < 2) return   SCM(playerid, COLOR_GREY, "Приём в SA News возможен с 2 LvL");
			if(PI[params[0]][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок уже где то состоит");
			if(PI[params[0]][pMedKarta] != 1) return SCM(playerid, COLOR_GREY, "У игрока нет медицинской карточки!");
			ftext = "SA NEWS";
			FormaFrac[params[0]] = 9;
			switch(PI[params[0]][pSex])
			{
			case 1: InviteSkin[params[0]] = 250;
			case 2: InviteSkin[params[0]] = 211;
			}
		}
    case 10:
		{
			if(PI[playerid][pMember] == 10 && PI[playerid][pRank] < 2 || PI[params[0]][pLevel] < 3) return SCM(playerid, COLOR_GREY, "Приём в SFPD возможен с 3 LvL");
			if(PI[params[0]][pVoenBil] != 1) return SCM(playerid, COLOR_GREY, "Игрок не проходил службу в Армии!");
			if(PI[params[0]][pZakonp] < 30) return SCM(playerid, COLOR_GREY, "Игрок должен иметь +30 законопослушности.");
			if(PI[params[0]][pMedKarta] != 1) return SCM(playerid, COLOR_GREY, "У игрока нет медицинской карточки!");
			ftext = "SFPD";
			FormaFrac[params[0]] = 10;
			PI[params[0]][pSAPD] = 1;
			switch(PI[params[0]][pSex])
			{
			case 1: InviteSkin[params[0]] = 284;
			case 2: InviteSkin[params[0]] = 76;
			}
		}
	case 12:
		{
			if(PI[playerid][pMember] == 12 && PI[playerid][pRank] < 2 || PI[params[0]][pLevel] < 2) return   SCM(playerid, COLOR_GREY, "Приём в банду возможен с 2 LvL");
			if(PI[params[0]][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок уже где то состоит");
			ftext = "The Ballas Gang";
			FormaFrac[params[0]] = 12;
			switch(PI[params[0]][pSex])
			{
			case 1: InviteSkin[params[0]] = 103;
			case 2: InviteSkin[params[0]] = 13;
			}
		}
	case 13:
		{
			if(PI[playerid][pMember] == 12 && PI[playerid][pRank] < 2 || PI[params[0]][pLevel] < 2) return   SCM(playerid, COLOR_GREY, "Приём в банду возможен с 2 LvL");
			if(PI[params[0]][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок уже где то состоит");
			ftext = "Los Santos Vagos";
			FormaFrac[params[0]] = 13;
			switch(PI[params[0]][pSex])
			{
			case 1: InviteSkin[params[0]] = 108;
			case 2: InviteSkin[params[0]] = 56;
			}
		}
	case 14:
		{
			if(PI[playerid][pMember] == 14 && PI[playerid][pRank] < 2 || PI[params[0]][pLevel] < 2) return   SCM(playerid, COLOR_GREY, "Приём в РМ возможен с 2 LvL");
			if(PI[params[0]][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок уже где то состоит");
			ftext = "Russian Mafia";
			FormaFrac[params[0]] = 14;
			switch(PI[params[0]][pSex])
			{
			case 1: InviteSkin[params[0]] = 112;
			case 2: InviteSkin[params[0]] = 263;
			}
		}
	case 15:
		{
			if(PI[playerid][pMember] == 12 && PI[playerid][pRank] < 2 || PI[params[0]][pLevel] < 2) return   SCM(playerid, COLOR_GREY, "Приём в банду возможен с 2 LvL");
			if(PI[params[0]][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок уже где то состоит");
			ftext = "Grove Street Gang";
			FormaFrac[params[0]] = 15;
			switch(PI[params[0]][pSex])
			{
			case 1: InviteSkin[params[0]] = 105;
			case 2: InviteSkin[params[0]] = 65;
			}
		}
	case 17:
		{
			if(PI[playerid][pMember] == 12 && PI[playerid][pRank] < 2 || PI[params[0]][pLevel] < 2) return   SCM(playerid, COLOR_GREY, "Приём в банду возможен с 2 LvL");
			if(PI[params[0]][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок уже где то состоит");
			ftext = "Varrios Los Aztecas";
			FormaFrac[params[0]] = 17;
			switch(PI[params[0]][pSex])
			{
			case 1: InviteSkin[params[0]] = 114;
			case 2: InviteSkin[params[0]] = 193;
			}
		}
	case 18:
		{
			if(PI[playerid][pMember] == 12 && PI[playerid][pRank] < 2 || PI[params[0]][pLevel] < 2) return   SCM(playerid, COLOR_GREY, "Приём в банду возможен с 2 LvL");
			if(PI[params[0]][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок уже где то состоит");
			ftext = "The Rifa Gang";
			FormaFrac[params[0]] = 18;
			switch(PI[params[0]][pSex])
			{
			case 1: InviteSkin[params[0]] = 175;
			case 2: InviteSkin[params[0]] = 226;
			}
		}
	case 19:
		{
			if(PI[playerid][pMember] == 19 && PI[playerid][pRank] < 2 || PI[params[0]][pLevel] < 2) return   SCM(playerid, COLOR_GREY, "Приём в СВ возможен с 2 LvL");
			if(PI[params[0]][pZakonp] < 20) return   SCM(playerid, COLOR_GREY, "Игрок должен иметь +20 законопослушности.");
			if(PI[params[0]][pWantedLevel] != 0) return	SCM(playerid, COLOR_GREY, "Игрок находится в розыске");
			if(PI[params[0]][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок уже где то состоит");
			if(PI[params[0]][pMedKarta] != 1) return SCM(playerid, COLOR_GREY, "У игрока нет медицинской карточки!");
			ftext = "СВ";
			FormaFrac[params[0]] = 19;
			switch(PI[params[0]][pSex])
			{
			case 1: InviteSkin[params[0]] = 287;
			case 2: InviteSkin[params[0]] = 191;
			}
		}
    case 21:
		{
			if(PI[playerid][pMember] == 21 && PI[playerid][pRank] < 2 || PI[params[0]][pLevel] < 3) return SCM(playerid, COLOR_GREY, "Приём в LVPD возможен с 3 LvL");
			if(PI[params[0]][pVoenBil] != 1) return SCM(playerid, COLOR_GREY, "Игрок не проходил службу в Армии!");
			if(PI[params[0]][pZakonp] < 30) return SCM(playerid, COLOR_GREY, "Игрок должен иметь +30 законопослушности.");
			if(PI[params[0]][pMedKarta] != 1) return SCM(playerid, COLOR_GREY, "У игрока нет медицинской карточки!");
			ftext = "LVPD";
			FormaFrac[params[0]] = 21;
			PI[params[0]][pSAPD] = 1;
			switch(PI[params[0]][pSex])
			{
			case 1: InviteSkin[params[0]] = 284;
			case 2: InviteSkin[params[0]] = 76;
			}
		}
	case 22:
		{
			if(PI[playerid][pMember] == 22 && PI[playerid][pRank] < 2 || PI[params[0]][pLevel] < 4) return   SCM(playerid, COLOR_GREY, "Приём в Адм.Президента возможен с 4 LvL");
			if(PI[params[0]][pZakonp] < 90) return   SCM(playerid, COLOR_GREY, "Игрок должен иметь +90 законопослушности.");
			if(PI[params[0]][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок уже где то состоит");
			if(PI[params[0]][pMedKarta] != 1) return SCM(playerid, COLOR_GREY, "У игрока нет медицинской карточки!");
			ftext = "Правительство";
			FormaFrac[params[0]] = 22;
			switch(PI[params[0]][pSex])
			{
			case 1: InviteSkin[params[0]] = 163;
			case 2: InviteSkin[params[0]] = 150;
			}
		}
	case 23:
		{
			if(PI[playerid][pMember] == 23 && PI[playerid][pRank] < 2 || PI[params[0]][pLevel] < 2) return   SCM(playerid, COLOR_GREY, "Приём в байкеры возможен с 2 LvL");
			if(PI[params[0]][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок уже где то состоит");
			ftext = "Байкеры";
			FormaFrac[params[0]] = 23;
			switch(PI[params[0]][pSex])
			{
			case 1: InviteSkin[params[0]] = 254;
			case 2: InviteSkin[params[0]] = 298;
			}
		}
	case 24:
		{
			if(PI[playerid][pMember] == 24 && PI[playerid][pRank] < 2 || PI[params[0]][pLevel] < 2) return   SCM(playerid, COLOR_GREY, "Приём на завод К.А.С.С. с 2 LvL");
			if(PI[params[0]][pMember] != 0) return SCM(playerid, COLOR_GREY, "Игрок уже где то состоит");
			if(PI[params[0]][pMedKarta] != 1) return SCM(playerid, COLOR_GREY, "У игрока нет медицинской карточки!");
			ftext = "Завод К.А.С.С.";
			FormaFrac[params[0]] = 24;
			switch(PI[params[0]][pSex])
			{
			case 1: InviteSkin[params[0]] = 27;
			case 2: InviteSkin[params[0]] = 69;
			}
		}
	}
	FL[params[0]][InviteOffer] = PI[playerid][pMember];
	format(YCMDstr, 256, "Вы предложили %s[%d] вступить в организацию \"%s\"", Name(params[0]),params[0],ftext);
	SCM(playerid,0x1E90FFFF, YCMDstr);
	format(invite, 100, "%s[%d] предложил Вам вступить в организацию \"%s\"\n\tВы согласны?", Name(playerid),playerid,ftext);
	SPDEx(params[0],76,0,"Приглашение",invite, "Да", "Нет");
	return true;
}
CMD:sex(playerid, params[0])
{
    if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(GetPVarInt(playerid,"Countingsex") > gettime()) return SCM(playerid, 0xFF0000FF, "Команду можно использовать раз в минуту!");
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_GRAD2, " Используйте: /sex [id]");
	if(GetDistanceBetweenPlayers(playerid, params[0]) > 2) return SCM(playerid, COLOR_GREY, "Вы слишком далеко!");
	if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "[Ошибка] Человек не найден");
	if(params[0] == playerid)return SCM(playerid,COLOR_GREY, "[Ошибка] Вы указали свой ID");
	format(YCMDstr, 128, "Игрок %s предлагает Вам заняться сексом. (/accsex [id] - принять, /dissex [id] - отказать)",Name(playerid));
	SCM(params[0], 0xFFFF00AA, YCMDstr);
	format(YCMDstr, 128, "Вы предложили %s заняться сексом.",Name(params[0]));
	SCM(playerid, 0xFFFF00AA, YCMDstr);
	SetPVarInt(playerid, "SetSex", 1);
	SetPVarInt(playerid, "wantsex", 1);
	SetPVarInt(playerid,"Countingsex",gettime() + 60);
	return 1;
}
CMD:accsex(playerid, params[0])
{
    if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_GREY, " Используйте: /accsex [id]");
	if(GetDistanceBetweenPlayers(playerid, params[0]) > 2) return SCM(playerid, COLOR_GREY, "Вы слишком далеко!");
	if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Человек не найден");
	if(params[0] == playerid)return SCM(playerid,COLOR_GREY, "[Ошибка] Вы указали свой ID");
	if(GetPVarInt(playerid,"SetSex") == 1) return SCM(playerid, COLOR_GREY, "Вы не можете принимать решения за этого игрока!");
	if(GetPVarInt(params[0],"wantsex") == 0) return SCM(playerid, COLOR_GREY, "Этот игрок не предлагал заняться сексом!");
	format(YCMDstr, 128, "Вы занялись сексом с %s",Name(params[0]));
	SCM(playerid, 0xFFFF00AA, YCMDstr);
	format(YCMDstr, 128, "Вы занялись сексом с %s ",Name(playerid));
	SCM(params[0], 0xFFFF00AA, YCMDstr);
	ApplyAnimation(params[0], "SNM", "SPANKING_IDLEW", 4.1, 0, 1, 1, 1, 1, 1);
	LoopingAnim(playerid, "SNM", "SPANKINGP", 4.1, 0, 1, 1, 1, 1, 1);
	DeletePVar(params[0], "SetSex");
	DeletePVar(params[0], "wantsex");
	return 1;
}
CMD:dissex(playerid, params[])
{
    if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(params[0] == INVALID_PLAYER_ID) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_GREY, " Используйте: /dissex [id]");
	if(GetPVarInt(params[0],"wantsex") == 0) return SCM(playerid, COLOR_GREY, "Этот игрок не предлагал заняться сексом!");
	if(GetDistanceBetweenPlayers(playerid, params[0]) > 2) return SCM(playerid, COLOR_GREY, "Вы слишком далеко!");
	if(params[0] == playerid) return SCM(playerid,COLOR_GREY, "[Ошибка] Вы указали свой ID");
	SCM(playerid, 0xFF0000AA, "Вы отказались заняться сексом!");
	SCM(params[0], 0x00FF00AA, "К сожалению Вам отказали заняться сексом!");
	DeletePVar(params[0], "SetSex");
	DeletePVar(params[0], "wantsex");
	return 1;
}
CMD:edit(playerid, params[])
{
	if(sscanf(params, "u",params[0])) return SCM(playerid,COLOR_RED,"Введите: /edit [слот]");
	if(!IsPlayerAttachedObjectSlotUsed(playerid, params[0])) return SCM(playerid,COLOR_GREY,"Этот слот не занят.");
	EditAttachedObject(playerid, params[0]); return 1;
}
CMD:kiss(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"KissTime") > gettime()) return SCM(playerid,COLOR_GREY,"Команду можно использовать раз в 20 секунд!");
	SetPVarInt(playerid,"KissTime",gettime() + 20);
	if(sscanf(params, "d", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /kiss [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, "Игрок не найден!");
	if(params[0] == playerid) return SCM(playerid,COLOR_GREY,"Себя нельзя целовать!");
	if(GetDistanceBetweenPlayers(playerid, params[0]) > 2) return SCM(playerid, COLOR_GREY, "Рядом с Вами никого нет!");
	if(PI[params[0]][pBSA] >= 1) return SCM(playerid, COLOR_GREY, "Рядом с Вами никого нет!");
	format(YCMDstr, 256, "{00FA9A}%s (ID: %i) хочет Вас поцеловать. Нажмите Y - согласиться. Для отказа, нажмите - N",Name(playerid), playerid);
	SCM(params[0],COLOR_TEAL, YCMDstr);
	format(YCMDstr, 256, "{00FA9A}Вы предложили %s (ID: %i) поцеловаться.",Name(params[0]), params[0]);
	SCM(playerid,COLOR_TEAL, YCMDstr);
	SetPVarInt(params[0], "KissUser", playerid);
	return 1;
}
CMD:hi(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countinghi") > gettime()) return SCM(playerid, 0xFF0000FF, "Команду можно использовать раз в 10 секунд!");
	SetPVarInt(playerid,"Countinghi",gettime() + 10);
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /hi [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, "Игрок не найден!");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, "Нельзя использовать в машине");
	if(GetDistanceBetweenPlayers(playerid, params[0]) > 2) return SCM(playerid, COLOR_GREY, "Рядом с Вами никого нет!");
	if(params[0] == playerid) return SCM(playerid,COLOR_GRAD1, "[Ошибка] Вы указали свой ID");
	format(YCMDstr, 256, "{ADFF2F}%s (ID: %i) хочет пожать Вам руку. Нажмите Y - согласиться. Для отказа, нажмите - N",Name(playerid), playerid);
	SCM(params[0],COLOR_TEAL, YCMDstr);
	format(YCMDstr, 256, "{ADFF2F}Вы предложили %s (ID: %i) пожать руку.",Name(params[0]), params[0]);
	SCM(playerid,COLOR_TEAL, YCMDstr);
	SetPVarInt(params[0], "HiUser", playerid);
	return true;
}
CMD:uninvite(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "us[128]",params[0],params[1])) return SCM(playerid, COLOR_GRAD2, " Используйте: /uninvite [id] [причина]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PI[playerid][pRank] <= PI[params[0]][pRank]) return SCM(playerid, COLOR_GREY, "[Ошибка] Вы не можете уволить этого игрока");
	if(params[0] == playerid) return SCM(playerid,-1,"Себя невозможно уволить");
	if(PI[params[0]][pMember] == PI[playerid][pLeader] || PI[params[0]][pMember] == PI[playerid][pMember])
	{
		if(!IsPlayerConnected(params[0])) return true;
		if(!CanUninvitePlayer(playerid)) return true;
		if(PI[params[0]][pMember] <= 0) return true;
		format(YCMDstr, 256, "%s уволил Вас из организации. Причина: %s",Name(playerid), params[1]);
		SCM(params[0], 0x6495EDFF, YCMDstr);
		format(YCMDstr, 256, "Вы уволили %s из организации. Причина: %s",Name(params[0]), params[1]);
		SCM(playerid, 0x6495EDFF, YCMDstr);
		SCM(params[0], COLOR_WHITE, "Вы теперь гражданский...");
		PI[params[0]][pMember] = 0;
		PI[params[0]][pLeader] = 0;
		PI[params[0]][pRank] = 0;
		PI[params[0]][pForma] = 0;
		PI[params[0]][pSong] = 0;
		PI[params[0]][pSAPD] = 0;
		PI[params[0]][pMedic] = 0;
		SetPlayerArmour(params[0],0);
		_ResetGun(params[0]);
		FormaFrac[params[0]] = 0;
		PI[params[0]][pSPChange] = 1;
		SetPlayerColor(params[0], TEAM_HIT_COLOR);
		SetPlayerSkin(params[0], PI[params[0]][pChar][PI[playerid][pViborChar]]);
	}
	return true;
}
CMD:uval(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 6 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "us[128]",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /uval [id] [причина]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PI[params[0]][pMember] == 0) return true;
	if(PI[params[0]][pLeader] > 0) return SCM(playerid, COLOR_GREY, "Этот игрок лидер");
	format(YCMDstr, 256, "%s уволил Вас из организации. Причина: %s",Name(playerid), params[1]);
	SCM(params[0], 0x6495EDFF, YCMDstr);
	format(YCMDstr, 256, "Вы уволили %s из организации. Причина: %s",Name(params[0]), params[1]);
	SCM(playerid, 0x6495EDFF, YCMDstr);
	SCM(params[0], 0x6495EDFF, "Теперь Вы снова гражданский");
	PI[params[0]][pMember] = 0;
	PI[params[0]][pLeader] = 0;
	PI[params[0]][pRank] = 0;
	PI[params[0]][pForma] = 0;
	PI[params[0]][pSong] = 0;
	PI[params[0]][pSPChange] = 1;
	SetPlayerArmour(params[0],0);
	_ResetGun(params[0]);
	FormaFrac[params[0]] = 0;
	SetPlayerColor(params[0], TEAM_HIT_COLOR);
	SetPlayerSkin(params[0],PI[params[0]][pChar][PI[params[0]][pViborChar]]);
	format(YCMDstr, 256, "Администратор %s уволил из организации %s. Причина: %s",Name(playerid),Name(params[0]), params[1]);
	ABroadCast(COLOR_BLUE,YCMDstr,1);
	return true;
}
CMD:unleader(playerid, params[])
{
	if(PI[playerid][pBSA] < 11 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, 0xAFAFAFAA, "Введите: /unleader [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PI[params[0]][pLeader] == 0) return SCM(playerid, COLOR_GREY, "Не является лидером");
	format(YCMDstr, 256, "Вы были сняты с поста лидера организации Администратором %s",Name(playerid));
	SCM(params[0], 0x6495EDFF, YCMDstr);
	format(YCMDstr, 128, "Вы сняли %s с лидерства организации",Name(params[0]));
	SCM(playerid, 0x6495EDFF, YCMDstr);
	PI[params[0]][pMember] = 0;
	PI[params[0]][pLeader] = 0;
	PI[params[0]][pRank] = 0;
	PI[params[0]][pForma] = 0;
	PI[params[0]][pSong] = 0;
	PI[params[0]][pSPChange] = 1;
	SetPlayerArmour(params[0],0);
	_ResetGun(params[0]);
	FormaFrac[params[0]] = 0;
	SetPlayerColor(params[0], 0xFFFFFF00);
	SetPlayerSkin(params[0],PI[params[0]][pChar]);
	format(YCMDstr, 256, "Администратор %s снял с лидерства %s",Name(playerid),Name(params[0]),Name(playerid));
	ABroadCast(0xff0000ff,YCMDstr,1);
	return true;
}
CMD:unadmin(playerid, params[])
{
	if(PI[playerid][pBSA] < 10 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, 0xAFAFAFAA, "Введите: /unadmin [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PI[params[0]][pBSA] == 0) return SCM(playerid, COLOR_GREY, "Не является Администратором");
	if(PI[params[0]][pBSA] > 9) return SCM(playerid, COLOR_GREY, "Нельзя выше или равного себя!");
	format(YCMDstr, 256, "Вы были сняты с поста Администратором %s.",Name(playerid));
	SCM(params[0], COLOR_RED, YCMDstr);
	format(YCMDstr, 128, "Вы сняли %s с поста.",Name(params[0]));
	SCM(playerid, 0xFFFF00AA, YCMDstr);
	PI[params[0]][pBSA] = 0;
	SetPlayerArmour(params[0],0);
	_ResetGun(params[0]);
	format(YCMDstr, 256, "Администратор %s снял с поста Администратора %s.",Name(playerid),Name(params[0]),Name(playerid));
	ABroadCast(0xff0000ff,YCMDstr,1);
	return true;
}
CMD:makeleader(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 10 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /makeleader [id]");
	if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "Игрок не найден!");
	if(PI[params[0]][pWarns] >= 1) return SCM(playerid, COLOR_GRAD1, "У игрока Warn!");
	format(YCMDstr,128,"Выберите лидерку для %s",Name(params[0]));
	new items[1024]="{FFFFFF}[1] SAPD\n[2] FBI\n[3] ВМФ\n[5] La Cosa Nostra\n[6] Yakuza\n[24] Директор К.А.С.С\n[8] Мед. Центр\n[9] SAN\n[23] Байкеры\n[22] Правительство\n[12] The Ballas Gang\n[13] The Vagos Gang\n[14] Russian Mafia\n[15] The Grove Street Gang\n[19] СВ\n";
	strcat(items,"[17] The Aztecas Gang\n[18] The Rifa Gang");
	SPDEx(playerid,1556,2,YCMDstr,items,"Поставить","Закрыть");
	SetPVarInt(playerid,"LID",params[0]);
	return true;
}
CMD:makeadmin(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 11 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /makeadmin [id]");
	if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "Игрок не найден!");
	format(YCMDstr,128,"Выберите lvl для %s",Name(params[0]));
	new items[1024]="{FFFFFF}[1] Мл.Хелпер\n[2] Хелпер\n[3] Ст.Хелпер\n[4] Мл.Модератор\n[5] Модератор\n[6] Ст.Модератор\n[7] Мл.Администратор\n[8] Администратор\n[9] Ст.Администратор\n[10] Спец.Администратор\n[11] Заместитель ГА\n[12] Главный Администратор\n[13] Основатель";
	SPDEx(playerid,1557,2,YCMDstr,items,"Поставить","Закрыть");
	SetPVarInt(playerid,"pBSA",params[0]);
	return true;
}
CMD:demote(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params,"us[128]",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /demote [id] [причина]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PI[params[0]][pLeader] >= 1) return SCM(playerid,COLOR_WHITE,"Вы не можете уволить лидера!");
	if(params[0] == playerid) return SCM(playerid, 0xAFAFAFAA, "Вы указали свой ID");
	if(PI[playerid][pMember] == 2 && PI[playerid][pRank] >= 8)// ФБР
	{
		if(IsPlayerConnected(params[0]))
		{
			if(params[0] != INVALID_PLAYER_ID)
			{
				if(PI[params[0]][pMember] == 2) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек состоит в FBI!");
				else if (PI[params[0]][pMember] == 4) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек относится к Мин. Здравоохранения!");
				else if (PI[params[0]][pMember] == 5) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник!");
				else if (PI[params[0]][pMember] == 6) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник!");
				else if (PI[params[0]][pMember] == 7) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник!");
				else if (PI[params[0]][pMember] == 8) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек относится к Мин. Здравоохранения!");
				else if (PI[params[0]][pMember] == 12) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник!");
				else if (PI[params[0]][pMember] == 13) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник!");
				else if (PI[params[0]][pMember] == 14) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник!");
				else if (PI[params[0]][pMember] == 15) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник!");
				else if (PI[params[0]][pMember] == 16) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник!");
				else if (PI[params[0]][pMember] == 17) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник!");
				else if (PI[params[0]][pMember] == 18) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник!");
				else if (PI[params[0]][pMember] == 22) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек состоит в Адм. Президента!");
				else if (PI[params[0]][pMember] == 23) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник!");
				format(YCMDstr, 128, "Вы были уволены агентом FBI %s. Причина: %s", Name(playerid),params[1]);
				SCM(params[0], 0x6495EDFF, YCMDstr);
			}
		}
	}
	if(PI[playerid][pMember] == 22 && PI[playerid][pRank] == 4 || PI[playerid][pRank] == 5)// Министерство Культуры
	{
		if(IsPlayerConnected(params[0]))
		{
			if(params[0] != INVALID_PLAYER_ID)
			{
				if (PI[params[0]][pMember] == 1) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAN!");
				else if (PI[params[0]][pMember] == 2) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAN!");
				else if (PI[params[0]][pMember] == 3) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAN!");
				else if (PI[params[0]][pMember] == 5) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAN!");
				else if (PI[params[0]][pMember] == 6) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAN!");
				else if (PI[params[0]][pMember] == 7) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAN!");
				else if (PI[params[0]][pMember] == 10) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAN!");
				else if (PI[params[0]][pMember] == 12) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAN!");
				else if (PI[params[0]][pMember] == 13) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAN!");
				else if (PI[params[0]][pMember] == 14) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAN!");
				else if (PI[params[0]][pMember] == 15) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAN!");
				else if (PI[params[0]][pMember] == 16) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAN!");
				else if (PI[params[0]][pMember] == 17) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAN!");
				else if (PI[params[0]][pMember] == 18) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAN!");
				else if (PI[params[0]][pMember] == 19) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAN!");
				else if (PI[params[0]][pMember] == 20) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAN!");
				else if (PI[params[0]][pMember] == 21) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAN!");
				else if (PI[params[0]][pMember] == 22) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек состоит в Адм. Президента!");
				else if (PI[params[0]][pMember] == 23) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAN!");
				else if (PI[params[0]][pMember] == 24) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAN!");
				format(YCMDstr, 128, "Вы были уволены Министром Культуры %s. Причина: %s", Name(playerid),params[1]);
				SCM(params[0], 0x6495EDFF, YCMDstr);
			}
		}
	}
	if(PI[playerid][pMember] == 22 && PI[playerid][pRank] == 6 || PI[playerid][pRank] == 7)// Министерство Здравоохранения
	{
		if(IsPlayerConnected(params[0]))
		{
			if(params[0] != INVALID_PLAYER_ID)
			{
				if (PI[params[0]][pMember] == 1) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в медиках!");
				else if (PI[params[0]][pMember] == 2) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в медиках!");
				else if (PI[params[0]][pMember] == 3) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в медиках!");
				else if (PI[params[0]][pMember] == 5) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в медиках!");
				else if (PI[params[0]][pMember] == 6) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в медиках!");
				else if (PI[params[0]][pMember] == 7) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в медиках!");
				else if (PI[params[0]][pMember] == 9) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в медиках!");
				else if (PI[params[0]][pMember] == 10) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в медиках!");
				else if (PI[params[0]][pMember] == 12) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в медиках!");
				else if (PI[params[0]][pMember] == 13) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в медиках!");
				else if (PI[params[0]][pMember] == 14) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в медиках!");
				else if (PI[params[0]][pMember] == 15) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в медиках!");
				else if (PI[params[0]][pMember] == 16) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в медиках!");
				else if (PI[params[0]][pMember] == 17) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в медиках!");
				else if (PI[params[0]][pMember] == 18) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в медиках!");
				else if (PI[params[0]][pMember] == 19) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в медиках!");
				else if (PI[params[0]][pMember] == 20) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в медиках!");
				else if (PI[params[0]][pMember] == 21) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в медиках!");
				else if (PI[params[0]][pMember] == 22) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек состоит в Адм. Президента!");
				else if (PI[params[0]][pMember] == 23) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в медиках!");
				else if (PI[params[0]][pMember] == 24) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в медиках!");
				format(YCMDstr, 128, "Вы были уволены Министром Здравоохранения %s. Причина: %s", Name(playerid),params[1]);
				SCM(params[0], 0x6495EDFF, YCMDstr);
			}
		}
	}
	if(PI[playerid][pMember] == 22 && PI[playerid][pRank] == 8 || PI[playerid][pRank] == 9)// МВД
	{
		if(IsPlayerConnected(params[0]))
		{
			if(params[0] != INVALID_PLAYER_ID)
			{
				if (PI[params[0]][pMember] == 2) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAPD!");
				else if (PI[params[0]][pMember] == 3) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAPD!");
				else if (PI[params[0]][pMember] == 4) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAPD!");
				else if (PI[params[0]][pMember] == 5) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAPD!");
				else if (PI[params[0]][pMember] == 6) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAPD!");
				else if (PI[params[0]][pMember] == 7) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAPD!");
				else if (PI[params[0]][pMember] == 8) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAPD!");
				else if (PI[params[0]][pMember] == 9) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAPD!");
				else if (PI[params[0]][pMember] == 12) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAPD!");
				else if (PI[params[0]][pMember] == 13) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAPD!");
				else if (PI[params[0]][pMember] == 14) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAPD!");
				else if (PI[params[0]][pMember] == 15) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAPD!");
				else if (PI[params[0]][pMember] == 16) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAPD!");
				else if (PI[params[0]][pMember] == 17) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAPD!");
				else if (PI[params[0]][pMember] == 18) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAPD!");
				else if (PI[params[0]][pMember] == 19) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAPD!");
				else if (PI[params[0]][pMember] == 20) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAPD!");
				else if (PI[params[0]][pMember] == 22) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек состоит в Адм. Президента!");
				else if (PI[params[0]][pMember] == 23) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAPD!");
				else if (PI[params[0]][pMember] == 24) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в SAPD!");
				format(YCMDstr, 128, "Вы были уволены Министром МВД %s. Причина: %s", Name(playerid),params[1]);
				SCM(params[0], 0x6495EDFF, YCMDstr);
			}
		}
	}
	if(PI[playerid][pMember] == 22 && PI[playerid][pRank] == 10 || PI[playerid][pRank] == 11)// Министерство Обороны
	{
		if(IsPlayerConnected(params[0]))
		{
			if(params[0] != INVALID_PLAYER_ID)
			{
				if (PI[params[0]][pMember] == 1) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в Армии/К.А.С.С.");
				else if (PI[params[0]][pMember] == 2) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в Армии/К.А.С.С.");
				else if (PI[params[0]][pMember] == 4) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в Армии/К.А.С.С.");
				else if (PI[params[0]][pMember] == 5) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в Армии/К.А.С.С.");
				else if (PI[params[0]][pMember] == 6) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в Армии/К.А.С.С.");
				else if (PI[params[0]][pMember] == 7) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в Армии/К.А.С.С.");
				else if (PI[params[0]][pMember] == 8) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в Армии/К.А.С.С.");
				else if (PI[params[0]][pMember] == 9) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в Армии/К.А.С.С.!");
				else if (PI[params[0]][pMember] == 10) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в Армии/К.А.С.С.!");
				else if (PI[params[0]][pMember] == 12) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в Армии/К.А.С.С.");
				else if (PI[params[0]][pMember] == 13) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в Армии/К.А.С.С.");
				else if (PI[params[0]][pMember] == 14) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в Армии/К.А.С.С.");
				else if (PI[params[0]][pMember] == 15) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в Армии/К.А.С.С.");
				else if (PI[params[0]][pMember] == 16) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в Армии/К.А.С.С.");
				else if (PI[params[0]][pMember] == 17) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в Армии/К.А.С.С.");
				else if (PI[params[0]][pMember] == 18) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в Армии/К.А.С.С.");
				else if (PI[params[0]][pMember] == 20) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в Армии/К.А.С.С.");
				else if (PI[params[0]][pMember] == 21) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в Армии/К.А.С.С.");
				else if (PI[params[0]][pMember] == 22) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек состоит в Адм. Президента");
				else if (PI[params[0]][pMember] == 23) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не состоит в Армии/К.А.С.С.");
				format(YCMDstr, 128, "Вы были уволены Министром Обороны %s. Причина: %s", Name(playerid),params[1]);
				SCM(params[0], 0x6495EDFF, YCMDstr);
			}
		}
	}
	if(PI[playerid][pMember] == 22 && PI[playerid][pRank] == 12)// Гос. Секретарь
	{
		if(IsPlayerConnected(params[0]))
		{
			if(params[0] != INVALID_PLAYER_ID)
			{
				if (PI[params[0]][pMember] == 5) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 6) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 12) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 13) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 14) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 15) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 16) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 17) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 18) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 22) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек состоит в Адм. Президента");
				else if (PI[params[0]][pMember] == 23) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				format(YCMDstr, 128, "Вы были уволены Гос. Секретарём %s. Причина: %s", Name(playerid),params[1]);
				SCM(params[0], 0x6495EDFF, YCMDstr);
			}
		}
	}
	if(PI[playerid][pMember] == 22 && PI[playerid][pRank] == 13)// Вице-Президент
	{
		if(IsPlayerConnected(params[0]))
		{
			if(params[0] != INVALID_PLAYER_ID)
			{
				if (PI[params[0]][pMember] == 5) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 6) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 12) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 13) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 14) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 15) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 16) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 17) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 18) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 22) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек состоит в Адм. Президента");
				else if (PI[params[0]][pMember] == 23) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				format(YCMDstr, 128, "Вы были уволены Вице-Президентом %s. Причина: %s", Name(playerid),params[1]);
				SCM(params[0], 0x6495EDFF, YCMDstr);
			}
		}
	}
	if(PI[playerid][pMember] == 22 && PI[playerid][pRank] == 14)// Президент
	{
		if(IsPlayerConnected(params[0]))
		{
			if(params[0] != INVALID_PLAYER_ID)
			{
				if (PI[params[0]][pMember] == 5) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 6) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 12) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 13) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 14) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 15) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 16) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 17) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 18) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				else if (PI[params[0]][pMember] == 22) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек состоит в Адм. Президента");
				else if (PI[params[0]][pMember] == 23) return SCM(playerid, COLOR_GREY, "[Ошибка] Этот человек не законник");
				format(YCMDstr, 128, "Вы были уволены Президентом %s. Причина: %s", Name(playerid),params[1]);
				SCM(params[0], 0x6495EDFF, YCMDstr);
			}
		}
	}
	if(PI[playerid][pMember] == 22 && PI[playerid][pRank] >= 4)
	{
		PI[params[0]][pMember] = 0;
		PI[params[0]][pRank] = 0;
		PI[params[0]][pJob] = 0;
		SetPlayerArmour(params[0],0);
		FormaFrac[params[0]] = 0;
		PI[params[0]][pSPChange] = 1;
		SetPlayerColor(params[0], TEAM_HIT_COLOR);
		SetPlayerSkin(params[0], PI[params[0]][pChar][PI[params[0]][pViborChar]]);
		SCM(params[0], 0x6495EDFF, "Теперь Вы снова гражданский");
		SCM(playerid,COLOR_GREY,"Вы успешно уволили данного игрока");
	}
	if(PI[playerid][pMember] == 2 && PI[playerid][pRank] >= 8)
	{
		PI[params[0]][pMember] = 0;
		PI[params[0]][pRank] = 0;
		PI[params[0]][pJob] = 0;
		SetPlayerArmour(params[0],0);
		FormaFrac[params[0]] = 0;
		PI[params[0]][pSPChange] = 1;
		SetPlayerColor(params[0], TEAM_HIT_COLOR);
		SetPlayerSkin(params[0], PI[params[0]][pChar][PI[params[0]][pViborChar]]);
		SCM(params[0], 0x6495EDFF, "Теперь Вы снова гражданский");
		SCM(playerid,COLOR_GREY,"Вы успешно уволили данного игрока");
	}
	return true;
}
CMD:giverank(playerid, params[])
{
	new memberrs = PI[playerid][pMember], rankk = PI[playerid][pRank];
	if(IsACop(playerid) && rankk >= 9 || IsAArm(playerid) && rankk >= 15 || memberrs == 2 && rankk >= 9 || memberrs == 9 && rankk >= 6 || IsAMedic(playerid) && rankk >= 9 || IsAMafia(playerid) && rankk >= 4
			|| IsAGang(playerid) && rankk >= 4 || IsAMayor(playerid) && rankk >= 13 || memberrs == 23 && rankk >= 4 || memberrs == 24 && rankk >= 5) { } else { SCM(playerid,COLOR_GREY,"Вы не Зам/Лидер"); return 1; }
	if(sscanf(params, "ud",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /giverank [id] [ранг]");
	switch(PI[playerid][pMember])
	{
	case 1,10,21: if(params[1] > 9 || params[1] < 1) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!");
	case 5,6,12,13,14,15,17,18,23: if(params[1] > 4 || params[1] < 1) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 4!");
	case 2,4,8: if(params[1] > 9 || params[1] < 1) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 9!");
	case 9: if(params[1] > 6 || params[1] < 1) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 6!");
	case 22: if(params[1] > 13 || params[1] < 1) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 13!");
	case 3,19: if(params[1] > 15 || params[1] < 1) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1 и больше 15!");
	}
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SCM(playerid,COLOR_GREY,"Игрок не найден");
	if(PI[params[0]][pLeader] > 0) return SCM(playerid, COLOR_GREY, "Вы указали ID лидера");
	if(PI[playerid][pMember] != PI[params[0]][pMember]) return SCM(playerid, COLOR_GREY, "Данный игрок не в Вашей фракции!");
	if(params[1] >= PI[playerid][pRank]) return SCM(playerid,COLOR_GREY,"Вы не можете повысить до своего ранга или выше");
	if(PI[playerid][pRank] <= PI[params[0]][pRank]) return SCM(playerid, COLOR_GREY, "Этот игрок выше или равен с Вами рангом");
	SCMF(params[0], 0x6BB3FFAA, "%s повысил/понизил Вас до %d ранга", Name(playerid),params[1]);
	SCMF(playerid, 0x6BB3FFAA, "Вы повысили/понизили %s до %d ранга.", Name(params[0]),params[1]);
	PI[params[0]][pRank] = params[1];
	return true;
}
ALT:teleport:tp;
CMD:teleport(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 3 || GetPVarInt(playerid,"dostup") == 0) return true;
	new listitems[] = "» Правительство\n» Спавн 1 LvL\n» АвтоШкола\n» Банк\n» Vinewood\n» Гетто\n» Лес\n» Работа грузчиков\n» Магазин одежды\n» Тюрьма\n» ДеМорган\n» Las Venturas";
	SPDEx(playerid, 9000, 2, "Teleport List", listitems, "Выбрать", "Закрыть");
	return true;
}
CMD:biz(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 6 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_GRAD2, "Введите: /biz [biznumber]");
	SetPlayerInterior(playerid,0);
	SetPlayerPos(playerid,BizzInfo[params[0]][bEntranceX],BizzInfo[params[0]][bEntranceY],BizzInfo[params[0]][bEntranceZ]);
	SetPlayerVirtualWorld(playerid,0);
	return true;
}
CMD:mark(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 8 || GetPVarInt(playerid,"dostup") == 0) return true;
	GetPlayerPos(playerid, FL[playerid][TeleportDest][0],FL[playerid][TeleportDest][1],FL[playerid][TeleportDest][2]);
	SCM(playerid, COLOR_WHITE, "Точка телепортирования установлена");
	return true;
}
CMD:gotomark(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 8 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(GetPlayerState(playerid) == 2)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		SetVehiclePos(tmpcar, FL[playerid][TeleportDest][0],FL[playerid][TeleportDest][1],FL[playerid][TeleportDest][2]);
		FL[playerid][TelePos][0] = 0.0;FL[playerid][TelePos][1] = 0.0;
	}
	else SetPlayerPos(playerid, FL[playerid][TeleportDest][0],FL[playerid][TeleportDest][1],FL[playerid][TeleportDest][2]);
	SCM(playerid, COLOR_WHITE, "Вы были телепортированы");
	SetPlayerInterior(playerid,0);
	return true;
}
ALT:goto:g;
CMD:goto(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 2 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /g(oto) [id]");
	new Float:plocx,Float:plocy,Float:plocz;
	if(!IsPlayerConnected(params[0])) return true;
	if(GetPlayerState(params[0]) != 1 && GetPlayerState(params[0]) != 2 && GetPlayerState(params[0]) != 3) return SCM(playerid, COLOR_GRAD1, "Игрок не вступил в игру!");
	if(GetPlayerState(params[0]) == PLAYER_STATE_SPECTATING && gSpectateID[params[0]] != INVALID_PLAYER_ID) return SCM(playerid, COLOR_GRAD1, "Админ в режиме наблюдения");
	GetPlayerPos(params[0], plocx, plocy, plocz);
	if(GetPlayerState(playerid) == 2)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
		FL[playerid][TelePos][0] = 0.0;FL[playerid][TelePos][1] = 0.0;
	}
	else
	{
		SetPlayerPos(playerid,plocx,plocy+2, plocz);
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
		SetPlayerInterior(playerid, GetPlayerInterior(params[0]));
	}
	SetPlayerAttachedObject(playerid,2,18680,2,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000);
	PlayerPlaySound(playerid, 1039, 0.0, 0.0, 0.0);
	SCM(playerid, COLOR_WHITE, "Вы были телепортированы");
	return true;
}
CMD:getfuel(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	for(new b = 1; b <= TotalBizz; b++)
	{
		if(PlayerToPoint(10.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bType] == 4)
		{
			if(BizzInfo[b][bProducts] <= 0 && BizzInfo[b][bOwned] == 1) return SCM(playerid,COLOR_GRAD1,"Заправка не работает");
			if(BizzInfo[b][bLocked] == 1) return SCM(playerid,COLOR_GRAD1, "Заправка закрыта!");
			if(PI[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, "У вас уже есть канистра");
			if(PI[playerid][pCash] < BizzInfo[b][bTovar14]) return SCM(playerid,COLOR_GRAD1, "Недостаточно денег!");
			BizzInfo[b][b2Till] += BizzInfo[b][bTovar14]/2;
			PI[playerid][pCash] -= BizzInfo[b][bTovar14]/2;
			if(BizzInfo[b][bOwned] == 1) BizzInfo[b][bProducts] -= 50;
			format(YCMDstr, 128, "Вы купили 50 литров бензина за $%d",BizzInfo[b][bTovar14]/2);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			SCM(playerid,COLOR_GRAD1, "Заправить транспорт с канистры: /fillcar");
			PI[playerid][pFuel] = 1;
			PI[playerid][pCash] -= BizzInfo[b][bTovar14]/2;
			return true;
		}
	}
	if(PlayerToPoint(4.0, playerid, 1602.1592,-1619.5845,13.4887))
	{
		if(PI[playerid][pMember] != 1) return SCM(playerid,COLOR_GREY,"Вы не состоите в LSPD!");
		if(FracBank[0][lspdbenz] <= 0) return SCM(playerid,COLOR_GRAD1, "В цистерне LSPD нет бензина!");
		if(PI[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть канистра!");
		SCM(playerid, 0x6495EDFF, "Вы взяли с цистерны LSPD 50 литров бензина. Заправиться с канистры: /fillcar");
		SCM(playerid,COLOR_GRAD1, "Заправить транспорт с канистры: /fillcar");
		FracBank[0][lspdbenz] -= 50;
		PI[playerid][pFuel] = 1;
		BenzFrac();
		return true;
	}
	if(PlayerToPoint(4.0, playerid, 1013.2892,1155.4902,10.7010))
	{
		if(PI[playerid][pMember] != 2) return SCM(playerid,COLOR_GREY,"Вы не состоите в FBI!");
		if(FracBank[0][fbibenz] <= 0) return SCM(playerid,COLOR_GRAD1, "В цистерне FBI нет бензина!");
		if(PI[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть канистра!");
		SCM(playerid, 0x6495EDFF, "Вы взяли с цистерны FBI 50 литров бензина. Заправиться с канистры: /fillcar");
		FracBank[0][fbibenz] -= 50;
		PI[playerid][pFuel] = 1;
		BenzFrac();
		return true;
	}
	if(PlayerToPoint(4.0, playerid, -1390.0769,458.0238,7.1875))
	{
		if(PI[playerid][pMember] != 3) return SCM(playerid,COLOR_GREY,"Вы не состоите в ВМФ!");
		if(FracBank[0][vmfbenz] <= 0) return SCM(playerid,COLOR_GRAD1, "В цистерне ВМФ нет бензина!");
		if(PI[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть канистра!");
		SCM(playerid, 0x6495EDFF, "Вы взяли с цистерны ВМФ 50 литров бензина. Заправиться с канистры: /fillcar");
		FracBank[0][vmfbenz] -= 50;
		PI[playerid][pFuel] = 1;
		BenzFrac();
		return true;
	}
	if(PlayerToPoint(4.0, playerid, -2592.5903,586.0273,14.4531))
	{
		if(PI[playerid][pMember] != 4) return SCM(playerid,COLOR_GREY,"Вы не состоите в МЦСФ!");
		if(FracBank[0][medsfbenz] <= 0) return SCM(playerid,COLOR_GRAD1, "В цистерне МЦСФ нет бензина!");
		if(PI[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть канистра!");
		SCM(playerid, 0x6495EDFF, "Вы взяли с цистерны МЦСФ 50 литров бензина. Заправиться с канистры: /fillcar");
		FracBank[0][medsfbenz] -= 50;
		PI[playerid][pFuel] = 1;
		BenzFrac();
		return true;
	}
	if(PlayerToPoint(4.0, playerid, 1429.3911,791.9945,10.8203))
	{
		if(PI[playerid][pMember] != 5) return SCM(playerid,COLOR_GREY,"Вы не состоите в LCN!");
		if(FracBank[0][lcnbenz] <= 0) return SCM(playerid,COLOR_GRAD1, "В цистерне LCN нет бензина!");
		if(PI[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть канистра!");
		SCM(playerid, 0x6495EDFF, "Вы взяли с цистерны LCN 50 литров бензина. Заправиться с канистры: /fillcar");
		FracBank[0][lcnbenz] -= 50;
		PI[playerid][pFuel] = 1;
		BenzFrac();
		return true;
	}
	if(PlayerToPoint(4.0, playerid, 1443.0621,2820.9695,10.8203))
	{
		if(PI[playerid][pMember] != 6) return SCM(playerid,COLOR_GREY,"Вы не состоите в Yakuza!");
		if(FracBank[0][yakuzabenz] <= 0) return SCM(playerid,COLOR_GRAD1, "В цистерне Yakuza нет бензина!");
		if(PI[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть канистра!");
		SCM(playerid, 0x6495EDFF, "Вы взяли с цистерны Yakuza 50 литров бензина. Заправиться с канистры: /fillcar");
		FracBank[0][yakuzabenz] -= 50;
		PI[playerid][pFuel] = 1;
		BenzFrac();
		return true;
	}
	if(PlayerToPoint(4.0, playerid, 1140.4194,-1327.8652,13.6605))
	{
		if(PI[playerid][pMember] != 8) return SCM(playerid,COLOR_GREY,"Вы не состоите в МЦЛС!");
		if(FracBank[0][medlsbenz] <= 0) return SCM(playerid,COLOR_GRAD1, "В цистерне МЦЛС нет бензина!");
		if(PI[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть канистра!");
		SCM(playerid, 0x6495EDFF, "Вы взяли с цистерны МЦЛС 50 литров бензина. Заправиться с канистры: /fillcar");
		FracBank[0][medlsbenz] -= 50;
		PI[playerid][pFuel] = 1;
		BenzFrac();
		return true;
	}
	if(PlayerToPoint(4.0, playerid, 1971.0061,-1274.5997,23.9908))
	{
		if(PI[playerid][pMember] != 12) return SCM(playerid,COLOR_GREY,"Вы не состоите в Ballas!");
		if(FracBank[0][ballasbenz] <= 0) return SCM(playerid,COLOR_GRAD1, "В цистерне Ballas нет бензина!");
		if(PI[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть канистра!");
		SCM(playerid, 0x6495EDFF, "Вы взяли с цистерны Ballas 50 литров бензина. Заправиться с канистры: /fillcar");
		FracBank[0][ballasbenz] -= 50;
		PI[playerid][pFuel] = 1;
		BenzFrac();
		return true;
	}
	if(PlayerToPoint(4.0, playerid, 2795.3508,-1587.0710,10.9271))
	{
		if(PI[playerid][pMember] != 13) return SCM(playerid,COLOR_GREY,"Вы не состоите в Vagos!");
		if(FracBank[0][vagosbenz] <= 0) return SCM(playerid,COLOR_GRAD1, "В цистерне Vagos нет бензина!");
		if(PI[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть канистра!");
		SCM(playerid, 0x6495EDFF, "Вы взяли с цистерны Vagos 50 литров бензина. Заправиться с канистры: /fillcar");
		FracBank[0][vagosbenz] -= 50;
		PI[playerid][pFuel] = 1;
		BenzFrac();
		return true;
	}
	if(PlayerToPoint(4.0, playerid, 964.0468,1810.7731,8.6484))
	{
		if(PI[playerid][pMember] != 14) return SCM(playerid,COLOR_GREY,"Вы не состоите в PM!");
		if(FracBank[0][pmbenz] <= 0) return SCM(playerid,COLOR_GRAD1, "В цистерне PM нет бензина!");
		if(PI[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть канистра!");
		SCM(playerid, 0x6495EDFF, "Вы взяли с цистерны PM 50 литров бензина. Заправиться с канистры: /fillcar");
		FracBank[0][pmbenz] -= 50;
		PI[playerid][pFuel] = 1;
		BenzFrac();
		return true;
	}
	if(PlayerToPoint(4.0, playerid, 2458.5376,-1669.7819,13.4944))
	{
		if(PI[playerid][pMember] != 15) return SCM(playerid,COLOR_GREY,"Вы не состоите в Grove!");
		if(FracBank[0][grovebenz] <= 0) return SCM(playerid,COLOR_GRAD1, "В цистерне Grove нет бензина!");
		if(PI[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть канистра!");
		SCM(playerid, 0x6495EDFF, "Вы взяли с цистерны Grove 50 литров бензина. Заправиться с канистры: /fillcar");
		FracBank[0][grovebenz] -= 50;
		PI[playerid][pFuel] = 1;
		BenzFrac();
		return true;
	}
	if(PlayerToPoint(4.0, playerid, 2778.7441,-1944.7628,13.5469))
	{
		if(PI[playerid][pMember] != 17) return SCM(playerid,COLOR_GREY,"Вы не состоите в Aztec!");
		if(FracBank[0][aztecbenz] <= 0) return SCM(playerid,COLOR_GRAD1, "В цистерне Atec нет бензина!");
		if(PI[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть канистра!");
		SCM(playerid, 0x6495EDFF, "Вы взяли с цистерны Aztec 50 литров бензина. Заправиться с канистры: /fillcar");
		FracBank[0][aztecbenz] -= 50;
		PI[playerid][pFuel] = 1;
		BenzFrac();
		return true;
	}
	if(PlayerToPoint(4.0, playerid, 2182.3706,-1776.5037,13.3649))
	{
		if(PI[playerid][pMember] != 18) return SCM(playerid,COLOR_GREY,"Вы не состоите в Rifa!");
		if(FracBank[0][rifabenz] <= 0) return SCM(playerid,COLOR_GRAD1, "В цистерне Rifa нет бензина!");
		if(PI[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть канистра!");
		SCM(playerid, 0x6495EDFF, "Вы взяли с цистерны Rifa 50 литров бензина. Заправиться с канистры: /fillcar");
		FracBank[0][rifabenz] -= 50;
		PI[playerid][pFuel] = 1;
		BenzFrac();
		return true;
	}
	if(PlayerToPoint(4.0, playerid, 295.0532,1849.0668,17.6406))
	{
		if(PI[playerid][pMember] != 19) return SCM(playerid,COLOR_GREY,"Вы не состоите в СВ!");
		if(FracBank[0][zonabenz] <= 0) return SCM(playerid,COLOR_GRAD1, "В цистерне СВ нет бензина!");
		if(PI[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть канистра!");
		SCM(playerid, 0x6495EDFF, "Вы взяли с цистерны СВ 50 литров бензина. Заправиться с канистры: /fillcar");
		FracBank[0][zonabenz] -= 50;
		PI[playerid][pFuel] = 1;
		BenzFrac();
		return true;
	}
	if(PlayerToPoint(4.0, playerid, 1523.2502,-1843.1382,13.5469))
	{
		if(PI[playerid][pMember] != 22) return SCM(playerid,COLOR_GREY,"Вы не состоите в Адм. Президента!");
		if(FracBank[0][pravbenz] <= 0) return SCM(playerid,COLOR_GRAD1, "В цистерне Адм. Президента нет бензина!");
		if(PI[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть канистра!");
		SCM(playerid, 0x6495EDFF, "Вы взяли с цистерны Адм. Президента 50 литров бензина. Заправиться с канистры: /fillcar");
		FracBank[0][pravbenz] -= 50;
		PI[playerid][pFuel] = 1;
		BenzFrac();
		return true;
	}
	if(PlayerToPoint(4.0, playerid, 673.5708,-444.2276,16.3359))
	{
		if(PI[playerid][pMember] != 23) return SCM(playerid,COLOR_GREY,"Вы не байкер!");
		if(FracBank[0][bikerbenz] <= 0) return SCM(playerid,COLOR_GRAD1, "В цистерне байкеров нет бензина!");
		if(PI[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть канистра!");
		SCM(playerid, 0x6495EDFF, "Вы взяли с цистерны байкеров 50 литров бензина. Заправиться с канистры: /fillcar");
		FracBank[0][bikerbenz] -= 50;
		PI[playerid][pFuel] = 1;
		BenzFrac();
		return true;
	}
	if(PlayerToPoint(4.0, playerid, 2549.5632,2721.5469,10.8203))
	{
		if(PI[playerid][pMember] != 24) return SCM(playerid,COLOR_GREY,"Вы не состоите в К.А.С.С. !");
		if(FracBank[0][kassbenzce] <= 0) return SCM(playerid,COLOR_GRAD1, "В цистерне К.А.С.С. нет бензина!");
		if(PI[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть канистра!");
		SCM(playerid, 0x6495EDFF, "Вы взяли с цистерны К.А.С.С. 50 литров бензина. Заправиться с канистры: /fillcar");
		FracBank[0][kassbenzce] -= 50;
		PI[playerid][pFuel] = 1;
		BenzFrac();
		return true;
	}
	if(PlayerToPoint(4.0, playerid, -1635.7487,667.2200,7.1875))
	{
		if(PI[playerid][pMember] != 10) return SCM(playerid,COLOR_GREY,"Вы не состоите в SFPD !");
		if(FracBank[0][sfpdbenz] <= 0) return SCM(playerid,COLOR_GRAD1, "В цистерне SFPD нет бензина!");
		if(PI[playerid][pFuel] != 0) return SCM(playerid, COLOR_GRAD1, "У Вас уже есть канистра!");
		SCM(playerid, 0x6495EDFF, "Вы взяли с цистерны SFPD 50 литров бензина. Заправиться с канистры: /fillcar");
		FracBank[0][sfpdbenz] -= 50;
		PI[playerid][pFuel] = 1;
		BenzFrac();
		return true;
	}
	return true;
}
CMD:fillcar(playerid, params[])
{
	if(!PI[playerid][pLogin]) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,COLOR_WHITE,"Вы не в транспорте");
	new car = GetPlayerVehicleID(playerid);
	if(PI[playerid][pFuel] != 1) return SCM(playerid, COLOR_GREY, "У Вас нет канистры");
	if(Fuell[car] >= 100) return SCM(playerid,COLOR_GREY,"В данном т/с уже полный бак");
	if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetVehicleModel(car) == 481 || GetVehicleModel(car) == 509 || GetVehicleModel(car) == 510) return SCM(playerid,COLOR_YELLOW, "Вы не в автомобиле/Этот транспорт нельзя заправить");
	SCM(playerid, 0x6495EDFF, "Вы дозаправили свой транспорт 50 литрами бензина");
	Fuell[car] += 50;
	if(Fuell[car] >= 100) Fuell[car] = 100;
	PI[playerid][pFuel] = 0;
	return true;
}
CMD:gethere(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 3 || GetPVarInt(playerid,"dostup") == 0) return true;
	new plo;
	if(sscanf(params, "u",plo)) return SCM(playerid, COLOR_WHITE, "Введите: /gethere [id]");
	new Float:plocx,Float:plocy,Float:plocz;
	new inter = GetPlayerInterior(playerid);
	new worldd = GetPlayerVirtualWorld(playerid);
	if(IsPlayerConnected(plo))
	{
		if(plo != INVALID_PLAYER_ID)
		{
			if(PI[playerid][pBSA] >= 3)
			{
				if(GetPlayerState(plo) != 1 && GetPlayerState(plo) != 2 && GetPlayerState(plo) != 3) return	SCM(playerid, COLOR_GRAD1, "Игрок не вступил в игру!");
				GetPlayerPos(playerid, plocx, plocy, plocz);
				if(PI[playerid][pInt] > 0)
				{
					SetPlayerInterior(plo,inter);
					PI[plo][pInt] = inter;
					PI[plo][pLocal] = PI[playerid][pLocal];
					SetPlayerVirtualWorld(plo,worldd);
				}
				if(PI[playerid][pInt] == 0)
				{
					SetPlayerInterior(plo,PI[playerid][pInt]);
					SetPlayerInterior(plo,inter);
					SetPlayerVirtualWorld(plo,worldd);
				}
				if(plocz > 930.0 && PI[playerid][pInt] == 0)
				{
					SetPlayerInterior(plo,inter);
					PI[plo][pInt] = inter;
				}
				if (GetPlayerState(plo) == 2)
				{
					FL[plo][TelePos][0] = 0.0;
					FL[plo][TelePos][1] = 0.0;
					SetPlayerInterior(plo,inter);
					new tmpcar = GetPlayerVehicleID(plo);
					SetPlayerVirtualWorld(plo,worldd);
					SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
				}
				else
				{
					SetPlayerPos(plo,plocx,plocy+2, plocz);
					SetPlayerInterior(plo,inter);
					SetPlayerVirtualWorld(plo,worldd);
				}
				SetPlayerAttachedObject(plo,2,18680,2,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000);
				PlayerPlaySound(plo, 1039, 0.0, 0.0, 0.0);
				SCM(plo, COLOR_WHITE, "Вас телепортировал к себе администратор EXSIGHT-Rp");
			}
		}
	}
	return true;
}
CMD:givegun(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 5 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "udd",params[0],params[1],params[2])) return SCM(playerid, COLOR_WHITE, "Введите: /givegun [id] [id оружия] [патроны]");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[1] > 46) { SCM(playerid, COLOR_GREY, "Не правильный ид оружия"); return 1; }
	if(params[2] < 1 || params[2] > 9999) return SCM(playerid, COLOR_GRAD1, "Нельзя меньше 1 или больше 9999 патронов!");
	if(params[1] == 4 || params[1] == 16 || params[1] == 17 || params[1] == 27 || params[1] == 34 || params[1] == 35 || params[1] == 36 || params[1] == 37 || params[1] == 38 || params[1] == 40 || params[1] == 44 || params[1] == 45) return SCM(playerid, COLOR_WHITE, "Эти оружия запрещены для простых смертных!");
	_GiveGun(params[0],params[1],params[2]);
	SCM(playerid, COLOR_GRAD1, "Оружие Выдано");
	return true;
}
CMD:hp(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 1 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(IsPlayerInAnyVehicle(playerid))
	{
		AC_RepairVeh(GetPlayerVehicleID(playerid));
		Fuell[GetPlayerVehicleID(playerid)] = 100;
		SCM(playerid, COLOR_WHITE, "Машина отремонтирована!");
		SetPlayerHealthAC(playerid, 100.0);
		PlayerPlaySound(playerid, 32000, 0.0, 0.0, 0.0);
	}
	SetPlayerHealthAC(playerid, 100);
	PI[playerid][pGolod] = 9999999;
	SCM(playerid, COLOR_WHITE, "Хп пополнено. Сытость пополнена.");
	return true;
}
CMD:sethealcost(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pLeader] == 4 || PI[playerid][pLeader] == 8)
	{
		if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /sethealcost [сумма]");
		if(params[0] < 1 || params[0] > 30) { SCM(playerid, COLOR_GREY, "Вы не можете поставить меньше 0 и больше 30"); return true; }
		healpric = params[0];
		SCMToAll(COLOR_WHITE, "---========== Государственные Новости==========---");
		format(YCMDstr, 256, "Цена лечения, в размере $%d. установлена Глав. Врачом: %s.", healpric,Name(playerid));
		SCMToAll(0xA52A2AFF, YCMDstr);
		return true;
	}
	return true;
}
CMD:escape(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsAGang(playerid)) return true;
	if(PI[playerid][pJailed] != 1) return SCM(playerid, COLOR_GRAD1, "Вы не в тюрьме!");
	if(PI[playerid][pMestoJail] == 4) return SCM(playerid, COLOR_GRAD1, "Из деморгана невозможно выйти этим путём!");
	if(keys[playerid] <= 0) return SCM(playerid, COLOR_GRAD1, "У Вас нет ключа от тюрьмы!");
	keys[playerid] -= 1;
	if(PI[playerid][pMestoJail] == 1) SetPlayerInterior(playerid, 0), SetPlayerPos(playerid,1553.4962,-1675.2714,16.1953), SetPlayerFacingAngle(playerid, 95.0636);
	if(PI[playerid][pMestoJail] == 2) SetPlayerInterior(playerid, 0), SetPlayerPos(playerid,-1607.1873,721.3649,12.2721), SetPlayerFacingAngle(playerid, 2.3026);
	if(PI[playerid][pMestoJail] == 3) SetPlayerInterior(playerid, 0), SetPlayerPos(playerid,2334.8467,2454.9456,14.9688), SetPlayerFacingAngle(playerid, 115.7874);
	if(PI[playerid][pMestoJail] == 5) SetPlayerInterior(playerid, 0), SetPlayerPos(playerid,-308.7999,1498.3580,75.7039), SetPlayerFacingAngle(playerid, 180.2377);
	PI[playerid][pJailTime] = 0;
	PI[playerid][pJailed] = 0;
	PI[playerid][pMestoJail] = 0;
	SetPlayerVirtualWorld(playerid, 0);
	PlayerCuffed[playerid] = 0;
	SCM(playerid, COLOR_YELLOW, "Вы совершили побег из тюрьмы");
	return true;
}
CMD:getekey(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsAGang(playerid)) return true;
	if(keys[playerid] <= 0) return SCM(playerid, COLOR_GRAD1, "У Вас нет ключей от тюрьмы!");
	format(YCMDstr, 256, "У Вас %d ключей", keys[playerid]);
	SCM(playerid, COLOR_YELLOW, YCMDstr);
	format(YCMDstr, 256, "%s достаёт ключи",Name(playerid));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return true;
}
CMD:givecopkeys(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /givecopkeys [id]");
	if(PI[playerid][pMember] == 1 || PI[playerid][pMember] == 2 || PI[playerid][pMember] == 10 || PI[playerid][pMember] == 21 || PI[playerid][pBSA] >= 1)
	{
		if(!IsPlayerConnected(params[0])) return true;
		keys[params[0]] += 1;
		format(YCMDstr, 256, "Сотрудник %s выдал пропуск %s",Name(playerid),Name(params[0]));
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return true;
}
CMD:heal(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countingheal") > gettime() ) return SCM(playerid, 0xFF0000FF, "Команду можно использовать раз в 5 секунд.");
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /heal [id]");
	if(!IsPlayerConnected(params[0])) return 1;
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Вы не можете вылечить самого себя!");
	new giveambu = GetPlayerVehicleID(params[0]);
	new playambu = GetPlayerVehicleID(playerid);
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	if(PI[playerid][pMember] == 4 || PI[playerid][pMember] == 8)
	{
		if(IsAnAmbulance(playambu) && playambu == giveambu || PlayerToPoint(50.0,playerid,-1036.0662,695.2768,1507.3469) && ProxDetectorS(8.0, playerid, params[0]))
		{
			if(PI[params[0]][pNarcoLomka])
			{
				PI[params[0]][pNarcoLomka] = 0;
				SetPlayerWeather(params[0],10);
				format(YCMDstr,sizeof(YCMDstr),"Вы спасли %s от ломки",Name(params[0]));
				SCM(playerid,COLOR_GREEN,YCMDstr);
				format(YCMDstr,sizeof(YCMDstr),"Медик %s спас вас от ломки",Name(playerid));
				SCM(params[0],COLOR_GREEN,YCMDstr);
				SetPVarInt(params[0], "startaddiction", 0);
				ApplyAnimation(params[0],"CARRY","crry_prtial",4.0,0,0,0,0,0,1);
				return true;
			}
			new Float:hp;
			GetPlayerHealth(params[0],hp);
			new ttt = 100 - floatround(hp, floatround_round);
			format(YCMDstr,sizeof(YCMDstr),"Вы предложили медицинскую помощь игроку %s",Name(params[0]));
			SCM(playerid,COLOR_GREEN,YCMDstr);
			format(YCMDstr,sizeof(YCMDstr), "Медик хочет вылечить Вас за $%d\nВы согласны?",healpric*ttt);
			SPDEx(params[0],5522,0, "Лечение", YCMDstr, "Да", "Нет");
			FL[params[0]][HealOffer] = playerid;
			FL[params[0]][HealPrice] = healpric*ttt;
		}
	}
	SetPVarInt(playerid,"Countingheal",gettime() + 5);
	return true;
}
CMD:sethp(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if (PI[playerid][pBSA] < 10 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "ud",params[0],params[1])) return	SCM(playerid, COLOR_WHITE, "Введите: /sethp [id] [уровень hp]");
	if(!IsPlayerConnected(params[0])) return true;
	if(params[1] > 101) return SCM(playerid, COLOR_GREY,"Нельзя давать больше 100 хп!");
	SetPlayerHealthAC(params[0], params[1]);
	SCM(playerid, COLOR_WHITE, "Уровень hp игроку установлен");
	return true;
}
CMD:veh(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 5 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(FL[playerid][creatcar] != -1) return SCM(playerid,COLOR_GREY,"Для начала удалите автомобиль (/delveh)");
	if(sscanf(params, "ddd",params[0],params[1],params[2])) return	SCM(playerid, COLOR_WHITE, "Введите: /veh [id авто] [Цвет №1] [Цвет №2]");
	new intt = GetPlayerInterior(playerid);
	new vehicleid = GetPlayerVehicleID(playerid);
	if(params[0] < 400 || params[0] > 611) return SCM(playerid, COLOR_WHITE, "Введите: /veh [id авто] [Цвет №1] [Цвет №2]");
	if(params[1] < 0 || params[1] > 126) return SCM(playerid, COLOR_WHITE, "Введите: /veh [id авто] [Цвет №1] [Цвет №2]");
	if(params[2] < 0 || params[2] > 126) return SCM(playerid, COLOR_WHITE, "Введите: /veh [id авто] [Цвет №1] [Цвет №2]");
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid, X,Y,Z);
	createdvehs ++;
	Fuell[vehicleid] = 100;
	FL[playerid][creatcar] = CreateVehicle(params[0], X,Y,Z, 0.0, params[1], params[2], 60000);
	PutPlayerInVehicleEx(playerid, FL[playerid][creatcar], 0);
	SetPlayerArmedWeapon(playerid,0);
	vehcreat[FL[playerid][creatcar]] = 1;
	CreatedCars[CreatedCar] = FL[playerid][creatcar];
	SetVehicleParamsEx(GetPlayerVehicleID(playerid) ,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
	zavodis[GetPlayerVehicleID(playerid)] = 1;
	UnLockCar(FL[playerid][creatcar]);
	LinkVehicleToInterior(FL[playerid][creatcar], intt);
	format(YCMDstr, 256, "Автомобиль, модель: %d создан, для удаления /delveh", params[0]);
	SCM(playerid, COLOR_WHITE, YCMDstr);
	return true;
}
CMD:delveh(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(PI[playerid][pBSA] < 5 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(FL[playerid][creatcar] != -1) return DestroyVehicle(FL[playerid][creatcar]),SCM(playerid,-1,"Автомобиль успешно удален"),FL[playerid][creatcar] = -1;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
	if(vehcreat[ GetPlayerVehicleID( playerid ) ] != 1 ) return  SCM(playerid, COLOR_GRAD1, "Эту машину удалять нельзя");
	DestroyVehicle(GetPlayerVehicleID(playerid));
	SCM(playerid, COLOR_GREEN, "Автомобиль успешно удален!");
	createdvehs --;
	vehcreat[GetPlayerVehicleID(playerid)] = 0;
	return true;
}
CMD:giveveh(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 5 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "dddd", params[0], params[1], params[2], params[3])) return SCM(playerid, -1, "Введите: /giveveh [id] [id авто] [Цвет №1] [Цвет №2]");
	new intt = GetPlayerInterior(playerid);
	new vehicleid = GetPlayerVehicleID(playerid);
	new Float:x, Float:y, Float:z;
	GetPlayerPos(params[0], x, y, z);
	createdvehs ++;
	FL[params[0]][creatcar] = CreateVehicle(params[1], x + 1, y + 1, z, 0, params[2], params[3], 60000);
	PutPlayerInVehicleEx(params[0], FL[params[0]][creatcar], 0);
	vehcreat[FL[params[0]][creatcar]] = 1;
	Fuell[vehicleid] = 100;
	LinkVehicleToInterior(FL[params[0]][creatcar], intt);
	format(YCMDstr, 64, "Вы выдали транспорт id %d для игрока под ID %d", params[1], params[0]);
	SCM(playerid, COLOR_GREEN, YCMDstr);
	return true;
}
CMD:givemoney(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "ud",params[0],params[1])) return	SCM(playerid, COLOR_WHITE, "Введите: /givemoney [ид] [сумма]");
	if(!IsPlayerConnected(params[0])) return true;
	format(YCMDstr, 256, "$%d переведены на счёт игроку", params[1]);
	SCM(playerid, COLOR_WHITE, YCMDstr);
	PI[params[0]][pCash] += params[1];
	return true;
}
CMD:givedonate(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "ud",params[0],params[1])) return	SCM(playerid, COLOR_WHITE, "Введите: /givedonate [ид] [сумма]");
	if(!IsPlayerConnected(params[0])) return true;
	format(YCMDstr, 256, "%d доната переведены игроку", params[1]);
	SCM(playerid, COLOR_WHITE, YCMDstr);
	PI[params[0]][pDonatemoney] += params[1];
	format(YCMDstr, 256, "Администратор %s пополнил Вам донат.",Name(playerid));
	SCM(params[0], COLOR_NEWS, YCMDstr);
	format(YCMDstr, 256, "Прежний: %d, Сейчас: %d",PI[params[0]][pDonatemoney]-params[1],PI[params[0]][pDonatemoney]);
	SCM(params[0], COLOR_WHITE, YCMDstr);
	return true;
}
CMD:money(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if (PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "ud",params[0],params[1])) return	SCM(playerid, COLOR_WHITE, "Введите: /money [ид] [сумма]");
	if(!IsPlayerConnected(params[0])) return true;
	format(YCMDstr, 256, "$%d переведены на счёт игроку %s",params[1],Name(params[0]));
	SCM(playerid, COLOR_WHITE, YCMDstr);
	PI[params[0]][pBank] += params[1];
	format(YCMDstr, 256, "Пополнение счёта на сумму: $%d", params[1]);
	SCM(params[0], COLOR_WHITE, YCMDstr);
	format(YCMDstr, 256, "Новый баланс в банке: $%d", PI[params[0]][pBank]);
	SCM(params[0], COLOR_WHITE, YCMDstr);
	return true;
}
CMD:gm(playerid, params[])
{
	if(!PI[playerid][pLogin]) return SCM(playerid,COLOR_WHITE,"Вы не авторизованы!");
	if(PI[playerid][pBSA] < 2 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /gm [id]");
	if(!IsPlayerConnected(params[0])) return true;
	GetPlayerHealth(params[0],GMHP[params[0]][0]);
	GetVehicleHealth(GetPlayerVehicleID(params[0]),VEHHP[params[0]][0]);
	GetPlayerArmour(params[0], GMARMOUR[params[0]][0]);
	SetPlayerArmour(params[0], 0);
	SetPlayerHealthAC(params[0], 100);
	player_NoCheckTimeVeh[params[0]] = 3;
	SetVehicleHealth(GetPlayerVehicleID(params[0]),1000.0);
	SetTimerEx("GETHP",1000,false,"i",params[0]);
	new Float:boomx, Float:boomy, Float:boomz;
	GetPlayerPos(params[0],boomx, boomy, boomz);
	CreateExplosion(boomx, boomy , boomz+7.5, 5, 0.5);
	FL[params[0]][GMNameAdmin] = playerid;
	format(YCMDstr,128, "< Тест на GM > %s проверил игрока: %s", Name(playerid),Name(params[0]));
	ABroadCast(COLOR_LIGHTRED, YCMDstr, 1);
	return true;
}
CMD:mute(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 1 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "uds[128]",params[0],params[1],params[2])) return	SCM(playerid, COLOR_WHITE, "Введите: /mute [id] [минуты] [причина]");
	if(params[1] < 0 || params[1] > 120) return SCM(playerid, COLOR_GREY, "Нельзя больше 120 минут");
	if(!IsPlayerConnected(params[0])) return true;
	if(PI[params[0]][pMuted] == 1)
	{
		PI[params[0]][pMuted] = 0;
		PI[params[0]][pMuteTime] = 0;
		PI[params[0]][pOFFMute] = 0;
		format(YCMDstr, 256, "Администратор %s разблокировал чат у %s",Name(playerid),Name(params[0]));
		SCMToAll(COLOR_LIGHTRED, YCMDstr);
		return true;
	}
	PI[params[0]][pMuteTime] = params[1]*60;
	PI[params[0]][pMuted] = 1;
	format(YCMDstr, 256, "Администратор %s заблокировал чат %s на %d минут. Причина: %s",Name(playerid),Name(params[0]),params[1],params[2]);
	SCMToAll(COLOR_LIGHTRED, YCMDstr);
	format(YCMDstr, 256, "Вам заблокировали чат! Время и причина выше.");
	SCM(params[0], COLOR_WHITE, YCMDstr);
	PlayerPlaySound(params[0], 31202, 0.0, 0.0, 0.0);
	return true;
}
CMD:id(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new test = 0;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /id [ник]");
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(strfind(Name(i),params[0],true) != -1)
		{
			test++;
			format(YCMDstr, 256, "Ник: %s | ID: %d | LvL: %d\n",Name(i),i,PI[i][pLevel]);
			SCM(playerid, COLOR_WHITE, YCMDstr);
		}
	}
	if(test == 0) return SCM(playerid,COLOR_GREY,"Игрок не найден!");
	return true;
}
CMD:family(playerid, params[])
{
	if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
	{
		if(!player_family[playerid])return SCM(playerid, -1,"Вы не состоите в семье!");
		SPDEx(playerid,994,2,"{FFD300}Меню семьи","{FFFFFF}Информация о семье\n- Состав семьи\n{FFD700}- Покинуть семью{FFFFFF}\n- Изменить цвет рации семьи\n- Изменить название семьи\n- Исключить игрока {FF0000}[Offline]","Выбрать","Отмена");
		return true;
	}
}
CMD:finvite(playerid, params[])
{
	if(PI[playerid][pFLeader] != 1) return SCM(playerid,0xB4B5B7FF,"{FFFFFF}Вы не создатель семьи!");
	if(!player_family[playerid])return SCM(playerid, -1,"Вы не состоите в семье!");
	if(sscanf(params, "u", params[0]))return SCM(playerid, -1, "Ввведите: /finvite [id]");
	if(!IsPlayerConnected(params[0]))return SCM(playerid, -1, "Игрок не найден!" ) ;
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_WHITE, "Этот человек не рядом с Вами.");
	if(player_family[params[0]])return SCM(playerid, -1, "Уже состоит в семье!" ) ;
	format(YCMDstr,256,"Вы пригласили %s присоединиться к семье %s", Name(params[0]),family_info[player_family[playerid]][f_name]);
	SCM(playerid,-1,YCMDstr);
	format(YCMDstr,128,"{FFFFFF}%s приглашает Bас присоединиться к семье %s.\nВы согласны присоединиться?",Name(playerid),family_info[player_family[playerid]][f_name]);
	SPDEx(params[0],999,0,"{FFD300}Приглашение в семью",YCMDstr,"Да","Нет");
	SetPVarInt(params[0],"family_id",player_family[playerid]);
	return true;
}

CMD:funinvite(playerid, params[])
{
	if(PI[playerid][pFLeader] != 1) return SCM(playerid,0xB4B5B7FF,"{FFFFFF}Вы не создатель семьи!");
	if(!player_family[playerid]) return SCM(playerid, -1, "Вы не состоите в семье!");
	if(sscanf(params, "u",params[0])) return SCM(playerid, -1, "Ввведите: /funinvite [id]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, -1, "Игрок не найден!");
	if(params[0] == playerid)return SCM(playerid,COLOR_GRAD1, "[Ошибка] Вы указали свой ID");
	if(player_family[params[0]] != player_family[playerid]) return SCM(playerid, -1, "Ошибка: Игрок состоит не в Вашей семье!");
	player_family[params[0]] = GetPVarInt(params[0],"family_id");
	DeletePVar(params[0],"family_id");
	format(YCMDstr,128,"{%s}[Family %s] %s был выгнан из семьи.",family_chat_color[family_info[player_family[params[0]]][f_chat_color]],family_info[player_family[params[0]]][f_name],Name(params[0]));
	family_message(player_family[playerid],-1, YCMDstr);
	family_info[player_family[params[0]]][f_online] = 0;
	family_info[player_family[params[0]]][f_chat_color] = 0;
	mysql_format(DATABASE,YCMDstr,84, "UPDATE accounts SET pFamily = '%i' WHERE Name = '%s' LIMIT 1",player_family[params[0]],Name(params[0]));
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	return true;
}
CMD:b(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countingb") > gettime() ) return SCM(playerid, 0xFF0000FF, "Команду можно использовать раз в 3 секунды!");
	if(PI[playerid][pMuted] == 1) return SCM(playerid, 0xFF6347AA, "У Вас бан чата");
	if(sscanf(params, "s[128]",params[0])) return	SCM(playerid, COLOR_WHITE, "Введите: /b [сообщение]");
	AntiReklama(playerid,params[0],"/b");
	if(GetPVarInt(playerid, "antireklamka") == 1)
	{
		SetPVarInt(playerid, "antireklamka", 0);
		return true;
	}
	new succ;
	for(new i; i < strlen(params[0]); i++)
	{
		if(PText[playerid][i] == params[0]) succ++;
	}
	format(YCMDstr, 128, "%s: (( %s ))",Name(playerid),params[0]);
	ProxDetector(20.0, playerid, YCMDstr,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
	SetPVarInt(playerid,"Countingb",gettime() + 3);
	return true;
}
ALT:whisper:w;
CMD:whisper(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countingw") > gettime()) return SCM(playerid, 0xFF0000FF, "Не Флуди.");
	if(PI[playerid][pMuted] == 1) return SCM(playerid, 0xFF6347AA, "У Вас бан чата");
	if(sscanf(params, "s[128]",params[0])) return	SCM(playerid, COLOR_WHITE, "Введите: /w [сообщение]");
	new succ;
	for(new i; i < strlen(params[0]); i++)
	{
		if(PText[playerid][i] == params[0]) succ++;
	}
	format(YCMDstr, 128, "{6E6E6E}%s шепнул(а): %s", Name(playerid),params[0]);
	ProxDetector(1.0, playerid, YCMDstr,0x6E6E6EAA,0x6E6E6EAA,0x6E6E6EAA,0x6E6E6EAA,0x6E6E6EAA);
	SetPVarInt(playerid,"Countingw",gettime() + 10);
	return true;
}
CMD:kick(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 6 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "us[100]",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /kick [id] [причина]");
	if(!IsPlayerConnected(params[0])) return true;
	format(YCMDstr, 256, "Администратор %s кикнул %s. Причина: %s",Name(playerid),Name(params[0]),params[1]);
	SCMToAll(COLOR_LIGHTRED, YCMDstr);
	PlayerPlaySound(params[0], 31202, 0.0, 0.0, 0.0);
	Kick(params[0]);
	return true;
}
CMD:skick(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 6 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "us[100]",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /skick [id] [причина]");
	if(!IsPlayerConnected(params[0])) return true;
	format(YCMDstr, 256, "[Тихий кик] Администратор %s кикнул %s. Причина: %s",Name(playerid),Name(params[0]),params[1]);
	ABroadCast(COLOR_LIGHTRED, YCMDstr, 1);
	format(YCMDstr, 128, "Вы были отключены от сервера Администратором %s. Причина: %s",Name(playerid),params[1]);
	SCM(params[0],COLOR_LIGHTRED, YCMDstr);
	PlayerPlaySound(params[0], 31202, 0.0, 0.0, 0.0);
	Kick(params[0]);
	return true;
}
CMD:delpersona(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid,COLOR_GREY, "Введите: /del [name_akkaunt]");
	mysql_format(DATABASE,YCMDstr,65, "DELETE FROM `accounts` WHERE `Name` = '%s'",params[0]);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	format(YCMDstr, 128, "Аккаунт с именем %s был успешно удален",params[0]);
	SCM(playerid,COLOR_WHITE,YCMDstr);
	return true;
}
CMD:unban(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 12 || GetPVarInt(playerid,"dostup") == 0) return true;
	new year, month,day;
	getdate(year, month, day);
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, COLOR_GRAD1, "Введите: /unban [ник]");
	mysql_format(DATABASE, YCMDstr, 76, "UPDATE `accounts` SET pLocked = '0' WHERE Name = '%s'",params[0]);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	mysql_format(DATABASE, YCMDstr, 128, "DELETE FROM `banlog` WHERE `Name` = '%s'",params[0]);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	format(YCMDstr, 128, "Администратор %s разбанил %s",Name(playerid),params[0]);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	return true;
}
CMD:offleader(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 11 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, COLOR_GRAD1, "Введите: /offleader [ник]");
	mysql_format(DATABASE, YCMDstr, 256, "UPDATE `accounts` SET pLeader = '0', pMember = '0', pRank = '0', pText = '4', pSPChange = '1' WHERE Name = '%s'",params[0]);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	format(YCMDstr, 128, "[OFFLINE]Администратор %s снял лидерку с %s",Name(playerid),params[0]);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	return true;
}
CMD:rasform(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true; 
	if(PI[playerid][pBSA] < 11 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, COLOR_GRAD1, "Введите: /rasform [Номер фракции]");
	mysql_format(DATABASE, YCMDstr, 256, "UPDATE `accounts` SET pMember = '0', pLeader = '0', pRank = '0', pText = '5', pSPChange = '1' WHERE pMember = '%s'",params[0]);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	format(YCMDstr, 128, "Администратор %s расформировал фракцию №%s",Name(playerid),params[0]);
	ABroadCast(0xff0000ff,YCMDstr,1);
	return true;
}
CMD:warn(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 10 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "us[256]",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /warn [id] [причина]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PI[params[0]][pBSA] > 0) return SCM(playerid, COLOR_GRAD2, "Администратору нельзя выдать предупреждение!");
	PI[params[0]][pWarns] += 1;
	if(PI[params[0]][pWarns] >= 3)
	{
		new ip[32];
		new year, month,day;
		getdate(year, month, day);
		new curdate = getdate(year,month,day);
		format(YCMDstr, sizeof(YCMDstr), "Администратор %s забанил %s [3 предупреждения]. Причина: %s",Name(playerid),Name(params[0]),params[1]);
		SCMToAll(COLOR_LIGHTRED, YCMDstr);
		GetPlayerIp(params[0],ip,sizeof(ip));
		format(YCMDstr, sizeof(YCMDstr), "Ник: [%s] IP: [%s]",Name(params[0]),ip);
		ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
		PI[params[0]][pLocked] = 1;
		PI[params[0]][pBanMounth] = curdate+14;
		PI[params[0]][pMember] = 0;
		PI[params[0]][pLeader] = 0;
		PI[params[0]][pJob] = 0;
		PI[params[0]][pSong] = 0;
		PI[params[0]][pSPChange] = 1;
		mysql_format(DATABASE, YCMDstr, 175, "UPDATE `accounts` SET pBanAdmin = '%s', pBanInfo = '3 WARNS' WHERE Name = '%s'",Name(playerid),Name(params[0]));
		mysql_function_query(DATABASE,YCMDstr,false,"","");
		new strstre[11];
		format(strstre,11, "%d/%d/%d",day,month,year);
		mysql_format(DATABASE,YCMDstr, 148, "INSERT INTO `banlog` (`Text`, `Name`, `NameAdmin`, `Date`) VALUES ('3 WARNS', '%s', '%s', '%s')",Name(params[0]),Name(playerid),strstre);
		mysql_function_query(DATABASE,YCMDstr,false,"","");
		Kick(params[0]);
		return true;
	}
	format(YCMDstr, sizeof(YCMDstr), "Администратор %s выдал предупреждение %s. Причина: %s",Name(playerid),Name(params[0]),params[1]);
	SCMToAll(COLOR_LIGHTRED,YCMDstr);
	PI[params[0]][pMember] = 0;
	PI[params[0]][pLeader] = 0;
	PI[params[0]][pJob] = 0;
	PI[params[0]][punWarns] = 1;
	PI[params[0]][punWarnstime] = 1;
	PI[params[0]][pSPChange] = 1;
	Kick(params[0]);
	return true;
}
CMD:unwarn(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 11 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /unwarn [id]");
	if(!IsPlayerConnected(params[0])) return true;
	new year, month,day;
	getdate(year, month, day);
	if(PI[params[0]][pWarns] <= 0) {SCM(playerid, COLOR_RED, "Варнов нет"); return true;}
	PI[params[0]][pWarns] = 0;
	PI[params[0]][punWarnstime] = 0;
	PI[params[0]][punWarns] = 0;
	PI[params[0]][pSong] = 0;
	format(YCMDstr, 256, "Предупреждения с %s сняты",Name(params[0]));
	SCM(playerid, COLOR_RED, YCMDstr);
	SCM(params[0], COLOR_GREEN,"C Вас сняты все предупреждения");
	return true;
}
CMD:ban(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 10 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "uds[128]",params[0],params[1],params[2])) return SCM(playerid, COLOR_WHITE, "Введите: /ban [id] [дни] [причина]");
	if(params[1] < 1 || params[1] > 31) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1, и больше 31 дней");
	if(!IsPlayerConnected(params[0]))
	if(PI[params[0]][pBSA] > 0) return SCM(playerid, COLOR_GRAD2, "Администратор не может быть забанен");
	new ip[15];
	GetPlayerIp(params[0],ip,15);
	new year, month,day;
	getdate(year, month, day);
	format(YCMDstr, 256, "Администратор %s заблокировал %s на %d дней. Причина: %s",Name(playerid),Name(params[0]),params[1],params[2]);
	SCMToAll(COLOR_LIGHTRED,YCMDstr);
	SCM(params[0], COLOR_LIGHTRED, "Внимание! Ваш аккаунт заблокирован за нарушение правил сервера.");
	GetPlayerIp(params[0],ip,sizeof(ip));
	format(YCMDstr, 256, "Ник: [%s] | IP: [%s] | R: [IP: %s]",Name(params[0]),ip,PI[params[0]][pIpReg]);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	PI[params[0]][pLocked] = 1;
	PI[params[0]][pBanDay] = getdate();
	PI[params[0]][pBanMounth] = getdate()+params[1];
	mysql_format(DATABASE, YCMDstr, 170, "UPDATE `accounts` SET pBanAdmin = '%s', pBanInfo = '%s' WHERE Name = '%s'",Name(playerid),params[2],Name(params[0]));
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	new strstre[11];
	format(strstre, 11, "%d/%d/%d",day,month,year);
	mysql_format(DATABASE,YCMDstr, 191, "INSERT INTO `banlog` (`Text`, `Name`, `NameAdmin`, `Date`) VALUES ('%s', '%s', '%s', '%s')",params[2],Name(params[0]),Name(playerid),strstre);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	PlayerPlaySound(params[0], 31202, 0.0, 0.0, 0.0);
	Kick(params[0]);
	return true;
}
CMD:sban(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 10 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "uds[128]",params[0],params[1],params[2])) return SCM(playerid, COLOR_WHITE, "Введите: /sban [id] [дни] [причина]");
	if(params[1] < 1 || params[1] > 31) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1, и больше 31 дней");
	if(!IsPlayerConnected(params[0]))
	if(PI[params[0]][pBSA] > 0) return SCM(playerid, COLOR_GRAD2, "Администратор не может быть забанен");
	new ip[15];
	GetPlayerIp(params[0],ip,15);
	new year, month,day;
	getdate(year, month, day);
	format(YCMDstr, 256, "[Тихий Бан] Забанил: %s. Забанён: %s. Дней: %d. Причина: %s",Name(playerid),Name(params[0]),params[1],params[2]);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	format(YCMDstr, 256, "Вы заблокированы администратором %s на %d дней. Причина: %s",Name(playerid),params[1],params[2]);
	SCM(params[0],COLOR_LIGHTRED,YCMDstr);
	GetPlayerIp(params[0],ip,sizeof(ip));
	format(YCMDstr, 256, "Ник: [%s] | IP: [%s] | R: [IP: %s]",Name(params[0]),ip,PI[params[0]][pIpReg]);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	PI[params[0]][pLocked] = 1;
	PI[params[0]][pBanDay] = getdate();
	PI[params[0]][pBanMounth] = getdate()+params[1];
	mysql_format(DATABASE, YCMDstr, 170, "UPDATE `accounts` SET pBanAdmin = '%s', pBanInfo = '%s' WHERE Name = '%s'",Name(playerid),params[2],Name(params[0]));
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	new strstre[11];
	format(strstre, 11, "%d/%d/%d",day,month,year);
	mysql_format(DATABASE,YCMDstr, 191, "INSERT INTO `banlog` (`Text`, `Name`, `NameAdmin`, `Date`) VALUES ('%s', '%s', '%s', '%s')",params[2],Name(params[0]),Name(playerid),strstre);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	PlayerPlaySound(params[0], 31202, 0.0, 0.0, 0.0);
	Kick(params[0]);
	return true;
}
CMD:offundem(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 11 || GetPVarInt(playerid,"dostup") == 0) return true;
	new nickd[24];
	if(sscanf(params, "s[24]",nickd)) return SCM(playerid, COLOR_WHITE, "Введите: /offundem [ник]");
	mysql_format(DATABASE, YCMDstr, 256, "UPDATE `accounts` SET pJailed = '0', pMestoJail = '0', pJailTime = '0' WHERE Name = '%s'",nickd);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	format(YCMDstr, 85, "[OFF UNDEM] [Выпущен: %s] [Выпустил: %s]",nickd,Name(playerid));
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	return true;
}
CMD:offdem(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 1 || GetPVarInt(playerid,"dostup") == 0) return true;
	new nickd[24];
	if(sscanf(params, "s[24]ds[64]",nickd,params[1],params[2])) return SCM(playerid, COLOR_WHITE, "Введите: /offdem [ник] [время] [причина]");
	SCM(playerid, COLOR_WHITE, "[1 чаc - 60 мин.] [2 часа - 120 мин.] [3 часа - 180 мин.]");
	if(params[1] < 1 || params[1] > 180) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1, и больше 180 минут");
	mysql_format(DATABASE, YCMDstr, 256, "UPDATE `accounts` SET pOFFDMG = '1', pNameAdmin = '%s', pJailed = '1', pMestoJail = '4', pJailTime = '%i', pCause = '%s' WHERE Name = '%s'",Name(playerid),params[1]*60,params[2],nickd);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	format(YCMDstr, 256, "[OFFDEM] [Посадил: %s] [Посажен: %s] [Время: %d мин.] [Причина: %s]",Name(playerid),nickd,params[1],params[2]);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	return true;
}
CMD:offmute(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 2 || GetPVarInt(playerid,"dostup") == 0) return true;
	new nickd[24];
	if(sscanf(params, "s[24]ds[64]",nickd,params[1],params[2])) return SCM(playerid, COLOR_WHITE, "Введите: /offmute [ник] [время] [причина]");
	if(params[1] < 1 || params[1] > 120) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1, и больше 120 минут");
	mysql_format(DATABASE, YCMDstr, 256, "UPDATE `accounts` SET pOFFMute = '1', pAdminMute = '%s', pMuted = '1', pMuteTime = '%i', pCauseMute = '%s' WHERE Name = '%s'",Name(playerid),params[1]*60,params[2],nickd);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	format(YCMDstr, 256, "[OFFMUTE] [Выдал: %s] [Игрок: %s] [Время: %d мин.] [Причина: %s]",Name(playerid),nickd,params[1],params[2]);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	return true;
}
CMD:offban(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 10 || GetPVarInt(playerid,"dostup") == 0) return true;
	new nicks[24];
	if(sscanf(params, "s[32]ds[64]",nicks,params[1],params[2])) return SCM(playerid, COLOR_WHITE, "Введите: /offban [ник] [дни] [причина]");
	if(params[1] < 1 || params[1] > 31) return SCM(playerid, COLOR_GREY, "Нельзя меньше 1, и больше 31 дней");
	new test = getdate()+params[1];
	new year, month,day;
	getdate(year, month, day);
	mysql_format(DATABASE, YCMDstr, 96, "UPDATE `accounts` SET pLocked = '1', pBanMounth = '%i' WHERE Name = '%s'",test,nicks);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	format(YCMDstr, 256, "[OFFBAN] [Забанил: %s] [Забанён: %s] [Дни: %d] [Причина: %s]",Name(playerid),nicks,params[1],params[2]);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	mysql_format(DATABASE, YCMDstr, 166, "UPDATE `accounts` SET pBanAdmin = '%s', pBanInfo = '%s' WHERE Name = '%s'",Name(playerid),params[2],nicks);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	new strstre[11];
	format(strstre, 11, "%d/%d/%d",day,month,year);
	mysql_format(DATABASE,YCMDstr, 194, "INSERT INTO `OFFBanLog` (`Text`, `Name`, `NameAdmin`, `Date`) VALUES ('%s', '%s', '%s', '%s')",params[2],nicks,Name(playerid),strstre);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	return true;
}
CMD:blacklist(playerid, params[])
{
    if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 11 || GetPVarInt(playerid,"dostup") == 0) return true;
	new nicks[24];
	if(sscanf(params, "s[24]s[11]",nicks,params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /blacklist [ник] [до какой даты]");
	format(YCMDstr, 100, "[ЧСЛ] [Ник: %s] [Вписал: %s] [До даты: %s]",nicks,Name(playerid),params[0]);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	mysql_format(DATABASE,YCMDstr, 191, "INSERT INTO `BlackList` (`Name`, `Date`, `Admin`) VALUES ('%s', '%s', '%s')",nicks,params[0],Name(playerid));
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	return true;
}
CMD:offwarn(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 10 || GetPVarInt(playerid,"dostup") == 0) return true;
	new nicks[24];
	if(sscanf(params, "s[32]s[64]",nicks,params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /offwarn [ник] [причина]");
	new year, month,day;
	getdate(year, month, day);
	mysql_format(DATABASE, YCMDstr, 176, "UPDATE `accounts` SET `pWarns` = '1', `punWarns` = '1', `punWarnstime` = '0', `pLeader` = '0', `pMember` = '0', `pRank` = '0' WHERE `Name` = '%s' LIMIT 1",nicks);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	format(YCMDstr, 256, "[OFFWARN] [Заварнил: %s] [Заварнен: %s] [Причина: %s]",Name(playerid),nicks,params[0]);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	new strstre[11];
	format(strstre, 11, "%d/%d/%d",day,month,year);
	mysql_format(DATABASE,YCMDstr, 195, "INSERT INTO `OFFWarnLog` (`Text`, `Name`, `NameAdmin`, `Date`) VALUES ('%s', '%s', '%s', '%s')",params[0],nicks,Name(playerid),strstre);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	return true;
}
CMD:freeze(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 1 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "u",params[0])) return	SCM(playerid, COLOR_WHITE, "Введите: /freeze [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(PI[params[0]][pBSA] > PI[playerid][pBSA]) return SCM(playerid, COLOR_GRAD2, "Администратор не может быть заморожен!");
	TogglePlayerControllable(params[0], 0);
	format(YCMDstr, 256, "%s был заморожен администратором %s",Name(params[0]),Name(playerid));
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	return true;
}
CMD:unfreeze(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 1 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "u",params[0])) return	SCM(playerid, COLOR_WHITE, "Введите: /unfreeze [id]");
	if(!IsPlayerConnected(params[0])) return true;
	TogglePlayerControllable(params[0], 1);
	format(YCMDstr, 256, "Администратор %s разморозил %s",Name(playerid),Name(params[0]));
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	return true;
}
CMD:mutelist(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 1 || GetPVarInt(playerid,"dostup") == 0) return true;
	new countmute = 0, string[900];
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(PI[i][pMuted] >= 1 && IsPlayerConnected(i))
		{
			format(YCMDstr, sizeof(YCMDstr), "%s(%d) | %d сек.\n",Name(i),i,PI[i][pMuteTime]);
			strcat(string,YCMDstr);
			countmute++;
		}
	}
	if(countmute == 0) return SPDEx(playerid, 69, 0, "MuteList", "Нет игроков с баном чата!", "x", "");
	SPDEx(playerid, 823, 0, "Игроки с баном чата", string, "Ok", "");
	return true;
}
CMD:demlist(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 1 || GetPVarInt(playerid,"dostup") == 0) return true;
	new countdem = 0, string[900];
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(PI[i][pMestoJail] == 4 && IsPlayerConnected(i))
		{
			format(YCMDstr, sizeof(YCMDstr), "%s(%d) | %d сек.\n",Name(i),i,PI[i][pJailTime]);
			strcat(string,YCMDstr);
			countdem++;
		}
	}
	if(countdem == 0) return SPDEx(playerid, 69, 0, "DemList", "Нет игроков в ДеМоргане", "x", "");
	SPDEx(playerid, 823, 0, "Игроки в ДеМоргане", string, "Ok", "");
	return true;
}
CMD:unbanip(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 12 || GetPVarInt(playerid,"dostup") == 0) return true;
	new year, month,day;
	getdate(year, month, day);
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid,COLOR_WHITE, "Введите: /unbanip [IP адрес]");
	format(YCMDstr,sizeof(YCMDstr), "unbanip %s",params[0]);
	SendRconCommand(YCMDstr);
	SendRconCommand("reloadbans");
	format(YCMDstr, 256, "%s разбанил IP: %s",Name(playerid),params[0]);
	ABroadCast(COLOR_GREEN,YCMDstr,1);
	return true;
}
CMD:banip(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 11 || GetPVarInt(playerid,"dostup") == 0) return true;
	new ip[24];
	if(sscanf(params, "s[32]s[64]",ip,params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /banip [IP] [причина]");
	new year, month,day;
	getdate(year, month, day);
	format(YCMDstr, 128, "banip %s",ip);
	SendRconCommand(YCMDstr);
	SendRconCommand("reloadbans");
	format(YCMDstr, 256, "[BANIP] [Забанил: %s] [IP: %s] [Причина: %s]",Name(playerid),ip,params[0]);
	ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
	new strstre[11];
	format(strstre, 11, "%d/%d/%d",day,month,year);
	mysql_format(DATABASE,YCMDstr, 193, "INSERT INTO `BanIPLog` (`Text`, `Name`, `NameAdmin`, `Date`) VALUES ('%s', '%s', '%s', '%s')",params[0],ip,Name(playerid),strstre);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	return true;
}
CMD:unprison(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 1 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /unprison [id]");
	if(!IsPlayerConnected(params[0])) return true;
	SCM(playerid, COLOR_LIGHTRED, "Игрок вытащен из тюрьмы");
	format(YCMDstr, 256, "Администратор %s вытащил Вас из тюрьмы.",Name(playerid));
	SCM(params[0], COLOR_LIGHTRED, YCMDstr);
	PI[params[0]][pJailTime] = 0;
	PI[params[0]][pJailed] = 0;
	PI[params[0]][pMestoJail] = 0;
	PI[params[0]][pOFFDMG] = 0;
	SetPlayerWantedLevel(params[0], 0);
	PI[params[0]][pWantedLevel] = 0;
	TogglePlayerControllable(params[0], 1);
	SpawnPlayer(params[0]);
	return true;
}
CMD:sps(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 1 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /sps [id]");
	if(!IsPlayerConnected(params[0])) return true;
	SCM(playerid, COLOR_LIGHTRED, "Вы перезаспавнили игрока.");
	format(YCMDstr, 256, "Администратор %s перезаспавнил Вас.",Name(playerid));
	SCM(params[0], COLOR_LIGHTRED, YCMDstr);
	TogglePlayerControllable(params[0], 1);
	SpawnPlayer(params[0]);
	return true;
}
CMD:mcontract(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new Veh = GetPlayerVehicleID(playerid);
	if(PI[playerid][pJob] != 2) return true;
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SCM(playerid,COLOR_GREY, "Вы не в машине механика!");
	if(FL[playerid][gcontract] == 1)
	{
		Delete3DTextLabel(Meh3d[Veh]);
		FL[playerid][cenabenza] = 0;
		FL[playerid][gcontract] = 0;
		SCM(playerid,COLOR_WHITE, "Контракт с заправкой рассторгнут!");
		return true;
	}
	for(new b = 1; b <= TotalBizz; b++)
	{
		if(PlayerToPoint(10.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bType] == 4)
		{
			Delete3DTextLabel(Meh3d[Veh]);
			FL[playerid][gcontract] = 1;
			FL[playerid][cenabenza] = BizzInfo[b][bTovar14] / 2;
			format(YCMDstr, 40, "<< 300 литров. Цена: $%d >>", FL[playerid][cenabenza]);
			Meh3d[Veh] = Create3DTextLabel(YCMDstr, COLOR_REDD, 9999.0, 9999.0, 9999.0, 30.0, 0, 1);
			Attach3DTextLabelToVehicle(Meh3d[Veh], Veh, 0, 0, 1.5);
			SCM(playerid,COLOR_GREEN, "Вы подписали контракт с заправкой");
		}
	}
	return true;
}
CMD:fill(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	for(new b = 1; b <= TotalBizz; b++)
	{
		if(PlayerToPoint(10.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bType] == 4)
		{
			new Float:test = 100-Fuell[GetPlayerVehicleID(playerid)];
			if(BizzInfo[b][bProducts] <= 0 && BizzInfo[b][bOwned] == 1) return SCM(playerid,COLOR_GRAD1, "Заправка не работает"), BizzInfo[b][bProducts] = 0;
			if(BizzInfo[b][bLocked] == 1 && BizzInfo[b][bOwned] == 1) return SCM(playerid,COLOR_GRAD1, "Заправка закрыта");
			new car = GetPlayerVehicleID(playerid);
			if(PI[playerid][pCash] < BizzInfo[b][bTovar14]) return SCM(playerid,COLOR_GRAD1, "У Вас нет столько денег");
			if(Fuell[car] > 99) return SCM(playerid,COLOR_GREY,"Вашему автомобилю не требуется заправка.");
			if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetVehicleModel(car) == 481 || GetVehicleModel(car) == 509 || GetVehicleModel(car) == 510) return SCM(playerid,COLOR_YELLOW, "Вы не в автомобиле или этот транспорт нельзя заправить.");
			BizzInfo[b][b2Till] += BizzInfo[b][bTovar14]/200*floatround(test);
			PI[playerid][pCash] -= BizzInfo[b][bTovar14]/200*floatround(test);
			if(BizzInfo[b][bOwned] == 1) BizzInfo[b][bProducts] -= 50;
			Fuell[car] = 100;
			format(YCMDstr,sizeof(YCMDstr),"Вы дозаправили свой автомобиль за $%d",BizzInfo[b][bTovar14]/200*floatround(test));
			SCM(playerid,COLOR_BLUE,YCMDstr);
		}
	}
	return true;
}
CMD:alock(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new nearveh = GetNearestVehicle(playerid);
	new carid;
	if(PI[playerid][pBSA] < 2 || GetPVarInt(playerid,"dostup") == 0) return true;
	carid = nearveh;
	new Float:cx,Float:cy,Float:cz;
	GetVehiclePos(carid, cx, cy, cz);
	if(!PlayerToPoint(4.0, playerid, cx, cy, cz)) return true;
	if(IsLocked[carid] == 1)
	{
		SCM(playerid, COLOR_GRAD1, "Машина открыта!");
		UnLockCar(carid);
		IsLocked[carid] = 0;
	}
	else
	{
		SCM(playerid, COLOR_GRAD1, "Машина закрыта!");
		LockCar(carid);
		IsLocked[carid] = 1;
	}
	return true;
}
CMD:lock1(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new carid;
	if(caridhouse[playerid][0] != 0) carid = caridhouse[playerid][0];
	new lockstatus = gCarLock[carid];
	new Float:cx,Float:cy,Float:cz;
	GetVehiclePos(carid, cx, cy, cz);
	if(!PlayerToPoint(4.0, playerid, cx, cy, cz)) return true;
	switch(lockstatus)
	{
	case 0:
		{
			GameTextForPlayer(playerid, "~w~CAR ~r~LOCK", 5000, 3);
			PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
			LockCar(carid);
			IsLocked[caridhouse[playerid][0]] = 1;
			SetPlayerChatBubble(playerid,"Закрыл(a) транспорт",COLOR_PURPLE,30.0,10000);
		}
	case 1:
		{
			GameTextForPlayer(playerid, "~w~CAR ~g~UNLOCK", 5000, 3);
			PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
			UnLockCar(carid);
			IsLocked[caridhouse[playerid][0]] = 0;
			SetPlayerChatBubble(playerid,"Открыл(a) транспорт",COLOR_PURPLE,30.0,10000);
		}
	default:
		{
			SCM(playerid, COLOR_RED, "Ошибка!");
		}
	}
	return true;
}
CMD:lock2(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new carid;
	if(caridhouse[playerid][1] != 0) carid = caridhouse[playerid][1];
	new lockstatus = gCarLock[carid];
	new Float:cx,Float:cy,Float:cz;
	GetVehiclePos(carid, cx, cy, cz);
	if(!PlayerToPoint(4.0, playerid, cx, cy, cz)) return true;
	switch (lockstatus)
	{
	case 0:
		{
			GameTextForPlayer(playerid, "~w~CAR ~r~LOCK", 5000, 3);
			PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
			LockCar(carid);
			IsLocked[caridhouse[playerid][1]] = 1;
			SetPlayerChatBubble(playerid,"Закрыл(a) транспорт",COLOR_PURPLE,30.0,10000);
		}
	case 1:
		{
			GameTextForPlayer(playerid, "~w~CAR ~g~UNLOCK", 5000, 3);
			PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
			UnLockCar(carid);
			IsLocked[caridhouse[playerid][1]] = 0;
			SetPlayerChatBubble(playerid,"Открыл(a) транспорт",COLOR_PURPLE,30.0,10000);
		}
	default:
		{
			SCM(playerid, COLOR_RED, "Ошибка!");
		}
	}
	return true;
}
CMD:lock3(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid, "ArendKey") == -1) return SCM(playerid, 0xAFAFAFFF, "Вы не арендуете транспорт.");
	new rc = GetPVarInt(playerid, "ArendKey");
	if(ArendInfo[rc][aPlayerID] != playerid)
	{
		SCM(playerid, 0xAFAFAFFF, "Вы не арендуете транспорт.");
		SetPVarInt(playerid, "ArendKey", -1);
		return 1;
	}
	new Float:cx,Float:cy,Float:cz;
	GetVehiclePos(ArendInfo[rc][aID], cx, cy, cz);
	if(!PlayerToPoint(4.0, playerid, cx, cy, cz)) return true;
	new lockstatus = gCarLock[ArendInfo[rc][aID]];
	switch (lockstatus)
	{
	case 0:
		{
			GameTextForPlayer(playerid, "~w~CAR ~r~LOCK", 5000, 3);
			PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
			LockCar(ArendInfo[rc][aID]);
			IsLocked[ArendInfo[rc][aID]] = 1;
		}
	case 1:
		{
			GameTextForPlayer(playerid, "~w~CAR ~g~UNLOCK", 5000, 3);
			PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
			UnLockCar(ArendInfo[rc][aID]);
			IsLocked[ArendInfo[rc][aID]] = 0;
		}
	default:
		{
			SCM(playerid, COLOR_RED, "Ошибка!");
		}
	}
	return true;
}
CMD:airlock(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new carid;
	if(caridhouse[playerid][2] != 0) carid = caridhouse[playerid][2];
	new lockstatus = gCarLock[carid];
	new Float:cx,Float:cy,Float:cz;
	GetVehiclePos(carid, cx, cy, cz);
	if(!PlayerToPoint(4.0, playerid, cx, cy, cz)) return true;
	switch(lockstatus)
	{
	case 0:
		{
			GameTextForPlayer(playerid, "~w~Air Vehicle ~r~LOCK", 5000, 3);
			PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
			LockCar(carid);
			IsLocked[caridhouse[playerid][2]] = 1;
			SetPlayerChatBubble(playerid,"Закрыл(a) транспорт",COLOR_PURPLE,30.0,10000);
		}
	case 1:
		{
			GameTextForPlayer(playerid, "~w~Air Vehicle ~g~UNLOCK", 5000, 3);
			PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
			UnLockCar(carid);
			IsLocked[caridhouse[playerid][2]] = 0;
			SetPlayerChatBubble(playerid,"Открыл(a) транспорт",COLOR_PURPLE,30.0,10000);
		}
	default:
		{
			SCM(playerid, COLOR_RED, "Ошибка!");
		}
	}
	return true;
}
CMD:anim(playerid, params[])
{
	if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
	{
		if(PlayerCuffed[playerid] == 2) return SCM(playerid, COLOR_GREY, "Вы в наручниках!");
		if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_GREY, "Невозможно использовать в машине");
		new stringis[1720];
		new Animser[][] = {
			{"- Отключить анимацию\n1. Танец - 1\n2. Танец - 2\n3. Танец - 3\n4. Танец - 4\n5. Стойка дилера\n6. Передал что-то\n7. Съел что-то\n8. Справить нужду\n9. Медитация\n10. Сидеть раненым\n11. Спать на боку\n12. Лечь на спину\n13. Шлепнуть рукой\n14. Наносить граффити 1\n15. Наносить граффити 2\n16. Курение\n17. Ограбление\n18. Одеть маску\n19. Руки в верх\n20. Позвать кого-то\n21. Поднять руки\n22. Болельщик 1\n23. Болельщик 2\n24. Болельщик 3\n"},
			{"25. Показать средний палец\n26. Выпить что-то\n27. Махать руками\n28. Мужское курение\n29. Прилечь 1\n30. Прилечь 2\n31. Прилечь 3\n32. Прилечь 4\n33. Присесть на пол\n34. Читать реп 1\n35. Читать реп 2\n36. Читать реп 3\n37. Читать реп 4\n38. Набивать мяч\n39. Кинуть мяч\n40. Поднять мяч\n41. Позвать\n42. Чинить авто\n43. Прислониться к авто\n44. Сложить руки вместе\n"},
			{"45. Держать биту 1\n46. Держать биту 2\n47. Гангстерский жест 1\n48. Гангстерский жест 2\n49. Гангстерский жест 3\n50. Гангстерский жест 4\n51. Гангстерский жест 5\n52. Гангстерский жест 6\n53. Гангстерский жест 7\n54. Гангстерский жест 8\n55. Плакать\n56. Присесть 1\n57. Присесть 2\n58. Присесть облокотившись\n59. Женское курение\n60. Искусственное дыхание\n61. Облокотится\n62. Облокотится 2\n63. Facepalm\n64. Чесаться"}
		};
		stringis = "";
		format(stringis, 1720, "%s%s%s", Animser[0], Animser[1], Animser[2]);
		SPDEx(playerid, 1994, 2, "Список анимаций", stringis, "Выбрать", "Отмена");
	}
	return true;
}
CMD:smson(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 2 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(GetPVarInt(playerid,"adminreadsms") == 0)
	{
		SetPVarInt(playerid, "adminreadsms", 1);
		SCM(playerid, 0x33AA33AA, "Прослушка SMS активирована");
	}
	else
	{
		SetPVarInt(playerid, "adminreadsms", 0);
		SCM(playerid, 0xE3E3E3FF, "Прослушка SMS отключена");
	}
	return true;
}
CMD:mp(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 7 || GetPVarInt(playerid,"dostup") == 0) return true;
	format(YCMDstr,sizeof(YCMDstr),"{19FF21}Администратор {999999}%s(%d) {ffffff}использовал команду /mp",Name(playerid),playerid),ABroadCast(COLOR_GRAD1,YCMDstr,1);
	SPDEx(playerid, 5343, 2,"Создание МП", "{E6E6FA}1. {00FF00}Установить{E6E6FA}/{FF0000}Убрать{E6E6FA} точку телепорта\n{E6E6FA}2. Раздать оружие {FFD700}[В радиусе 50 м.]\n{E6E6FA}3. Раздать HP {FFD700}[В радиусе 50 м.]\n{E6E6FA}4. Раздать бронь {FFD700}[В радиусе 50 м.]\n{E6E6FA}5. Обезаружить всех {FFD700}[В радиусе 50 м.]\n{E6E6FA}6. Раздать скин {FFD700}[В радиусе 50 м.]", "Выбрать", "Отмена");
	return true;
}
CMD:alogin(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] == 0) return true;
	if(GetPVarInt(playerid,"dostup") == 1)
	{
		SetPVarInt(playerid, "dostup", 0), SCM(playerid,COLOR_WHITE,"Вы ушли с дежурства");
		format(YCMDstr, 256, "[Admin's Team] %s[%d] ушёл с дежурства. Пожелаем ему удачного дня!",Name(playerid),playerid);
		ABroadCast(COLOR_REDD, YCMDstr, 1);
		return true;
	}
	SPDEx(playerid,2934,1, "Админ доступ", "\n Введите Ваш персональный Админ пароль \n", "Вход", "Отмена");
	return true;
}
CMD:alb(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(SA1 || SA2 || SA3 || SA4) SPDEx(playerid,2935,1, "Тихий ALogin", "\n Введите Ваш персональный Админ пароль \n", "Вход", "Отмена");
	return true;
}
CMD:asellbiz(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if (PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_GRAD1, "Введите: /asellbiz [bizid]");
	if(BizzInfo[params[0]][bOwned] == 0) return SCM(playerid,COLOR_GREY,"У бизнеса нет владельца");
	if(IsPlayerConnected(GetPlayerID(House[params[0]][hOwner]))) PI[GetPlayerID(House[params[0]][hOwner])][pPbiskey] = 255, SCM(GetPlayerID(House[params[0]][hOwner]),COLOR_RED,"Ваш бизнес был продан администратором");
	else mysql_format(DATABASE, YCMDstr, 79, "UPDATE `accounts` SET pPbiskey = '255' WHERE Name = '%s'",BizzInfo[params[0]][bOwner]);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	BizzInfo[params[0]][bLocked] = 1;
	BizzInfo[params[0]][bOwned] = 0;
	strmid(BizzInfo[params[0]][bOwner], "The State", 0, strlen("The State"), 32);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	SCM(playerid, COLOR_GRAD1,"Бизнес продан");
	format(YCMDstr, 256, "%s\nПродаётся\nЦена: $%d", BizzInfo[params[0]][bMessage],BizzInfo[params[0]][bBuyPrice]);
	Update3DTextLabelText(BizzInfo[params[0]][bLabel], 0xEAC700FF, YCMDstr);
	SaveMySQL(2,params[0]);
	return true;
}
CMD:sellbiz(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	for(new i = 1; i <= TotalBizz; i++)
	{
		if(PlayerToPoint(3.0, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
		{
			if(sscanf(params, "ud",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /sellbiz [id] [цена]");
			if(!IsAMafia(playerid)) return SCM(playerid,COLOR_WHITE,"Вы должны состоять в мафии!");
			if(PI[playerid][pRank] < 5) return SCM(playerid, COLOR_GRAD1, "Вы не лидер мафии");
			if(BizzInfo[i][bMafia] != PI[playerid][pMember]) return SCM(playerid,COLOR_GREY,"Этот бизнес не под Вашим контролем!");
			if(BizWarTime > gettime()) return SCM(playerid,COLOR_WHITE,"Сейчас идёт война за бизнес. Продажа невозможна!");
			if(params[1] < 100000 || params[1] > 500000) return SCM(playerid, COLOR_GREY, "Цена должна быть: от 100000 до 500000!");
			if(!IsPlayerConnected(params[0])) return true;
			if(!ProxDetectorS(8.0, playerid, params[0])) return true;
			if(params[0] == playerid) return SCM(playerid,COLOR_GRAD1, "[Ошибка] Вы указали свой ID");
			format(YCMDstr, 256, "Вы предложили %s купить контроль над бизнесом за $%d",Name(params[0]),params[1]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			format(YCMDstr, 256, "%s предлагает Вам купить контроль над бизнесом за $%d. (( Введите: /accept biz для покупки))",Name(playerid),params[1]);
			SCM(params[0], 0x6495EDFF, YCMDstr);
			FL[params[0]][BizOffer] = playerid;
			FL[params[0]][sellbiz] = PI[playerid][pMember];
			FL[params[0]][BizPrice] = params[1];
		}
	}
	return true;
}
CMD:bizmafia(playerid, params[])
{
    if(PI[playerid][pLogin] == 0) return true;
    if(SA1 || SA2 || SA3 || SA4 || SA6)
    {
        SCM(playerid, COLOR_WHITE, "Чтобы вернуть бизнес, встаньте возле бизнеса и введите ID мафии которой нужно вернуть бизнес.");
		for(new i = 1; i <= TotalBizz; i++)
		{
			if(PlayerToPoint(3.0, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
			{
                if(sscanf(params, "d", params[0]))
				{
					return SCM(playerid, COLOR_WHITE,"ID мафий: 0 - Yakuza | 1 - RM | 2 - LCN");
				}
				switch(params[0])
				{
				case 0: BizzInfo[i][bMafia] = 6, SCM(playerid,  COLOR_WHITE, "Теперь этот бизнес крышует - Yakuza");
				case 1: BizzInfo[i][bMafia] = 14, SCM(playerid,  COLOR_WHITE, "Теперь этот бизнес крышует - RM");
				case 2: BizzInfo[i][bMafia] = 5, SCM(playerid,  COLOR_WHITE, "Теперь этот бизнес крышует - LCN");
				default: SCM(playerid, COLOR_GREY,"Неверное значение");
				}
			}
		}
	}
	return true;
}
CMD:asellmast(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if (PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "d",params[0])) return	SCM(playerid, COLOR_GRAD1, "Введите: /asellmast [mastid]");
	if(AvtoMInfo[params[0]][vOwned] == 0) return SCM(playerid,COLOR_GREY,"У Автомастерской нет владельца");
	if(IsPlayerConnected(GetPlayerID(AvtoMInfo[params[0]][vOwner]))) PI[GetPlayerID(AvtoMInfo[params[0]][vOwner])][pPviskey] = 255, SCM(GetPlayerID(AvtoMInfo[params[0]][vOwner]),COLOR_RED,"Ваша Автомастерская была продана Администратором");
	else mysql_format(DATABASE, YCMDstr, 79, "UPDATE `accounts` SET pPviskey = '255' WHERE Name = '%s'",AvtoMInfo[params[0]][vOwner]);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	AvtoMInfo[params[0]][vLocked] = 1;
	AvtoMInfo[params[0]][vOwned] = 0;
	strmid(AvtoMInfo[params[0]][vOwner], "The State", 0, strlen("The State"), 32);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	SCM(playerid, COLOR_GRAD1,"Автомастерская продана");
	format(YCMDstr, 256, "%s\nПродаётся\nЦена: $%d", AvtoMInfo[params[0]][vMessage],AvtoMInfo[params[0]][vBuyPrice]);
	Update3DTextLabelText(AvtoMInfo[params[0]][vLabel], 0x38FFD7FF, YCMDstr);
	SaveMySQL(6,params[0]);
	return true;
}
CMD:asellhouse(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_GRAD1, "Введите: /asellhouse [houseid]");
	if(House[params[0]][hOwned] == 0) return SCM(playerid,COLOR_GREY,"У дома нет владельца");
	if(IsPlayerConnected(GetPlayerID(House[params[0]][hOwner]))) PI[GetPlayerID(House[params[0]][hOwner])][pPhousekey] = 999, SCM(GetPlayerID(House[params[0]][hOwner]),COLOR_RED,"Ваш дом был продан администратором");
	else mysql_format(DATABASE, YCMDstr, 81, "UPDATE `accounts` SET pPhousekey = '999' WHERE Name = '%s'",House[params[0]][hOwner]);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	House[params[0]][hHel] = 0;
	House[params[0]][hLock] = 1;
	House[params[0]][hOwned] = 0;
	for(new d = 0; d != 7; d++) House[params[0]][hGun][d] = 0, House[params[0]][hGunAmmo][d] = 0;
	SCM(playerid, COLOR_GREY, "Дом продан");
	strmid(House[params[0]][hOwner], "The State", 0, strlen("The State"), 32);
	BuyHouse(params[0]);
	SaveMySQL(3,params[0]);
	return true;
}
CMD:hpanel(playerid, params[])
{
	for(new i = 1; i <= TotalHouse; i++)
	{
		new house = PI[playerid][pPhousekey];
		if(!PlayerToPoint(5, playerid,House[i][hExitx], House[i][hExity], House[i][hExitz])) continue;
		new text1[111], string[350];
		if(GetPlayerVirtualWorld(playerid) != i+50 || PI[playerid][pPhousekey] != i) continue;
		if(House[house][hLock] != 0) { text1 = "{00a86b}Открыть{ffffff}"; }
		else if(House[house][hLock] != 1) { text1 = "{ff0000}Закрыть{ffffff}"; }
		format(string, 350,"{006699}>{FFFFFF} Ремонт дома\n{006699}>{FFFFFF} %s Главную дверь\n{006699}>{FFFFFF} Аптечки {B4B5B7}[%d штук]\n{006699}>{FFFFFF} Сейф\n{006699}>{FFFFFF} Продать дом государству\n{006699}>{FFFFFF} Продать транспорт государству\n{006699}>{FFFFFF} Аксессуары\n{006699}>{FFFFFF} Домашний счет: {00b464}$%d",text1,House[house][hHel],House[PI[playerid][pPhousekey]][hTakings]);
		SPDEx(playerid, 5300, 2, "Панель управления домом", string, "Выбрать", "Отмена");
		break;
	}
	return true;
}
CMD:opanel(playerid, params[])
{
	for(new i = 1; i <= TotalHotel; i++)
	{
		new hotel = PI[playerid][pPhotelkey];
		if(!PlayerToPoint(5, playerid,HotelInfo[i][oExitx], HotelInfo[i][oExity], HotelInfo[i][oExitz])) continue;
		new text1[111], string[300];
		if(GetPlayerVirtualWorld(playerid) != i+9999 || PI[playerid][pPhotelkey] != i) continue;
		if(HotelInfo[hotel][oLock] != 0) { text1 = "{00a86b}Открыть{ffffff}"; }
		else if(HotelInfo[hotel][oLock] != 1) { text1 = "{ff0000}Закрыть{ffffff}"; }
		format(string, 300,"[1]{006699}>{FFFFFF} %s Главную дверь\n[2]{006699}>{FFFFFF} Выселиться\n[3]> Продать транспорт государству\n[4]{006699}>{FFFFFF} Аксессуары\n[5]{006699}>{FFFFFF} Состояние счёта: {00b464}%d$",text1,HotelInfo[PI[playerid][pPhotelkey]][oTakings]);
		SPDEx(playerid, 5301, 2, "Панель управления номером", string, "Выбрать", "Отмена");
		break;
	}
	return true;
}
CMD:open(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new bouse = PI[playerid][pPhousekey];
	if(bouse == 999 || strcmp(Name(playerid), House[PI[playerid][pPhousekey]][hOwner], true) == -1) return true;
	if(!PlayerToPoint(10, playerid,House[bouse][hExitx], House[bouse][hExity], House[bouse][hExitz])) return true;
	if(House[bouse][hLock] == 1)
	{
		House[bouse][hLock] = 0;
		GameTextForPlayer(playerid,"~w~House ~g~UNLOCK", 5000, 3);
		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		return true;
	}
	if(House[bouse][hLock] == 0)
	{
		House[bouse][hLock] = 1;
		GameTextForPlayer(playerid, "~w~House ~r~LOCK", 5000, 3);
		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		return true;
	}
	return true;
}
CMD:buyinterior(playerid, params[])
{
	if(PI[playerid][pPhousekey] == 999) return SCM(playerid, COLOR_GREY, "У Вас нет недвижимости.");
	{
		new bouse = PI[playerid][pPhousekey];
		if(bouse == 999 || strcmp(Name(playerid), House[PI[playerid][pPhousekey]][hOwner], true) == -1) return true;
		if(!PlayerToPoint(10, playerid,House[bouse][hExitx], House[bouse][hExity], House[bouse][hExitz])) return true;
		{
			SPDEx(playerid, 1001, 2, "Интерьеры", "» Одна комната\n» Стеклянный пол\n» Райдер\n» Две комнаты\n» Белый потолок\n» Две лестницы\n» Красная лестница\n» Летний\n» Большой ВВ\n» Два этажа\n» Синее дерево\n» Холостяк\n» Игрушки\n» Лётчик\n» Замок\n» Плитка", "Купить", "Отмена");
		}
	}
	return true;
}
CMD:sellhouse(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new bouse = PI[playerid][pPhousekey];
	if(bouse == 999 || strcmp(Name(playerid), House[PI[playerid][pPhousekey]][hOwner], true) == -1) return true;
	if(!PlayerToPoint(10, playerid,House[bouse][hExitx], House[bouse][hExity], House[bouse][hExitz])) return true;
	if(GetPlayerVirtualWorld(playerid) != bouse+50) return true;
	SPDEx(playerid,5032,0, "Продажа дома", "Вы действительно хотите продать дом?", "Да", "Нет");
	return true;
}
CMD:healme(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pHeal] == 0) return SCM(playerid, COLOR_GRAD1, "У Вас закончились аптечки.");
	PI[playerid][pHeal] = 0;
	SetPlayerHealthAC(playerid, 100);
	SetPVarInt(playerid,"AntiSbivAnim",1);
	TogglePlayerControllable(playerid,0);
	ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
	SCM(playerid, COLOR_WHITE, "Вы использовали аптечку.");
	SetPlayerChatBubble(playerid, "использовал(а) аптечку", COLOR_ORANGE, 30.0, 10000);
	format(YCMDstr, 128, "%s использовал(а) аптечку",Name(playerid));
	ProxDetector(10.0, playerid,YCMDstr, COLOR_ORANGE,COLOR_ORANGE,COLOR_ORANGE,COLOR_ORANGE,COLOR_ORANGE);
	SetTimerEx("AntiSbiv", 5000, false, "i", playerid);
	return true;
}
CMD:robhouse(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsAGang(playerid)) return SCM(playerid,COLOR_GREY,"Вы не бандит!");
	for(new h = 1; h <= TotalHouse; h++)
	{
		for(new i = 0; i < sizeof(GZInfo); i++)
		{
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && PI[playerid][pMember] == GZInfo[i][gFrakVlad])
			{
				if(!PlayerToPoint(2.0, playerid, House[h][hEntrancex], House[h][hEntrancey], House[h][hEntrancez])) continue;
				if(robhouse[h] != false) return SCM(playerid, COLOR_GREY, "Этот дом уже был ограблен в этом часу");
				if(House[h][hOwned] == 0) return SCM(playerid, COLOR_GREY, "У дома нет владельца");
				if(!IsPlayerConnected(GetPlayerID(House[h][hOwner]))) return SCM(playerid, COLOR_GREY, "Владелец дома OFF-LINE");
				SCM(playerid, COLOR_GREEN, "Вы ограбили дом, везите материалы в доки (( /gps -> [14] Приём металла ))");
				SCM(GetPlayerID(House[h][hOwner]),COLOR_REDD,"Вам ограбили дом! С вашего счета было списано $500 на востановление труб и оплату энергии");
				PI[playerid][pZakonp] -= 1;
				robh[playerid] = true;
				robhouse[h] = true;
				House[h][hTakings] -= 500;
				SetHouse(House[h][hID], "hTakings", House[h][hTakings]);
				SaveMySQL(3,h);
			}
		}
	}
	return true;
}
CMD:showskill(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countingskill") > gettime()) return SCM(playerid, 0xFF0000FF, "Не флуди!.");
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /showskill [id]");
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	new stringskill[850];
	new points[6],percent[2] = "%";
	points[0] = 100 - PI[playerid][pGunSkill][0];
	points[1] = 100 - PI[playerid][pGunSkill][1];
	points[2] = 100 - PI[playerid][pGunSkill][2];
	points[3] = 100 - PI[playerid][pGunSkill][3];
	points[4] = 100 - PI[playerid][pGunSkill][4];
	points[5] = 100 - PI[playerid][pGunSkill][5];
	format(stringskill, 850, "<< Навыки владения оружием >>\n\nSDPistol:\t[%s]%d%s\nDeagle:\t[%s]%d%s\nShotGun:\t[%s]%d%s\nMP5\t\t[%s]%d%s\nAK47:\t\t[%s]%d%s\nM4A1:\t\t[%s]%d%s",
	ToDevelopSkills(PI[playerid][pGunSkill][0],points[0]),PI[playerid][pGunSkill][0],percent,
	ToDevelopSkills(PI[playerid][pGunSkill][1],points[1]),PI[playerid][pGunSkill][1],percent,
	ToDevelopSkills(PI[playerid][pGunSkill][2],points[2]),PI[playerid][pGunSkill][2],percent,
	ToDevelopSkills(PI[playerid][pGunSkill][3],points[3]),PI[playerid][pGunSkill][3],percent,
	ToDevelopSkills(PI[playerid][pGunSkill][4],points[4]),PI[playerid][pGunSkill][4],percent,
	ToDevelopSkills(PI[playerid][pGunSkill][5],points[5]),PI[playerid][pGunSkill][5],percent);
	SPDEx(params[0],43,0, " ",stringskill, "Готово", "");
	format(YCMDstr, 128, "%s показал(a) свои навыки владения оружием", Name(playerid));
	ProxDetector(10.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPVarInt(playerid,"Countingskill",gettime() + 5);
	return true;
}
CMD:getskill(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 9 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /getskill [id]");
	new stringskill[850];
	new points[6],percent[2] = "%";
	points[0] = 100 - PI[params[0]][pGunSkill][0];
	points[1] = 100 - PI[params[0]][pGunSkill][1];
	points[2] = 100 - PI[params[0]][pGunSkill][2];
	points[3] = 100 - PI[params[0]][pGunSkill][3];
	points[4] = 100 - PI[params[0]][pGunSkill][4];
	points[5] = 100 - PI[params[0]][pGunSkill][5];
	format(stringskill, 850, "<< Навыки владения оружием >>\n\nSDPistol:\t[%s]%d%s\nDeagle:\t[%s]%d%s\nShotGun:\t[%s]%d%s\nMP5\t\t[%s]%d%s\nAK47:\t\t[%s]%d%s\nM4A1:\t\t[%s]%d%s",
	ToDevelopSkills(PI[params[0]][pGunSkill][0],points[0]),PI[params[0]][pGunSkill][0],percent,
	ToDevelopSkills(PI[params[0]][pGunSkill][1],points[1]),PI[params[0]][pGunSkill][1],percent,
	ToDevelopSkills(PI[params[0]][pGunSkill][2],points[2]),PI[params[0]][pGunSkill][2],percent,
	ToDevelopSkills(PI[params[0]][pGunSkill][3],points[3]),PI[params[0]][pGunSkill][3],percent,
	ToDevelopSkills(PI[params[0]][pGunSkill][4],points[4]),PI[params[0]][pGunSkill][4],percent,
	ToDevelopSkills(PI[params[0]][pGunSkill][5],points[5]),PI[params[0]][pGunSkill][5],percent);
	SPDEx(playerid,43,0, " ",stringskill, "Готово", "");
	return true;
}
CMD:myskill(playerid, params[])
{
	if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
	{
		if(PI[playerid][pLogin] == 0) return true;
		new stringskill[850];
		new points[6],percent[2] = "%";
		points[0] = 100 - PI[playerid][pGunSkill][0];
		points[1] = 100 - PI[playerid][pGunSkill][1];
		points[2] = 100 - PI[playerid][pGunSkill][2];
		points[3] = 100 - PI[playerid][pGunSkill][3];
		points[4] = 100 - PI[playerid][pGunSkill][4];
		points[5] = 100 - PI[playerid][pGunSkill][5];
		format(stringskill, 850, "<< Навыки владения оружием >>\n\nSDPistol:\t[%s]%d%s\nDeagle:\t[%s]%d%s\nShotGun:\t[%s]%d%s\nMP5\t\t[%s]%d%s\nAK47:\t\t[%s]%d%s\nM4A1:\t\t[%s]%d%s",
		ToDevelopSkills(PI[playerid][pGunSkill][0],points[0]),PI[playerid][pGunSkill][0],percent,
		ToDevelopSkills(PI[playerid][pGunSkill][1],points[1]),PI[playerid][pGunSkill][1],percent,
		ToDevelopSkills(PI[playerid][pGunSkill][2],points[2]),PI[playerid][pGunSkill][2],percent,
		ToDevelopSkills(PI[playerid][pGunSkill][3],points[3]),PI[playerid][pGunSkill][3],percent,
		ToDevelopSkills(PI[playerid][pGunSkill][4],points[4]),PI[playerid][pGunSkill][4],percent,
		ToDevelopSkills(PI[playerid][pGunSkill][5],points[5]),PI[playerid][pGunSkill][5],percent);
		SPDEx(playerid,43,0, " ",stringskill, "Готово", "");
		return true;
	}
}
CMD:setskill(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 13 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "udd",params[0],params[1],params[2]))
	{
		SCM(playerid, COLOR_GRAD1, "Введите: /setskill [playerid/часть ника] [номер] [количество]");
		SCM(playerid, COLOR_GRAD4, "[0] Slinced Pistol |[1] Desert Eagle |[2] ShotGun |[3] MP5 |[4] AK47 |[5] M4A1");
		return true;
	}
	if(params[1] > 6 || params[1] < 0) return SCM(playerid,COLOR_GREY,"Неизвестное значение");
	if(!IsPlayerConnected(params[0])) return true;
	PI[params[0]][pGunSkill][params[1]] = params[2];
	SCM(playerid, COLOR_GRAD1, "Уровень владения оружием игроку установлен");
	return true;
}
CMD:dostcar(playerid, params[])
{
	if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
	{
		if(PI[playerid][pLogin] == 0) return true;
		if(PI[playerid][pCash] < 500) return SCM(playerid, 0xFFFFFFAA, "недостаточно денег!");
		if(PI[playerid][pPhotelkey] != 999)
		{
			if(caridhouse[playerid][0] != 0) { DestroyVehicle(caridhouse[playerid][0]); caridhouse[playerid][0] = 0; }
			if(caridhouse[playerid][1] != 0) { DestroyVehicle(caridhouse[playerid][1]); caridhouse[playerid][1] = 0; }
			SPDEx(playerid, 2113, 0,"Личный транспорт","Выберите Ваш автомобиль:","Первый","Второй");
		}
		return true;
	}
}
CMD:fixcar(playerid, params[])
{
	if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
	{
		if(PI[playerid][pCash] < 500) return SCM(playerid, 0xFFFFFFAA, "недостаточно денег!");
		if(PI[playerid][pPhousekey] == 999) return SCM(playerid, COLOR_GREY, "У Вас нет дома!");
		format(YCMDstr, 256, "{ffffff}1. %s\n2. %s",VehicleNames[PI[playerid][pCar1]-400],VehicleNames[PI[playerid][pCar2]-400]);
		SPDEx(playerid, 2112, 2,"{FFD300}Личный транспорт",YCMDstr,"Заспавнить","Выход");
		return true;
	}
}
CMD:pgetip(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 4 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "s[128]",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /pgetip [ip]");
	SCM(playerid, COLOR_REDD, "Игроки с данного IP адреса:");
	new playersip[32];
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		GetPlayerIp(i,playersip,sizeof(playersip));
		if(!strcmp(playersip, params[0]))
		{
			format(YCMDstr, 256, "[%d] %s | IP %s", i,Name(i),playersip);
			SCM(playerid, COLOR_WHITE, YCMDstr);
		}
	}
	return true;
}
CMD:sellzone(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
		{
            if(i == 28 || i == 34 || i == 46 || i == 58 || i == 82) return SCM(playerid, COLOR_GREY, "Данная территория прилегает к респавну, продажа запрещена!");
			if(PI[playerid][pLeader] != GZInfo[i][gFrakVlad]) return SCM(playerid, COLOR_GRAD1, "Вы не на своей зоне!");
			if(sscanf(params, "ud",params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /sellzone [id] [цена]");
			if(PI[playerid][pRank] < 5) return SCM(playerid, COLOR_GRAD1, "Вы не лидер банды");
			if(IsCapture == 1) return SCM(playerid, COLOR_GREY, "Вы не можете продать территорию во время капта");
			if(params[1] < 100000 || params[1] > 500000) return SCM(playerid, COLOR_GREY, "Цена должна быть: от 100000 до 500000!");
			if(!IsPlayerConnected(params[0])) return true;
			if(!ProxDetectorS(8.0, playerid, params[0])) return true;
			if(params[0] == playerid) { SCM(playerid, COLOR_GREY, "Себе  нельзя!"); return true; }
			format(YCMDstr, 256, "Вы предложили %s купить территорию за $%d",Name(params[0]),params[1]);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			format(YCMDstr, 256, "%s предлагает Вам купить территорию за $%d. (( Введите: /accept zone для покупки))",Name(playerid),params[1]);
			SCM(params[0], 0x6495EDFF, YCMDstr);
			FL[params[0]][ZoneOffer] = playerid;
			FL[params[0]][sellzone] = PI[playerid][pMember];
			FL[params[0]][ZonePrice] = params[1];
		}
	}
	return true;
}
CMD:agetip(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 4 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "s[24]",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /agetip [Ник]");
	mysql_format(DATABASE,YCMDstr, 67, "SELECT * FROM `accounts` WHERE `Name` = '%s'",params[0]);
	mysql_function_query(DATABASE,YCMDstr,true,"OnMySQL_QUERY","iis",15,playerid,params[0]);
	return true;
}
CMD:agetipreg(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 4 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "s[24]",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /agetipreg [Ник]");
	mysql_format(DATABASE,YCMDstr, 67, "SELECT * FROM `accounts` WHERE `Name` = '%s'",params[0]);
	mysql_function_query(DATABASE,YCMDstr,true,"OnMySQL_QUERY","iis",16,playerid,params[0]);
	return true;
}
CMD:getakkip(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 4 || GetPVarInt(playerid,"dostup") == 0) return SCM(playerid,COLOR_RED, "Вы не уполномочены использовать эту команду!");
	if(sscanf(params, "s[20]",params[0])) return SCM(playerid,COLOR_GREY, "Введите: /getakkip [IP]");
	SCM(playerid,COLOR_GREY,"Список аккаунтов с указаного IP адреса:");
	mysql_format(DATABASE,YCMDstr, 74, "SELECT * FROM `accounts` WHERE `pIp` = '%s'",params[0]);
	mysql_function_query(DATABASE,YCMDstr,true,"OnMySQL_QUERY","iis",14,playerid,params[0]);
	return true;
}
CMD:geton(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 1 || GetPVarInt(playerid,"dostup") == 0) return SCM(playerid,COLOR_RED, "Вы не уполномочены использовать эту команду!");
	if(sscanf(params, "s[24]",params[0])) return SCM(playerid,COLOR_GREY, "Введите: /geton [имя_аккаунта]");
	mysql_format(DATABASE,YCMDstr, 67, "SELECT * FROM `accounts` WHERE `Name` = '%s'",params[0]);
	mysql_function_query(DATABASE,YCMDstr,true,"OnMySQL_QUERY","iis",13,playerid,params[0]);
	return true;
}
CMD:time(playerid)
{
	if(!IsPlayerConnected(playerid)) return true;
	if(PI[playerid][pClock] == 0) return SCM(playerid, COLOR_WHITE, "У Вас нет наручных часов. Купите часы в магазине 24/7");
	new h,m,s;
	new year,month,day;
	getdate(year, month, day);
	gettime(h,m,s);
	format(YCMDstr,128,"Ваше отыгранное время на сервере за час {ff0000}%d минут(ы)", floatround(PI[playerid][pGiveExp]/60));
	SCM(playerid,-1,YCMDstr);
	format(YCMDstr,128,"~w~%02d:%02d:%02d~n~~b~%d-%s%d-%s%d~n~~g~EXSIGHT RP",h,m,s,day, ((month < 10) ? ("0") : ("")), month, (year < 10) ? ("0") : (""), year);
	GameTextForPlayer(playerid,YCMDstr,5000,1);
	ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,2000,1);
	format(YCMDstr, 256, "%s взглянул(а) на часы",Name(playerid));
	ProxDetector(25.0, playerid, YCMDstr, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
	return 1;
}
CMD:carpass(playerid, params[])
{
	if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
	{
		if(PI[playerid][pLogin] == 0) return true;
		new airveh[13];
		switch(PI[playerid][pCar3])
		{
		case 460: airveh = "Skimmer"; case 469: airveh = "Sparrow"; case 476: airveh = "Rustler";
		case 487: airveh = "Maverick"; case 511: airveh = "Beagle"; case 512: airveh = "Cropduster";
		case 513: airveh = "Stuntplane"; case 519: airveh = "Shamal"; case 553: airveh = "Nevada";
		case 593: airveh = "Dodo"; default: airveh = "Отсутствует";
  		}
		format(YCMDstr,256, "- Наземный транспорт -\n\nСлот 1: %s\nСостояние: %d процентов\nБензин: %.0f литров\n\nСлот 2: %s\nСостояние %d процентов\nБензин: %.0f литров\n\n- Воздушный транспорт -\n\nСлот 3: %s",
		VehicleNames[PI[playerid][pCar1]-400],PI[playerid][pProcents],PI[playerid][pFuelcar],VehicleNames[PI[playerid][pCar2]-400],PI[playerid][pProcents2],PI[playerid][pFuelcar1],airveh);
		SPDEx(playerid,113,0,"Личный транспорт",YCMDstr, "X", "");
		return true;
	}
}
CMD:weap(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 2 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /weap [id игрока]");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, "Игрок не найден");
	new sctring[500], gunname[32], weapons[13][2];
	format(YCMDstr, 100, "Игрок:\t\t\t%s", Name(params[0])); strcat(sctring,YCMDstr);
	for(new i = 0; i < 13; i++)
	{
		GetPlayerWeaponData(params[0], i, weapons[i][0], weapons[i][1]);
		GetWeaponName(weapons[i][0],gunname,32);
		if(weapons[i][0] != 0)
		{
			format(YCMDstr,70,"{FE130E}\n\nОружие:\t\t%s (%d)\nAmmo:\t\t%d",gunname,weapons[i][0],weapons[i][1]); strcat(sctring,YCMDstr);
		}
	}
	SPDEx(playerid,146,0, "Оружие игрока",sctring, "X", "");
	return true;
}
CMD:delgun(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 2 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /delgun [id игрока]");
	_ResetGun(params[0]);
	format(YCMDstr,128,"Вы забрали оружие у игрока %s",Name(params[0]));
	SCM(playerid,COLOR_LIGHTGREEN,YCMDstr);
	return true;
}
CMD:showcarpass(playerid, params[])
{
	if(PI[playerid][pPhousekey] != 999 )
	{
		if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0])
		{
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_GRAD2, "Вы не в машине!");
			new giveplayerid;
			if(sscanf(params, "u",giveplayerid)) return SCM(playerid, COLOR_WHITE, " Введите: /showcarpass [id]");
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
						new house = PI[playerid][pPhousekey];
						SCM(giveplayerid,0x0AA8DAFF,"-------========[ Тех. Паспорт ]========-------");
						SCMF(giveplayerid,0xC0E1EEFF, "Модель: %s | Слот: 1",VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
						SCMF(giveplayerid,0xC0E1EEFF, "Владелец: %s",House[house][hOwner]);
						SCMF(giveplayerid,0xC0E1EEFF, "Состояние: %d",PI[playerid][pProcents]);
						SCM(giveplayerid,0x0AA8DAFF,"-------========[ Тех. Паспорт ]========-------");
						format(YCMDstr, sizeof(YCMDstr), "%s достал(а) документы и показал(а) их %s", Name(playerid),Name(giveplayerid));
						ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
		}
		else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1])
		{
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SCM(playerid, COLOR_GRAD2, "Вы не в машине!");
			new giveplayerid;
			if(sscanf(params, "u",giveplayerid)) return SCM(playerid, COLOR_WHITE, " Введите: /showcarpass [id]");
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
						new house = PI[playerid][pPhousekey];
						SCM(giveplayerid,0x0AA8DAFF,"-------========[ Тех. Паспорт ]========-------");
						SCMF(giveplayerid,0xC0E1EEFF, "Модель: %s | Слот: 2",VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
						SCMF(giveplayerid,0xC0E1EEFF, "Владелец: %s",House[house][hOwner]);
						SCMF(giveplayerid,0xC0E1EEFF, "Состояние: %d",PI[playerid][pProcents2]);
						SCM(giveplayerid,0x0AA8DAFF,"-------========[ Тех. Паспорт ]========-------");
						format(YCMDstr, 128, "%s достал(а) документы и показал(а) их %s", Name(playerid),Name(giveplayerid));
						ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
		}
	}
	return true;
}
CMD:admins(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new afk[4];
	if(PI[playerid][pBSA] < 1 && PI[playerid][pDonateRank] < 2) return true;
	SCM(playerid, COLOR_YELLOW, "Администрация Online:");
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(!IsPlayerConnected(i) || (!PI[i][pLogin])) continue;
		if(PI[i][pBSA] < 1 || PI[i][pBSA] > 11) continue;
		if(GetPVarInt(i, "PlayerInAFK") > 0) { afk = "Да"; } else { afk = "Нет"; }
		format(YCMDstr, 128, "%s(ID:%d) [lvl: %d] {FFA500}[AFK: %s]",Name(i),i,PI[i][pBSA],afk);
		SCM(playerid, COLOR_YELLOW2, YCMDstr);
	}
	return true;
}
CMD:members(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new teamnumber, chislo = 0, afk[4];
	if(PI[playerid][pLeader] != 0) teamnumber = PI[playerid][pLeader];
	else if(PI[playerid][pMember] != 0) teamnumber = PI[playerid][pMember];
	else
	{
		SCM(playerid, COLOR_GRAD1, "Вам недоступна эта функция!");
		return true;
	}
	SCM(playerid, 0x059BD3FF, "Члены организации Online:");
	if(!IsAMafia(playerid) && !IsAGang(playerid) && !IsAmbike(playerid)) SCM(playerid, TEAM_GROVE_COLOR, "На работе:");
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		format(YCMDstr, 128, "");
		if(GetPVarInt(i, "PlayerInAFK") > 0) { afk = "Да"; } else { afk = "Нет"; }
		if(PI[playerid][pMember] == 4 && PI[playerid][pMember] == 8 && PI[playerid][pRank] < 9)
		{
			if(PI[i][pLeader] == teamnumber) format(YCMDstr, 128, "{FF0000}AFK {FFA500}[%s] | [%d] %s  Ранг: Лидер",afk,i,Name(i), chislo++);
			else if(PI[i][pMember] == PI[playerid][pMember] && FormaFrac[i] > 0) format(YCMDstr, 128, "{FF0000}AFK {FFA500}[%s] | [%d] %s  Ранг: %d {FF0000}[Выговоры: %i]",afk,i,Name(i), PI[i][pRank], PI[i][pSong]), chislo++;
		}
		else if(PI[playerid][pMember] == 1 && PI[playerid][pRank] < 9)
		{
			if(PI[i][pLeader] == teamnumber) format(YCMDstr, 128, "{FF0000}AFK {FFA500}[%s] | [%d] %s  Ранг: Лидер",afk,i,Name(i), chislo++);
			else if(PI[i][pMember] == PI[playerid][pMember] && FormaFrac[i] > 1) format(YCMDstr, 128, "{FF0000}AFK {FFA500}[%s] | [%d] %s  Ранг: %d {FF0000}[Выговоры: %i]",afk,i,Name(i), PI[i][pRank], PI[i][pSong]), chislo++;
		}
		if(PI[i][pLeader] == teamnumber) format(YCMDstr, 128, "{FF0000}AFK {FFA500}[%s] | [%d] %s  Ранг: Лидер",afk,i,Name(i), chislo++);
		else if(PI[i][pMember] == teamnumber && FormaFrac[i] > 0) format(YCMDstr, 128, "{FF0000}AFK {FFA500}[%s] | [%d] %s  Ранг: %d {FF0000}[Выговоры: %i]",afk,i,Name(i), PI[i][pRank], PI[i][pSong]), chislo++;
		if(strlen(YCMDstr) > 1) SCM(playerid, 0x059BD3FF, YCMDstr);
	}
	if(!IsAMafia(playerid) && !IsAGang(playerid) && !IsAmbike(playerid)) SCM(playerid, COLOR_ORANGE, "Выходные:");
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		format(YCMDstr, 128, "");
		if(GetPVarInt(i, "PlayerInAFK") > 0) { afk = "Да"; } else { afk = "Нет"; }
		if(PI[playerid][pMember] == 4 && PI[playerid][pMember] == 8 && PI[playerid][pRank] < 10)
		{
			if(PI[i][pLeader] == teamnumber) format(YCMDstr, 128, "{FF0000}AFK {FFA500}[%s] | [%d] %s  Ранг: Лидер",afk,i,Name(i), chislo++);
			else if(PI[i][pMember] == PI[playerid][pMember] && FormaFrac[i] == 0) format(YCMDstr, 128, "{FF0000}AFK {FFA500}[%s] | [%d] %s  Ранг: %d {FF0000}[Выговоры: %i]",afk,i,Name(i), PI[i][pRank], PI[i][pSong]), chislo++;
		}
		else if(PI[playerid][pMember] == 1 && PI[playerid][pRank] < 10)
		{
			if(PI[i][pLeader] == teamnumber) format(YCMDstr, 128, "{FF0000}AFK {FFA500}[%s] | [%d] %s  Ранг: Лидер",afk,i,Name(i), chislo++);
			else if(PI[i][pMember] == PI[playerid][pMember] && FormaFrac[i] == 0) format(YCMDstr, 128, "{FF0000}AFK {FFA500}[%s] | [%d] %s  Ранг: %d {FF0000}[Выговоры: %i]",afk,i,Name(i), PI[i][pRank], PI[i][pSong]), chislo++;
		}
		else if(PI[i][pMember] == teamnumber && FormaFrac[i] == 0) format(YCMDstr, 128, "{FF0000}AFK {FFA500}[%s] | [%d] %s  Ранг: %d {FF0000}[Выговоры: %i]",afk,i,Name(i), PI[i][pRank], PI[i][pSong]), chislo++;
		if(strlen(YCMDstr) > 1) SCM(playerid, 0x059BD3FF, YCMDstr);
	}
	format(YCMDstr, 128,"Всего: %d человек",chislo);
	SCM(playerid,COLOR_LIGHTGREEN,YCMDstr);
	return true;
}
CMD:offuninvite(playerid,params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pLeader] == 0) return SCM(playerid, COLOR_GREY, "Вы не лидер!");
	if(sscanf(params, "s[24]",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /offuninvite [name]");
	new query[144];
	mysql_format(DATABASE,query,144,"SELECT * FROM `accounts` WHERE `Name`='%s'",params[0]);
	mysql_function_query(DATABASE,query,true,"OFFuninvite","i",playerid);
	return true;
}
CMD:pdd(playerid, params[], help)
{
	if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
	{
		if(PI[playerid][pLogin] == 0) return true;
		new pdddialog[1748];
		format(pdddialog, 1748, "%s%s%s%s%s%s%s%s%s%s%s%s%s",
		pdddialogMSG[0],pdddialogMSG[1],pdddialogMSG[2],pdddialogMSG[3],pdddialogMSG[4],pdddialogMSG[5],pdddialogMSG[6],pdddialogMSG[7],pdddialogMSG[8],pdddialogMSG[9],pdddialogMSG[10],pdddialogMSG[11],pdddialogMSG[12]);
		SPDEx(playerid,1551,0, "Правила дорожного движения", pdddialog, "Готово", "");
		format(YCMDstr, 256, "%s читает Правила Дорожного Движения.",Name(playerid));
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return true;
	}
}
CMD:clist(playerid, params[])
{
	if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
	{
		if(PI[playerid][pLogin] == 0) return true;
		new dialog[512];
		strcat(dialog, "{73926D}[0] Правительство\n{0000FF}[1] SAPD\n{4F4F4F}[2] FBI\n{804000}[3] Авианосец\n{808000}[4] Сух.Войска\n{BE4141}[5] Мед. Центр ЛС\n{BC6443}[6] Мед. Центр СФ\n{0080FF}[7] Завод К.А.С.С\n{EB4318}[8] Мафия LCN\n{FF0000}[9] Мафия Yakuza\n{788873}[10] Русская Мафия\n{800080}[11] Баллас\n{F2D00D}[12] Вагос\n{008000}[13] Грув\n{07F1F8}[14] Ацтек\n{008080}[15] Рифа\n{58633D}[16] Байкеры\n{80FF00}[17] SA News");
		SPDEx(playerid,2001,2, "Цвет ника",dialog, "Выбрать", "Отмена");
		return true;
	}
}
CMD:exit(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	for(new i = 1; i <= TotalHotel; i++)
	{
		if(GetPlayerVirtualWorld(playerid) == i+9999)
		{
			if(PlayerToPoint(3, playerid,HotelInfo[i][oExitx], HotelInfo[i][oExity], HotelInfo[i][oExitz]))
			{
				SetPlayerInterior(playerid,1);
				SetPlayerVirtualWorld(playerid,HotelInfo[i][oVirt]);
				SetPlayerPos(playerid,HotelInfo[i][oEntrancex],HotelInfo[i][oEntrancey],HotelInfo[i][oEntrancez]);
			}
		}
	}
	return true;
}
CMD:dir(playerid, params[])
{
	if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
	{
		if(PI[playerid][pLogin] == 0) return true;
		if(PI[playerid][pDirectory] == 0) return SCM(playerid, COLOR_GRAD1, "У вас нет справочника.");
		SPDEx(playerid,5454,2, "Справочник", "[0] Таксисты\n[1] Лидеры организаций\n[2] Механики\n[3] Медики\n[4] Тренеры\n[5] Развозчики товаров\n[6] Развозчики топлива", "Выбрать", "Отмена");
		return true;
	}
}
CMD:ahelp(playerid, params[])
{
    if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
    if(!PI[playerid][pBSA] || GetPVarInt(playerid,"dostup") == 0) return true;
    if(PI[playerid][pBSA] == 1) SPDEx(playerid, 4500, 2, "{FF9900}Команды администратора", "{FFFFFF}1 уровень", "Выбрать", "Отмена");
    else if(PI[playerid][pBSA] == 2) SPDEx(playerid, 4500, 2, "{FF9900}Команды администратора", "{FFFFFF}1 уровень\n 2 уровень", "Выбрать", "Отмена");
    else if(PI[playerid][pBSA] == 3) SPDEx(playerid, 4500, 2, "{FF9900}Команды администратора", "{FFFFFF}1 уровень\n 2 уровень\n 3 уровень", "Выбрать", "Отмена");
    else if(PI[playerid][pBSA] == 4) SPDEx(playerid, 4500, 2, "{FF9900}Команды администратора", "{FFFFFF}1 уровень\n 2 уровень\n 3 уровень\n 4 уровень", "Выбрать", "Отмена");
    else if(PI[playerid][pBSA] == 5) SPDEx(playerid, 4500, 2, "{FF9900}Команды администратора", "{FFFFFF}1 уровень\n 2 уровень\n 3 уровень\n 4 уровень\n 5 уровень", "Выбрать", "Отмена");
    else if(PI[playerid][pBSA] == 6) SPDEx(playerid, 4500, 2, "{FF9900}Команды администратора", "{FFFFFF}1 уровень\n 2 уровень\n 3 уровень\n 4 уровень\n 5 уровень\n 6 уровень", "Выбрать", "Отмена");
    else if(PI[playerid][pBSA] == 7) SPDEx(playerid, 4500, 2, "{FF9900}Команды администратора", "{FFFFFF}1 уровень\n 2 уровень\n 3 уровень\n 4 уровень\n 5 уровень\n 6 уровень\n 7 уровень", "Выбрать", "Отмена");
    else if(PI[playerid][pBSA] == 8) SPDEx(playerid, 4500, 2, "{FF9900}Команды администратора", "{FFFFFF}1 уровень\n 2 уровень\n 3 уровень\n 4 уровень\n 5 уровень\n 6 уровень\n 7 уровень\n 8 уровень", "Выбрать", "Отмена");
    else if(PI[playerid][pBSA] == 9) SPDEx(playerid, 4500, 2, "{FF9900}Команды администратора", "{FFFFFF}1 уровень\n 2 уровень\n 3 уровень\n 4 уровень\n 5 уровень\n 6 уровень\n 7 уровень\n 8 уровень\n 9 уровень", "Выбрать", "Отмена");
    else if(PI[playerid][pBSA] == 10) SPDEx(playerid, 4500, 2, "{FF9900}Команды администратора", "{FFFFFF}1 уровень\n 2 уровень\n 3 уровень\n 4 уровень\n 5 уровень\n 6 уровень\n 7 уровень\n 8 уровень\n 9 уровень\n 10 уровень", "Выбрать", "Отмена");
	else if(PI[playerid][pBSA] == 11) SPDEx(playerid, 4500, 2, "{FF9900}Команды администратора", "{FFFFFF}1 уровень\n 2 уровень\n 3 уровень\n 4 уровень\n 5 уровень\n 6 уровень\n 7 уровень\n 8 уровень\n 9 уровень\n 10 уровень\n 11 уровень", "Выбрать", "Отмена");
	else if(PI[playerid][pBSA] == 12) SPDEx(playerid, 4500, 2, "{FF9900}Команды администратора", "{FFFFFF}1 уровень\n 2 уровень\n 3 уровень\n 4 уровень\n 5 уровень\n 6 уровень\n 7 уровень\n 8 уровень\n 9 уровень\n 10 уровень\n 11 уровень\n 12 уровень", "Выбрать", "Отмена");
    else if(PI[playerid][pBSA] == 13) SPDEx(playerid, 4500, 2, "{FF9900}Команды администратора", "{FFFFFF}1 уровень\n 2 уровень\n 3 уровень\n 4 уровень\n 5 уровень\n 6 уровень\n 7 уровень\n 8 уровень\n 9 уровень\n 10 уровень\n 11 уровень\n 12 уровень\n 13 уровень", "Выбрать", "Отмена");
    return 1;
}
ALT:mainmenu:mm;
CMD:mainmenu(playerid, params[])
{
	if(GetPVarInt(playerid, "USEDIALOGID")) return 1;
	{
		if(PI[playerid][pLogin] == 1)
		{
			new listitems[] = "{FFFF00}- {00FF00}Статистика персонажа\n- Команды сервера\n{FFFF00}- {FF0000}Связь с Администрацией\n- Очистить чат\n- Правила\n- Безопасность\n- Смена ника\n- Достижения\n{FFFF00}- {00BFFF}Донат\n- Информация о сервере";
			SPDEx(playerid, 9623, 2, "Личное меню", listitems, "Выбрать", "Отмена");
			return true;
		}
		return 1;
	}
}
CMD:switchskin(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsAGang(playerid) && !IsAmbike(playerid)) return true;
	if(GetPVarInt(playerid,"forma") != 1) return SCM(playerid, COLOR_GRAD1, "У Вас нет формы армейца");
	SetPlayerSkin(playerid,287);
	SetPVarInt(playerid, "forma", 0);
	SetPVarInt(playerid, "proverkaforma", 1);
	return true;
}
CMD:swatmaska(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(IsACop(playerid) && PI[playerid][pRank] == 7)
	{
		if(GetPVarInt(playerid,"mask") == 0)
		{
			SetPVarInt(playerid, "mask", 1);
			SetPlayerToTeamColor(playerid);
			SetPlayerColor(playerid,0xFFFFFF00);
			format(YCMDstr,36, "Одел(а) маску SWAT");
			SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
			SCM(playerid, COLOR_GREY, "Вы одели маску (( Ваш клист не виден на радаре ))");
		}
		else
		{
			RemovePlayerAttachedObject(playerid, 0);
			SetPVarInt(playerid, "mask", 0);
			SetPlayerToTeamColor(playerid);
			format(YCMDstr,36, "Снял(а) маску SWAT");
			SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
			SCM(playerid, COLOR_GREY, "Вы сняли маску (( Ваш клист виден на радаре ))");

		}
	}
	return 1;
}
CMD:maska(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(PI[playerid][pMaska] == 0) return SCM(playerid, COLOR_GRAD1, "У Вас нет маски. Купите маску в 24/7");
	if(GetPVarInt(playerid,"mask") == 0)
	{
		SetTimerEx("OnMaska",4000,false, "i",playerid);
		ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0);
		SetPVarInt(playerid, "mask", 1);
		format(YCMDstr,36, "Одел(а) маску");
		SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
		SCM(playerid, COLOR_GREY, "Вы одели маску. Чтобы снять маску, введите: /maskaoff");
		SCM(playerid, COLOR_REDD, "(( Теперь Вас не видно на радаре. ))");
	}
	return 1;
}
CMD:maskaoff(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerConnected(playerid)) return true;
	if(GetPVarInt(playerid,"mask") == 1)
	{
		RemovePlayerAttachedObject(playerid, 0);
		SetPVarInt(playerid, "mask", 0);
		SetPlayerToTeamColor(playerid);
		format(YCMDstr,36, "Снял(а) маску");
		SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
		SCM(playerid, COLOR_GREY, "Вы сняли маску. Чтобы отдеть маску, введите: /maska");
		SCM(playerid, COLOR_GREEN, "(( Теперь Вас видно на радаре. ))");
	}
	return 1;
}
CMD:takemaska(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /takemaska [id]");
	if(PI[playerid][pMember] == 1 || PI[playerid][pLeader] == 1 || PI[playerid][pMember] == 2 || PI[playerid][pLeader] == 2 || PI[playerid][pMember] == 10 || PI[playerid][pLeader] == 10 || PI[playerid][pMember] == 21 || PI[playerid][pLeader] == 21)
	{
		if(!IsPlayerConnected(params[0])) return true;
		if(params[0] == INVALID_PLAYER_ID) return true;
		if(PI[params[0]][pMaska] < 1) return SCM(playerid, COLOR_GREY, "У него нет маски!");
		PI[params[0]][pMaska] = 0;
		SetPVarInt(params[0], "mask", 0);
		SetPlayerToTeamColor(params[0]);
		RemovePlayerAttachedObject(params[0], 1);
		SCM(playerid, COLOR_GREY, "Вы сняли/забрали с него маску.");
		SCM(params[0], COLOR_GREY, "С Вас полицейский снял/забрал маску.");
		return true;
	}
	return true;
}
CMD:carm(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pMember] != 19 && GetPVarInt(playerid,"proverkaforma") != 1) return true;
	new listitems[] = "[1] Загрузка\n[2] Разгрузить на Гл.Склад\n[3] Разгрузить на склад ВМФ\n[4] Разгрузить на склад ЛСПД\n[5] Разгрузить на склад ФБР\n[6] Разгрузить на склад СФПД\n[7] Разгрузить на склад ЛВПД\n[8] Разгрузить на склад бандам\n[9] Разгрузить на склад байкерам\n[10] Разгрузить на склад мафиям";
	SPDEx(playerid, 9653, 2, "Развозка материалов", listitems, "Выбрать", "Отмена");
	return true;
}
CMD:zguncarm(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pMember] != 24) return true;
	new listitems[] = "[1] Загрузка\n[2] Разгрузить на Гл.Склад\n[3] Разгрузить на склад СВ";
	SPDEx(playerid, 9654, 2, "Развозка оружия", listitems, "Выбрать", "Отмена");
	return true;
}
CMD:zfuelcarm(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	DeletePVar(playerid, "loading_job");
	DisablePlayerRaceCheckpoint(playerid);
	if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
	{
		if(PI[playerid][pMember] == 24)
		{
			new listitems[] = "[1] Загрузка\n[2] Разгрузить на Гл.Склад\n[3] Цистерна LSPD\n[4] Цистерна FBI\n[5] Цистерна ВМФ\n[6] Цистерна МЦСФ\n[7] Цистерна МЦЛС\n[8] Цистерна СВ\n[9] Цистерна Адм. Президента\n[10] Цистерна К.А.С.С.\n[11] Цистерна SFPD";
			SPDEx(playerid, 9655, 2, "Развозка бензина", listitems, "Выбрать", "Отмена");
			return true;
		}
		if(PI[playerid][pMember] == 23)
		{
			new listitems[] = "[1] Цистерна LCN\n[2] Цистерна Yakuza\n[3] Цистерна Ballas\n[4] Цистерна Vagos\n[5] Цистерна PM\n[6] Цистерна Grove\n[7] Цистерна Aztec\n[8] Цистерна Rifa\n[9] Цистерна Байкеров";
			SPDEx(playerid, 9656, 2, "Развозка бензина", listitems, "Выбрать", "Отмена");
			return true;
		}
	}
	else SCM(playerid, 0xFFFFFFAA, "У Вас нет прицепа!");
	return true;
}
CMD:tie(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsAMafia(playerid)) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /tie [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(FL[params[0]][PlayerTied] > 0) return SCM(playerid, COLOR_GREY, "Человек уже связан!");
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	if(PI[params[0]][pLevel] == 1) return SCM(playerid, COLOR_GRAD2, "Нельзя связывать игроков 1 lvl!");
	new car = GetPlayerVehicleID(playerid);
	if(params[0] == playerid) { SCM(playerid, COLOR_GREY, "Нельзя связать самого себя!"); return true; }
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(params[0], car))
	{
		format(YCMDstr, 256, "Вас связал %s.",Name(playerid));
		SCM(params[0], 0x6495EDFF, YCMDstr);
		format(YCMDstr, 256, "%s связал %s", Name(playerid) ,Name(params[0]));
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		TogglePlayerControllable(params[0], 0);
		TieTime[params[0]] = 300;
		FL[params[0]][PlayerTied] = 1;
	}
	else return SCM(playerid, COLOR_GREY, "Человек не в машине!");
	return true;
}
CMD:debtors(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsAMafia(playerid)) return true;
	SCM(playerid, COLOR_YELLOW2, "Должники:");
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(!IsAMafia(playerid)) return true;
		{
			if(PI[i][pKrisha] == PI[playerid][pMember] && PI[i][pMember] == 0)
			{
				format(YCMDstr, 256, "Должник: %s | Долг: %d",Name(i),PI[i][pDolg]);
				SCM(playerid, COLOR_WHITE, YCMDstr);
			}
		}
	}
	return true;
}
CMD:setdebt(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsAMafia(playerid)) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /setdebt [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	if(params[0] == playerid) { SCM(playerid, COLOR_GREY, "Нельзя себе!"); return true; }
	format(YCMDstr, 256, "%s предлагает Вам Крышу (( Введите: /accept debt, чтобы принять ))",Name(playerid));
	SCM(params[0], 0x6495EDFF, YCMDstr);
	format(YCMDstr, 256, "%s предлагает крышу %s'у", Name(playerid) ,Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	Krisha[params[0]] = PI[playerid][pMember];
	KrishaOffer[params[0]] = playerid;
	return true;
}
CMD:untie(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pMember] == 2 || PI[playerid][pMember] == 5 || PI[playerid][pMember] == 6 || PI[playerid][pMember] == 14 || PI[playerid][pBSA] >= 1)
	{
		if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /untie [id]");
		if(!IsPlayerConnected(params[0])) return true;
		if(FL[params[0]][PlayerTied] != 1) return SCM(playerid, COLOR_GREY, "Человек уже связан!");
		if(!ProxDetectorS(8.0, playerid, params[0])) return true;
		if(params[0] == playerid) { SCM(playerid, COLOR_GREY, "Нельзя связать самого себя!"); return true; }
		if(!ProxDetectorS(8.0, playerid, params[0])) return true;
		format(YCMDstr, 256, "Вы были развязаны %s.",Name(playerid));
		SCM(params[0], 0x6495EDFF, YCMDstr);
		format(YCMDstr, 256, "%s развязал %s", Name(playerid) ,Name(params[0]));
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		TogglePlayerControllable(params[0], 1);
		TieTime[params[0]] = 0;
		FL[params[0]][PlayerTied] = 0;
	}
	return true;
}
CMD:showpass(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countingpass") > gettime()) return SCM(playerid, 0xFF0000FF, "Команду можно использовать раз в 15 секунд!");
	SetPVarInt(playerid,"Countingpass",gettime() + 15);
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /showpass [id]");
	if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GREY, "Игрок не найден!");
	if(PI[playerid][pPassport] == 0) return SCM(playerid, COLOR_LIGHTRED, "У Вас нет паспорта.");
	if(PI[params[0]][pBSA] >= 1) return SCM(playerid, COLOR_LIGHTRED, "Вы слишком далеко.");// debug
	if(IsPlayerConnected(params[0]))
	{
		if(params[0] != INVALID_PLAYER_ID)
		{
			if(ProxDetectorS(3.0, playerid, params[0]))
			{
				new ttext[32];
				if(PI[playerid][pMember] == 0) { ttext = "Гражданин"; }
				else if(PI[playerid][pMember] == 1) { ttext = "LSPD"; }
				else if(PI[playerid][pMember] == 2) { ttext = "FBI"; }
				else if(PI[playerid][pMember] == 3) { ttext = "ВМФ"; }
				else if(PI[playerid][pMember] == 4) { ttext = "Мед. Центр СФ"; }
				else if(PI[playerid][pMember] == 5) { ttext = "LCN"; }
				else if(PI[playerid][pMember] == 6) { ttext = "Yakuza"; }
				else if(PI[playerid][pMember] == 8) { ttext = "Мед. Центр ЛС"; }
				else if(PI[playerid][pMember] == 9) { ttext = "SA News"; }
				else if(PI[playerid][pMember] == 10) { ttext = "SFPD"; }
				else if(PI[playerid][pMember] == 12) { ttext = "The Ballas Gang"; }
				else if(PI[playerid][pMember] == 13) { ttext = "Los Santos Vagos Gang"; }
				else if(PI[playerid][pMember] == 14) { ttext = "Russian Mafia"; }
				else if(PI[playerid][pMember] == 15) { ttext = "Grove Street Gang"; }
				else if(PI[playerid][pMember] == 17) { ttext = "Varrios Los Aztecas Gang"; }
				else if(PI[playerid][pMember] == 18) { ttext = "The Rifa Gang"; }
				else if(PI[playerid][pMember] == 19) { ttext = "СВ"; }
				else if(PI[playerid][pMember] == 21) { ttext = "LVPD"; }
				else if(PI[playerid][pMember] == 22) { ttext = "Парламент"; }
				else if(PI[playerid][pMember] == 23) { ttext = "Байкеры"; }
				else if(PI[playerid][pMember] == 24) { ttext = "Завод К.А.С.С."; }
				new jtext[32];
				if(PI[playerid][pJob] == 19) { jtext = "Уборщик улиц"; }
				else if(PI[playerid][pJob] == 11) { jtext = "Мусорщик"; }
				else if(PI[playerid][pJob] == 2) { jtext = "Механик"; }
				else if(PI[playerid][pJob] == 4) { jtext = "Таксист"; }
				else if(PI[playerid][pJob] == 6) { jtext = "Тренер"; }
				else { jtext = "Безработный"; }
				new level = PI[playerid][pLevel];
				new af[] = "---------===[PASSPORT]===---------";
				format(YCMDstr, 128, af);
				SCM(params[0], COLOR_YELLOW, YCMDstr);
				new msg[] = "Имя: %s";
				format(YCMDstr, 128, msg, Name(playerid));
				SCM(params[0], COLOR_YELLOW2, YCMDstr);
				format(YCMDstr, 128, "Проживание в Штате: %d  Телефон: %d",level,PI[playerid][pPnumber]);
				SCM(params[0], COLOR_YELLOW2, YCMDstr);
				format(YCMDstr, 128, "Фракция: %s  Должность: %d",ttext,PI[playerid][pRank]);
				SCM(params[0], COLOR_YELLOW2, YCMDstr);
				format(YCMDstr, 128, "Работа: %s   Разрешение на оружие: %s",jtext,(!PI[playerid][pGunLic])?("Отсутствует") : ("Есть"));
				SCM(params[0], COLOR_YELLOW2, YCMDstr);
				format(YCMDstr, 128, "Законопослушность: %d",PI[playerid][pZakonp]);
				SCM(params[0], COLOR_YELLOW2, YCMDstr);
				format(YCMDstr, 128, "========================");
				SCM(params[0], COLOR_YELLOW, YCMDstr);
				if(PI[playerid][pWantedLevel] > 0) SCM(params[0], COLOR_REDD, "Внимание! Это человек в розыске!");
				format(YCMDstr, 128, "%s показал(a) свой паспорт", Name(playerid));
				ProxDetector(10.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
				SCM(playerid, COLOR_GREY, "Вы слишком далеко!");
				return true;
			}
		}
	}
	else
	{
		SCM(playerid, COLOR_GREY, "[Ошибка] Игрок не найден!");
		return true;
	}
	return true;
}
CMD:showudost(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsACop(playerid)) return true;
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /showudost [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	new ttext[32];
	if(PI[playerid][pMember] == 0) { ttext = "Гражданин"; }
	else if(PI[playerid][pMember] == 1) { ttext = "SAPD"; }
	else if(PI[playerid][pMember] == 2) { ttext = "FBI"; }
	else if(PI[playerid][pMember] == 10) { ttext = "SFPD"; }
	else if(PI[playerid][pMember] == 21) { ttext = "LVPD"; }
	new rank = PI[playerid][pRank];
	new level = PI[playerid][pLevel];
	new msg[] = "Имя: %s\nТелефон: %d\nВозвраст: %d\nПодразделение: %s\nРанг: %d";
	format(YCMDstr, 256, msg,Name(playerid),PI[playerid][pPnumber],level,ttext,rank);
	SPDEx(params[0], 69, 0, "Удостоверение",YCMDstr, "Готово", "");
	format(YCMDstr, 256, "%s показал своё удостоверение %s'у",Name(playerid),Name(params[0]));
	ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	format(YCMDstr,sizeof(YCMDstr), "показал своё удостоверение %s'у",Name(params[0]));
	SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
	return true;
}
CMD:mdc(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, "Вы не Полицейский/Агент FBI");
	if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /mdc [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid,0xFFFFFFFF,"Вы должны быть в машине!");
	new sctring[300];
	{
		if(params[0] != INVALID_PLAYER_ID)
		{
			format(YCMDstr, 50,"\t{ffffff}Имя: \t\t\t{ffffff}%s \n",Name(params[0]));
			strcat(sctring,YCMDstr);
			format(YCMDstr, 50,"\t{ffffff}Арестов: \t\t\t{ffffff}%d \n",PI[params[0]][pArrested]);
			strcat(sctring,YCMDstr);
			format(YCMDstr, 50,"\t{ffffff}Уровень Преступлений: \t%d/6 \n",PI[params[0]][pWantedLevel]);
			strcat(sctring,YCMDstr);
			format(YCMDstr, 50,"\t{ffffff}Законопослушность: \t\t{ffffff}%d \n",PI[params[0]][pZakonp]);
			strcat(sctring,YCMDstr);
			format(YCMDstr, 50,"\t{ffffff}Убийств: \t\t\t{ffffff}%d \n",PI[params[0]][pKills]);
			strcat(sctring,YCMDstr);
		}
	}
	SPDEx(playerid,11350,0,"Мобильный компьютер",sctring,"Ок","");
	return true;
}
CMD:gzcolor(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new info1[50], info2[50];
	if(SA1 || SA2 || SA3 || SA4 || SA5 || SA7 || SA8)
	{
		if(sscanf(params, "ds[50]s[50]s[50]",params[0],info1,info2,params[1]))
		{
			SCM(playerid, COLOR_WHITE, "Введите: /gzcolor [ид банды] [от банды] [к банде] [причина]");
	        SCM(playerid,0x6495EDFF,"Ид банды: 12) Ballas 13) Vagos 15) Grove 17) Aztecas 18) Rifa");
	        SCM(playerid,0xFFFFFFFF,"* [от банды] [к банде] - писать словами!");
	        return true;
   		}
		for(new i = 0; i < sizeof(GZInfo); i++)
		{
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
			{
				GZInfo[i][gFrakVlad] = params[0];
				GangZoneStopFlashForAll(GZInfo[i][gID]);
				GangZoneHideForAll(GZInfo[i][gID]);
				GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
				SaveGZ(i);
				format(YCMDstr, 256, "Админ %s выдал территорию от банды %s к банде %s. Причина: %s",Name(playerid),info1,info2,params[1]);
				SCMToAll(COLOR_LIGHTRED,YCMDstr);
                new strstre[11];
				new year, month, day;
				getdate(year, month, day);
				format(strstre, 11, "%d/%d/%d",day,month,year);
				mysql_format(DATABASE,YCMDstr, 256, "INSERT INTO `AGZInfo` (`Banda1`, `Banda2`, `Admin`, `Text`, `Date`) VALUES ('%s', '%s', '%s', '%s', '%s')",info1,info2,Name(playerid),params[1],strstre);
				mysql_function_query(DATABASE,YCMDstr,false,"","");
				return true;
			}
		}
	}
	return true;
}
CMD:gzc(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pBSA] < 12 || GetPVarInt(playerid,"dostup") == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid,-1, "Введите: /gzc [банда]");
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
		{
			GZInfo[i][gFrakVlad] = params[0];
			GangZoneStopFlashForAll(GZInfo[i][gID]);
			GangZoneHideForAll(GZInfo[i][gID]);
			GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
			SaveGZ(i);
			return true;
		}
	}
	return true;
}
CMD:cuff(playerid, params[])
{
	if(FormaFrac[playerid] == 1 || FormaFrac[playerid] == 2 || FormaFrac[playerid] == 10 || FormaFrac[playerid] == 21)
	{
		if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /cuff [id]");
		if(!IsPlayerConnected(params[0])) return true;
		if(IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(params[0])) return SCM(playerid,COLOR_GREY,"Вы или тот игрок находитесь в тачке!");
		if(!PI[params[0]][pWantedLevel]) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Человек не является преступником");
		if(IsANonf(params[0])) return SCM(playerid, COLOR_GREY, "Вы не можете надеть наручники на законника");
		if(PlayerCuffed[params[0]] == 2) return SCM(playerid, COLOR_GREY, "Игрок уже в наручниках");
		if(PI[params[0]][pMestoJail] == 4) return SCM(playerid, COLOR_GREY, "Тут нельзя одеть наручники!");
		if(!ProxDetectorS(8.0, playerid, params[0])) return true;
		if(params[0] == playerid) return SCM(playerid,COLOR_GRAD1, "[Ошибка] Вы указали свой ID");
		format(YCMDstr, 256, "%s надел Вам наручники",Name(playerid));
		SCM(params[0], 0x6495EDFF, YCMDstr);
		GameTextForPlayer(params[0],"~r~cuffed", 5000, 3);
		format(YCMDstr, 256, "Вы надели наручники на %s", Name(params[0]));
		SCM(playerid, 0x6495EDFF, YCMDstr);
		format(YCMDstr, 256, "%s надел наручники",Name(playerid));
		SetPlayerAttachedObject(params[0], 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
		SetPlayerSpecialAction(params[0],SPECIAL_ACTION_CUFFED);
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		PlayerCuffed[params[0]] = 2;
		PlayerCuffedTime[params[0]] = 3600;
		TogglePlayerControllable(params[0], 1);
		Tazed[params[0]] = 0;
		SetPVarInt(playerid,"walk_goto_me_player",params[0] + 1);
		walk_goto_me[params[0]] = playerid+1;
		format(YCMDstr, 128, "Вы надели наручники на %s. Теперь он будет ходить за Вами.", Name(params[0]));
		SCM(playerid, 0x6495EDFF, YCMDstr);
	}
	return true;
}
CMD:uncuff(playerid, params[])
{
	if(FormaFrac[playerid] == 1 || FormaFrac[playerid] == 2 || FormaFrac[playerid] == 10 || FormaFrac[playerid] == 21 || FormaFrac[playerid] == 22 || PI[playerid][pBSA] >= 1)
	{
		if(GetPVarInt(playerid,"walk_goto_me_player"))
		{
			walk_goto_me[GetPVarInt(playerid,"walk_goto_me_player") - 1] = 0;
			ClearAnimations(GetPVarInt(playerid,"walk_goto_me_player") - 1, true);
			DeletePVar(playerid,"walk_goto_me_player");
			SCM(playerid,COLOR_GREY,"Вы отключили ходьбу игрока за Вами.");
		}
		if(sscanf(params, "u",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /uncuff [id]");
		if(!IsPlayerConnected(params[0])) return true;
		if(IsACop(params[0])) return SCM(playerid, COLOR_GREY, "Вы не можете снять наручники с законника");
		if(PlayerCuffed[params[0]] != 2) return SCM(playerid, COLOR_GREY, "Игрок не в наручниках");
		if(!ProxDetectorS(8.0, playerid, params[0])) return true;
		if(params[0] == playerid) { SCM(playerid, COLOR_GREY, "Вы не можете снять наручники с самого себя"); return true; }
		GameTextForPlayer(params[0],"~g~uncuffed", 5000, 3);
		format(YCMDstr, 256, "Вы сняли наручники с %s", Name(params[0]));
		SCM(playerid, 0x6495EDFF, YCMDstr);
		TogglePlayerControllable(params[0], 1);
		SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(params[0],0);
		PlayerCuffed[params[0]] = 0;
		PlayerCuffedTime[params[0]] = 0;
		Tazed[params[0]] = 0;
	}
	return true;
}
CMD:cput(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(FormaFrac[playerid] == 1 || FormaFrac[playerid] == 2 || FormaFrac[playerid] == 10 || FormaFrac[playerid] == 21)
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 596 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 490 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 596 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 597 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 523 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 599
				&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 598 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 560 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 427 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 541) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Вы не в патрульной машине");
		if(sscanf(params, "ui",params[0],params[1])) return  SCM(playerid, COLOR_WHITE, "Введите: /cput [playerid] [место(1-3)]");
		if(!IsPlayerConnected(params[0])) return true;
		if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Человек небыл найден");
		if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Человек далеко от вас");
		if(params[0] == playerid) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Вы не можете затащить в машину самого себя");
		if(!PI[params[0]][pWantedLevel]) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Человек не является преступником");
		if(GetPlayerState(params[0]) != PLAYER_STATE_ONFOOT) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Человек в автомобиле");
		{
			new seatid = params[1];
			new veh = GetPlayerVehicleID(playerid);
			PutPlayerInVehicleEx(params[0], veh, seatid);
			SetPlayerArmedWeapon(params[0],0);
			TogglePlayerControllable(params[0], 0);
			format(YCMDstr,sizeof(YCMDstr), "Вы были затащены в машину офицером/агентом FBI %s",Name(playerid));
			SCM(params[0],0x64E96EDFF,YCMDstr);
			format(YCMDstr,sizeof(YCMDstr), "Вы затащили в машину преступника %s",Name(params[0]));
			SCM(playerid,0x64E96EDFF,YCMDstr);
		}
	}
	return true;
}
CMD:ceject(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(FormaFrac[playerid] == 1 || FormaFrac[playerid] == 2 || FormaFrac[playerid] == 10 || FormaFrac[playerid] == 21)
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 596 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 490 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 596 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 597 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 523 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 599
				&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 598 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 560 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 427 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 541) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Вы не в патрульной машине");
		if(sscanf(params, "u",params[0])) return  SCM(playerid, COLOR_WHITE, "Введите: /ceject [playerid]");
		if(!IsPlayerConnected(params[0])) return true;
		if(params[0] == INVALID_PLAYER_ID) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Человек не был найден");
		if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(params[0])) return SCM(playerid, COLOR_GRAD1, "[Ошибка] Человек не в вашей машине");
		RemovePlayerFromVehicle(params[0]);
		if(GetPVarInt(playerid,"walk_goto_me_player"))
		{
			walk_goto_me[GetPVarInt(playerid,"walk_goto_me_player") - 1] = 0;
			ClearAnimations(GetPVarInt(playerid,"walk_goto_me_player") - 1, true);
			DeletePVar(playerid,"walk_goto_me_player");
		}
		if(IsPlayerInRangeOfPoint(params[0],10.0,1568.6144,-1689.9901,6.2188))// LSPD
		{
			SetPlayerInterior(params[0],6);
			SetPlayerVirtualWorld(params[0], 1);
			SetPlayerPos(params[0],-1646.2334,704.1000,1001.8149);
			SetPlayerFacingAngle(params[0], 90.5174);
			TogglePlayerControllable(params[0], 0);
			SCM(params[0],0x64E96EDFF,"Вы были высажены с машины офицером в участок LSPD");
			format(YCMDstr, 128, "Вы высадили подозреваемого %s в полицейский участок LSPD",Name(params[0]));
			SCM(playerid,0x64E96EDFF,YCMDstr);
			format(YCMDstr, 128, "Затолкал(а) подозреваемого %s в полицейский участок",Name(params[0]));
			SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
		}
		else if(IsPlayerInRangeOfPoint(params[0],10.0,-1594.2096,716.1803,-4.9063))// SFPD
		{
			SetPlayerInterior(params[0],10);
			SetPlayerPos(params[0],-1646.2334,704.1000,1001.8149);
			SetPlayerFacingAngle(params[0], 90.5174);
			TogglePlayerControllable(params[0], 0);
			SCM(params[0],0x64E96EDFF,"Вы были высажены с машины офицером в участок SFPD");
			format(YCMDstr, 128, "Вы высадили подозреваемого %s в полицейский участок SFPD",Name(params[0]));
			SCM(playerid,0x64E96EDFF,YCMDstr);
			format(YCMDstr, 128, "Затолкал(а) подозреваемого %s в полицейский участок",Name(params[0]));
			SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
		}
		else if(IsPlayerInRangeOfPoint(params[0],10.0,2297.1138,2451.4346,10.8203))// LVPD
		{
			SetPlayerInterior(params[0],6);
			SetPlayerVirtualWorld(params[0], 122);
			SetPlayerPos(params[0],-1646.2334,704.1000,1001.8149);
			SetPlayerFacingAngle(params[0], 90.5174);
			TogglePlayerControllable(params[0], 0);
			SCM(params[0],0x64E96EDFF,"Вы были высажены с машины офицером в участок LVPD");
			format(YCMDstr, 128, "Вы высадили подозреваемого %s в полицейский участок LVPD",Name(params[0]));
			SCM(playerid,0x64E96EDFF,YCMDstr);
			format(YCMDstr, 128, "Затолкал(а) подозреваемого %s в полицейский участок",Name(params[0]));
			SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
		}
		else if(IsPlayerInRangeOfPoint(params[0],15.0,-306.8596,1546.1813,75.5625))// Федеральная тюрьма
		{
			SetPlayerInterior(params[0],2);
			SetPlayerVirtualWorld(params[0], 1);
			SetPlayerPos(params[0],2537.8635,-1293.5372,1031.4219);
			SetPlayerFacingAngle(params[0], 269.2285);
			TogglePlayerControllable(params[0], 0);
			SCM(params[0],0x64E96EDFF,"Вы были высажены с машины в Федеральную тюрьму");
			format(YCMDstr, 128, "Вы высадили преступника %s в Федеральную тюрьму. Зайдите в здание и посадите его.",Name(params[0]));
			SCM(playerid,0x64E96EDFF,YCMDstr);
			format(YCMDstr, 128, "Затолкал(а) преступника %s в федеральную тюрьму",Name(params[0]));
			SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
		}
		else
		{
			SCM(params[0],0x64E96EDFF,"Вы были высажены с машины офицером/агентом FBI");
			format(YCMDstr, 128, "Вы вытащили с машины подозреваемого %s",Name(params[0]));
			SCM(playerid,0x64E96EDFF,YCMDstr);
			format(YCMDstr, 128, "Вытащил(а) из машины подозреваемого %s",Name(params[0]));
			SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
		}
	}
	return true;
}
CMD:find(playerid, params[])
{
    if(PI[playerid][pLogin] == 0) return true;
	if(sscanf(params, "d",params[0])) return SCM(playerid, COLOR_WHITE, "Введите: /find [id]");
	if(FormaFrac[playerid] == 1 || FormaFrac[playerid] == 2 || FormaFrac[playerid] == 10 || FormaFrac[playerid] == 21)
	{
		if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, "[Спутник]: Человек не найден!");
		if(GetPlayerInterior(params[0]) != 0) return SCM(playerid,COLOR_GREY,"[Спутник]: Мы не можем найти координаты (Игрок в интерьере)");
		if(GetPlayerVirtualWorld(params[0]) != 0) return SCM(playerid,COLOR_GREY,"[Спутник]: Мы не можем найти координаты (Игрок в другом виртуальном мире)");
		if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "[Спутник]: Вы ищите самого себя!");
		if(GetPVarInt(playerid,"UseFind") == 1) return SCM(playerid, COLOR_GREY, "[Спутник]: У Вас уже активирован поиск человека! Введите /findoff чтобы деактивировать поиск.");
		SCM(playerid,COLOR_ISPOLZUY,"[Спутник]: Начинаем поиск... На Вашем радаре появится местонахождение человека.");
		SetPVarInt(playerid, "UseFind", 1);
		SetFind[playerid] = SetTimerEx("TimeFind", 1000, true, "dd", playerid, params[0]);
		return 1;
		
	}
	else SCM(playerid, COLOR_GREY, "Вы не состоите в FBI/SAPD!");
	return true;
}
CMD:findoff(playerid, params[])
{
    if(PI[playerid][pLogin] == 0) return true;
	if(FormaFrac[playerid] == 1 || FormaFrac[playerid] == 2 || FormaFrac[playerid] == 10 || FormaFrac[playerid] == 21)
	{
	    if(GetPVarInt(playerid,"UseFind") == 0) return SCM(playerid, COLOR_GREY, "[Спутник]: У Вас не активирован поиск человека!");
 		DeletePVar(playerid, "UseFind");
		KillTimer(SetFind[playerid]);
		DisablePlayerCheckpoint(playerid);
		SCM(playerid,COLOR_GREY,"[Спутник]: Поиск человека деактивирован!");
		return 1;
	}
	else SCM(playerid, COLOR_GREY, "Вы не состоите в FBI/SAPD!");
	return true;
}
CMD:tracking(playerid, params[])
{
	new param[40];
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pMember] != 2)return SCM(playerid, COLOR_GREY, "Вы не агент FBI");
	if(sscanf( params, "s[32]S()[64]", param, params ))
	{
		SCM(playerid, COLOR_WHITE, "Введите: /tracking [действие]. Доступные действия:");
		SCM(playerid, COLOR_WHITE, "  GET - Взять жучёк.");
		SCM(playerid, COLOR_WHITE, "  SET - Прикрепить жучок к игроку");
		SCM(playerid, COLOR_WHITE, "  REMOVE - Деактивировать жучок");
		SCM(playerid, COLOR_WHITE, "  LISTEN - Начать прослушивание чата фракции");
		return true;
	}
	if(!strcmp(param, "get",true))
	{
		if(PI[playerid][pRank] < 3) return SCM(playerid,COLOR_ISPOLZUY,"Вам недоступна данная функция!");
		if(GetPlayerVehicleID(playerid) >= fbicar[0] && GetPlayerVehicleID(playerid) <= fbicar[10]) {}
		else return SCM(playerid,COLOR_GREY,"Вы должны находиться в автомобиле FBI");
		if(tipster[playerid]) return SCM(playerid,COLOR_ISPOLZUY,"У вас уже есть жучёк");
		tipster[playerid] = 1;
		SCM(playerid,COLOR_ISPOLZUY,"Вы взяли жучёк! Используйте /tracking SET [id].");
		format(YCMDstr,sizeof(YCMDstr),"%s взял жучёк из автомобиля",Name(playerid));
		SendRadioMessage(2,COLOR_ISPOLZUY, YCMDstr);
	}
	else if(!strcmp(param, "set",true))
	{
		new ammo;
		if(PI[playerid][pRank] < 3) return SCM(playerid,COLOR_ISPOLZUY,"Вам недоступна данная функция!");
		if(sscanf(params, "u", ammo)) return SCM(playerid, COLOR_WHITE, "Введите: /tracking SET [playerid]");
		if(!tipster[playerid]) return SCM(playerid,COLOR_ISPOLZUY,"У вас нет жучка");
		if(!ProxDetectorS(2.0, playerid, ammo)) return SCM(playerid,COLOR_ISPOLZUY,"Игрок далеко от вас");
		if(tipsteron != -1) return SCM(playerid,COLOR_ISPOLZUY,"Жучёк уже прикреплен! Используйте /tracking REMOVE");
		if(!PI[ammo][pMember]) return SCM(playerid,COLOR_ISPOLZUY,"Игрок не состоит в организации");
		tipster[playerid] = 0;
		tipsteron = PI[ammo][pMember];
		tipsterplayer = ammo;
		format(YCMDstr,sizeof(YCMDstr),"%s прикрепил жучек к игроку %s. Используйте /tracking LISTEN для прослушивания",Name(playerid),Name(ammo));
		SendRadioMessage(2,COLOR_ISPOLZUY, YCMDstr);
		SCM(playerid,COLOR_ISPOLZUY,"Вы прикрепили жучёк к игроку! Используйте /tracking LISTEN");
	}
	else if(!strcmp(param, "remove",true))
	{
		if(PI[playerid][pRank] < 3) return SCM(playerid,COLOR_ISPOLZUY,"Вам недоступна данная функция!");
		if(tipsteron == -1) return SCM(playerid,COLOR_ISPOLZUY,"Жучёк не прикреплен!");
		tipsteron = -1;
		tipsterplayer = -1;
		SCM(playerid,COLOR_ISPOLZUY,"Вы отключили жучёк!");
	}
	else if(!strcmp(param, "listen",true))
	{
		if(tipsteron == -1) return SCM(playerid,COLOR_ISPOLZUY,"Жучёк не прикреплен!");
		if(!tipsterlisten[playerid])
		{
			tipsterlisten[playerid] = 1;
			SCM(playerid,COLOR_ISPOLZUY,"Вы включили прослушивание!");
		}
		else
		{
			tipsterlisten[playerid] = 0;
			SCM(playerid,COLOR_ISPOLZUY,"Вы отключили прослушивание!");
		}
	}
	return true;
}
CMD:accept(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new sendername[MAX_PLAYER_NAME],giveplayer[MAX_PLAYER_NAME];
	new x_job[64];
	if(sscanf(params, "s[128]",x_job)) return SCM(playerid, COLOR_WHITE, "Введите: /accept [значение]");
	if(strcmp(x_job, "debt",true) == 0)
	{
		if(KrishaOffer[playerid] < 999)
		{
			GetPlayerName(KrishaOffer[playerid], giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(YCMDstr, 128, "Вы приняли крышу от %s'a", giveplayer);
			SCM(playerid, 0x6495EDFF, YCMDstr);
			format(YCMDstr, 128, "%s согласился на вашу крышу", sendername);
			SCM(KrishaOffer[playerid], 0x6495EDFF, YCMDstr);
			KrishaOffer[playerid] = 999;
			PI[playerid][pUseKrisha] = 1;
			PI[playerid][pKrisha] = Krisha[playerid];
			return true;
		}
		else return SCM(playerid, COLOR_GREY, "Вам никто не предлагал крышу");
	}
	else if(strcmp(x_job, "marriage",true) == 0)
	{
		if(FL[playerid][ProposeOffer] < 999)
		{
			if(!PlayerToPoint(10.0, playerid, -2023.8943,1117.9874,53.9319)) return SCM(playerid, COLOR_GREY, "Вы в церкви San Fierro!");
			if(IsPlayerConnected(FL[playerid][ProposeOffer]))
			{
				if(ProxDetectorS(10.0, playerid, FL[playerid][ProposeOffer]))
				{
					GetPlayerName(FL[playerid][ProposeOffer], giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(YCMDstr, 128, "Вы приняли предложение от %s", giveplayer);
					SCM(playerid, 0x6495EDFF, YCMDstr);
					format(YCMDstr, 128, "%s приняла Ваш запрос быть Вашей Женой.", sendername);
					SCM(FL[playerid][ProposeOffer], 0x6495EDFF, YCMDstr);
					strmid (PI[playerid][pMarriedTo],giveplayer, 0, strlen(giveplayer), 32);
					strmid (PI[FL[playerid][ProposeOffer]][pMarriedTo],sendername, 0, strlen(sendername), 32);
					format(YCMDstr, 128, "[Свадьба]: %s & %s - новая семейная пара!",giveplayer,sendername);
					SCMToAll(COLOR_OCEANIC, YCMDstr);
					PI[FL[playerid][ProposeOffer]][pCash] -= 100000;
					PI[playerid][pMarried] = 1;
					PI[FL[playerid][ProposeOffer]][pMarried] = 1;
					FL[playerid][ProposeOffer] = 999;
				}
				return true;
			}
			else return SCM(playerid, COLOR_GREY, "Жених/Невеста не рядом с Вами!");
		}
		else return SCM(playerid, COLOR_GREY, "Вам никто не предлагал руку и сердце");
	}
	else if(strcmp(x_job, "taxi",true) == 0)
	{
		if(!GetPVarInt(playerid,"TaxiDuty")) return SCM(playerid, COLOR_GREY, "Вы не таксист.");
		if(FL[playerid][TaxiCallTime] > 0) return SCM(playerid, COLOR_GREY, "Вы уже приняли вызов.!");
		if(TaxiCall < 999)
		{
			if(IsPlayerConnected(TaxiCall))
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));
				format(YCMDstr, 128, "Вы приняли вызов от %s.",giveplayer);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				format(YCMDstr, 128, "Водитель такси %s принял ваш вызов, оставайтесь на месте.",sendername);
				SCM(TaxiCall, COLOR_GREEN, YCMDstr);
				new Float:X, Float:Y, Float:Z;
				GetPlayerPos(TaxiCall, X, Y, Z);
				SetPlayerCheckpoint(playerid, X, Y, Z, 5);
				FL[playerid][CP] = 777;
				TaxiCall = 999;
				return true;
			}
		}
		else return SCM(playerid, COLOR_GREY, "Нет вызовов или вызов уже приняли.");
	}
	else if(strcmp(x_job, "ticket",true) == 0)
	{
		if(FL[playerid][TicketOffer] < 999)
		{
			if(IsPlayerConnected(FL[playerid][TicketOffer]))
			{
				if (ProxDetectorS(5.0, playerid, FL[playerid][TicketOffer]))
				{
					GetPlayerName(FL[playerid][TicketOffer], giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(YCMDstr, 128, "Вы оплатили штраф в размере $%d офицеру %s.", FL[playerid][TicketMoney], giveplayer);
					SCM(playerid, COLOR_BLUE, YCMDstr);
					format(YCMDstr, 128, "%s оплатил штраф в размере $%d.", sendername, FL[playerid][TicketMoney]);
					SCM(FL[playerid][TicketOffer], COLOR_BLUE, YCMDstr);
					PI[playerid][pCash] -= FL[playerid][TicketMoney];
					PI[FL[playerid][TicketOffer]][pCash] += FL[playerid][TicketMoney];
					FL[playerid][TicketOffer] = 999;
					FL[playerid][TicketMoney] = 0;
					return true;
				}
				else return SCM(playerid, COLOR_GREY, "Полицейскйи не рядом с вами!");
			}
		}
		else return SCM(playerid, COLOR_GREY, "Вам не выписывали штраф!");
	}
	else if(strcmp(x_job, "drugs",true) == 0)
	{
		if(FL[playerid][DrugOffer] < 999)
		{
			if(PI[playerid][pCash] > FL[playerid][DrugPrice])
			{
				if(PI[playerid][pDrugs] < 7)
				{
					if(IsPlayerConnected(FL[playerid][DrugOffer]))
					{
						GetPlayerName(FL[playerid][DrugOffer], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(YCMDstr, 128, "Вы купили %d грамм наркотиков за $%d у %s.",FL[playerid][DrugGram],FL[playerid][DrugPrice],giveplayer);
						SCM(playerid, 0x6495EDFF, YCMDstr);
						format(YCMDstr, 128, "%s купил у вас %d грамм наркотиков за $%d",sendername,FL[playerid][DrugGram],FL[playerid][DrugPrice]);
						SCM(FL[playerid][DrugOffer], 0x6495EDFF, YCMDstr);
						PI[playerid][pCash] -=FL[playerid][DrugPrice];
						GiveMoney(FL[playerid][DrugOffer], FL[playerid][DrugPrice]);
						PI[playerid][pDrugs] += FL[playerid][DrugGram];
						PI[FL[playerid][DrugOffer]][pDrugs] -= FL[playerid][DrugGram];
						FL[playerid][DrugOffer] = 999;
						FL[playerid][DrugPrice] = 0;
						return true;
					}
					return true;
				}
				else return SCM(playerid, COLOR_GREY, "У Вас и так достаточно наркотиков!");
			}
			else return SCM(playerid, COLOR_GREY, "У вас нет столько денег!");
		}
		else return SCM(playerid, COLOR_GREY, "Вам никто не предлагал купить наркотики!");
	}
	else if(strcmp(x_job, "mats",true) == 0)
	{
		if(FL[playerid][MatsOffer] < 999)
		{
			if(PI[playerid][pCash] > FL[playerid][MatsPrice])
			{
				if(PI[playerid][pMats] < 500)
				{
					if(IsPlayerConnected(FL[playerid][MatsOffer]))
					{
						GetPlayerName(FL[playerid][MatsOffer], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(YCMDstr, 128, "Вы купили %d материалов за $%d у %s.",FL[playerid][MatsGram],FL[playerid][MatsPrice],giveplayer);
						SCM(playerid, 0x6495EDFF, YCMDstr);
						format(YCMDstr, 128, "%s купил у Вас %d материалов за $%d",sendername,FL[playerid][MatsGram],FL[playerid][MatsPrice]);
						SCM(FL[playerid][MatsOffer], 0x6495EDFF, YCMDstr);
						PI[playerid][pCash] -=FL[playerid][MatsPrice];
						GiveMoney(FL[playerid][MatsOffer], FL[playerid][MatsPrice]);
						PI[playerid][pMats] += FL[playerid][MatsGram];
						PI[FL[playerid][MatsOffer]][pMats] -= FL[playerid][MatsGram];
						FL[playerid][MatsOffer] = 999;
						FL[playerid][MatsPrice] = 0;
						return true;
					}
					return true;
				}
				else return SCM(playerid, COLOR_GREY, "У Вас и так достаточно материалов!");
			}
			else return SCM(playerid, COLOR_GREY, "У вас нет столько денег!");
		}
		else return SCM(playerid, COLOR_GREY, "Вам никто не предлагал купить материалы!");
	}
	else if(strcmp(x_job, "house",true) == 0)
	{
		if(GetPVarInt(playerid, "hCena") < 1 && GetPVarInt(playerid, "hProdaet") == 999) return SCM(playerid, COLOR_GREY, "Вам не предлагали купить дом");
		if(!ProxDetectorS(8.0, playerid, GetPVarInt(playerid, "hProdaet"))) return SCM(playerid, COLOR_GREY, "Вы далеко от продавца");
		new house = PI[GetPVarInt(playerid, "hProdaet")][pPhousekey];
		if(PI[playerid][pBank] < GetPVarInt(playerid, "hCena"))return SCM(playerid, COLOR_GREY, "У Вас нет столько денег на банковском счёте");
		if(PI[playerid][pPhotelkey] != 999) return SCM(playerid, COLOR_GREY, "У Вас есть номер в отеле");
		PI[playerid][pBank] -= GetPVarInt(playerid, "hCena");
		PI[GetPVarInt(playerid, "hProdaet")][pBank] += GetPVarInt(playerid, "hCena");
		PI[playerid][pPhousekey] = PI[GetPVarInt(playerid, "hProdaet")][pPhousekey];
		PI[GetPVarInt(playerid, "hProdaet")][pPhousekey] = 999;
		strmid(House[house][hOwner], Name(playerid), 0, strlen(Name(playerid)), 255);
		SCMF(playerid,COLOR_GREEN,"Вы купили дом у %s за $%i.",Name(GetPVarInt(playerid, "hProdaet")),GetPVarInt(playerid, "hCena"));
		SCMF(GetPVarInt(playerid, "hProdaet"),COLOR_GREEN,"Вы продали дом игроку %s за $%i",Name(playerid),GetPVarInt(playerid, "hCena"));
		for(new d = 0; d != 7; d++) House[GetPVarInt(playerid, "hProdaet")][hGun][d] = 0, House[GetPVarInt(playerid, "hProdaet")][hGunAmmo][d] = 0;
		if(caridhouse[GetPVarInt(playerid, "hProdaet")][0] != 0 || caridhouse[GetPVarInt(playerid, "hProdaet")][1] != 0)
		{
			DestroyVehicle(caridhouse[GetPVarInt(playerid, "hProdaet")][0]), caridhouse[GetPVarInt(playerid, "hProdaet")][0] = 0;
			DestroyVehicle(caridhouse[GetPVarInt(playerid, "hProdaet")][1]), caridhouse[GetPVarInt(playerid, "hProdaet")][1] = 0;
		}
		mysql_format(DATABASE, YCMDstr, 128, "UPDATE `"TABLE_HOUSE"` SET hOwner = '%s' WHERE hID = '%i'",Name(playerid),PI[playerid][pPhousekey]);
		mysql_function_query(DATABASE,YCMDstr,false,"","");
		SetPVarInt(playerid, "hProdaet", 999);
		DeletePVar(playerid, "hCena");
		SetPVarInt(playerid, "Prodaet", 0);
		SetPVarInt(GetPVarInt(playerid, "hProdaet"), "SellHouse", 0);
		return 1;
	}
	else if(strcmp(x_job, "car 1",true) == 0)
	{
	    if(FL[playerid][CarOffer] != 999)
		{
		    if(IsPlayerConnected(FL[playerid][CarOffer]))
	  		{
	  		    if(ProxDetectorS(5.0, playerid, FL[playerid][CarOffer]))
	  		    {
					if(PI[playerid][pCash] < FL[playerid][CarPrice]) return SCM(playerid, COLOR_GREY, "У Вас нет столько денег на руках!");
					PI[playerid][pCash] -= FL[playerid][CarPrice];
					PI[FL[playerid][CarOffer]][pCash] += FL[playerid][CarPrice];
					SetPVarInt(FL[playerid][CarOffer],"Car",PI[playerid][pCar1]);
					PI[playerid][pCar1] = PI[FL[playerid][CarOffer]][pCar1];
					PI[FL[playerid][CarOffer]][pCar1] = GetPVarInt(FL[playerid][CarOffer],"Car");

					SetPVarInt(FL[playerid][CarOffer],"Color",PI[playerid][pColor][0]);
					SetPVarInt(FL[playerid][CarOffer],"Color2",PI[playerid][pColor][1]);
					PI[playerid][pColor][0] = PI[FL[playerid][CarOffer]][pColor][0];
					PI[playerid][pColor][1] = PI[FL[playerid][CarOffer]][pColor][1];
					PI[FL[playerid][CarOffer]][pColor][0] = GetPVarInt(FL[playerid][CarOffer],"Color");
					PI[FL[playerid][CarOffer]][pColor][1] = GetPVarInt(FL[playerid][CarOffer],"Color2");

					SetPVarInt(FL[playerid][CarOffer],"PaintJob",PI[playerid][pPaintJob]);
					PI[playerid][pPaintJob] = PI[FL[playerid][CarOffer]][pPaintJob];
					PI[FL[playerid][CarOffer]][pPaintJob] = GetPVarInt(FL[playerid][CarOffer],"PaintJob");

					SetPVarInt(FL[playerid][CarOffer],"Wheels",PI[playerid][pWheels]);
					PI[playerid][pWheels] = PI[FL[playerid][CarOffer]][pWheels];
					PI[FL[playerid][CarOffer]][pWheels] = GetPVarInt(FL[playerid][CarOffer],"Wheels");

					SetPVarInt(FL[playerid][CarOffer],"Spoiler",PI[playerid][pSpoiler]);
					PI[playerid][pSpoiler] = PI[FL[playerid][CarOffer]][pSpoiler];
					PI[FL[playerid][CarOffer]][pSpoiler] = GetPVarInt(FL[playerid][CarOffer],"Spoiler");

					SetPVarInt(FL[playerid][CarOffer],"Bumper1",PI[playerid][pBumper1]);
					PI[playerid][pBumper1] = PI[FL[playerid][CarOffer]][pBumper1];
					PI[FL[playerid][CarOffer]][pBumper1] = GetPVarInt(FL[playerid][CarOffer],"Bumper1");

					SetPVarInt(FL[playerid][CarOffer],"Bumper2",PI[playerid][pBumper2]);
					PI[playerid][pBumper2] = PI[FL[playerid][CarOffer]][pBumper2];
					PI[FL[playerid][CarOffer]][pBumper2] = GetPVarInt(FL[playerid][CarOffer],"Bumper2");

					SetPVarInt(FL[playerid][CarOffer],"Nitro",PI[playerid][pNitro]);
					PI[playerid][pNitro] = PI[FL[playerid][CarOffer]][pNitro];
					PI[FL[playerid][CarOffer]][pNitro] = GetPVarInt(FL[playerid][CarOffer],"Nitro");

					SetPVarInt(FL[playerid][CarOffer],"Hydrawlic",PI[playerid][pHydrawlic]);
					PI[playerid][pHydrawlic] = PI[FL[playerid][CarOffer]][pHydrawlic];
					PI[FL[playerid][CarOffer]][pHydrawlic] = GetPVarInt(FL[playerid][CarOffer],"Hydrawlic");

					SetPVarInt(FL[playerid][CarOffer],"pUbka",PI[playerid][pUbka]);
					PI[playerid][pUbka] = PI[FL[playerid][CarOffer]][pUbka];
					PI[FL[playerid][CarOffer]][pUbka] = GetPVarInt(FL[playerid][CarOffer],"Ubka1");

					SetPVarInt(FL[playerid][CarOffer],"pVozduh",PI[playerid][pVozduh]);
					PI[playerid][pVozduh] = PI[FL[playerid][CarOffer]][pVozduh];
					PI[FL[playerid][CarOffer]][pVozduh] = GetPVarInt(FL[playerid][CarOffer],"Vozduh1");

					SetPVarInt(FL[playerid][CarOffer],"pVihlop",PI[playerid][pVihlop]);
					PI[playerid][pVihlop] = PI[FL[playerid][CarOffer]][pVihlop];
					PI[FL[playerid][CarOffer]][pVihlop] = GetPVarInt(FL[playerid][CarOffer],"pVihlop");

					SetPVarInt(FL[playerid][CarOffer],"Procents",PI[playerid][pProcents]);
					PI[playerid][pProcents] = PI[FL[playerid][CarOffer]][pProcents];
					PI[FL[playerid][CarOffer]][pProcents] = GetPVarInt(FL[playerid][CarOffer],"Procents");

					SetPVarInt(FL[playerid][CarOffer],"caridhouse",caridhouse[playerid][0]);
					caridhouse[playerid][0] = caridhouse[FL[playerid][CarOffer]][0];
					caridhouse[FL[playerid][CarOffer]][0] = GetPVarInt(FL[playerid][CarOffer],"caridhouse");

					format(YCMDstr, 128, "Вы обменяли машину с %s | Слот: 1. Его доплата $%d",Name(playerid), FL[playerid][CarPrice]);
					SCM(FL[playerid][CarOffer], 0x6495DDFF, YCMDstr);

					format(YCMDstr, 128, "Вы обменяли машину с %s | Слот: 1. Ваша доплата $%d",Name(FL[playerid][CarOffer]), FL[playerid][CarPrice]);
					SCM(playerid, 0x6495EDFF, YCMDstr);
					FL[playerid][CarOffer] = 999;
					FL[playerid][CarPrice] = 0;
					SetPVarInt(playerid, "Prodaet", 0);
					SetPVarInt(FL[playerid][CarOffer], "SellCar", 0);
				}
			}
		}
	}
	else if(strcmp(x_job, "car 2",true) == 0)
	{
	    if(FL[playerid][CarOffer2] != 999)
		{
		    if(IsPlayerConnected(FL[playerid][CarOffer2]))
		    {
		        if(ProxDetectorS(5.0, playerid, FL[playerid][CarOffer2]))
	  		    {
					if(PI[playerid][pCash] < FL[playerid][CarPrice2]) return SCM(playerid, COLOR_GREY, "У Вас нет столько денег на руках!");
					PI[playerid][pCash] -= FL[playerid][CarPrice2];
					PI[FL[playerid][CarOffer2]][pCash] += FL[playerid][CarPrice2];
					SetPVarInt(FL[playerid][CarOffer2],"Car1",PI[playerid][pCar2]);
					PI[playerid][pCar2] = PI[FL[playerid][CarOffer2]][pCar2];
					PI[FL[playerid][CarOffer2]][pCar2] = GetPVarInt(FL[playerid][CarOffer2],"Car1");

					SetPVarInt(FL[playerid][CarOffer2],"Color1",PI[playerid][pColor1][0]);
					SetPVarInt(FL[playerid][CarOffer2],"Color21",PI[playerid][pColor1][1]);
					PI[playerid][pColor1][0] = PI[FL[playerid][CarOffer2]][pColor1][0];
					PI[playerid][pColor1][1] = PI[FL[playerid][CarOffer2]][pColor1][1];
					PI[FL[playerid][CarOffer2]][pColor1][0] = GetPVarInt(FL[playerid][CarOffer2],"Color1");
					PI[FL[playerid][CarOffer2]][pColor1][1] = GetPVarInt(FL[playerid][CarOffer2],"Color21");

					SetPVarInt(FL[playerid][CarOffer2],"PaintJob1",PI[playerid][pPaintJob1]);
					PI[playerid][pPaintJob1] = PI[FL[playerid][CarOffer2]][pPaintJob1];
					PI[FL[playerid][CarOffer2]][pPaintJob1] = GetPVarInt(FL[playerid][CarOffer2],"PaintJob1");

					SetPVarInt(FL[playerid][CarOffer2],"Wheels1",PI[playerid][pWheels1]);
					PI[playerid][pWheels1] = PI[FL[playerid][CarOffer2]][pWheels1];
					PI[FL[playerid][CarOffer2]][pWheels1] = GetPVarInt(FL[playerid][CarOffer2],"Wheels1");

					SetPVarInt(FL[playerid][CarOffer2],"Spoiler1",PI[playerid][pSpoiler1]);
					PI[playerid][pSpoiler1] = PI[FL[playerid][CarOffer2]][pSpoiler1];
					PI[FL[playerid][CarOffer2]][pSpoiler1] = GetPVarInt(FL[playerid][CarOffer2],"Spoiler1");

					SetPVarInt(FL[playerid][CarOffer2],"Bumper11",PI[playerid][pBumper11]);
					PI[playerid][pBumper11] = PI[FL[playerid][CarOffer2]][pBumper11];
					PI[FL[playerid][CarOffer2]][pBumper11] = GetPVarInt(FL[playerid][CarOffer2],"Bumper11");

					SetPVarInt(FL[playerid][CarOffer2],"Bumper21",PI[playerid][pBumper21]);
					PI[playerid][pBumper21] = PI[FL[playerid][CarOffer2]][pBumper21];
					PI[FL[playerid][CarOffer2]][pBumper21] = GetPVarInt(FL[playerid][CarOffer2],"Bumper21");

					SetPVarInt(FL[playerid][CarOffer2],"Nitro1",PI[playerid][pNitro1]);
					PI[playerid][pNitro1] = PI[FL[playerid][CarOffer2]][pNitro1];
					PI[FL[playerid][CarOffer2]][pNitro1] = GetPVarInt(FL[playerid][CarOffer2],"Nitro1");

					SetPVarInt(FL[playerid][CarOffer2],"Hydrawlic1",PI[playerid][pHydrawlic1]);
					PI[playerid][pHydrawlic1] = PI[FL[playerid][CarOffer2]][pHydrawlic1];
					PI[FL[playerid][CarOffer2]][pHydrawlic1] = GetPVarInt(FL[playerid][CarOffer2],"Hydrawlic1");

					SetPVarInt(FL[playerid][CarOffer2],"pUbka11",PI[playerid][pUbka11]);
					PI[playerid][pUbka11] = PI[FL[playerid][CarOffer2]][pUbka11];
					PI[FL[playerid][CarOffer2]][pUbka11] = GetPVarInt(FL[playerid][CarOffer2],"Ubka11");

					SetPVarInt(FL[playerid][CarOffer2],"pVozduh11",PI[playerid][pVozduh11]);
					PI[playerid][pVozduh11] = PI[FL[playerid][CarOffer2]][pVozduh11];
					PI[FL[playerid][CarOffer2]][pVozduh11] = GetPVarInt(FL[playerid][CarOffer2],"Vozduh11");

					SetPVarInt(FL[playerid][CarOffer2],"pVihlop11",PI[playerid][pVihlop11]);
					PI[playerid][pVihlop11] = PI[FL[playerid][CarOffer2]][pVihlop11];
					PI[FL[playerid][CarOffer2]][pVihlop11] = GetPVarInt(FL[playerid][CarOffer2],"pVihlop11");

					SetPVarInt(FL[playerid][CarOffer2],"Procents1",PI[playerid][pProcents2]);
					PI[playerid][pProcents2] = PI[FL[playerid][CarOffer2]][pProcents2];
					PI[FL[playerid][CarOffer2]][pProcents2] = GetPVarInt(FL[playerid][CarOffer2],"Procents1");

					SetPVarInt(FL[playerid][CarOffer2],"caridhouse1",caridhouse[playerid][1]);
					caridhouse[playerid][1] = caridhouse[FL[playerid][CarOffer2]][1];
					caridhouse[FL[playerid][CarOffer2]][1] = GetPVarInt(FL[playerid][CarOffer2],"caridhouse1");

					format(YCMDstr, 128, "Вы обменяли машину с %s | Слот: 2. Его доплата $%d",Name(playerid), FL[playerid][CarPrice2]);
					SCM(FL[playerid][CarOffer2], 0x6495DDFF, YCMDstr);

					format(YCMDstr, 128, "Вы обменяли машину с %s | Слот: 2. Ваша доплата $%d",Name(FL[playerid][CarOffer2]), FL[playerid][CarPrice2]);
					SCM(playerid, 0x6495EDFF, YCMDstr);
					FL[playerid][CarOffer2] = 999;
					FL[playerid][CarPrice2] = 0;
					SetPVarInt(playerid, "Prodaet", 0);
					SetPVarInt(FL[playerid][CarOffer], "SellCar", 0);
				}
			}
		}
	}
	else if(strcmp(x_job, "medic",true) == 0)
	{
		if(PI[playerid][pMember] == 4 || PI[playerid][pLeader] == 4 || PI[playerid][pMember] == 8 || PI[playerid][pLeader] == 8)
		{
			if(MedicCallTime[playerid] > 0) return SCM(playerid, COLOR_GREY, "Вы уже приняли вызов!");
			if(MedicCall < 999)
			{
				if(IsPlayerConnected(MedicCall))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(MedicCall, giveplayer, sizeof(giveplayer));
					format(YCMDstr, 128, "Вы приняли запрос от %s.",giveplayer);
					SCM(playerid, 0x6495EDFF, YCMDstr);
					format(YCMDstr, 128, "Медик %s принял ваш вызов!",sendername);
					SCM(MedicCall, COLOR_GREEN, YCMDstr);
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(MedicCall, X, Y, Z);
					SetPlayerCheckpoint(playerid, X, Y, Z, 5);
					MedicCall = 999;
					return true;
				}
			}
			else return SCM(playerid, COLOR_GREY, "Вызовов нет!");
		}
		else return SCM(playerid, COLOR_GREY, "Вы не медик!");
	}
	else if(strcmp(x_job, "police",true) == 0)
	{
		if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, "Вы не полицейский!");
		if(FL[playerid][PoliceCallTime] > 0) return  SCM(playerid, COLOR_GREY, "Вы уже приняли вызов!");
		if(PoliceCall < 999)
		{
			if(IsPlayerConnected(PoliceCall))
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerName(PoliceCall, giveplayer, sizeof(giveplayer));
				format(YCMDstr, 128, "Вы приняли вызов от %s",giveplayer);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				format(YCMDstr, 128, "Патрульный %s принял Ваш вызов!",sendername);
				SCM(PoliceCall, COLOR_GREEN, YCMDstr);
				new Float:X,Float:Y,Float:Z;
				GetPlayerPos(PoliceCall, X, Y, Z);
				SetPlayerCheckpoint(playerid, X, Y, Z, 5);
				PoliceCall = 999;
				return true;
			}
		}
		else return SCM(playerid, COLOR_GREY, "Вызовов нет!");
	}
	else if(strcmp(x_job, "mechanic",true) == 0)
	{
		if(PI[playerid][pJob] != 2) return SCM(playerid, COLOR_GREY, "Вы не механик!");
		if(FL[playerid][MechanicCallTime] > 0) return SCM(playerid, COLOR_GREY, "Вы уже приняли вызов!");
		if(MechanicCall < 999)
		{
			if(IsPlayerConnected(MechanicCall))
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerName(MechanicCall, giveplayer, sizeof(giveplayer));
				format(YCMDstr, 128, "Вы приняли вызов от %s",giveplayer);
				SCM(playerid, 0x6495EDFF, YCMDstr);
				format(YCMDstr, 128, "Механик %s принял Ваш вызов!",sendername);
				SCM(MechanicCall, COLOR_GREEN, YCMDstr);
				new Float:X,Float:Y,Float:Z;
				GetPlayerPos(MechanicCall, X, Y, Z);
				SetPlayerCheckpoint(playerid, X, Y, Z, 5);
				MechanicCall = 999;
				return true;
			}
		}
		else return SCM(playerid, COLOR_GREY, "Вызовов нет!");
	}
	else if(strcmp(x_job,"live",true) == 0)
	{
		if(FL[playerid][LiveOffer] < 999)
		{
			if(IsPlayerConnected(FL[playerid][LiveOffer]))
			{
				if(ProxDetectorS(5.0, playerid, FL[playerid][LiveOffer]))
				{
					TalkingLive[FL[playerid][LiveOffer]] = 2;
					SCM(FL[playerid][LiveOffer], COLOR_WHITE, "Введите: /live чтобы закончить интервью");
					gNews[playerid] = 0;
					gNews[FL[playerid][LiveOffer]] = 0;
					FL[playerid][LiveOffer] = 999;
					TalkingLive[playerid] = 2;
					SCM(playerid, COLOR_YELLOW, "Вы даёте интервью в прямом эфире радио San Andreas News");
					return true;
				}
				else return SCM(playerid, COLOR_GREY, "Вы далеко от репортёра");
			}
			return true;
		}
		else return SCM(playerid, COLOR_GREY, "Вам никто не предлагал дать интервью");
	}
	else if(strcmp(x_job, "refill",true) == 0)
	{
		if(FL[playerid][RefillOffer] < 999)
		{
			if(PI[playerid][pCash] > FL[playerid][RefillPrice])
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					if(IsPlayerConnected(FL[playerid][RefillOffer]))
					{
						GetPlayerName(FL[playerid][RefillOffer], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						Fuell[GetPlayerVehicleID(playerid)] = 100;
						PI[playerid][pFuelcar] = 100;
						format(YCMDstr, 128, "Механик %s заправил Ваш автомобиль на 100 литров за $%d",giveplayer,FL[playerid][RefillPrice]);
						SCM(playerid, 0x6495EDFF, YCMDstr);
						format(YCMDstr, 128, "Вы заправили машину %s за $%d.",sendername,FL[playerid][RefillPrice]);
						SCM(FL[playerid][RefillOffer], 0x6495EDFF, YCMDstr);
						PI[playerid][pCash] -= FL[playerid][RefillPrice];
						PI[FL[playerid][RefillOffer]][pCash] += FL[playerid][RefillPrice];
						FL[playerid][RefillOffer] = 999;
						FL[playerid][RefillPrice] = 0;
						return true;
					}
					return true;
				}
				return true;
			}
			else return SCM(playerid, COLOR_GREY, "У вас не хватает денег!");
		}
		else return SCM(playerid, COLOR_GREY, "Вам не предлагали заправить транспорт");
	}
	else if(strcmp(x_job, "zone",true) == 0)
	{
		if(FL[playerid][ZoneOffer] < 999)
		{
			if(IsPlayerConnected( FL[playerid][ZoneOffer]))
			{
				if(PI[playerid][pCash] > FL[playerid][ZonePrice])
				{
					for(new i = 0; i < sizeof(GZInfo); i++)
					{
						if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
						{
						    if(i == 28 || i == 34 || i == 46 || i == 58 || i == 82) return SCM(playerid, COLOR_GREY, "Данная территория прилегает к респавну, покупка запрещена!");
							if(GZInfo[i][gFrakVlad] != FL[playerid][sellzone]) return SCM(playerid, COLOR_WHITE, "Вам не предлагали купить эту территорию");
							if(IsCapture == 1) return SCM(playerid, COLOR_GREY, "Вы не можете купить территорию во время капта");
							GZInfo[i][gFrakVlad] = PI[playerid][pMember];
							GangZoneStopFlashForAll(GZInfo[i][gID]);
							GangZoneHideForAll(GZInfo[i][gID]);
							GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
							SaveGZ(i);
						}
					}
					GetPlayerName(FL[playerid][ZoneOffer], giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(YCMDstr, 128, "Вы купили территорию у %s за $%d.",giveplayer, FL[playerid][ZonePrice]);
					SCM(playerid, 0x6495EDFF, YCMDstr);
					format(YCMDstr, 128, "Вы продали территорию %s за $%d.",sendername,FL[playerid][ZonePrice]);
					SCM(FL[playerid][ZoneOffer], 0x6495EDFF, YCMDstr);
					PI[playerid][pCash] -= FL[playerid][ZonePrice];
					PI[FL[playerid][ZoneOffer]][pCash] += FL[playerid][ZonePrice];
					FL[playerid][ZoneOffer] = 999;
					FL[playerid][ZonePrice] = 0;
					FL[playerid][sellzone] = 0;
				}
				else return SCM(playerid, COLOR_GREY, "У вас недостаточно денег!");
			}
			return true;
		}
		else return SCM(playerid, COLOR_GREY, "Вам никто не предлагал территорию!");
	}
	else if(strcmp(x_job, "biz",true) == 0)
	{
		if(FL[playerid][BizOffer] < 999)
		{
			if(IsPlayerConnected(FL[playerid][BizOffer]))
			{
				if(PI[playerid][pCash] > FL[playerid][BizPrice])
				{
					for(new i = 1; i <= TotalBizz; i++)
					{
						if(PlayerToPoint(3.0, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
						{
							if(BizWarTime > gettime()) return SCM(playerid,COLOR_WHITE,"Сейчас идёт война за бизнес. Продажа невозможна!");
							BizzInfo[i][bMafia] = PI[playerid][pMember];
							SaveMySQL(2,i);
						}
					}
					GetPlayerName(FL[playerid][BizOffer], giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(YCMDstr, 128, "Вы купили контроль над бизнесом у %s за $%d.",giveplayer, FL[playerid][BizPrice]);
					SCM(playerid, 0x6495EDFF, YCMDstr);
					format(YCMDstr, 128, "Вы продали контроль над бизнесом игроку %s за $%d.",sendername,FL[playerid][BizPrice]);
					SCM(FL[playerid][ZoneOffer], 0x6495EDFF, YCMDstr);
					PI[playerid][pCash] -= FL[playerid][BizPrice];
					PI[FL[playerid][BizOffer]][pCash] += FL[playerid][BizPrice];
					FL[playerid][BizOffer] = 999;
					FL[playerid][BizPrice] = 0;
					FL[playerid][sellbiz] = 0;
				}
				else return SCM(playerid, COLOR_GREY, "У Вас недостаточно денег!");
			}
			return true;
		}
		else return SCM(playerid, COLOR_GREY, "Вам никто не предлагал купить контроль над бизнесом!");
	}
	else if(strcmp(x_job, "repair",true) == 0)
	{
		if(FL[playerid][RepairOffer] < 999)
		{
			if(PI[playerid][pCash] > FL[playerid][RepairPrice])
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					if(IsPlayerConnected(FL[playerid][RepairOffer]))
					{
						GetPlayerName(FL[playerid][RepairOffer], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						FL[playerid][RepairCar] = GetPlayerVehicleID(playerid);
						AC_RepairVeh(GetPlayerVehicleID(playerid));
						SetVehicleHealth(FL[playerid][RepairCar], 1000.0);
						format(YCMDstr, 128, "Вашу машину отремонтировал(а) за $%d, Механик %s", FL[playerid][RepairPrice], giveplayer);
						SCM(playerid, 0x6495EDFF, YCMDstr);
						format(YCMDstr, 128, "Вы починили атомобиль %s за $%d",sendername,FL[playerid][RepairPrice]);
						SCM(FL[playerid][RepairOffer], 0x6495EDFF, YCMDstr);
						PI[playerid][pCash] -= FL[playerid][RepairPrice];
						PI[FL[playerid][RepairOffer]][pCash] += FL[playerid][RepairPrice];
						FL[playerid][RepairOffer] = 999;
						FL[playerid][RepairPrice] = 0;
						return true;
					}
					return true;
				}
				return true;
			}
			else return SCM(playerid, COLOR_GREY, "У вас не хватает денег!");
		}
		else return SCM(playerid, COLOR_GREY, "Вам не предлагали чинить машину!");
	}
	else
	{
		return true;
	}
	return true;
}
CMD:refill(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pJob] != 2) return SCM(playerid, COLOR_GREY, "Вы не механик!");
	if(sscanf(params, "u", params[0])) return SCM(playerid, COLOR_GRAD2, "Введите: /refill [id]");
	if(!IsPlayerConnected(params[0])) return true;
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SCM(playerid, COLOR_GREY, "Вы не на эвакуаторе!");
	if(!ProxDetectorS(8.0, playerid, params[0]) || !IsPlayerInAnyVehicle(params[0])) return true;
	if(FL[playerid][gcontract] != 1) return SCM(playerid, COLOR_GREY, "У Вас не подписан контракт с заправкой!");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Вы не можете заправлять самого себя");
	format(YCMDstr, 256, "Вы предложили %s заправить его машину за $%d.",Name(params[0]),FL[playerid][cenabenza]);
	SCM(playerid, 0x6495EDFF, YCMDstr);
	format(YCMDstr, 256, "Механик %s предлагает заправить Ваш автомобиль за $%d. (( /accept refill ))",Name(playerid),FL[playerid][cenabenza]);
	SCM(params[0], 0x6495EDFF, YCMDstr);
	FL[params[0]][RefillOffer] = playerid;
	FL[params[0]][RefillPrice] = FL[playerid][cenabenza];
	return true;
}
CMD:changehouse(playerid, params[])
{
	if(sscanf(params,"dd",params[0],params[1]))  return SCM(playerid, COLOR_GREY, "Введите: /changehouse [id] [цена]");
	if(PI[playerid][pPhousekey] == 999) return SCM(playerid, COLOR_GREY, "У Вас нет дома");
	if(!IsPlayerConnected(params[0])) return 1;
	if(!ProxDetectorS(5.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, "Вы далеко от покупателя");
	if(params[1] < 1 || params[1] > 5000000) return SCM(playerid, COLOR_GREY, "Цена не может быть меньше $1 и больше $5000000");
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Вы не можете продать дом самому себе");
	if(PI[params[0]][pPhousekey] != 999) return SCM(playerid, COLOR_GREY, "У этого игрока есть дом.");
	if(PI[params[0]][pPhotelkey] != 999) return SCM(playerid, COLOR_GREY, "У этого игрока есть номер в отеле!");
	if(GetPVarInt(params[0],"Prodaet") == 1) return SCM(playerid,COLOR_GREY,"У игрока не подтверждена другая сделка!");
	SCMF(params[0],0x6495EDFF,"%s предлагает Вам купить его дом за $%d. Купить: {FFD700}/accept house{FFFFFF}. Для отказа, нажмите - {FF8C00}N{FFFFFF}.", Name(playerid), params[1]);
	SCMF(playerid,0x6495EDFF,"Вы предложили игроку %s купить Ваш дом за $%d.", Name(params[0]), params[1]);
	SetPVarInt(params[0], "hProdaet", playerid);
	SetPVarInt(params[0], "hCena", params[1]);
	SetPVarInt(params[0], "Prodaet", 1);
	SetPVarInt(playerid, "SellHouse", 1);
	return 1;
}
CMD:changecar1(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countingch1") > gettime()) return SCM(playerid, 0xFF0000FF, "Команду можно использовать раз в 10 минут.");
	if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Продажа транспорта игроку: /changecar1 [id] [цена]");
	if(caridhouse[playerid][0] == 0) return SCM(playerid,0xAFAFAFAA, "У Вас нет автомобиля на 1 слоте");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, "Игрока нет в сети");
	if(IsADonatCar1(playerid)) return SCM(playerid, COLOR_GREY, "Вы не можете продать донат транспорт");
	if(IsADonatCar1(params[0])) return SCM(playerid, COLOR_GREY, "У этого игрока нельзя купить донат транспорт");
	if(params[1] < 1 || params[1] > 3000000) return SCM(playerid, 0xAFAFAFAA, "Нельзя меньше $1, и больше $3000000!");
	if(params[0] == playerid) return SCM(playerid, 0xAFAFAFAA, "Вы не можете продать самому себе машину!");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid,COLOR_GREY,"Игрок должен находиться рядом с Вами");
	if(PI[params[0]][pPhousekey] == 999 && PI[params[0]][pPhotelkey] == 999) return SCM(playerid, COLOR_GREY, "У игрока нет дома");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,0xFFFFFFFF,"Для совершения сделки - выйдите из транспорта!");
	if(FL[params[0]][CarOffer] != 999) return SCM(playerid,COLOR_GREY,"Ему уже кто-то предложил купить транспорт");
	if(GetPVarInt(params[0],"Prodaet") == 1) return SCM(playerid,COLOR_GREY,"У игрока не подтверждена другая сделка!");
	format(YCMDstr, 256, "%s (ID: %i) предложил купить его транспорт. Модель: %s | Цена: %d | Слот 1",
	Name(playerid), playerid,VehicleNames[GetVehicleModel(caridhouse[playerid][0])-400], params[1]);
	SCM(params[0],COLOR_LIGHTBLUE, YCMDstr);
	format(YCMDstr, 256, "Вы предложили %s' (ID: %i) купить свой транспорт. Модель: %s, Доплата: %i. | Слот 1",Name(params[0]), params[0], VehicleNames[GetVehicleModel(caridhouse[playerid][0])-400], params[1]);
	SCM(playerid,COLOR_LIGHTBLUE, YCMDstr);
	SCM(params[0],COLOR_WHITE,"Для совершения покупки, введите - {FFD700}/accept car 1{FFFFFF}. Для отказа, нажмите - {FF8C00}N{FFFFFF}.");
	FL[params[0]][CarOffer] = playerid;
	FL[params[0]][CarPrice] = params[1];
	SetPVarInt(params[0], "Prodaet", 1);
 	SetPVarInt(playerid, "SellCar", 1);
	SetPVarInt(playerid,"Countingch1",gettime() + 600);
	return true;
}
CMD:changecar2(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countingch2") > gettime() ) return SCM(playerid, 0xFF0000FF, "Команду можно использовать раз в 10 минут.");
	if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Продажа транспорта игроку: /changecar2 [id] [цена]");
	if(caridhouse[playerid][1] == 0) return SCM(playerid,0xAFAFAFAA, "У Вас нет автомобиля на 2 слоте");
	if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_GREY, "Игрока нет в сети");
	if(IsADonatCar2(playerid)) return SCM(playerid, COLOR_GREY, "Вы не можете продать донат транспорт");
	if(IsADonatCar2(params[0])) return SCM(playerid, COLOR_GREY, "У этого игрока нельзя купить донат транспорт");
	if(params[1] < 1 || params[1] > 3000000) return SCM(playerid, 0xAFAFAFAA, "Нельзя меньше $1, и больше $3000000!");
	if(params[0] == playerid) return SCM(playerid, 0xAFAFAFAA, "Вы не можете продать самому себе машину!");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid,COLOR_GREY,"Игрок должен находиться рядом с Вами");
	if(PI[params[0]][pPhousekey] == 999 && PI[params[0]][pPhotelkey] == 999) return SCM(playerid, COLOR_GREY, "У игрока нет дома");
	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid,0xFFFFFFFF,"Для совершения сделки - выйдите из транспорта!");
	if(FL[params[0]][CarOffer2] != 999) return SCM(playerid,COLOR_GREY,"Ему уже кто-то предложил купить транспорт");
	if(GetPVarInt(params[0],"Prodaet") == 1) return SCM(playerid,COLOR_GREY,"У игрока не подтверждена другая сделка!");
	format(YCMDstr, 256, "%s (ID: %i) предложил купить его транспорт. Модель: %s | Цена: %d | Слот 2",
	Name(playerid), playerid,VehicleNames[GetVehicleModel(caridhouse[playerid][1])-400], params[1]);
	SCM(params[0],COLOR_LIGHTBLUE, YCMDstr);
	format(YCMDstr, 256, "Вы предложили %s' (ID: %i) купить свой транспорт. Модель: %s, Доплата: %i. | Слот 2",Name(params[0]), params[0], VehicleNames[GetVehicleModel(caridhouse[playerid][1])-400], params[1]);
	SCM(playerid,COLOR_LIGHTBLUE, YCMDstr);
	SCM(params[0],COLOR_WHITE,"Для совершения покупки, введите - {FFD700}/accept car 2{FFFFFF}. Для отказа, нажмите - {FF8C00}N{FFFFFF}.");
	FL[params[0]][CarOffer2] = playerid;
	FL[params[0]][CarPrice2] = params[1];
	SetPVarInt(params[0], "Prodaet", 1);
	SetPVarInt(playerid, "SellCar", 1);
	SetPVarInt(playerid,"Countingch2",gettime() + 600);
	return true;
}
CMD:repair(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(PI[playerid][pJob] != 2) return SCM(playerid, COLOR_GREY, "Вы не механик!");
	if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, COLOR_GRAD2, "Введите: /repair [id] [цена]");
	if(params[1] < 1 || params[1] > 1000) return SCM(playerid, COLOR_GREY, "Нельзя меньше $1, и больше $1000");
	if(!IsPlayerConnected(params[0])) return true;
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SCM(playerid, COLOR_GREY, "Вы не на эвакуаторе!");
	if(!ProxDetectorS(8.0, playerid, params[0]) || !IsPlayerInAnyVehicle(params[0])) return true;
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Вы не можете чинить машину самому себе");
	format(YCMDstr, 256, "Вы предложили %s отремонтировать его машину за $%d.",Name(params[0]),params[1]);
	SCM(playerid, 0x6495EDFF, YCMDstr);
	format(YCMDstr, 256, "Механик %s предлагает отремонтировать Ваш автомобиль за $%d. (( /accept repair ))",Name(playerid),params[1]);
	SCM(params[0], 0x6495EDFF, YCMDstr);
	FL[params[0]][RepairOffer] = playerid;
	FL[params[0]][RepairPrice] = params[1];
	return true;
}
CMD:pull(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsACop(playerid)) return SCM(playerid, COLOR_GREY, "Вы не полицейский!");
	if(sscanf(params, "u", params[0])) return	SCM(playerid, COLOR_WHITE, "Введите: /pull [id]");
	if (PI[playerid][pMember] == 1 || PI[playerid][pLeader] == 1 || PI[playerid][pMember] == 2 || PI[playerid][pLeader] == 2 || PI[playerid][pMember] == 10 || PI[playerid][pLeader] == 10 || PI[playerid][pMember] == 21 || PI[playerid][pLeader] == 21)
	if(!ProxDetectorS(8.0, playerid, params[0])) return true;
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Вы не можете выкинуть из машины себя!");
	format(YCMDstr, 128, "Вы выкинули из машины %s",Name(params[0]));
	SCM(playerid, 0x6495EDFF, YCMDstr);
	format(YCMDstr, 128, "Вас выкинул из машины офицер %s",Name(playerid));
	SCM(params[0], 0x6495EDFF, YCMDstr);
	RemovePlayerFromVehicleAC(params[0]);
	return true;
}
CMD:eject(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(!IsPlayerInAnyVehicle(playerid)) return true;
	new State = GetPlayerState(playerid);
	if(State != PLAYER_STATE_DRIVER) return SCM(playerid,COLOR_GREY, "Вы не водитель!");
	if(sscanf(params, "u", params[0])) return	SCM(playerid, COLOR_WHITE, "Введите: /eject [id]");
	new test = GetPlayerVehicleID(playerid);
	if(!IsPlayerConnected(params[0])) return true;
	if(params[0] == playerid) return SCM(playerid, COLOR_GREY, "Вы не можете выкинуть из машины себя!");
	if(!IsPlayerInVehicle(params[0],test)) return true;
	format(YCMDstr, 128, "Вы выкинули из машины %s",Name(params[0]));
	SCM(playerid, 0x6495EDFF, YCMDstr);
	format(YCMDstr, 128, "Вас выкинул из машины %s",Name(playerid));
	SCM(params[0], 0x6495EDFF, YCMDstr);
	RemovePlayerFromVehicleAC(params[0]);
	return true;
}
CMD:croupier(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	new bouse = PI[playerid][pPbiskey];
	if(PI[playerid][pPbiskey] != 48 && PI[playerid][pPbiskey] != 49) return SCM(playerid,COLOR_GRAD1, "Вы не владелец казино");
	if(sscanf(params, "ii",params[0],params[1]) || (params[0] == playerid && params[0] > -1)) return SCM(playerid, COLOR_WHITE, "Введите: /croupier [playerid (-1 для увольнения)] [слот (0 - 4)]");
	if(params[0] > -1 && PI[params[0]][pMember]) return SCM(playerid,COLOR_GREY,"Этот человек состоит в организации!");
	if(params[0] == playerid) return SCM(playerid,COLOR_GRAD1, "[Ошибка] Вы указали свой ID");
	switch(params[1])
	{
	case 0:
		{
			if(params[0] == -1) return strmid(BizzInfo[bouse][caKrupie1],"-", 0, strlen("-"), 32), SCM(playerid, COLOR_BLUE, "Вы уволили крупье с 0 слота");
			else strmid(BizzInfo[bouse][caKrupie1],PI[params[0]][pName], 0, strlen(PI[params[0]][pName]), 32);
		}
	case 1:
		{
			if(params[0] == -1) return strmid(BizzInfo[bouse][caKrupie2],"-", 0, strlen("-"), 32), SCM(playerid, COLOR_BLUE, "Вы уволили крупье с 1 слота");
			else strmid(BizzInfo[bouse][caKrupie2],PI[params[0]][pName], 0, strlen(PI[params[0]][pName]), 32);
		}
	case 2:
		{
			if(params[0] == -1) return strmid(BizzInfo[bouse][caKrupie3],"-", 0, strlen("-"), 32), SCM(playerid, COLOR_BLUE, "Вы уволили крупье с 2 слота");
			else strmid(BizzInfo[bouse][caKrupie3],PI[params[0]][pName], 0, strlen(PI[params[0]][pName]), 32);
		}
	case 3:
		{
			if(params[0] == -1) return strmid(BizzInfo[bouse][caKrupie4],"-", 0, strlen("-"), 32), SCM(playerid, COLOR_BLUE, "Вы уволили крупье с 3 слота");
			else strmid(BizzInfo[bouse][caKrupie4],PI[params[0]][pName], 0, strlen(PI[params[0]][pName]), 32);
		}
	case 4:
		{
			if(params[0] == -1) return strmid(BizzInfo[bouse][caKrupie5],"-", 0, strlen("-"), 32), SCM(playerid, COLOR_BLUE, "Вы уволили крупье с 4 слота");
			else strmid(BizzInfo[bouse][caKrupie5],PI[params[0]][pName], 0, strlen(PI[params[0]][pName]), 32);
		}
	default: return SCM(playerid,COLOR_GREY,"Неверный слот!");
	}
	SendMes(params[0], COLOR_BLUE, "%s назначил Вас на должность крупье [%i]",PI[playerid][pName],params[1]);
	SendMes(playerid, COLOR_BLUE, "Вы назначили %s на должность крупье [%i]",PI[params[0]][pName],params[1]);
	return true;
}
CMD:twist(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetKrupie(playerid,48) != 1 && GetKrupie(playerid,49) != 1) return SCM(playerid,COLOR_GREY,"Вы не крупье.");
	if(GetPVarInt(playerid,"CasinoForma") == 0) return SCM(playerid, COLOR_GREY, "Вы не в форме крупье.");
	if(GetPVarInt(playerid,"Roulet")) return SCM(playerid,COLOR_GREY,"Вы уже запустили рулетку!");
	if(!GetRoulet(playerid)) return SCM(playerid,COLOR_GREY,"В данном месте нет рулетки!");
	if(PlayRoulette[GetRoulet(playerid)]) return SCM(playerid,COLOR_GREY,"Рулетка уже запущена!");
	SetPVarInt(playerid,"Roulet",GetRoulet(playerid));
	TimerRoulette[GetRoulet(playerid)][0x2] = random(80) + 70;
	PlayRoulette[GetRoulet(playerid)] = true;
	TimerRoulette[GetRoulet(playerid)][0x0] = SetTimerEx("RouletCheck",100,1,"d",GetRoulet(playerid));
	DealerRoulette[GetRoulet(playerid)] = playerid;
	return true;
}
CMD:dice(playerid, params[])
{
	if(PI[playerid][pLogin] == 0) return true;
	if(GetPVarInt(playerid,"Countingdice") > gettime()) return SCM(playerid, 0xFF0000FF, "Предлагать игру можно раз в 5 секунд.");
	SetPVarInt(playerid,"Countingdice",gettime() + 5);
	if(PlayerToPoint(7.0,playerid,1953.2626,997.4374,992.8594) || PlayerToPoint(7.0,playerid,1953.4767,1037.9865,992.8594) || PlayerToPoint(7.0,playerid,2219.1223,1601.3096,1006.1797) || PlayerToPoint(7.0,playerid,2219.2183,1605.8140,1006.1797))
	{
		if(sscanf(params, "ud", params[0],params[1])) return SCM(playerid, COLOR_WHITE, "Введите: /dice [id игрока] [ставка]");
		if(!ProxDetectorS(8.0, playerid, params[0])) return SCM(playerid, COLOR_GREY, "Игрок не рядом с вами!");
		if(params[1] < 5000 || params[1] > 1000000) return SCM(playerid, COLOR_WHITE, "Минимальная ставка $5.000 максимальная $1.000.000");
		if(GetPVarInt(params[0], "ZapretDice") == 1) return SCM(playerid, COLOR_WHITE, "В данный момент игрок не может играть!");
		if(GetPVarInt(params[0], "ProverkaDice") == 1) return SCM(playerid, COLOR_WHITE, "Игрок не подтвердил ставку!");
		if(PI[params[0]][pCash] < params[1]) return SCM(playerid, -1, "У этого игрока нет столько денег!");
		if(PI[playerid][pCash] < params[1]) return SCM(playerid,COLOR_GREY,"У Вас недостаточно денег!");
		if(!IsPlayerConnected(params[0])) return SCM(playerid, COLOR_WHITE, "Игрок оффлайн");
		if(params[0] == playerid) return SCM(playerid, COLOR_WHITE, "Вы указали свой ID");
		SCMF(playerid, 0x269BD8FF, "Вы предложили {FFFFFF}%s бросить кости. Ставка: {FFFFFF}$%i",Name(params[0]),params[1]);
		format(YCMDstr,128,"%s предлагает бросить кости. Ставка: $%i.",Name(playerid),params[1]);
		SPDEx(params[0],1362,0,"Бросить кости?",YCMDstr,"Да","Нет");
		SetPVarInt(playerid, "ZapretDice",1);
		SetPVarInt(params[0], "KostiName",playerid);
		SetPVarInt(params[0], "KostiMoney",params[1]);
		SetPVarInt(params[0], "ProverkaDice",1);
	}
	return true;
}
//------------------------------------------------------------------------------
publics: ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for(new idx=0, i=0; idx<cvector_size(players); idx++)
		{
			i = cvector_get(players, idx);
			if(IsPlayerConnected(i))
			{
				if(!BigEar[i])
				{
					if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
					{
						GetPlayerPos(i, posx, posy, posz);
						tempposx = (oldposx -posx);
						tempposy = (oldposy -posy);
						tempposz = (oldposz -posz);
						if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
						{
							SCM(i, col1, string);
						}
						else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
						{
							SCM(i, col2, string);
						}
						else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
						{
							SCM(i, col3, string);
						}
						else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
						{
							SCM(i, col4, string);
						}
						else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
						{
							SCM(i, col5, string);
						}
					}
				}
				else
				{
					SCM(i, col1, string);
				}
			}
		}
	}
	return true;
}
publics: ProxDetectorS(Float:radi, playerid, targetid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return true;
		}
	}
	return false;
}
publics: ClearMarriage(playerid)
{
	if(!IsPlayerConnected(playerid))
	{
		mysql_format(DATABASE,YCMDstr, 128, "UPDATE accounts SET pMarriedTo = '-', pMarried = '0' WHERE Name = '%s'",Name(playerid));
		mysql_function_query(DATABASE,YCMDstr,false,"","");
	}
	else strmid(PI[playerid][pMarriedTo],"-", 0, strlen("-"), 32);
	return true;
}
public OnPlayerText(playerid, text[])
{
	if(GetPVarInt(playerid,"AntiSbivAnim") == 1) return 0;
	if(PI[playerid][pMuted] == 1)
	{
		format(YCMDstr, 55, "У Вас бан чата! До снятия: %d секунд(ы)",PI[playerid][pMuteTime]);
		SCM(playerid, 0xFF6347AA, YCMDstr);
		SetPlayerChatBubble(playerid, "Заткнут(а)",COLOR_PURPLE,30.0,10000);
		return false;
	}
	AntiReklama(playerid,text,"Чат");
	if(GetPVarInt(playerid, "antireklamka") == 1)
	{
		SetPVarInt(playerid, "antireklamka", 0);
		return false;
	}
	new sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	new tmp[128];
	new ip[26];
	new giveplayer[MAX_PLAYER_NAME];
	GetPlayerIp(playerid,ip,sizeof(ip));
	if(IsIP(text) || CheckString(text))
	{
		PI[playerid][pMuteTime] = 3600;
		PI[playerid][pMuted] = 1;
		format(YCMDstr, 128, "%s: %s",sendername,text);
		ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
		format(YCMDstr, 128, "ID: %d | IP: [%s]",playerid,ip);
		ABroadCast(COLOR_LIGHTRED,YCMDstr,1);
		format(YCMDstr,128, "[Warning] Вы получили бан чата на 60 минут!");
		SCM(playerid, COLOR_LIGHTRED, YCMDstr);
		SetPlayerChatBubble(playerid, "заткнут(а)",COLOR_PURPLE,30.0,10000);
		return false;
	}
	if(TalkingLive[playerid] == 1)
	{
		format(YCMDstr, 128, "< [Тел] SA News > %s: %s", sendername, text);
		OOCNews(COLOR_GREEN, YCMDstr);
		Flood[playerid] = 2;
	}
	if(TalkingLive[playerid] == 2)
	{
		if(PI[playerid][pMember] == 9)
		{
			format(YCMDstr, 128, "< SA News > Ведущий %s: %s", sendername, text);
			OOCNews(COLOR_GREEN, YCMDstr);
			Flood[playerid] = 2;
			return false;
		}
		else
		{
			format(YCMDstr, 128, "< SA News > Гость %s: %s", sendername, text);
			OOCNews(COLOR_GREEN, YCMDstr);
			Flood[playerid] = 2;
			return false;
		}
	}
	if(FL[playerid][Tel] == 1)
	{
		new idx;
		tmp = strtok(text, idx);
		format(YCMDstr, 128, "[Телефон] %s: %s", sendername, text);
		ProxDetector(20.0, playerid, YCMDstr,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		Flood[playerid] = 4;
		return 0;
	}
	if(Mobile[playerid] != 999)
	{
		new idx;
		tmp = strtok(text, idx);
		format(YCMDstr, 128, "[Телефон] %s: %s", sendername, text);
		ProxDetector(20.0, playerid, YCMDstr,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		Flood[playerid] = 4;
	}
	if(IsPlayerConnected(Mobile[playerid]))
	{
		if(Mobile[Mobile[playerid]] == playerid)
		{
			SCM(Mobile[playerid], COLOR_YELLOW,YCMDstr);
		}
		else
		{
			SCM(playerid, COLOR_GRAD1,"На второй линии никого нет");
		}
		return 0;
	}
	if(FL[playerid][PEfir] != 255)
	{
		if(PI[playerid][pMember] == 9 || PI[playerid][pLeader] == 9)
		{
			format(YCMDstr, 128, "< SA News > %s: %s", sendername, text);
			OOCNews(COLOR_GREEN, YCMDstr);
			Flood[playerid] = 2;
		}
		if(FL[playerid][Pefir] == 1)
		{
			format(YCMDstr, 128, "< SA News > %s: %s", sendername, text);
			OOCNews(COLOR_GREEN, YCMDstr);
			Flood[playerid] = 2;
		}
		return false;
	}
	if(strcmp(text, "привет", true) == 0 || strcmp(text, "ку", true) == 0 || strcmp(text, "хай", true) == 0|| strcmp(text, "q", true) == 0 || strcmp(text, "re", true) == 0 || strcmp(text, "ghbdtn", true) == 0)
	{
		new suspect = GetClosestPlayer(playerid);
		GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(GetDistanceBetweenPlayers(playerid,suspect) < 2 && !IsPlayerInAnyVehicle(suspect) && !IsPlayerInAnyVehicle(playerid))
		{
			if(PI[playerid][pMember] == PI[suspect][pMember])
			{
				format(YCMDstr, 128, "%s пожал(а) руку %s'у", sendername ,giveplayer);
				ProxDetector(5.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(suspect, "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
				return false;
			}
		}
		switch(PI[playerid][pMember])
		{
		case 13:
			{
				format(YCMDstr,46, "показал(a) распальцовку Los Santos Vagos Gang");
				SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
				format(YCMDstr, 73, "%s показал(a) распальцовку Los Santos Vagos Gang", sendername);
				ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.0,0,0,0,0,0,1);
				return false;
			}
		case 15:
			{
				format(YCMDstr,42, "показал(a) распальцовку Grove Street Gang");
				SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
				format(YCMDstr, 69, "%s показал(a) распальцовку Grove Street Gang", sendername);
				ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.0,0,0,0,0,0,1);
				return false;
			}
		case 17:
			{
				format(YCMDstr,48, "показал(a) распальцовку Varrios Los Aztecas Gang");
				SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
				format(YCMDstr, 75, "%s показал(a) распальцовку Varrios Los Aztecas Gang", sendername);
				ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.0,0,0,0,0,0,1);
				return false;
			}
		case 12:
			{
				format(YCMDstr,40, "показал(a) распальцовку The Ballas Gang");
				SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
				format(YCMDstr, 67, "%s показал(a) распальцовку The Ballas Gang", sendername);
				ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.0,0,0,0,0,0,1);
				return false;
			}
		case 18:
			{
				format(YCMDstr,38, "показал(a) распальцовку The Rifa Gang");
				SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
				format(YCMDstr, 65, "%s показал(a) распальцовку The Rifa Gang", sendername);
				ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ApplyAnimation(playerid, "GHANDS", "gsign1LH",4.0,0,0,0,0,0,1);
				return false;
			}
		}
	}
	else if(strcmp(text, "xD", true) == 0 || strcmp(text, "xd", true) == 0 || strcmp(text, ":В", true) == 0 || strcmp(text, ":в", true) == 0 )
	{
		format(YCMDstr, 35, "%s смеётся", sendername);
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerChatBubble(playerid, "смеётся", COLOR_PURPLE, 30.0, 10000);
		return false;
	}
	else if(strcmp(text, "чВ", true) == 0 || strcmp(text, "хД", true) == 0 || strcmp(text, "хд", true) == 0 || strcmp(text, "xDD", true) == 0)
	{
		format(YCMDstr, 45, "%s валяется от смеха", sendername);
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerChatBubble(playerid, "валяется от смеха",COLOR_PURPLE,30.0,10000);
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			ApplyAnimation(playerid, "FINALE", "FIN_Land_Die",4.1,0,1,1,1,1,1);
			SetTimerEx("ClearAnim", 2400, false, "d", playerid);
		}
		return false;
	}
	else if(strcmp(text, ")", true) == 0 || strcmp(text, "))", true) == 0)
	{
		format(YCMDstr, 37, "%s улыбается", sendername);
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerChatBubble(playerid, "улыбается",COLOR_PURPLE,30.0,10000);
		return false;
	}
	else if(strcmp(text, "(", true) == 0 || strcmp(text, "((", true) == 0)
	{
		format(YCMDstr, 40, "%s расстроился", sendername);
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerChatBubble(playerid, "расстроился",COLOR_PURPLE,30.0,10000);
		return false;
	}
	else if(strcmp(text, ":D", true) == 0)
	{
		format(YCMDstr, 50, "%s хохочет во весь голос", sendername);
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPlayerChatBubble(playerid, "хохочет во весь голос",COLOR_PURPLE,30.0,10000);
		return false;
	}
	if(realchat)
	{
		if(Flood[playerid] > 0)
		{
			SCM(playerid,0xFFD5BBAA, "Не флуди!");
			SetPVarInt(playerid,"Flood",GetPVarInt(playerid,"Flood")+1);
			if(GetPVarInt(playerid,"Flood") >= 8) Kick(playerid);
			return false;
		}
		if(PI[playerid][pLogin] == 0) return false;
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && Tazed[playerid] == 0)
		{
			ApplyAnimation(playerid, "PED", "IDLE_CHAT",4.1,0,1,1,1,1,1);
			SetTimerEx("ClearAnim", 2400, false, "d", playerid);
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(YCMDstr, 128, "[%s(%d)] сказал(а): %s", sendername,playerid, text);
		SetPlayerChatBubble(playerid, text, COLOR_WHITE, 20.0, 10000);
		ProxDetector(20.0, playerid, YCMDstr,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
		Flood[playerid] = 2;
		SetPVarInt(playerid,"Flood",0);
		return false;
	}
	return true;
}
publics: ClearAnim(playerid) return ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,0,1);
public OnPlayerUpdate(playerid)
{
    if(GetPVarInt(playerid, "PlayerInAFK") > -2)
	{
		if(GetPVarInt(playerid, "PlayerInAFK") > 2) SetPlayerChatBubble(playerid, " ", COLOR_RED, 20.0, 200);
		SetPVarInt(playerid, "PlayerInAFK", 0);
	}
	new carid = GetPlayerVehicleID(playerid);
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	if(GetRoulet(playerid) && !GetPVarInt(playerid,"RStol") && !GetKrupie(playerid,48) && !GetKrupie(playerid,49)) GameTextForPlayer(playerid,"~g~PRESS ENTER",1300,4);
	new Keys,up,dn;
	GetPlayerKeys(playerid,Keys,up,dn);
	if(GetPVarInt(playerid,"RStol") && !GetPVarInt(playerid,"RStavka"))
	{
		new Float:p;
		GetPlayerFacingAngle(playerid,p);
		switch(GetPVarInt(playerid,"RStol"))
		{
		case 1..4:
			{
				if(p >= 0 && p <= 190)
				{
					if(dn < 0) Down(playerid);
					else if(dn > 0) Up(playerid);
					else if(up < 0) Left(playerid);
					else if(up > 0) Right(playerid);
				}
				else
				{
					if(dn > 0) Down(playerid);
					else if(dn < 0) Up(playerid);
					else if(up > 0) Left(playerid);
					else if(up < 0) Right(playerid);
				}
			}
		default:
			{
				if(p >= 0 && p <= 130 || p >= 290 && p <= 360)
				{
					if(dn > 0) Down(playerid);
					else if(dn < 0) Up(playerid);
					else if(up > 0) Left(playerid);
					else if(up < 0) Right(playerid);
				}
				else
				{
					if(dn < 0) Down(playerid);
					else if(dn > 0) Up(playerid);
					else if(up < 0) Left(playerid);
					else if(up > 0) Right(playerid);
				}
			}
		}
	}
	if(walk_goto_me[playerid] > 0)
	{
		new id = walk_goto_me[playerid] - 1;
		new Float:X, Float:Y, Float:Z, Float:R;
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			GetPlayerPos(id,X,Y,Z);
			SetPlayerFaceToPoint(playerid, X, Y);

			new Float:GotoPos[3];
			new anim = GoPlayerAnimation(playerid,X,Y,Z);

			if(GetPlayerInterior(id) != GetPlayerInterior(playerid) || GetPlayerVirtualWorld(id) != GetPlayerVirtualWorld(playerid))
			{
				GetPlayerPos(id,X,Y,Z);
				SetPlayerPos(playerid,X,Y,Z);
				SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
				SetPlayerInterior(playerid,GetPlayerInterior(id));
			}

			if(anim != 1)
			{
				GotoPos[0]=GetPVarFloat(playerid,"CuffX");
				GotoPos[1]=GetPVarFloat(playerid,"CuffY");
				GotoPos[2]=GetPVarFloat(playerid,"CuffZ");

				if(IsPlayerInRangeOfPoint(playerid, 0.05, GotoPos[0],GotoPos[1],GotoPos[2]))
				{
					GetPlayerPos(playerid, X, Y, Z);
					GetPlayerFacingAngle(playerid, R);
					ShiftCords(X, Y, R, 1.5);
					SetPlayerPos(playerid, X, Y, Z);
				}

				GetPlayerPos(playerid,X,Y,Z);
				SetPVarFloat(playerid,"CuffX", X);
				SetPVarFloat(playerid,"CuffY", Z);
				SetPVarFloat(playerid,"CuffZ", Z);
			}
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		new Float:apos;
		GetVehicleZAngle(vehicleid, apos);
  		if(zavodis[vehicleid] == 1)
		{
			if(Signal[vehicleid] > 0 && Signal[vehicleid] < 3)
			{
				if(SignalTick[vehicleid][1] >= 0)
				{
    				SignalTick[vehicleid][1] --;
   		 			if(!SignalTick[vehicleid][1])
					{
						Signal[vehicleid] = 0;
						DestroyDynamicObject(LightsObject[vehicleid][0]);
						DestroyDynamicObject(LightsObject[vehicleid][1]);
						LightsObject[vehicleid][0] = -1;
						LightsObject[vehicleid][1] = -1;
					}
				}
				else if(jfloatsub(apos, SignalAngle[vehicleid]) > 50.0) SignalTick[vehicleid][1] = 20;
				SignalTick[vehicleid][0] ++;
				if(SignalTick[vehicleid][0] > 17) SignalTick[vehicleid][0] = 0;
			}
		}
	}
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerWeapon(playerid) == WEAPON_DEAGLE) SetPlayerArmedWeapon(playerid,0);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && (GetPlayerWeapon(playerid) == WEAPON_DEAGLE || GetPlayerWeapon(playerid) == WEAPON_SHOTGSPA || GetPlayerWeapon(playerid) == WEAPON_SAWEDOFF || GetPlayerWeapon(playerid) == WEAPON_MINIGUN || GetPlayerWeapon(playerid) == WEAPON_MP5)) SetPlayerArmedWeapon(playerid,0);
	return true;
}
publics: FixHour(hour)
{
	hour = timeshift+hour;
	if (hour < 0) hour = hour+24;
	else if (hour > 23) hour = hour-24;
	shifthour = hour;
	return true;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	new string[90];
	if(newkeys == 4)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) CallLocalFunction("OnPlayerCommandText", "is", playerid, "/lights");
	}
	if(newkeys & KEY_SECONDARY_ATTACK || (newkeys & KEY_SUBMISSION && newkeys & KEY_SECONDARY_ATTACK))
	{
		if(udar[playerid] >= 500)
		{
			SCM(playerid, COLOR_GRAD1, "Урок закончен, чтобы продолжить начните новый урок у тренера");
			ApplyAnimation(playerid, "FAT", "IDLE_tired",4.0,0,0,0,0,0,1);
			format(string,sizeof(string), "Устал");
			SetPlayerChatBubble(playerid,string,COLOR_PURPLE,30.0,10000);
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
 	{
  		new vehicleid = 0, model = 0;
    	vehicleid = GetPlayerVehicleID(playerid);
    	if(!IsAPlane(vehicleid) && !IsABoat(vehicleid) && !IsABike(vehicleid))
    	{
			if(PRESSED(KEY_ANALOG_LEFT))
			{
			    if(GetPVarInt(playerid,"KEY_ANALOG_LEFT") > gettime()) return SCM(playerid, 0xFF0000FF, "Поворотники можно включать/выключать раз в 2 секунды!");
				SetPVarInt(playerid,"KEY_ANALOG_LEFT",gettime() + 2);
	  			model = (GetVehicleModel(vehicleid)-400);
		    	if(LightsObject[vehicleid][0]!=-1) DestroyDynamicObject(LightsObject[vehicleid][0]), LightsObject[vehicleid][0]=-1;
	      		if(LightsObject[vehicleid][1]!=-1) DestroyDynamicObject(LightsObject[vehicleid][1]), LightsObject[vehicleid][1]=-1;
	        	if(LightsObject[vehicleid][2]!=-1) DestroyDynamicObject(LightsObject[vehicleid][2]), LightsObject[vehicleid][2]=-1;
	         	if(LightsObject[vehicleid][3]!=-1) DestroyDynamicObject(LightsObject[vehicleid][3]), LightsObject[vehicleid][3]=-1;
	    		if(Signal[vehicleid] == 1)
	      		{
	        		SignalTick[vehicleid][0] = 0;
	          		SignalTick[vehicleid][1] = -1;
	            	Signal[vehicleid] = 0;
		    	}
		    	else
			    {
	      			LightsObject[vehicleid][0] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
	         		LightsObject[vehicleid][1] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
	           		AttachDynamicObjectToVehicle(LightsObject[vehicleid][0], vehicleid, -LightsPos[model][0], LightsPos[model][1], LightsPos[model][2], 0, 0, 0);
	             	AttachDynamicObjectToVehicle(LightsObject[vehicleid][1], vehicleid, -LightsPos[model][3], LightsPos[model][4], LightsPos[model][5], 0, 0, 0);
		        	GetVehicleZAngle(vehicleid, SignalAngle[vehicleid]);
			        SignalTick[vehicleid][0] = 0;
			        SignalTick[vehicleid][1] = -1;
	    			Signal[vehicleid] = 1;
			    	SetPlayerChatBubble(playerid, (PI[playerid][pSex]==1)?("включил левый поворотник"):("включила левый поворотник"), COLOR_PURPLE, 13.0, 10000);
			    }
			}
			if(PRESSED(KEY_ANALOG_RIGHT))
			{
			    if(GetPVarInt(playerid,"KEY_ANALOG_RIGHT") > gettime()) return SCM(playerid, 0xFF0000FF, "Поворотники можно включать/выключать раз в 2 секунды!");
				SetPVarInt(playerid,"KEY_ANALOG_RIGHT",gettime() + 2);
	  			model = (GetVehicleModel(vehicleid)-400);
		    	if(LightsObject[vehicleid][0]!=-1) DestroyDynamicObject(LightsObject[vehicleid][0]), LightsObject[vehicleid][0]=-1;
	      		if(LightsObject[vehicleid][1]!=-1) DestroyDynamicObject(LightsObject[vehicleid][1]), LightsObject[vehicleid][1]=-1;
	        	if(LightsObject[vehicleid][2]!=-1) DestroyDynamicObject(LightsObject[vehicleid][2]), LightsObject[vehicleid][2]=-1;
	        	if(LightsObject[vehicleid][3]!=-1) DestroyDynamicObject(LightsObject[vehicleid][3]), LightsObject[vehicleid][3]=-1;
			    if(Signal[vehicleid] == 2)
	        	{
	        		SignalTick[vehicleid][0] = 0;
	        		SignalTick[vehicleid][1] = -1;
	        		Signal[vehicleid] = 0;
		    	}
			    else
		    	{
					LightsObject[vehicleid][0] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
	    			LightsObject[vehicleid][1] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
	   				AttachDynamicObjectToVehicle(LightsObject[vehicleid][0], vehicleid, LightsPos[model][0], LightsPos[model][1], LightsPos[model][2], 0, 0, 0);
	       			AttachDynamicObjectToVehicle(LightsObject[vehicleid][1], vehicleid, LightsPos[model][3], LightsPos[model][4], LightsPos[model][5], 0, 0, 0);
	       			GetVehicleZAngle(vehicleid, SignalAngle[vehicleid]);
	   				SignalTick[vehicleid][0] = 0;
	       			SignalTick[vehicleid][1] = -1;
				   	Signal[vehicleid] = 2;
				   	SetPlayerChatBubble(playerid, (PI[playerid][pSex]==1)?("включил правый поворотник"):("включила правый поворотник"), COLOR_PURPLE, 13.0, 10000);
	    		}
			}
			if(PRESSED(KEY_ANALOG_UP))
			{
			    if(GetPVarInt(playerid,"KEY_ANALOG_UP") > gettime()) return SCM(playerid, 0xFF0000FF, "Аварийку можно включать/выключать раз в 2 секунды!");
				SetPVarInt(playerid,"KEY_ANALOG_UP",gettime() + 2);
	  			model = (GetVehicleModel(vehicleid)-400);
		    	if(LightsObject[vehicleid][0]!=-1) DestroyDynamicObject(LightsObject[vehicleid][0]), LightsObject[vehicleid][0]=-1;
	      		if(LightsObject[vehicleid][1]!=-1) DestroyDynamicObject(LightsObject[vehicleid][1]), LightsObject[vehicleid][1]=-1;
	        	if(LightsObject[vehicleid][2]!=-1) DestroyDynamicObject(LightsObject[vehicleid][2]), LightsObject[vehicleid][2]=-1;
	         	if(LightsObject[vehicleid][3]!=-1) DestroyDynamicObject(LightsObject[vehicleid][3]), LightsObject[vehicleid][3]=-1;
			    if(Signal[vehicleid] == 3) Signal[vehicleid] = 0;
			    else
			    {
					LightsObject[vehicleid][0] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
	    			LightsObject[vehicleid][1] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
	       			LightsObject[vehicleid][2] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
	          		LightsObject[vehicleid][3] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
	            	AttachDynamicObjectToVehicle(LightsObject[vehicleid][0], vehicleid, LightsPos[model][0], LightsPos[model][1], LightsPos[model][2], 0, 0, 0);
	             	AttachDynamicObjectToVehicle(LightsObject[vehicleid][1], vehicleid, LightsPos[model][3], LightsPos[model][4], LightsPos[model][5], 0, 0, 0);
	              	AttachDynamicObjectToVehicle(LightsObject[vehicleid][2], vehicleid, -LightsPos[model][0], LightsPos[model][1], LightsPos[model][2], 0, 0, 0);
	               	AttachDynamicObjectToVehicle(LightsObject[vehicleid][3], vehicleid, -LightsPos[model][3], LightsPos[model][4], LightsPos[model][5], 0, 0, 0);
			        GetVehicleZAngle(vehicleid, SignalAngle[vehicleid]);
			    	Signal[vehicleid] = 3;
			    	SetPlayerChatBubble(playerid, (PI[playerid][pSex]==1)?("включил аварийный сигнал"):("включила аварийный сигнал"), COLOR_PURPLE, 13.0, 10000);
	    		}
			}
		}
  	}
	if(newkeys == KEY_SPRINT)
	{
		if(GetPVarInt(playerid,"RStol") && !GetPVarInt(playerid,"RStavka") && !PlayRoulette[GetPVarInt(playerid,"RStol")])
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1,5,12: SPDEx(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 500 вирт\nМаксимальняа ставка: 5000 вирт\nВведите сумму:","Играть","Закрыть");
			case 2,7,10: SPDEx(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 2000 вирт\nМаксимальняа ставка: 20000 вирт\nВведите сумму:","Играть","Закрыть");
			case 3,8,11: SPDEx(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 5000 вирт\nМаксимальняа ставка: 50000 вирт\nВведите сумму:","Играть","Закрыть");
			case 4,6,9: SPDEx(playerid,5576,DIALOG_STYLE_INPUT,"Ставка","Минимальная ставка: 10000 вирт\nМаксимальняа ставка: 100000 вирт\nВведите сумму:","Играть","Закрыть");
			}
		}
	}
	if(newkeys == KEY_CROUCH)
	{
		for(new a = 0; a < MAX_DROP_GUN; a++)
		{
			if(GetPlayerVirtualWorld(playerid) == GunInfo[a][Virtual])
			{
				if(IsPlayerInRangeOfPoint(playerid, 1.5, GunInfo[a][ObjPos][0], GunInfo[a][ObjPos][1], GunInfo[a][ObjPos][2]))
				{
					if(a > MAX_DROP_GUN) return SCM(playerid, COLOR_GRAD1, "Вы не можете подобрать оружие. Превышен максимальный лимит.");
					if(PI[playerid][pLevel] < 3) return SCM(playerid, COLOR_GRAD1, "Вам требуется 3+ игровой уровень.");
					if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SCM(playerid, COLOR_GRAD1, "Вы находитесь в транспорте.");
					DestroyDynamicObject(GunInfo[a][ObjID]);
					DestroyDynamic3DTextLabel(GunInfo[a][Label]);
					_GiveGun(playerid,GunInfo[a][ObjData][0], GunInfo[a][ObjData][1]);
					GetWeaponName(GunInfo[a][ObjData][0], YCMDstr, 128);
					format(YCMDstr, 128, "Вы подобрали %s[%d пт.]", YCMDstr, GunInfo[a][ObjData][1]);
					SCM(playerid, COLOR_ORANGE, YCMDstr);
					GunInfo[a][ObjData][0] = 0;
					GunInfo[a][ObjData][1] = 0;
					GunInfo[a][ObjPos][0] = 0.0;
					GunInfo[a][ObjPos][1] = 0.0;
					GunInfo[a][ObjPos][2] = 0.0;
					GunInfo[a][ObjID] = -1;
					GunInfo[a][Virtual] = -1;
					GunInfo[a][Interior] = -1;
					GunInfo[a][ObjID] = -1;
					ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
				}
			}
		}
	}
	//--------------------------------------------------------------------------
	if((newkeys & 1) || ((newkeys & 1) && (oldkeys & 1) && (newkeys & 1))
		|| (newkeys & 2) || ((newkeys & 2) && (oldkeys & 2) && (newkeys & 2))
		|| (newkeys & 4) || ((newkeys & 4) && (oldkeys & 4) && (newkeys & 4))
		|| (newkeys & 8) || ((newkeys & 8) && (oldkeys & 8) && (newkeys & 8))
		|| (newkeys & 16) || ((newkeys & 16) && (oldkeys & 16) && (newkeys & 16))
		|| (newkeys & 32) || ((newkeys & 32) && (oldkeys & 32) && (newkeys & 32))
		|| (newkeys & 64) || ((newkeys & 64) && (oldkeys & 64) && (newkeys & 64))
		|| (newkeys & 128) || ((newkeys & 128) && (oldkeys & 128) && (newkeys & 128))
		|| (newkeys & 256) || ((newkeys & 256) && (oldkeys & 256) && (newkeys & 256))
		|| (newkeys & 1024) || ((newkeys & 1024) && (oldkeys & 1024) && (newkeys & 1024))
		|| (newkeys & 2048) || ((newkeys & 2048) && (oldkeys & 2048) && (newkeys & 2048))
		|| (newkeys & 4096) || ((newkeys & 4096) && (oldkeys & 4096) && (newkeys & 4096))
		|| (newkeys & 8192) || ((newkeys & 8192) && (oldkeys & 8192) && (newkeys & 8192))
		|| (newkeys & 16384) || ((newkeys & 16384) && (oldkeys & 16384) && (newkeys & 16384)))
	{
	    if(PI[playerid][pBSA] < 1)
		{
		    if(PI[playerid][pTut] == 1)
			{
				if(GetPVarInt(playerid, "SobCheck") > 1)
				{
				    for(new i; i < 2; i++) PlayerTextDrawHide(playerid, sobeit[playerid][i]);
					SPDEx(playerid, 1383, 0, "{FF0000}АнтиЧит","Вы были кикнуты за то что нажали на клавишу во время проверки!","X","");
					Kick(playerid);
					return true;
		   		}
	  		}
  		}
	}
	//--------------------------------------------------------------------------
	if(newkeys == 128 || newkeys == 16)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			new Float:vec[3];
			GetPlayerCameraFrontVector(playerid, vec[0], vec[1], vec[2]);
			new bool:crasher = false;
			for (new i = 0; !crasher && i < sizeof(vec); i++)
			if(floatabs(vec[i]) > 10.0)
			crasher = true;
			if(crasher)
			{
				SCM(playerid,COLOR_LIGHTRED,"Вы были кикнуты по подозрению в читерстве | #303");
				print("KICK #7");
				Kick(playerid);
			}
		}
	}
	if(newkeys == 16)
	{
		if(GetRoulet(playerid))
		{
			if(GetPVarInt(playerid,"RStol")) return SPDEx(playerid,5490,0,"Рулетка: Выход","Вы действительно хотите выйти из-за стола?","Выход","Отмена");
			if(GetKrupie(playerid,48) == 1) return SCM(playerid,COLOR_GREY,"Сотрудник казино не может играть.");
			if(GetKrupie(playerid,49) == 1) return SCM(playerid,COLOR_GREY,"Сотрудник казино не может играть.");
			new null = 0;
			for(new i = 0; i < MAX_PLAYERS; i++) if(GetPVarInt(i,"RStol") == GetRoulet(playerid)) null++;
			if(null > 4) return SCM(playerid,COLOR_GREY,"За этим столом нет свободных мест!");
			switch(GetRoulet(playerid))
			{
			case 1: SetPVarFloat(playerid,"RX",1962.96), SetPVarFloat(playerid,"RY",1026.88), SetPVarFloat(playerid,"RZ",992.33);
			case 2: SetPVarFloat(playerid,"RX",1958.36), SetPVarFloat(playerid,"RY",1026.88), SetPVarFloat(playerid,"RZ",992.33);
			case 3: SetPVarFloat(playerid,"RX",1958.36), SetPVarFloat(playerid,"RY",1008.88), SetPVarFloat(playerid,"RZ",992.33);
			case 4: SetPVarFloat(playerid,"RX",1962.96), SetPVarFloat(playerid,"RY",1008.88), SetPVarFloat(playerid,"RZ",992.33);

			case 5: SetPVarFloat(playerid,"RX",2230.31), SetPVarFloat(playerid,"RY",1619.56), SetPVarFloat(playerid,"RZ",1006.06);
			case 6: SetPVarFloat(playerid,"RX",2241.89), SetPVarFloat(playerid,"RY",1619.56), SetPVarFloat(playerid,"RZ",1006.06);
			case 7: SetPVarFloat(playerid,"RX",2230.31), SetPVarFloat(playerid,"RY",1613.56), SetPVarFloat(playerid,"RZ",1006.06);
			case 8: SetPVarFloat(playerid,"RX",2241.89), SetPVarFloat(playerid,"RY",1613.56), SetPVarFloat(playerid,"RZ",1006.06);

			case 9: SetPVarFloat(playerid,"RX",2230.31), SetPVarFloat(playerid,"RY",1594.56), SetPVarFloat(playerid,"RZ",1006.06);
			case 10: SetPVarFloat(playerid,"RX",2241.89), SetPVarFloat(playerid,"RY",1594.56), SetPVarFloat(playerid,"RZ",1006.06);
			case 11: SetPVarFloat(playerid,"RX",2230.31), SetPVarFloat(playerid,"RY",1588.56), SetPVarFloat(playerid,"RZ",1006.06);
			case 12: SetPVarFloat(playerid,"RX",2241.89), SetPVarFloat(playerid,"RY",1588.56), SetPVarFloat(playerid,"RZ",1006.06);
			}
			new Float:pos[6];
			GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
			SetPVarInt(playerid,"RStavka",0);
			SetPVarInt(playerid,"RStol",GetRoulet(playerid));
			SetPVarFloat(playerid,"RXONE",GetPVarFloat(playerid,"RX"));
			SetPVarFloat(playerid,"RYONE",GetPVarFloat(playerid,"RY"));
			SetPVarFloat(playerid,"RZONE",GetPVarFloat(playerid,"RZ"));
			SetPVarFloat(playerid,"RNumber",0);
			new obj = CreateObject(random(5) + 1912,GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"),0.00,0.00,0.00);
			SetPVarInt(playerid,"RObj",obj);
			GetObjectPos(obj, pos[3], pos[4], pos[5]);
			SetPlayerCameraPos(playerid,pos[0],pos[1],pos[2]+0.8);
			SetPlayerCameraLookAt(playerid,pos[3],pos[4],pos[5]);
			SendMes(playerid,COLOR_WHITE,"Игра началась. Сделайте ставку");
			TogglePlayerControllable(playerid, 0);
			PlayerTextDrawShow(playerid,RouletteText[playerid]);
			return PlayerTextDrawSetString(playerid,RouletteText[playerid],"~<~~>~~up~~down~~n~~g~Money: none~n~~y~Bet: none");
		}
	}
	if(newkeys == KEY_JUMP)
	{
		if(GetPVarInt(playerid,"startjobd") == 1)
		{
			if(woodcutter[playerid] == true)
			{
				RemovePlayerAttachedObject(playerid,1);
				DisablePlayerCheckpoint(playerid);
				ApplyAnimation(playerid, "PED", "IDLE_tired", 4.1, 0, 1, 1, 0, 1);
				new rand = random(sizeof(derevo));
				SetPlayerCheckpoint(playerid,derevo[rand][0],derevo[rand][1],derevo[rand][2],3.0);
				SetPVarInt(playerid, "startjobd", 0);
				SCM(playerid, 0xAFAFAFAA, "Вы уронили дрова.");
			}
		}
		if(GetPVarInt(playerid,"Gjob") == 1 || GetPVarInt(playerid,"Gjob") == 2 || GetPVarInt(playerid,"Gjob") == 3)
		{
			RemovePlayerAttachedObject(playerid,3);
			DisablePlayerCheckpoint(playerid);
			DeletePVar(playerid, "Gjob");
			ApplyAnimation(playerid, "PED", "getup_front",4.0,0,0,0,0,0);
			SCM(playerid, 0xAFAFAFAA, "Во время работы нельзя прыгать!");
			SetPVarInt(playerid,"Gjob",1);
			new mcheck = random(4);
			if(mcheck == 0) SetPlayerCheckpoint(playerid,2570.6636,2840.0378,10.8218,1.5);
			if(mcheck == 1) SetPlayerCheckpoint(playerid,2589.0168,2841.2839,10.8218,1.5);
			if(mcheck == 2) SetPlayerCheckpoint(playerid,2588.2476,2814.6499,10.8218,1.5);
			if(mcheck == 3) SetPlayerCheckpoint(playerid,2562.5381,2814.7732,10.8218,1.5);
		}
  		if(usemesh[playerid] == 1)
		{
			if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
			Works[playerid] = true; JobCP[playerid] = 1; mesh[playerid] = 0; usemesh[playerid] = 0;
			SetPlayerCheckpoint(playerid,2230.3528,-2286.1353,14.3751,1.5);
			ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
			SCM(playerid,COLOR_GREEN, "Вы уронили мешок.");
	 	}
	}
	if(newkeys == 262144)
	{
		for(new i = 1; i <= TotalBizz; i++)
		{
			if(PlayerToPoint(2, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]) && BizzInfo[i][bType] == 1 && GetPlayerVirtualWorld(playerid) == BizzInfo[i][bVirtualWorld])
			{
				if(PI[playerid][pGolod] >= 500) return SCM(playerid,COLOR_GRAD1, "В тебя не влезит столько жидкости!");
				format(YCMDstr,256, "Вода\t\t[$%d]\nСода\t\t[$%d]\nКока-кола\t[$%d]\nПиво\t\t[$%d]\nВино\t\t[$%d]\nАбсент\t\t[$%d]",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],BizzInfo[i][bTovar6]);
				SPDEx(playerid, 2289, 2, "Меню бара", YCMDstr, "Выбрать", "Отмена");
			}
			if(PlayerToPoint(2, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]) && BizzInfo[i][bType] == 2 && GetPlayerVirtualWorld(playerid) == BizzInfo[i][bVirtualWorld])
			{
				if(PI[playerid][pGolod] >= 500) return SCM(playerid,COLOR_GRAD1, "Вы не голодны.");
				format(YCMDstr,sizeof(YCMDstr), "Бургер\t\t\t[$%d]\nРыбный суп\t\t[$%d]\nБольшой бургер\t[$%d]\nКотлеты\t\t[$%d]\nПельмени\t\t[$%d]\nГамбургер\t\t[$%d]",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],BizzInfo[i][bTovar5],BizzInfo[i][bTovar6]);
				SPDEx(playerid, 3389, 2, "Меню закусочной", YCMDstr, "Выбрать", "Отмена");
			}
			if(PlayerToPoint(2, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]) && BizzInfo[i][bType] == 3 && GetPlayerVirtualWorld(playerid) == BizzInfo[i][bVirtualWorld])
			{
			    new sstring[470];
				if(BizzInfo[i][bProducts] <= 0) return SCM(playerid,COLOR_GREY,"В бизнесе нет товаров"),BizzInfo[i][bProducts] = 0;
				format(sstring,293, "Телефоный номер\t\t[$%d]\nНаручные Часы\t\t[$%d]\nПлэер\t\t\t\t[$%d]\nЗажигалка\t\t\t[$%d]\nСигареты\t\t\t[$%d]\nТелефонная книга\t\t[$%d]\nСправочник\t\t\t[$%d]\nАптечки\t\t\t[$%d]\nФотоаппарат\t\t\t[$%d]\nЦветы\t\t\t\t[$%d]\nГазовый балончик\t\t[$%d]\nМаска\t\t\t\t[$%d]",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],
					BizzInfo[i][bTovar5],BizzInfo[i][bTovar6],BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12]);
				SPDEx(playerid, 5589, 2, "Меню 24/7", sstring, "Купить", "Отмена");
			}
			if(PlayerToPoint(2, playerid,BizzInfo[i][bBarX], BizzInfo[i][bBarY], BizzInfo[i][bBarZ]) && BizzInfo[i][bType] == 5 && GetPlayerVirtualWorld(playerid) == BizzInfo[i][bVirtualWorld])
			{
			    new sstring[268];
			    if(PI[playerid][pLevel] < 2) return	SCM(playerid, COLOR_GRAD1, "Вам требуется 2+ лвл");
			    if(PI[playerid][pGunLic] == 0) return SCM(playerid, COLOR_RED, "У Вас нет лицензии на оружие. Получите лицензию у офицера SAPD");
				if(BizzInfo[i][bProducts] <= 0) return SCM(playerid,COLOR_GREY,"В бизнесе нет товаров"),BizzInfo[i][bProducts] = 0;
				format(sstring,268, "- Desert Eagle\t\t[$%d]\n- Silenced 9mm\t\t[$%d]\n- Country Rifle\t\t[$%d]\n- Shotgun\t\t[$%d]\n- SMG\t\t\t[$%d]\n- AK47\t\t\t[$%d]\n- M4\t\t\t[$%d]\n- Tear Gas\t\t[$%d]\n- Golf Club\t\t[$%d]\n- Baseboll Bat\t\t[$%d]\n- Shovel\t\t[$%d]\n- Pool Cue\t\t[$%d]\n- Katana\t\t[$%d]",BizzInfo[i][bTovar1],BizzInfo[i][bTovar2],BizzInfo[i][bTovar3],BizzInfo[i][bTovar4],
					BizzInfo[i][bTovar5],BizzInfo[i][bTovar6],BizzInfo[i][bTovar7],BizzInfo[i][bTovar8],BizzInfo[i][bTovar9],BizzInfo[i][bTovar10],BizzInfo[i][bTovar11],BizzInfo[i][bTovar12],BizzInfo[i][bTovar13]);
				SPDEx(playerid, 4489, 2, "Menu Ammunition", sstring, "Купить", "Отмена");
			}
		}
	}
	if(newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK)
	{
		if(IsAMafia(playerid))
		{
			new giveplayerid;
			if(GetPlayerState(playerid)!=PLAYER_STATE_ONFOOT) return true;
			if(GetPlayerState(giveplayerid) != PLAYER_STATE_ONFOOT) return true;
			giveplayerid = GetClosestPlayer(playerid);
			new Float:health;
			GetPlayerHealth(giveplayerid,health);
			if(ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PI[playerid][pMember] == 6)
				{
					if(KrishaOffer[giveplayerid] < 999)
					{
						if(health <= 25 && PI[giveplayerid][pJob] != 0)
						{
							SCM(playerid,COLOR_GREEN, "Вы избили должника до 25 хп, крыша была автоматически установлена!");
							PI[giveplayerid][pKrisha] = 6;
							KrishaOffer[giveplayerid] = 999;
							return true;
						}
					}
				}
			}
			if(ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PI[playerid][pMember] == 5)
				{
					if(KrishaOffer[giveplayerid] < 999)
					{
						if(health <= 25 && PI[giveplayerid][pJob] != 0)
						{
							SCM(playerid,COLOR_GREEN, "Вы избили должника до 25 хп, крыша была автоматически установлена!");
							PI[giveplayerid][pKrisha] = 5;
							KrishaOffer[giveplayerid] = 999;
							return true;
						}
					}
				}
			}
			if(PI[playerid][pMember] == 14)
			{
				if(KrishaOffer[giveplayerid] < 999)
				{
					if(health <= 25 && PI[giveplayerid][pJob] != 0)
					{
						SCM(playerid,COLOR_GREEN, "Вы избили должника до 25 хп, крыша была автоматически установлена!");
						PI[giveplayerid][pKrisha] = 14;
						KrishaOffer[giveplayerid] = 999;
						return true;
					}
				}
			}
		}
	}
	if(newkeys == 1024)
	{
		for(new i = 1; i <= TotalHouse; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.0, 2499.9106,-2566.4995,2501.0859) && GetPlayerVirtualWorld(playerid) == i+50)
			{
				SetPlayerInterior(playerid,House[i][hInt]);
				SetPlayerVirtualWorld(playerid,i+50);
				SetPlayerPos(playerid,House[i][hExitx],House[i][hExity],House[i][hExitz]);
				PI[playerid][pInt] = House[i][hInt];
				PI[playerid][pLocal] = i;
			}
			if(PlayerToPoint(2, playerid,House[i][hExitx],House[i][hExity],House[i][hExitz]) && GetPlayerVirtualWorld(playerid) == i+50 ) SPDEx(playerid,70,0, "{FFD300}Выход:","{FFFFFF}Куда Вы хотите выйти:", "Улица", "Гараж");
		}
		for(new b = 0; b <= TotalBizz; b++)
		{
			if(PlayerToPoint(3.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bType] != 4)
			{
				if(BizzInfo[b][bOwned] == 0)
				{
					if(BizzInfo[b][bLocked] == 1) return SCM(playerid, COLOR_GRAD1, "Бизнес закрыт.");
					SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
					SetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
					PI[playerid][pInt] = BizzInfo[b][bInterior];
					SetPlayerVirtualWorld(playerid,BizzInfo[b][bVirtualWorld]);
					return true;
				}
				if(BizzInfo[b][bType] == 1)
				{
					if(FL[playerid][enterbiz] != b && PI[playerid][pPbiskey] != b)
					{
						if(BizzInfo[b][bLocked] == 1) return SCM(playerid, COLOR_GRAD1, "Бизнес закрыт.");
						if(PI[playerid][pLevel] < 3) return SCM(playerid, COLOR_GRAD1, "Вам требуется 3 лвл");
						format(YCMDstr,128, "Стоимость входа $%d. Вы хотите войти?",BizzInfo[b][bEntranceCost]);
						SPDEx(playerid,9898,0, "Вход",YCMDstr, "Да", "Отмена");
						return true;
					}
					else
					{
						SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
						SetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
						PI[playerid][pInt] = BizzInfo[b][bInterior];
						SetPlayerVirtualWorld(playerid,BizzInfo[b][bVirtualWorld]);
						return true;
					}
				}
				else
				{
					if(BizzInfo[b][bLocked] == 1) return SCM(playerid, COLOR_GRAD1, "Бизнес закрыт.");
					SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
					SetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
					PI[playerid][pInt] = BizzInfo[b][bInterior];
					SetPlayerVirtualWorld(playerid,BizzInfo[b][bVirtualWorld]);
					return true;
				}
			}
			else if(PlayerToPoint(3.0, playerid, BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]) && GetPlayerVirtualWorld(playerid) == BizzInfo[b][bVirtualWorld])
			{
				SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,BizzInfo[b][bEntranceX],BizzInfo[b][bEntranceY],BizzInfo[b][bEntranceZ]);
				PI[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid,0);
				return true;
			}
		}
	}
	if(newkeys == 2)
	{
		for(new i = 1; i <= TotalHouse; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid,  10.0, 2485.1555,-2561.8208,2501.0859) && GetPlayerVirtualWorld(playerid) == i+50)
			{
				if(GetPlayerState(playerid) == 2)
				{
					SetVehiclePos(GetPlayerVehicleID(playerid),House[i][hCarx], House[i][hCary], House[i][hCarz]);
					PutPlayerInVehicleEx(playerid,GetPlayerVehicleID(playerid),0);
					SetVehicleZAngle(GetPlayerVehicleID(playerid), House[i][hCarc]);
					SetCameraBehindPlayer(playerid);
					LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 0);
				}
			}
		}
	}
	if(newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK)
	{
		if(IsAMafia(playerid))
		{
			new giveplayerid;
			if(GetPlayerState(playerid)!=PLAYER_STATE_ONFOOT) return true;
			if(GetPlayerState(giveplayerid)!=PLAYER_STATE_ONFOOT) return true;
			giveplayerid= GetClosestPlayer(playerid);
			new Float:health;
			GetPlayerHealth(giveplayerid,health);
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PI[giveplayerid][pKrisha] ==6)
				{
					if(health <= 25 && PI[giveplayerid][pUseKrisha] !=0)
					{
						if(PI[giveplayerid][pDolg] < 50) return SCM(playerid,COLOR_GREY, "Он/Она еще ни чего не заработал(а)!");
						SCM(playerid,COLOR_GREEN, "Вы избили должника до 25 хп, долг был выбит");
						FracBank[0][nYakuza] += PI[giveplayerid][pDolg];
						PI[giveplayerid][pDolg] = 0;
						PI[giveplayerid][pUseKrisha] =0;
						return true;
					}
				}
			}
			if(ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PI[giveplayerid][pKrisha] ==5)
				{
					if(health <= 25 && PI[giveplayerid][pUseKrisha] !=0)
					{
						if(PI[giveplayerid][pDolg] < 50) return SCM(playerid,COLOR_GREY, "Он/Она еще ни чего не заработал(а)!");
						SCM(playerid,COLOR_GREEN, "Вы избили должника до 25 хп, долг был выбит");
						FracBank[0][nLcn] += PI[giveplayerid][pDolg];
						PI[giveplayerid][pDolg] = 0;
						PI[giveplayerid][pUseKrisha] =0;
						return true;
					}
				}
			}
			if(ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PI[giveplayerid][pKrisha] ==14)
				{
					if(health <= 25 && PI[giveplayerid][pUseKrisha] !=0)
					{
						if(PI[giveplayerid][pDolg] < 50) return SCM(playerid,COLOR_GREY, "Он/Она еще ни чего не заработал(а)!");
						SCM(playerid,COLOR_GREEN, "Вы избили должника до 25 хп, долг был выбит");
						FracBank[0][nRm] += PI[giveplayerid][pDolg];
						PI[giveplayerid][pDolg] = 0;
						PI[giveplayerid][pUseKrisha] =0;
						return true;
					}
				}
			}
		}
	}
	if((oldkeys & KEY_SECONDARY_ATTACK) && (newkeys & KEY_HANDBRAKE))
	{
		if(PlayerToPoint(3.0,playerid,768.5205,-2.8860,1000.7214))
		{
			if(PI[playerid][pBoxSkill] >= 5000) return SCM(playerid, COLOR_GRAD1, "Вы уже владеете данным стилем искусства [/fstyle 1]");
			if(PI[playerid][pBoxstyle] == 1)
			{
				if(PI[playerid][pBoxSkill] >= 2500)
				{
					if(PI[playerid][pBoxSkill] == 2500)
					{
						SCM(playerid, COLOR_GREEN, "Ваш навык владения техникой стиля повысился");
					}
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
					PI[playerid][pBoxSkill] += 1;
					udar[playerid] += 2;
					format(string, sizeof(string), "~w~+ %d / 5000 BOX", PI[playerid][pBoxSkill]);
					GameTextForPlayer(playerid, string, 2000, 3);
					return true;
				}
				PI[playerid][pBoxSkill] += 1;
				udar[playerid] += 2;
				format(string, sizeof(string), "~w~+ %d / 5000 BOX", PI[playerid][pBoxSkill]);
				GameTextForPlayer(playerid, string, 2000, 3);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
				return true;
			}
			else
			{
				SCM(playerid, COLOR_GRAD1, "Тренер не проводил с Вами занятий по Box");
				ApplyAnimation(playerid, "FAT", "IDLE_tired",4.0,0,0,0,0,0,1);
				return true;
			}
		}
		else if(PlayerToPoint(3.0,playerid,761.1723,11.3122,1001.1639))
		{
			if(PI[playerid][pKickboxSkill] >= 5000) return SCM(playerid, COLOR_GRAD1, "Вы уже владеете данным стилем искусства [/fstyle 3] ");
			if(PI[playerid][pKickstyle] == 1)
			{
				if(PI[playerid][pKickboxSkill] >= 2500)
				{
					if(PI[playerid][pKickboxSkill] == 2500)
					{
						SCM(playerid, COLOR_GREEN, "Ваш навык владения техникой стиля повысился");
					}
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
					PI[playerid][pKickboxSkill] += 1;
					udar[playerid] +=2;
					format(string, sizeof(string), "~w~+ %d / 5000 KICKBOX", PI[playerid][pKickboxSkill]);
					GameTextForPlayer(playerid, string, 2000, 3);
					return true;
				}
				PI[playerid][pKickboxSkill] += 1;
				udar[playerid] +=2;
				format(string, sizeof(string), "~w~+ %d / 5000 KICKBOX", PI[playerid][pKickboxSkill]);
				GameTextForPlayer(playerid, string, 2000, 3);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
				return true;
			}
			else
			{
				SCM(playerid, COLOR_GRAD1, "Тренер не проводил с Вами занятий по Kick Box");
				ApplyAnimation(playerid, "FAT", "IDLE_tired",4.0,0,0,0,0,0,1);
				return true;
			}
		}
		else if(PlayerToPoint(3.0,playerid,769.8723,14.4393,1000.6978))
		{
			if(PI[playerid][pKongfuSkill] >= 5000) return SCM(playerid, COLOR_GRAD1, "Вы уже владеете данным стилем искусства [/fstyle 2]");
			if(PI[playerid][pKstyle] == 1)
			{
				if(PI[playerid][pKongfuSkill] >= 2500)
				{
					if(PI[playerid][pKongfuSkill] == 2500)
					{
						SCM(playerid, COLOR_GREEN, "Ваш навык владения техникой стиля повысился");
					}
					PI[playerid][pKongfuSkill] += 1;
					udar[playerid] +=2;
					format(string, sizeof(string), "~w~+ %d / 5000 KONG FU", PI[playerid][pKongfuSkill]);
					GameTextForPlayer(playerid, string, 2000, 3);
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
					return true;
				}
				PI[playerid][pKongfuSkill] += 1;
				udar[playerid] +=2;
				format(string, sizeof(string), "~w~+ %d / 5000 KONG FU", PI[playerid][pKongfuSkill]);
				GameTextForPlayer(playerid, string, 2000, 3);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
			}
			else
			{
				SCM(playerid, COLOR_GRAD1, "Тренер не проводил с Вами занятий по Kong Fu");
				ApplyAnimation(playerid, "FAT", "IDLE_tired",4.0,0,0,0,0,0,1);
				return true;
			}
		}
	}
	//-------------------------------- Шлагбаумы города ----------------------------
	if(IsKeyJustDown(KEY_CROUCH, newkeys, oldkeys))
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(PI[playerid][pLevel] >= 0)
			{
				if(IsPlayerInRangeOfPoint(playerid, 4.0, 50.8742,-1537.7855,4.8703) )
				{
					if(PI[playerid][pWantedLevel] > 0) return SCM(playerid, COLOR_GREY, "[Диспетчер]Вы в розыске и не можете покинуть штат!");
					MoveDynamicObject(sab[0], 56.8900,-1535.3400,4.9000+0.010,0.010,0.0000,353.0000,83.0000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 1);
					GameTextForPlayer(playerid,"~g~Welcome to Los Santos", 5000, 3);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 4.0, 56.3605,-1525.9785,4.7307) )
				{
					if(PI[playerid][pWantedLevel] > 0) return SCM(playerid, COLOR_GREY, "[Диспетчер]Вы в розыске и не можете покинуть штат!");
					MoveDynamicObject(sab[1], 50.6100, -1528.4301, 4.8600+0.010,0.010,0.0000, 353.0000, 262.0000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 2);
					GameTextForPlayer(playerid,"~g~Welcome to San Fiero", 5000, 3);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 4.0, 95.0434,-1279.6781,13.7831) )
				{
					if(PI[playerid][pWantedLevel] > 0) return SCM(playerid, COLOR_GREY, "[Диспетчер]Вы в розыске и не можете покинуть штат!");
					MoveDynamicObject(sab[2], 97.3600, -1272.4200, 14.2900+0.010,0.010,0.0000, 25.0000, 301.0000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 3);
					GameTextForPlayer(playerid,"~g~Welcome to Los Santos", 5000, 3);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 4.0, 89.0467,-1257.7155,14.2129) )
				{
					if(PI[playerid][pWantedLevel] > 0) return SCM(playerid, COLOR_GREY, "[Диспетчер]Вы в розыске и не можете покинуть штат!");
					MoveDynamicObject(sab[3], 87.0000, -1264.3700, 14.3000+0.010,0.010,0.0000, 338.0000, 301.0000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 4);
					GameTextForPlayer(playerid,"~g~Welcome to San Fiero", 5000, 3);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 4.0, 97.5779,-1283.7429,13.7770) )
				{
					if(PI[playerid][pWantedLevel] > 0) return SCM(playerid, COLOR_GREY, "[Диспетчер]Вы в розыске и не можете покинуть штат!");
					MoveDynamicObject(sab[4], 104.3800, -1284.0500, 14.2900+0.010,0.010,0.0000, 338.0000, 301.0000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 5);
					GameTextForPlayer(playerid,"~g~Welcome to Los Santos", 5000, 3);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 4.0, 87.2638,-1253.5480,14.2157) )
				{
					if(PI[playerid][pWantedLevel] > 0) return SCM(playerid, COLOR_GREY, "[Диспетчер]Вы в розыске и не можете покинуть штат!");
					MoveDynamicObject(sab[5], 80.0600, -1252.8300, 14.2900+0.010,0.010,0.0000, 345.0000, 121.0000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 6);
					GameTextForPlayer(playerid,"~g~Welcome to San Fiero", 5000, 3);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 4.0, 1727.3196,532.4413,27.3551) )
				{
					if(PI[playerid][pWantedLevel] > 0) return SCM(playerid, COLOR_GREY, "[Диспетчер]Вы в розыске и не можете покинуть штат!");
					MoveDynamicObject(sab[6], 1722.1600, 528.0400, 27.8400+0.010,0.010,0.0000, 353.0000, 160.0000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 7);
					GameTextForPlayer(playerid,"~g~Welcome to Los Santos", 5000, 3);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 4.0, 1736.1173,530.4728,27.2990) )
				{
					if(PI[playerid][pWantedLevel] > 0) return SCM(playerid, COLOR_GREY, "[Диспетчер]Вы в розыске и не можете покинуть штат!");
					MoveDynamicObject(sab[7], 1730.6700, 524.9600, 27.7400+0.010,0.010,0.0000, 353.0000, 160.0000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 8);
					GameTextForPlayer(playerid,"~g~Welcome to Los Santos", 5000, 3);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 4.0, 1752.4659,522.4643,27.4328) )
				{
					if(PI[playerid][pWantedLevel] > 0) return SCM(playerid, COLOR_GREY, "[Диспетчер]Вы в розыске и не можете покинуть штат!");
					MoveDynamicObject(sab[8], 1757.4301, 525.8700, 27.3400+0.010,0.010,0.0000, 345.0000, -20.0000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 9);
					GameTextForPlayer(playerid,"~g~Welcome to Las Venturas", 5000, 3);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 4.0, 1743.4236,525.0209,27.4559) )
				{
					if(PI[playerid][pWantedLevel] > 0) return SCM(playerid, COLOR_GREY, "[Диспетчер]Вы в розыске и не можете покинуть штат!");
					MoveDynamicObject(sab[9], 1748.9000, 528.9700, 27.5400+0.010,0.010,0.0000, 345.0000, -20.0000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 10);
					GameTextForPlayer(playerid,"~g~Welcome to Las Venturas", 5000, 3);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 10.0, -2044.5059, -102.5607, 34.9626))
				{
					if(CarLesson[playerid] != 1) return SCM(playerid,COLOR_GREY, "Вы не проходите экзамен в автошколе.");
					MoveDynamicObject(sab[32], -2044.6180, -102.5718, 34.8549+0.010,0.010,0.0000, -17.2190, -1.7150);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 33);
					return 1;
				}
				//---------------------------- Фракции -------------------------
				if(IsPlayerInRangeOfPoint(playerid, 10.0, 1141.2212,1363.2527,10.7002) )// Военкомат
				{
					if(IsACop(playerid) || IsAArm(playerid) || IsAMayor(playerid) || IsAMedic(playerid))
					MoveDynamicObject(sab[10],1144.6262, 1362.8641, 10.5103+0.010,0.010,0.0000, 0.0000, 0.0000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 11);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 6.0, 94.7719,1920.5410,18.0856) )// ЛВА
				{
					if(!IsANonf(playerid)) return SCM(playerid, COLOR_GREY, "Вы не законник");
					MoveDynamicObject(sab[11], 94.5154, 1923.9302, 17.8180+0.010,0.010,0.0000, -18.0000, 88.0000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 12);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 6.0, -1529.9932,482.7969,7.1797) )// СФА
				{
					if(!IsANonf(playerid)) return SCM(playerid, COLOR_GREY, "Вы не законник");
					MoveDynamicObject(sab[12],-1526.50513,482.53680,6.90630+0.010,0.010,357.00000,-11.00000,2.00000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 13);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 6.0, 1544.3409,-1627.3290,13.3828) )//LSPD
				{
					if(!IsANonf(playerid)) return SCM(playerid, COLOR_GREY, "Вы не законник");
					MoveDynamicObject(sab[13],1544.68506,-1630.83228,13.05930+0.010,0.010,2.00000, -4.00000, 269.00000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 14);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 6.0, 1026.2870, 1182.9990, 10.3698) )// FBI
				{
					if(!IsANonf(playerid)) return SCM(playerid, COLOR_GREY, "Вы не законник");
					MoveDynamicObject(sab[14],1029.9292, 1182.8590, 10.3718+0.010,0.010,0.0000, -4.0000, 0.0000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 15);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 6.0, 2237.7366,2453.7793,10.7741) )// LVPD
				{
					if(!IsANonf(playerid)) return SCM(playerid, COLOR_GREY, "Вы не законник");
					MoveDynamicObject(sab[15],2238.1980,2450.3962,10.5532+0.010,0.010,0.0000, 4.0000, 90.0000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 16);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 6.0, -1572.5912,662.3664,7.1875) )// SFPD1
				{
					if(!IsANonf(playerid)) return SCM(playerid, COLOR_GREY, "Вы не законник");
					MoveDynamicObject(sab[16],-1572.2118, 658.8192, 6.7852+0.010,0.010,0.0000, 11.0000, 90.0000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 17);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 6.0, -1701.0548,683.9069,24.7984) )// SFPD2
				{
					if(!IsANonf(playerid)) return SCM(playerid, COLOR_GREY, "Вы не законник");
					MoveDynamicObject(sab[17],-1701.4314, 687.6194, 24.6419+0.010,0.010,0.0000, 4.0000, 270.0000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 18);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 6.0, -1645.4854,581.8598,39.8058) )// Мост СФ 1
				{
					if(PI[playerid][pWantedLevel] > 0) return SCM(playerid, COLOR_GREY, "[Диспетчер]Вы в розыске и не можете покинуть штат!");
					MoveDynamicObject(sab[18],-1642.6927, 579.5979, 39.4935+0.010,0.010,0.0000, -4.0000, -43.0000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 19);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 6.0, -1635.8177,563.4078,39.5361) )// Мост СФ 2
				{
					if(PI[playerid][pWantedLevel] > 0) return SCM(playerid, COLOR_GREY, "[Диспетчер]Вы в розыске и не можете покинуть штат!");
					MoveDynamicObject(sab[19],-1632.9912, 561.1000, 39.2935+0.010,0.010,0.0000, -11.0000, -43.0000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 20);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 6.0, -302.8061, 1507.5328, 74.3494))// Тюрьма
				{
					if(!IsANonf(playerid)) return SCM(playerid, COLOR_GREY, "Вы не законник");
					PlayerPlaySound(playerid, 6001, 0.0, 0.0, 0.0);
					MoveDynamicObject(sab[20], -301.8942, 1507.6520, 83.3119+0.50,0.50,0.0000, 0.0000, 0.0000);
					SetTimerEx("CloseGate", 9000, false, "id", playerid, 21);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 6.0, 135.1606, 1941.0687, 20.8908))// КПП СВ
				{
					if(!IsANonf(playerid)) return SCM(playerid, COLOR_GREY, "Вы не законник");
					PlayerPlaySound(playerid, 6001, 0.0, 0.0, 0.0);
					MoveDynamicObject(sab[21], 135.1606, 1941.0687, 27.1548+0.50,0.50,0.0000, 0.0000, 180.0000);
					SetTimerEx("CloseGate", 15000, false, "id", playerid, 22);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 6.0, 285.8610, 1820.8005, 19.0190))// Внутренние ворота СВ
				{
					if(!IsANonf(playerid)) return SCM(playerid, COLOR_GREY, "Вы не законник");
					PlayerPlaySound(playerid, 6001, 0.0, 0.0, 0.0);
					MoveDynamicObject(sab[22], 285.8610, 1820.2784, 25.9790+0.50,0.50,0.0000, 0.0000, 90.0000);
					SetTimerEx("CloseGate", 15000, false, "id", playerid, 23);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 6.0, 2497.43579, 2773.17480, 11.56770))// К.А.С.С.
				{
					if(!IsANonf(playerid)) return SCM(playerid, COLOR_GREY, "Вы не законник");
					PlayerPlaySound(playerid, 6001, 0.0, 0.0, 0.0);
					MoveDynamicObject(sab[23], 2497.4358, 2773.1748, 3.9627+0.50,0.50,0.0000, 0.0000, 90.2800);
					SetTimerEx("CloseGate", 20000, false, "id", playerid, 24);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 6.0, 1588.5955,-1637.6282,13.4313))// Ворота в гараж ЛСПД
				{
					if(!IsANonf(playerid)) return SCM(playerid, COLOR_GREY, "Вы не законник");
					MoveDynamicObject(sab[25], 1588.18835, -1638.25171, 9.56540, 0.5);
					SetTimerEx("CloseGate", 15000, false, "id", playerid, 26);
					return 1;
				}
				if(IsPlayerInRangeOfPoint(playerid, 6.0, -1631.6162,687.8357,7.1875))// Ворота в гараж СФПД
				{
					if(!IsANonf(playerid)) return SCM(playerid, COLOR_GREY, "Вы не законник");
					MoveDynamicObject(sab[28], -1631.66345, 688.28943, 14.70520, 0.5);
					SetTimerEx("CloseGate", 15000, false, "id", playerid, 29);
					return 1;
				}
			}
		}
		return 1;
	}
	if(newkeys == KEY_SUBMISSION) CallLocalFunction("OnPlayerCommandText", "is", playerid, "/en");
	if(newkeys == 16)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			if(IsABankomat(playerid))
			{
				if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) { return true; }
				if(GetPVarInt(playerid,"Prodaet") == 1) return SCM(playerid,COLOR_GREY,"Во время покупки имущества - запрещено пользоваться банковскими услугами!");
				ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
                if(PI[playerid][pPinStat] == 1)
				{
					format(YCMDstr,48,"Для пользования услугами, введите свой PIN-Code:");
					SPDEx(playerid,2305,1,"Проверка",YCMDstr,"Ок","Отмена");
					return true;
				}
				new listitems[] = "{ff0000}[1] {ffffff}Снять наличные\n{ff0000}[2] {ffffff}Баланс\n{ff0000}[3] {ffffff}Домашний счёт\n{ff0000}[4] {ffffff}Квартплата\n{ff0000}[5] {ffffff}Пополнить счёт телефона";
				SPDEx(playerid, 8900, 2, "Банкомат", listitems, "Далее", "Выход");
				return true;
			}
		}
	}
	if(newkeys == 16)
	{
		new Float: sprunkcenedy;
		GetPlayerHealth(playerid,sprunkcenedy);
		if(PlayerToPoint(1.0,playerid,2592.3794,2783.0566,10.8203) || PlayerToPoint(1.0,playerid,-1349.1477,494.0280,11.1953) || PlayerToPoint(1.0,playerid,1765.37830, -1884.21179, 12.95500))
		{
			if(PI[playerid][pCash] < 50) return SCM(playerid,0xFFFFFFFF,"Недостаточно денег");
			format(YCMDstr,20, "съел(а) закуску");
			SetPlayerChatBubble(playerid,YCMDstr,COLOR_PURPLE,30.0,10000);
			ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
			SetPlayerHealthAC(playerid, sprunkcenedy+10);
			if(FL[playerid][PlayerHealth] >= 100)
			SetPlayerHealthAC(playerid, 100);
			PI[playerid][pCash] -= 50;
			FracBank[0][fKazna] += 50;
			return true;
		}
		return true;
 	}
 	if(newkeys == KEY_YES)
	{
	    if(GetPVarInt(playerid,"KissUser") < 999)
	    {
	        if(GetPVarInt(playerid,"KissUser") == 999) return SCM(playerid, COLOR_GREY, "Вам никто не предлагал поцелуй!");
	        if(!ProxDetectorS(2.0, playerid, GetPVarInt(playerid,"KissUser"))) return SCM(playerid, COLOR_GREY, "Игрок не рядом с Вами!");
	    	new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			SetPlayerFacingAngle(GetPVarInt(playerid,"KissUser"), angle + 180);
			format(YCMDstr, 128, "%s поцеловал(а) %s", Name(GetPVarInt(playerid,"KissUser")), Name(playerid));
			ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			ApplyAnimation(playerid, "KISSING", "Playa_Kiss_02", 3.0, 0, 0, 0, 0, 0);
			ApplyAnimation(GetPVarInt(playerid,"KissUser"), "KISSING", "Playa_Kiss_02", 3.0, 0, 0, 0, 0, 0);
			SetPVarInt(playerid, "KissUser", 999);
			return true;
		}
		else if(GetPVarInt(playerid,"HiUser") < 999)
	    {
	        if(GetPVarInt(playerid,"HiUser") == 999) return SCM(playerid, COLOR_GREY, "Вам никто не предлагал пожать руку!");
	        if(!ProxDetectorS(2.0, playerid, GetPVarInt(playerid,"HiUser"))) return SCM(playerid, COLOR_GREY, "Игрок не рядом с Вами!");
			new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			SetPlayerFacingAngle(GetPVarInt(playerid,"HiUser"), angle + 180);
			format(YCMDstr, 256, "%s пожал(а) руку %s'у",Name(GetPVarInt(playerid,"HiUser")),Name(playerid));
			ProxDetector(10.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			ApplyAnimation(playerid, "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
			ApplyAnimation(GetPVarInt(playerid,"HiUser"), "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
			SetPVarInt(playerid, "HiUser", 999);
			return true;
		}
	}
	if(newkeys == KEY_NO)
	{
	    if(GetPVarInt(playerid,"KissUser") < 999)
	    {
	        if(GetPVarInt(playerid,"KissUser") == 999) return SCM(playerid, COLOR_GREY, "Вам никто не предлагал поцелуй!");
	        if(!ProxDetectorS(2.0, playerid, GetPVarInt(playerid,"KissUser"))) return SCM(playerid, COLOR_GREY, "Игрок не рядом с Вами!");
		    SCM(GetPVarInt(playerid,"KissUser"), COLOR_GREY, "Игрок отказался от поцелуя!");
			SCM(playerid, COLOR_GREY, "Вы отказались от поцелуя!");
			SetPVarInt(playerid, "KissUser", 999);
			return true;
	    }
	    else if(GetPVarInt(playerid,"HiUser") < 999)
	    {
	        if(GetPVarInt(playerid,"HiUser") == 999) return SCM(playerid, COLOR_GREY, "Вам никто не предлагал пожать руку!");
	        if(!ProxDetectorS(2.0, playerid, GetPVarInt(playerid,"HiUser"))) return SCM(playerid, COLOR_GREY, "Игрок не рядом с Вами!");
	        SCM(GetPVarInt(playerid,"HiUser"), COLOR_GREY, "Игрок отказался пожать Вам руку!");
			SCM(playerid, COLOR_GREY, "Вы отказались пожать руку!");
			SetPVarInt(playerid, "HiUser", 999);
			return true;
	    }
		else if(FL[playerid][CarOffer] != 999)
		{
		    if(ProxDetectorS(5.0, playerid, FL[playerid][CarOffer]))
		    {
				SCM(FL[playerid][CarOffer], COLOR_GREY, "Игрок отказался от сделки!");
				SCM(playerid, COLOR_GREY, "Вы отказались от сделки!");
				FL[playerid][CarOffer] = 999;
				FL[playerid][CarPrice] = 0;
				SetPVarInt(playerid, "Prodaet", 0);
			}
		}
		else if(FL[playerid][CarOffer2] != 999)
		{
		    if(ProxDetectorS(5.0, playerid, FL[playerid][CarOffer2]))
		    {
				SCM(FL[playerid][CarOffer2], COLOR_GREY, "Игрок отказался от сделки!");
				SCM(playerid, COLOR_GREY, "Вы отказались от сделки!");
				FL[playerid][CarOffer2] = 999;
				FL[playerid][CarPrice2] = 0;
				SetPVarInt(playerid, "Prodaet", 0);
			}
		}
		else if(GetPVarInt(playerid, "hProdaet") != 999)
		{
		    if(ProxDetectorS(5.0, playerid, GetPVarInt(playerid, "hProdaet")))
		    {
				SCM(GetPVarInt(playerid, "hProdaet"), COLOR_GREY, "Игрок отказался от сделки!");
				SCM(playerid, COLOR_GREY, "Вы отказались от сделки!");
				SetPVarInt(playerid, "hProdaet", 999);
				DeletePVar(playerid, "hCena");
				SetPVarInt(playerid, "Prodaet", 0);
				SetPVarInt(GetPVarInt(playerid, "hProdaet"), "SellHouse", 0);
			}
		}
	}
	if(newkeys == KEY_NO)
	{
		if(PlayerToPoint(3.0,playerid,2497.3308,2778.3472,10.8203))
		{
			if(IsANonf(playerid))
			{
				ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
				PlayerPlaySound(playerid, 6001, 0.0, 0.0, 0.0);
				MoveDynamicObject(sab[23], 2497.4358, 2773.1748, 3.9627+0.50,0.50,0.0000, 0.0000, 90.2800);
				SetTimerEx("CloseGate", 20000, false, "id", playerid, 24);
				return true;
			}
			else SCM(playerid, COLOR_GREY, "Вы не законник!");
		}
		if(PlayerToPoint(3.0,playerid,-1018.7110, 694.3480, 1507.9630))
		{
			if(IsAMedic(playerid))
			{
				ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
				MoveObject(sab[24], -1018.6143, 695.3543, 1510.9844+0.50,0.50,0.0000, 0.0000, 0.0000);
				SetTimerEx("CloseGate", 10000, false, "id", playerid, 25);
				return true;
			}
			else SCM(playerid, COLOR_GREY, "Вы не медик!");
		}
		if(PlayerToPoint(1.5,playerid,1584.5718,-1637.1604,13.3905) || PlayerToPoint(1.5,playerid,1584.5562,-1638.8612,13.3026))// Двери в гараж LSPD
		{
			if(IsANonf(playerid))
			{
				ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
				MoveDynamicObject(sab[26], 1581.24890, -1638.16309, 12.30700, 0.3);
				SetTimerEx("CloseGate", 10000, false, "id", playerid, 27);
				return true;
			}
			else SCM(playerid, COLOR_GREY, "Вы не законник!");
		}
		if(PlayerToPoint(1.5,playerid,-1622.5175,687.6561,7.1875) || PlayerToPoint(1.5,playerid,-1618.8412,688.9116,7.1875))// Двери в гараж SFPD
		{
			if(IsANonf(playerid))
			{
				ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
				MoveDynamicObject(sab[27], -1618.34619, 688.23260, 6.26340, 0.3);
				SetTimerEx("CloseGate", 10000, false, "id", playerid, 28);
				return true;
			}
			else SCM(playerid, COLOR_GREY, "Вы не законник!");
		}
		if(PlayerToPoint(3.0,playerid,-1647.8240, 691.0106, 1009.3235))// Двери интерьер SAPD 1
		{
			if(IsANonf(playerid))
			{
				ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
				MoveDynamicObject(sab[29], -1647.73340, 687.95178, 1007.75537, 0.3);
				SetTimerEx("CloseGate", 10000, false, "id", playerid, 30);
				return true;
			}
			else SCM(playerid, COLOR_GREY, "Вы не законник!");
		}
		if(PlayerToPoint(3.0,playerid,-1647.8239, 701.8553, 1009.3322))// Двери интерьер SAPD 2
		{
			if(IsANonf(playerid))
			{
				ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
				MoveDynamicObject(sab[30], -1647.77405, 704.87158, 1007.74402, 0.3);
				SetTimerEx("CloseGate", 10000, false, "id", playerid, 31);
				return true;
			}
			else SCM(playerid, COLOR_GREY, "Вы не законник!");
		}
		if(PlayerToPoint(3.0,playerid,-1642.5784, 705.0701, 1002.3220))// Двери интерьер SAPD 3
		{
			if(IsANonf(playerid))
			{
				ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
				MoveDynamicObject(sab[31], -1642.64136, 702.02228, 1000.79840, 0.3);
				SetTimerEx("CloseGate", 10000, false, "id", playerid, 32);
				return true;
			}
			else SCM(playerid, COLOR_GREY, "Вы не законник!");
		}
	}
	return true;
}

public OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ) return EditObject(playerid,objectid);
public OnPlayerEditDynamicObject( playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz )
{
	if(response) SetDynamicObjectPos(objectid,x, y, z), SetDynamicObjectRot(objectid,rx,ry,rz);
	if(response == 1) SendMes(playerid,COLOR_WHITE,"[D] Позиция объекта изменена. [X: %.2f] [Y: %.2f] [Z: %.2f] [RX: %.2f] [RY: %.2f] [RZ: %.2f]",x,y,z,rx,ry,rz);
	return true;
}
public OnPlayerSelectDynamicObject(playerid, objectid, modelid, Float:x, Float:y, Float:z) return EditDynamicObject(playerid,objectid);
public OnPlayerEditObject( playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ )
{
	if(response) SetObjectPos(objectid,fX,fY,fZ), SetObjectRot(objectid,fRotX,fRotY,fRotZ);
	if(response == 1) SendMes(playerid,COLOR_WHITE,"[S] Позиция объекта изменена. [X: %.2f] [Y: %.2f] [Z: %.2f] [RX: %.2f] [RY: %.2f] [RZ: %.2f]",fX,fY,fZ,fRotX,fRotY,fRotZ);
	return true;
}

public OnVehicleStreamIn(vehicleid, forplayerid) SetVehicleParamsForPlayer(vehicleid, forplayerid, 0, gCarLock[vehicleid]);

stock UpdateBizInfo(b)
{
	if(BizzInfo[b][bType] != 4) format(YCMDstr, 128, "{FF4500}%s\n{008000}Владелец: %s", BizzInfo[b][bMessage], BizzInfo[b][bOwner]);
	else format(YCMDstr, 128, "{FF4500}%s\n{008000}Владелец: %s\n{008080}Цена бензина: $%d", BizzInfo[b][bMessage], BizzInfo[b][bOwner], BizzInfo[b][bTovar14]);
	Update3DTextLabelText(BizzInfo[b][bLabel], 0x00D900FF, YCMDstr);
}

stock GiveMoney(playerid, amount)
{
	PI[playerid][pCash] += amount;
	GivePlayerMoney(playerid, amount);
}
stock IsAnAmbulance(carid)
{
	if(carid >= medicar[0] && carid <= medicar[1]) return true;
	return false;
}
stock IsACar(carid)
{
	switch(GetVehicleModel(carid))
	{
	case 400..416,418..424,426..429,431..445,449,451,455,456,458,459,461: return true;
	case 463,466..468,470,471,474,475,477..480,482,483,485,486,489..492,494..496,498..508: return true;
	case 514..518,521..531,533..537,539..547,549..551,554..562,564..568,572..576,578..583,585..589,596..605,609: return true;
	}
	return false;
}
stock CreateVehicles()
{
	//
	CarNafta[0] = AddStaticVehicleEx( 578, 2586.9634,2768.6067,11.4459,90.0009, -1, -1, 30);
 	AddStaticVehicleEx(578, 2586.9316,2760.5420,11.4434,89.8374, -1, -1, 30);
 	AddStaticVehicleEx(578, 2586.8708,2752.2871,11.4444,90.2319, -1, -1, 30);
 	AddStaticVehicleEx(578, 2586.9158,2744.1846,11.4424,90.3020, -1, -1, 30);
	CarNafta[1] = AddStaticVehicleEx(578, 2586.8408,2731.8574,11.4443,88.9694, -1, -1, 30);
	// Медики ЛС
	medicar[0] = AddStaticVehicleEx(416,1178.5431,-1338.7671,14.0167,270.0624,1,3,300);
 	AddStaticVehicleEx(416,1178.0116,-1308.9192,13.9939,268.2672,1,3,300);
 	AddStaticVehicleEx(487,1178.7334,-1361.2590,14.2509,269.0083,1,3,300);
 	AddStaticVehicleEx(416,1110.8486,-1327.9231,13.4891,0.6452,1,3,300);
 	AddStaticVehicleEx(416,1097.4799,-1327.6576,13.5109,359.8878,1,3,300);
 	AddStaticVehicleEx(416,1135.5435,-1339.5741,13.8904,0.3911,1,3,300);
 	AddStaticVehicleEx(416,1144.9613,-1315.1943,13.7711,88.8802,1,3,300);
 	AddStaticVehicleEx(416,1144.8925,-1309.3990,13.8005,88.9810,1,3,300);
 	AddStaticVehicleEx(416,1144.7550,-1302.7927,13.7912,90.5159,1,3,300);
 	AddStaticVehicleEx(416,1144.6816,-1296.0079,13.7779,89.6777,1,3,300);
 	AddStaticVehicleEx(416,1147.2745,-1346.8119,13.7831,179.0662,1,3,300);
 	AddStaticVehicleEx(416,1140.5516,-1363.0316,13.8932,180.3582,1,3,300);
 	AddStaticVehicleEx(416,-2665.4248,611.2086,14.6056,179.5688,1,3,300);// Медики СФ
 	AddStaticVehicleEx(416,-2661.2083,611.0942,14.6027,180.4825,1,3,300);
 	AddStaticVehicleEx(416,-2669.6826,611.1447,14.5899,180.8062,1,3,300);
 	AddStaticVehicleEx(416,-2617.8303,627.9868,14.6024,89.7837,1,3,300);
 	AddStaticVehicleEx(416,-2617.8972,621.3510,14.6023,89.8205,1,3,300);
 	AddStaticVehicleEx(416,-2706.2029,590.4933,14.6021,270.0135,1,3,300);
 	AddStaticVehicleEx(416,-2706.2490,595.5879,14.6025,270.1201,1,3,300);
 	AddStaticVehicleEx(416,-2629.5403,605.6928,14.6022,181.3253,1,3,300);
 	AddStaticVehicleEx(416,-2635.5469,605.5485,14.6026,179.9270,1,3,300);
 	AddStaticVehicleEx(416,-2641.8518,605.3467,14.6021,181.6334,1,3,300);
 	AddStaticVehicleEx(487,-2726.3740,600.1098,33.4735,270.5906,1,3,300);
 	AddStaticVehicleEx(487,-2726.9177,618.5711,33.4735,268.5355,1,3,300);//
 	AddStaticVehicleEx(416,2013.9747,-1414.9784,17.1412,87.0935,1,3,300); // Медики Гетто
 	AddStaticVehicleEx(416,1592.2788,1820.8942,10.9699,357.1317,1,3,300); // Медики ЛВ
	AddStaticVehicleEx(416,1625.1902,1820.6443,10.9698,1.0404,1,3,300); // Медики ЛВ
 	AddStaticVehicleEx(416,2002.0126,-1428.8701,15.7253,179.8764,1,3,300); // Медики Гетто
	medicar[1] = AddStaticVehicleEx(416,1124.0629,-1327.7084,13.5065,1.0705,1,3,300);
	//============================== RUSSIAN MAFIA =============================
	ruscar[0] = AddStaticVehicleEx(579,984.1832,1720.4199,8.5910,90.3216,0,0,300); // RM HUNTLEY 0
	AddStaticVehicleEx(579,984.1126,1723.8441,8.5843,91.2075,0,0,300); // RM HUNTLEY 1
	AddStaticVehicleEx(579,984.1122,1727.3198,8.5860,91.1532,0,0,300); // RM HUNTLEY 2
	AddStaticVehicleEx(579,983.9010,1734.5618,8.5911,90.6430,0,0,300); // RM HUNTLEY 3
	AddStaticVehicleEx(579,983.8235,1737.5437,8.5824,91.0029,0,0,300); // RM HUNTLEY 4
	AddStaticVehicleEx(579,983.6899,1740.7048,8.5631,92.9132,0,0,300); // RM HUNTLEY 5
	AddStaticVehicleEx(579,983.7421,1744.0139,8.5786,91.0281,0,0,300); // RM HUNTLEY 6
	AddStaticVehicleEx(580,966.0602,1706.5366,8.5400,270.8105,0,0,300); // RM STAFFORD 0
	AddStaticVehicleEx(580,959.2162,1706.4982,8.5321,270.0911,0,0,300); // RM STAFFORD 1
	AddStaticVehicleEx(579,983.9714,1730.7939,8.5866,90.0946,0,0,300); // RM HUNTLEY 7
	AddStaticVehicleEx(487,957.9562,1754.1691,8.4446,248.4217,0,0,300); // RM Helicopter 0
	ruscar[1] = AddStaticVehicleEx(409,949.6057,1715.6672,8.5426,181.0793,0,0,300); // RM Limo 0
	//================================== LCN ===================================
	lcncar[0] =	AddStaticVehicleEx(445,1413.5277,787.9661,10.6953,270.0358,0,0,300); // LCN Admiral 0
	AddStaticVehicleEx(445,1413.5298,784.6968,10.6952,270.0358,0,0,300); // LCN Admiral 1
	AddStaticVehicleEx(445,1413.5317,781.6289,10.6951,270.0358,0,0,300); // LCN Admiral 2
	AddStaticVehicleEx(445,1413.5338,778.3932,10.6951,270.0358,0,0,300); // LCN Admiral 3
	AddStaticVehicleEx(445,1413.5360,775.1172,10.6950,270.0358,0,0,300); // LCN Admiral 4
	AddStaticVehicleEx(445,1413.5380,771.8521,10.6949,270.0358,0,0,300); // LCN Admiral 5
	AddStaticVehicleEx(445,1413.5419,765.7633,10.9611,270.0358,0,0,300); // LCN Admiral 6
	AddStaticVehicleEx(445,1413.5499,759.3215,10.6498,270.0358,0,0,300); // LCN Admiral 7
	AddStaticVehicleEx(445,1413.5537,753.0690,10.6495,270.0358,0,0,300); // LCN Admiral 8
	AddStaticVehicleEx(445,1413.5576,746.6254,10.6493,270.0358,0,0,300); // LCN Admiral 9
	AddStaticVehicleEx(487,1414.5128,730.6333,10.9784,267.1382,0,0,300); // LCN Helicopter 0
	lcncar[1] = AddStaticVehicleEx(409,1452.9387,731.5566,10.6203,89.9472,0,0,300); // LCN Limo 0
	//=================================== SA News ==============================
	cnncar[0] = AddStaticVehicleEx(582,-2535.5781,-603.1578,132.6181,179.4222,1,16,300);
	AddStaticVehicleEx(582,-2531.7712,-603.1910,132.6169,180.3442,1,16,300);
	AddStaticVehicleEx(582,-2528.0618,-603.2198,132.6164,180.5085,1,16,300);
	AddStaticVehicleEx(582,-2524.4446,-603.2167,132.6210,180.8124,1,16,300);
	AddStaticVehicleEx(582,-2520.8123,-603.2692,132.6180,181.5685,1,16,300);
	AddStaticVehicleEx(582,-2516.9268,-603.2775,132.6154,180.2185,1,16,300);
	AddStaticVehicleEx(582,-2513.0840,-603.2504,132.6176,180.1079,1,16,300);
	AddStaticVehicleEx(488,-2504.1023,-625.2428,133.0485,353.4276,1,16,300);
	AddStaticVehicleEx(488,-2493.6802,-625.1265,132.9633,358.5927,1,16,300);
	cnncar[1] = AddStaticVehicleEx(582,-2509.3086,-603.3152,132.6210,180.7566,1,16,300);
	//=================================== TAXI =================================
	taxicar[0] = AddStaticVehicleEx(420,1062.0615,-1775.7018,13.1535,269.9980,6,6,300); // TAXI LS 0
	AddStaticVehicleEx(420,1062.0488,-1772.5802,13.1710,269.9309,6,6,300); // TAXI LS 1
	AddStaticVehicleEx(420,1062.0527,-1769.4326,13.1771,269.9322,6,6,300); // TAXI LS 2
	AddStaticVehicleEx(420,1062.0631,-1766.5918,13.1792,269.9274,6,6,300); // TAXI LS 3
	AddStaticVehicleEx(420,1062.0592,-1763.6497,13.2056,269.9315,6,6,300); // TAXI LS 4
	AddStaticVehicleEx(420,1062.0620,-1760.6293,13.2142,269.9259,6,6,300); // TAXI LS 5
	AddStaticVehicleEx(420,1062.0664,-1757.6024,13.2499,269.9300,6,6,300); // TAXI LS 6
	AddStaticVehicleEx(420,1062.0704,-1754.6869,13.2409,269.9322,6,6,300); // TAXI LS 7
	AddStaticVehicleEx(420,1062.0726,-1751.6990,13.2605,269.9281,6,6,300); // TAXI LS 8
	AddStaticVehicleEx(438,-1984.5652,215.0136,27.4954,144.9371,6,1,300); // TAXI SF 6
	AddStaticVehicleEx(438,1078.1144,-1775.4731,13.1245,270.7075,6,6,300); // ls
	AddStaticVehicleEx(438,1078.5940,-1772.7864,13.1292,270.3094,6,6,300); // ls
	AddStaticVehicleEx(438,1078.0707,-1769.6115,13.1370,271.2532,6,6,300); // ls
	AddStaticVehicleEx(438,1077.8856,-1766.8646,13.1441,270.6031,6,6,300); // ls
	AddStaticVehicleEx(438,1077.7853,-1763.7035,13.1530,269.4849,6,6,300); // ls
	taxicar[1] = AddStaticVehicleEx(438,-1990.6533,215.1601,27.4778,143.5870,6,1,300); // TAXI SF 8
	//===============================================================
	muscar[0] = AddStaticVehicleEx(408,2461.2510,-2115.8135,14.0998,0.0004,6,6,300); // musurovoz
    AddStaticVehicleEx(408,2483.8982,-2114.9551,14.0946,359.2321,6,6,300); // musurovoz
    AddStaticVehicleEx(408,2508.6775,-2114.2024,14.0936,359.4062,6,6,300); // musurovoz
    AddStaticVehicleEx(408,2457.8469,-2076.1475,14.0951,183.3024,6,6,300); //
    muscar[1] = AddStaticVehicleEx(408,2468.6970,-2074.2556,14.0740,177.2961,6,6,300); // musurovoz
	//==========================================================================
	chistveh[0] = AddStaticVehicleEx(574,-2091.3474,98.0176,34.8537,88.0240,1,1, 300); //
	AddStaticVehicleEx(574,-2091.4585,94.8486,34.8608,89.5990,1,1, 300); //
	AddStaticVehicleEx(574,-2091.5271,91.4839,34.8608,89.9382,1,1, 300); //
	AddStaticVehicleEx(574,-2094.8345,69.0309,34.8586,178.5609,1,1, 300); //
	AddStaticVehicleEx(574,-2091.9243,68.9366,34.6397,178.3416,1,1, 300); //
	AddStaticVehicleEx(574,-2089.2102,68.7679,34.3946,179.2868,1,1, 300); //
	AddStaticVehicleEx(574,-2086.2571,68.5859,34.1472,179.6890,1,1, 300); //
	AddStaticVehicleEx(574,-2083.4194,68.4999,33.9072,179.9760,1,1, 300); //
	chistveh[1] = AddStaticVehicleEx(574,-2091.5903,87.8975,34.8556,88.1133,1,1, 300); //
	//========================== Mechaniks =====================================
	mehanik[0] = AddStaticVehicleEx(525,1649.8070,-1107.4197,23.7879,270.4307,1,3,300); // Mechanik 0
	AddStaticVehicleEx(525,1649.5594,-1097.9303,23.7825,271.0184,1,3,300); // Mechanik 1
	AddStaticVehicleEx(525,1649.5481,-1088.9520,23.7802,271.2585,1,3,300); // Mechanik 2
	AddStaticVehicleEx(525,1649.4701,-1080.2677,23.7859,269.8732,1,3,300); // Mechanik 3
	AddStaticVehicleEx(525,1630.1318,-1107.5986,23.7810,90.0636,1,3,300); // Mechanik 4
	AddStaticVehicleEx(525,1629.4932,-1098.3491,23.7889,91.1477,1,3,300); // Mechanik 5
	AddStaticVehicleEx(525,1629.3313,-1089.4033,23.7905,89.8329,1,3,300); // Mechanik 6
	AddStaticVehicleEx(525,-1701.5737,411.9561,6.8842,225.7780,1,3,300); // Mechanik 10
	mehanik[1] = AddStaticVehicleEx(525,-1705.1085,407.6662,6.9489,225.7618,1,3,300); // Mechanik 11
	//====================== Экзамены по транспорту ============================
	liccar[0] = AddStaticVehicleEx(426,-2060.6511,-108.2012,35.0675,183.4918,79,79,5); // 1
	AddStaticVehicleEx(426,-2065.7639,-108.4149,35.0723,182.7138,79,79,5); // 2
	AddStaticVehicleEx(426,-2070.1377,-108.6047,35.0675,180.8287,79,79,5); // 3
	AddStaticVehicleEx(426,-2074.6055,-108.7666,35.0677,181.5307,79,79,5); // 4
	AddStaticVehicleEx(426,-2080.0486,-108.8039,35.0634,180.3171,79,79,5); // 5
	AddStaticVehicleEx(426,-2084.2581,-109.0880,35.0632,177.7766,79,79,5); // 6
	AddStaticVehicleEx(426,-2089.6123,-108.9753,35.0635,176.7947,79,79,5); // 7
	liccar[1] = AddStaticVehicleEx(426,-2093.9233,-108.5795,35.0637,179.3886,79,79,5); // 8
	//
	boatcar[0] = AddStaticVehicleEx(452,-2228.9263,2403.3792,-0.5479,45.2854,3,1,5); // 1
	AddStaticVehicleEx(452,-2235.1777,2397.3726,-0.4844,45.3091,3,1,5); // 2
	AddStaticVehicleEx(452,-2215.3223,2417.2390,-0.4519,46.6452,3,1,5); // 3
	AddStaticVehicleEx(452,-2209.1741,2423.5642,-0.6147,43.1328,3,1,5); // 4
	AddStaticVehicleEx(452,-2256.1824,2417.4309,-0.5444,225.4243,3,1,5); // 5
	AddStaticVehicleEx(452,-2249.1477,2423.7620,-0.6151,224.3406,3,1,5); // 6
	AddStaticVehicleEx(452,-2236.2017,2438.5474,-0.4930,219.9395,3,1,5); // 7
	boatcar[1] = AddStaticVehicleEx(452,-2229.5015,2444.5166,-0.6199,230.1981,3,1,5); // 8
	//
	flycar[0] = AddStaticVehicleEx(593,1281.2972,1323.4296,11.2797,271.8380,3,3,5); // 1
	AddStaticVehicleEx(593,1285.9862,1361.4105,11.2801,271.0016,3,3,5); // 2
	AddStaticVehicleEx(593,1285.8502,1389.8668,11.2814,266.8583,3,3,5); // 3
	AddStaticVehicleEx(593,1292.3622,1407.4442,11.2820,237.0957,3,3,5); // 4
	AddStaticVehicleEx(593,1314.9315,1410.3481,11.2842,178.0945,3,3,5); // 5
	AddStaticVehicleEx(593,1331.8481,1410.1302,11.2809,182.3875,3,3,5); // 6
	flycar[1] = AddStaticVehicleEx(593,1347.1852,1407.0316,11.2769,158.2244,3,3,5); // 7
	//=================================== YAKUZA ===============================
	yakcar[0] = AddStaticVehicleEx(409,1472.8611,2773.2961,10.5400,180.4315,0,0,300);
	AddStaticVehicleEx(550,1494.4821,2847.7397,10.6416,180.6641,0,0,300); // авто YAKUZA
	AddStaticVehicleEx(550,1489.7313,2847.8140,10.6372,179.4484,0,0,300); // авто YAKUZA
	AddStaticVehicleEx(550,1484.5558,2847.5601,10.6358,178.0716,0,0,300); // авто YAKUZA
	AddStaticVehicleEx(550,1479.5457,2847.4221,10.6386,180.0060,0,0,300); // авто YAKUZA
	AddStaticVehicleEx(550,1475.3065,2847.4990,10.6396,179.9465,0,0,300); // авто YAKUZA
	AddStaticVehicleEx(550,1470.2335,2847.4177,10.6384,180.2908,0,0,300); // авто YAKUZA
	AddStaticVehicleEx(550,1465.5403,2847.4377,10.6386,179.8141,0,0,300); // авто YAKUZA
	AddStaticVehicleEx(550,1460.4202,2847.3130,10.6401,181.4651,0,0,300); // авто YAKUZA
	AddStaticVehicleEx(550,1473.7229,2786.4683,10.5602,161.7600,0,0,300); // авто YAKUZA
	AddStaticVehicleEx(550,1473.9165,2759.3345,10.5595,197.0573,0,0,300); // авто YAKUZA
	yakcar[1] = AddStaticVehicleEx(487,1500.6167,2820.9463,10.9702,180.0113,0,0,300); // Yakuza Helicopter 0
	//------------------------- Транспорт для Шерифов PD -----------------------
	sherifpd[0] = AddStaticVehicleEx(599,1528.5970,-1688.0883,6.0819,270.7683,0,1,300); 
	AddStaticVehicleEx(599,-1595.9703,675.9517,-5.0569,0.6844,0,1,300); 
	sherifpd[1] = AddStaticVehicleEx(599,2290.9851,2443.8203,11.0121,359.8865,0,1,300);
	//--------------------------------- SAPD -----------------------------------
	//LSPD
	sapdcar[0] = AddStaticVehicleEx(596,1595.5902,-1711.0349,5.6126,359.5396,0,1,300); // Premier LSPD
	AddStaticVehicleEx(596,1591.5115,-1711.0319,5.6127,358.8000,0,1,300); // Premier LSPD
	AddStaticVehicleEx(596,1587.3577,-1710.9930,5.6119,359.0825,0,1,300); // Premier LSPD
	AddStaticVehicleEx(596,1583.4825,-1710.8480,5.6108,358.8057,0,1,300); // Premier LSPD
	AddStaticVehicleEx(596,1578.6509,-1710.7952,5.6112,359.5887,0,1,300); // Premier LSPD
	AddStaticVehicleEx(596,1574.4767,-1710.9449,5.6102,0.1994,0,1,300); // Premier LSPD
	AddStaticVehicleEx(525,1585.2332,-1667.8391,5.7655,269.8487,0,1,300); // Trailer LSPD
	AddStaticVehicleEx(525,1585.2318,-1671.7229,5.7727,269.2522,0,1,300); // Trailer LSPD
	AddStaticVehicleEx(523,1544.8021,-1684.4326,5.4588,89.7316,0,1,300); // Bike LSPD
	AddStaticVehicleEx(523,1544.9600,-1680.3275,5.4627,87.8340,0,1,300); // Bike LSPD
	AddStaticVehicleEx(523,1545.0702,-1676.1484,5.4609,89.6551,0,1,300); // Bike LSPD
	AddStaticVehicleEx(523,1545.2524,-1671.7498,5.4616,88.8449,0,1,300); // Bike LSPD
	AddStaticVehicleEx(523,1545.3969,-1667.9586,5.4602,88.5143,0,1,300); // Bike LSPD
	AddStaticVehicleEx(523,1545.3770,-1662.9961,5.4623,87.8509,0,1,300); // Bike LSPD
	AddStaticVehicleEx(601,1538.7766,-1645.0411,5.6492,180.4536,0,1,300); // Tanker LSPD
	AddStaticVehicleEx(601,1534.5815,-1645.0336,5.6494,180.1314,0,1,300); // Tanker LSPD
	AddStaticVehicleEx(427,1530.7776,-1644.8953,6.0224,178.9726,0,1,300); // SWAT LSPD
	AddStaticVehicleEx(427,1526.8424,-1645.1364,6.0224,180.4543,0,1,300); // SWAT LSPD
	AddStaticVehicleEx(497,1562.8069,-1611.4598,13.5609,268.4547,0,1,300); // Маверик LSPD
	//SFPD
	AddStaticVehicleEx(597,-1573.7202,722.5463,-5.4733,90.0750,0,1,300); // Premier SFPD
	AddStaticVehicleEx(597,-1573.7803,726.5330,-5.4731,90.2661,0,1,300); // Premier SFPD
	AddStaticVehicleEx(597,-1573.6289,730.7639,-5.4730,88.9160,0,1,300); // Premier SFPD
	AddStaticVehicleEx(597,-1573.5895,734.7159,-5.4726,89.9001,0,1,300); // Premier SFPD
	AddStaticVehicleEx(597,-1573.5525,738.7194,-5.4732,88.2621,0,1,300); // Premier SFPD
	AddStaticVehicleEx(597,-1573.6263,742.7726,-5.4745,89.4522,0,1,300); // Premier SFPD
	AddStaticVehicleEx(525,-1616.6672,733.1509,-5.3688,358.5125,0,1,300); // Trailer SFPD
	AddStaticVehicleEx(525,-1612.5895,732.9758,-5.3710,357.6634,0,1,300); // Trailer SFPD
	AddStaticVehicleEx(523,-1600.0828,693.0413,-5.6699,179.1922,0,1,300); // Bike SFPD
	AddStaticVehicleEx(523,-1604.2419,693.0648,-5.6757,177.4480,0,1,300); // Bike SFPD
	AddStaticVehicleEx(523,-1608.5327,693.1181,-5.6724,180.0072,0,1,300); // Bike SFPD
	AddStaticVehicleEx(523,-1612.5920,693.1582,-5.6710,179.6542,0,1,300); // Bike SFPD
	AddStaticVehicleEx(523,-1616.7650,693.0262,-5.6715,178.2890,0,1,300); // Bike SFPD
	AddStaticVehicleEx(523,-1620.8339,693.1100,-5.6709,178.8018,0,1,300); // Bike SFPD
	AddStaticVehicleEx(601,-1638.7565,682.3121,-5.4834,270.2267,0,1,300); // Tanker SFPD
	AddStaticVehicleEx(601,-1638.8567,686.4293,-5.4834,269.5532,0,1,300); // Tanker SFPD
	AddStaticVehicleEx(427,-1638.8326,678.3594,-5.1103,268.5023,0,1,300); // SWAT SFPD
	AddStaticVehicleEx(427,-1638.8521,674.1141,-5.1103,267.6933,0,1,300); // SWAT SFPD
	AddStaticVehicleEx(528,-1639.1755,670.0736,-5.1988,269.1116,1,1,300); // SWAT SFPD
	AddStaticVehicleEx(497,-1678.9912,706.0605,30.7791,91.1119,0,1,300); // Maverick SFPD
	//LVPD
	AddStaticVehicleEx(598,2282.1919,2459.3396,10.5652,179.9911,0,1,300); // Premier LVPD
	AddStaticVehicleEx(598,2277.9475,2459.5400,10.5654,359.7866,0,1,300); // Premier LVPD
	AddStaticVehicleEx(598,2273.3962,2459.2495,10.5653,180.3087,0,1,300); // Premier LVPD
	AddStaticVehicleEx(598,2260.5283,2459.2441,10.5674,358.9644,0,1,300); // Premier LVPD
	AddStaticVehicleEx(598,2256.0767,2458.8752,10.5686,178.6988,0,1,300); // Premier LVPD
	AddStaticVehicleEx(598,2269.0386,2459.5598,10.5669,0.3184,0,1,300); // Premier LVPD
	AddStaticVehicleEx(598,2251.7095,2459.3005,10.5658,1.0825,0,1,300); // Premier LVPD
	AddStaticVehicleEx(523,2282.1267,2476.8672,10.3933,180.1854,0,1,300); // Bike LVPD
	AddStaticVehicleEx(523,2277.8201,2476.9133,10.3938,178.4000,0,1,300); // Bike LVPD
	AddStaticVehicleEx(523,2273.5977,2476.8176,10.3904,178.7632,0,1,300); // Bike LVPD
	AddStaticVehicleEx(523,2269.1064,2476.6716,10.3877,176.8897,0,1,300); // Bike LVPD
	AddStaticVehicleEx(525,2295.2317,2476.7639,10.7022,179.1973,0,1,300); // Trailer LVPD
	AddStaticVehicleEx(525,2290.8997,2476.7229,10.6952,177.4019,0,1,300); // Trailer LVPD
	AddStaticVehicleEx(427,2251.7581,2477.0820,10.9523,179.1671,0,1,300); // SWAT LVPD
	AddStaticVehicleEx(427,2255.7822,2477.0078,10.9522,181.5113,0,1,300); // SWAT LVPD
	sapdcar[1] = AddStaticVehicleEx(601,2260.5918,2476.6335,10.5792,178.3394,0,1,300); // Tanker LVPD
	//--------------------------- Car SAPD с мигалками -------------------------
	SultanPD[0] = AddStaticVehicleEx(560,1602.4095,-1704.3751,5.5958,89.5667,7,7,300); // Sultan LSPD
	SultanPD[1] = AddStaticVehicleEx(560,1602.2863,-1699.9510,5.5956,89.4321,7,7,300); // Sultan LSPD
	SultanPD[2] = AddStaticVehicleEx(560,1602.4825,-1696.0240,5.5956,89.1836,7,7,300); // Sultan LSPD
	SultanPD[3] = AddStaticVehicleEx(560,1602.4150,-1692.0085,5.5957,90.3050,7,7,300); // Sultan LSPD
	SultanPD[4] = AddStaticVehicleEx(560,1602.3961,-1687.9344,5.5957,90.6551,7,7,300); // Sultan LSPD
	police[SultanPD[0]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[SultanPD[0]], SultanPD[0], 0.000000, -0.074999, 0.824999, 0.000000, 0.000000, 0.000000);
	police[SultanPD[1]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[SultanPD[1]], SultanPD[1], 0.000000, -0.074999, 0.824999, 0.000000, 0.000000, 0.000000);
	police[SultanPD[2]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[SultanPD[2]], SultanPD[2], 0.000000, -0.074999, 0.824999, 0.000000, 0.000000, 0.000000);
	police[SultanPD[3]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[SultanPD[3]], SultanPD[3], 0.000000, -0.074999, 0.824999, 0.000000, 0.000000, 0.000000);
	police[SultanPD[4]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[SultanPD[4]], SultanPD[4], 0.000000, -0.074999, 0.824999, 0.000000, 0.000000, 0.000000);
	//
	SultanPD[5] = AddStaticVehicleEx(560,-1579.9520,749.1624,-5.5373,180.1816,7,7,300); // Sultan SFPD
	SultanPD[6] = AddStaticVehicleEx(560,-1584.0452,749.7038,-5.5370,179.0984,7,7,300); // Sultan SFPD
	SultanPD[7] = AddStaticVehicleEx(560,-1588.1549,749.5493,-5.5373,180.0408,7,7,300); // Sultan SFPD
	SultanPD[8] = AddStaticVehicleEx(560,-1592.1956,749.4501,-5.5367,179.0527,7,7,300); // Sultan SFPD
	SultanPD[9] = AddStaticVehicleEx(560,-1596.2516,749.4822,-5.5367,178.7470,7,7,300); // Sultan SFPD
	police[SultanPD[5]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[SultanPD[5]], SultanPD[5], 0.000000, -0.074999, 0.824999, 0.000000, 0.000000, 0.000000);
	police[SultanPD[6]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[SultanPD[6]], SultanPD[6], 0.000000, -0.074999, 0.824999, 0.000000, 0.000000, 0.000000);
	police[SultanPD[7]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[SultanPD[7]], SultanPD[7], 0.000000, -0.074999, 0.824999, 0.000000, 0.000000, 0.000000);
	police[SultanPD[8]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[SultanPD[8]], SultanPD[8], 0.000000, -0.074999, 0.824999, 0.000000, 0.000000, 0.000000);
	police[SultanPD[9]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[SultanPD[9]], SultanPD[9], 0.000000, -0.074999, 0.824999, 0.000000, 0.000000, 0.000000);
	//
	SultanPD[10] = AddStaticVehicleEx(560,2282.2710,2442.8005,10.5255,359.5852,7,7,300); // Sultan LVPD
	SultanPD[11] = AddStaticVehicleEx(560,2277.9084,2442.7820,10.5258,0.2412,7,7,300); // Sultan LVPD
	SultanPD[12] = AddStaticVehicleEx(560,2273.5012,2442.8486,10.5256,359.8542,7,7,300); // Sultan LVPD
	SultanPD[13] = AddStaticVehicleEx(560,2269.1843,2442.7771,10.5255,0.1147,7,7,300); // Sultan LVPD
	police[SultanPD[10]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[SultanPD[10]], SultanPD[10], 0.000000, -0.074999, 0.824999, 0.000000, 0.000000, 0.000000);
	police[SultanPD[11]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[SultanPD[11]], SultanPD[11], 0.000000, -0.074999, 0.824999, 0.000000, 0.000000, 0.000000);
	police[SultanPD[12]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[SultanPD[12]], SultanPD[12], 0.000000, -0.074999, 0.824999, 0.000000, 0.000000, 0.000000);
	police[SultanPD[13]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[SultanPD[13]], SultanPD[13], 0.000000, -0.074999, 0.824999, 0.000000, 0.000000, 0.000000);
	//
	BulletPD[0] = AddStaticVehicleEx(541,1558.7639,-1711.4885,5.5157,0.5397,79,1,300); // Bullet LSPD
	BulletPD[1] = AddStaticVehicleEx(541,1562.6538,-1711.5216,5.5155,0.3955,79,1,300); // Bullet LSPD
	BulletPD[2] = AddStaticVehicleEx(541,1566.1256,-1711.6975,5.5155,358.5310,79,1,300); // Bullet LSPD
	BulletPD[3] = AddStaticVehicleEx(541,1570.4940,-1711.6779,5.5157,0.2225,79,1,300); // Bullet LSPD
	police[BulletPD[0]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[BulletPD[0]], BulletPD[0], 0.00300, -0.29730, 0.61620,   0.00000, 0.00000, 0.00000);
	police[BulletPD[1]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[BulletPD[1]], BulletPD[1], 0.00300, -0.29730, 0.61620,   0.00000, 0.00000, 0.00000);
	police[BulletPD[2]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[BulletPD[2]], BulletPD[2], 0.00300, -0.29730, 0.61620,   0.00000, 0.00000, 0.00000);
	police[BulletPD[3]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[BulletPD[3]], BulletPD[3], 0.00300, -0.29730, 0.61620,   0.00000, 0.00000, 0.00000);
	//
	BulletPD[4] = AddStaticVehicleEx(541,-1573.1769,705.9400,-5.6172,88.6302,79,1,300); // Bullet SFPD
	BulletPD[5] = AddStaticVehicleEx(541,-1573.2061,710.2321,-5.6171,90.0164,79,1,300); // Bullet SFPD
	BulletPD[6] = AddStaticVehicleEx(541,-1573.3842,714.1074,-5.6173,88.9574,79,1,300); // Bullet SFPD
	BulletPD[7] = AddStaticVehicleEx(541,-1573.4176,718.4200,-5.6171,90.8189,79,1,300); // Bullet SFPD
	police[BulletPD[4]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[BulletPD[4]], BulletPD[4], 0.00300, -0.29730, 0.61620,   0.00000, 0.00000, 0.00000);
	police[BulletPD[5]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[BulletPD[5]], BulletPD[5], 0.00300, -0.29730, 0.61620,   0.00000, 0.00000, 0.00000);
	police[BulletPD[6]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[BulletPD[6]], BulletPD[6], 0.00300, -0.29730, 0.61620,   0.00000, 0.00000, 0.00000);
	police[BulletPD[7]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[BulletPD[7]], BulletPD[7], 0.00300, -0.29730, 0.61620,   0.00000, 0.00000, 0.00000);
	//
	BulletPD[8] = AddStaticVehicleEx(541,2260.6023,2443.1985,10.4451,358.1609,79,1,300); // Bullet LVPD
	BulletPD[9] = AddStaticVehicleEx(541,2256.1753,2443.2856,10.4451,358.2953,79,1,300); // Bullet LVPD
	BulletPD[10] = AddStaticVehicleEx(541,2251.8984,2443.7219,10.4452,357.3023,79,1,300); // Bullet LVPD
	police[BulletPD[8]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[BulletPD[8]], BulletPD[8], 0.00300, -0.29730, 0.61620,   0.00000, 0.00000, 0.00000);
	police[BulletPD[9]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[BulletPD[9]], BulletPD[9], 0.00300, -0.29730, 0.61620,   0.00000, 0.00000, 0.00000);
	police[BulletPD[10]] = CreateObject(19419,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[BulletPD[10]], BulletPD[10], 0.00300, -0.29730, 0.61620,   0.00000, 0.00000, 0.00000);
	//=================================== FBI ==================================
	fbicar[0] = AddStaticVehicleEx(490,1006.0296,1091.0980,10.9484,83.2232,0,0,300);
	AddStaticVehicleEx(490,1008.7285,1101.4137,10.9480,64.9009,0,0,300);
	AddStaticVehicleEx(490,1013.6536,1111.1724,10.9484,63.9338,0,0,300);
	AddStaticVehicleEx(490,1019.9016,1121.7432,10.9452,55.3072,0,0,300);
	AddStaticVehicleEx(427,986.5527,1087.5028,10.9516,4.1294,0,0,300);
	AddStaticVehicleEx(427,993.4878,1086.8092,10.9522,351.8751,0,0,300);
	AddStaticVehicleEx(487,1084.8268,1082.8969,11.0121,130.3541,0,0,300); // FBIvert1
	AddStaticVehicleEx(405,983.1454,1150.4017,10.8203,268.8291,1,1,300); //
	AddStaticVehicleEx(410,983.0489,1145.2448,10.8203,268.8291,6,6,300);
	//Мигалки
	fbicar[1] = AddStaticVehicleEx(560,1005.6938,1085.5436,10.5257,83.4468,0,0,300);
	fbicar[2] = AddStaticVehicleEx(560,1007.4573,1096.4706,10.5254,73.1247,0,0,300);
	fbicar[3] = AddStaticVehicleEx(560,1011.8801,1106.2737,10.5257,62.7961,0,0,300);
	fbicar[4] = AddStaticVehicleEx(560,1016.7900,1115.9655,10.5254,63.5580,0,0,300);
	police[fbicar[1]] = CreateObject(19420,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[fbicar[1]], fbicar[1], 0.000000, -0.074999, 0.824999, 0.000000, 0.000000, 0.000000);
	police[fbicar[2]] = CreateObject(19420,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[fbicar[2]], fbicar[2], 0.000000, -0.074999, 0.824999, 0.000000, 0.000000, 0.000000);
	police[fbicar[3]] = CreateObject(19420,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[fbicar[3]], fbicar[3], 0.000000, -0.074999, 0.824999, 0.000000, 0.000000, 0.000000);
	police[fbicar[4]] = CreateObject(19420,0,0,0,0,0,0,100.0);
	AttachObjectToVehicle(police[fbicar[4]], fbicar[4], 0.000000, -0.074999, 0.824999, 0.000000, 0.000000, 0.000000);
	//Мигалки
	fbicar[5] = AddStaticVehicleEx(487,1095.4149,1067.6017,11.0122,129.6321,0,0,300); // FBIvert2
	fbicar[6] = AddStaticVehicleEx(490,980.9920,1107.0010,10.9514,269.3878,0,0,300);
	fbicar[7] = AddStaticVehicleEx(490,981.1663,1112.2805,10.9489,270.7481,0,0,300);
	fbicar[8] = AddStaticVehicleEx(490,981.3320,1117.6770,10.9482,269.6568,0,0,300);
	fbicar[9] = AddStaticVehicleEx(490,981.3571,1122.9774,10.9473,270.6772,0,0,300);
	fbicar[10] = AddStaticVehicleEx(490,981.4894,1128.1080,10.9476,270.0082,0,0,300);
	//============================== Army SFA =================================
	armycarsf[0] = AddStaticVehicleEx(430,-1441.8682,504.9640,-0.1769,90.9145,44,44,300); // Predator 0
	AddStaticVehicleEx(430,-1444.5718,497.6307,-0.2322,87.5099,44,44,300); // Predator 1
	AddStaticVehicleEx(470,-1271.7831,445.6113,7.1765,0.0584,46,46,300); // Patriot 0
	AddStaticVehicleEx(470,-1275.8635,445.3786,7.1729,359.9996,46,46,300); // Patriot 1
	AddStaticVehicleEx(470,-1279.8767,445.2865,7.1737,0.4501,46,46,300); // Patriot 2
	AddStaticVehicleEx(470,-1283.8704,445.3941,7.1734,0.8042,46,46,300); // Patriot 3
	AddStaticVehicleEx(470,-1287.6798,445.3294,7.1740,1.4186,46,46,300); // Patriot 4
	AddStaticVehicleEx(470,-1291.6011,445.3683,7.1728,0.0126,46,46,300); // Patriot 5
	AddStaticVehicleEx(548,-1369.0233,412.8488,34.2750,356.3427,46,46,300); //Army Elikopter
	AddStaticVehicleEx(548,-1368.6143,370.6864,34.2085,3.4211,46,46,300); // Army Elikopter
	AddStaticVehicleEx(548,-1448.0697,399.3009,31.6518,320.3739,1,1,300); // 1
	AddStaticVehicleEx(548,-1436.8774,376.3326,31.6532,306.9073,1,1,300); // 2
	AddStaticVehicleEx(548,-1414.1393,363.3260,31.6839,341.8984,1,1,300); // 3
	AddStaticVehicleEx(548,-1453.3411,427.3741,31.7058,298.7947,1,1,300); // 4
	AddStaticVehicleEx(431,-1246.9957,444.7142,7.2824,1.7354,46,46,300); // avtobus
	AddStaticVehicleEx(563,-1458.2094,501.4792,18.9763,271.1768,4,4,300);//Верт
	AddStaticVehicleEx(563,-1415.9270,492.9064,18.9118,90.8321,4,4,300);//Верт
	AddStaticVehicleEx(487,-1421.8584,517.3246,18.4192,180.8972,4,4,300);//Верт
	AddStaticVehicleEx(500,-1307.0559,446.9584,7.2870,0.5874,46,46,300);
	AddStaticVehicleEx(500,-1311.2816,446.9520,7.2994,0.2697,46,46,300);
	AddStaticVehicleEx(500,-1315.2695,446.6814,7.2909,357.9354,46,46,300);
	AddStaticVehicleEx(500,-1319.5898,446.6617,7.2964,359.3501,46,46,300);
	AddStaticVehicleEx(472,-1471.9764,486.8800,0.2045,88.8199,1,1,300); // lodka vmf
	AddStaticVehicleEx(472,-1289.0275,486.8399,0.1994,269.9871,1,1,300); // lodka vmf
	armycarsf[1] = AddStaticVehicleEx(487,-1408.1002,517.9277,18.4194,177.8933,4,4,300);//Верт
	//================================= Aztec ==================================
	coronoscar[0] = AddStaticVehicleEx(567,2764.2839,-1931.1196,13.2748,180.5744,2,1,300); // авто
	AddStaticVehicleEx(567,2764.4875,-1939.0083,13.2766,180.6037,2,1,300); // авто
	AddStaticVehicleEx(567,2775.3220,-1972.7830,13.2987,0.9594,2,1,300); // авто
	AddStaticVehicleEx(567,2775.1729,-1962.7269,13.2800,0.1066,2,1,300); // авто
	AddStaticVehicleEx(468,2760.0457,-1962.0648,13.2082,0.3975,2,1,300); // авто
	AddStaticVehicleEx(468,2759.9614,-1966.3655,13.2127,0.3322,2,1,300); // авто
	AddStaticVehicleEx(534,2764.1848,-1981.9352,13.1825,359.9240,2,1,300); // авто
	AddStaticVehicleEx(478,2756.7781,-1932.5518,13.5328,178.3072,2,1,300); // авто
	AddStaticVehicleEx(534,2764.1506,-1973.1104,13.1631,0.1054,2,1,300); // авто
	AddStaticVehicleEx(534,2774.8877,-1913.9114,12.1779,359.9894,2,1,300); // авто
	coronoscar[1] = AddStaticVehicleEx(534,2764.1135,-1908.7356,11.5911,359.9600,2,1,300); // авто
	matsfuraactek = AddStaticVehicleEx(482,2755.1155,-1944.3400,13.6706,269.6637,2,1,300);
	//================================= Vagos ==================================
	vagoscar[0] = AddStaticVehicleEx(468,2782.1636,-1623.6354,10.6842,329.0284,6,6,300); // Hermes 0
	AddStaticVehicleEx(468,2786.2476,-1623.0164,10.6844,329.1863,6,6,300); // Hermes 1
	AddStaticVehicleEx(467,2771.0518,-1606.1017,10.5311,268.8685,84,6,300); // Oceanic 0
	AddStaticVehicleEx(467,2771.2153,-1610.5345,10.5310,270.8883,84,6,300); // Oceanic 1
	AddStaticVehicleEx(467,2771.1968,-1615.2633,10.5306,270.8752,84,6,300); // Oceanic 2
	AddStaticVehicleEx(474,2778.0803,-1623.6750,10.6844,326.1422,6,6,300); // Hermes 2
	AddStaticVehicleEx(474,2772.8315,-1623.4960,10.6874,322.4687,6,6,300); // Hermes 3
	vagoscar[1] = AddStaticVehicleEx(478,2785.3682,-1602.3062,10.9123,269.4144,6,6,300); // Walton
	matsfuravagos = AddStaticVehicleEx(482,2791.5195,-1624.3110,11.0391,1.2041,6,6,300); // MatsVan 0
	//================================== Groove Street =========================
	grovecar[0] = AddStaticVehicleEx(492,2469.6772,-1671.0565,13.1814,13.2198,86,86,300); // GreenWood 0
	AddStaticVehicleEx(492,2509.2651,-1672.5288,13.1906,342.6730,86,86,300); // GreenWood 1
	AddStaticVehicleEx(492,2488.3328,-1684.1450,13.1991,85.5844,86,86,300); // GreenWood 2
	AddStaticVehicleEx(492,2506.2107,-1678.6152,13.2417,324.9343,86,86,300); // GreenWood 3
	AddStaticVehicleEx(600,2474.3723,-1692.1406,13.2249,1.0014,86,1,300); // Picador 0
	AddStaticVehicleEx(468,2502.7886,-1655.3229,13.1999,56.7785,86,1,300); // Picador 1
	AddStaticVehicleEx(468,2471.9756,-1653.3414,13.1145,88.9228,86,1,300); // Picador 2
	grovecar[1] = AddStaticVehicleEx(478,2516.6865,-1665.7550,13.9433,94.9661,86,1,300); // Walton
	matsfuragrove = AddStaticVehicleEx(482,2505.2205,-1694.3320,13.6723,358.9510,86,1,300); // MatsVan 0
	//================================= Rifa ===================================
	rifacar[0] = AddStaticVehicleEx(529,2190.4885,-1807.8793,13.0879,57.6594,12,1,300); // Willard 0
	AddStaticVehicleEx(529,2190.7566,-1803.2738,13.0776,60.1990,12,1,300); // Willard 1
	AddStaticVehicleEx(529,2191.2688,-1798.7716,13.1349,61.4048,12,1,300); // Willard 2
	AddStaticVehicleEx(468,2169.2505,-1810.9896,13.2308,331.1815,12,1,300); // Picador 0
	AddStaticVehicleEx(468,2165.5552,-1809.8772,13.2229,330.2449,12,1,300); // Picador 1
	AddStaticVehicleEx(518,2161.5291,-1792.8157,13.0625,206.9070,12,1,300); // Buccaner 2
	AddStaticVehicleEx(518,2165.6248,-1792.7678,13.0754,204.6104,12,1,300); // Buccaner 3
	AddStaticVehicleEx(518,2170.2642,-1792.8630,13.0524,201.1296,12,1,300); // Buccaner 4
	rifacar[1] = AddStaticVehicleEx(478,2190.0503,-1780.0416,13.4480,359.8207,12,1,300); // Walton
	matsfurarifa = AddStaticVehicleEx(482,2189.6514,-1788.8198,13.5727,358.5592,12,1,300); // MatsVan 0
	//============================ K.A.C.C. ====================================
	patzav[0] = AddStaticVehicleEx(470,2524.5718,2758.3015,10.8124,180.2156,30,30,300);// Охрана
	AddStaticVehicleEx(470,2532.9412,2758.2336,10.8132,180.2254,30,30,300);
	AddStaticVehicleEx(470,2541.2874,2758.4292,10.8135,179.3966,30,30,300);
	AddStaticVehicleEx(470,2549.3826,2758.5056,10.8126,178.7421,30,30,300);
	AddStaticVehicleEx(487,2619.1821,2766.4045,26.5760,88.6126,30,30,300);
	AddStaticVehicleEx(487,2618.2397,2719.5508,30.5571,0.4074,30,30,300);
	patzav[1] = AddStaticVehicleEx(470,2557.8196,2758.5901,10.8114,179.6758,30,30,300);// Охрана
	//
	zavcar[0] = AddStaticVehicleEx(505,2557.9661,2769.7407,10.9080,359.6827,30,30,300);// Рабочим
	AddStaticVehicleEx(505,2549.5532,2769.8499,10.9078,359.5536,30,30,300);
	AddStaticVehicleEx(505,2541.4490,2770.1174,10.9080,358.6298,30,30,300);
	AddStaticVehicleEx(505,2533.0447,2769.8274,10.9080,359.5999,30,30,300);
	zavcar[1] = AddStaticVehicleEx(505,2524.5381,2769.9526,10.9079,0.3257,30,30,300);// Рабочим
	//========================= Адм Президента =================================
	prezidentcar[0] = AddStaticVehicleEx(551,1556.5659,-1809.0723,13.3430,269.1329,1,1,300);//prezident
	AddStaticVehicleEx(551,1556.6641,-1771.9034,13.3430,269.8129,1,1,300); // 2
	AddStaticVehicleEx(551,1556.8511,-1776.4808,13.3430,269.4614,1,1,300); // 3
	AddStaticVehicleEx(551,1556.9594,-1781.1783,13.3430,270.2791,1,1,300); // 4
	AddStaticVehicleEx(409,1558.5021,-1798.4686,13.3469,179.6507,1,1,300); // 5
	AddStaticVehicleEx(579,1557.5559,-1786.1488,13.4785,269.0422,0,0,300); // 6
	AddStaticVehicleEx(579,1557.5812,-1789.7607,13.4814,270.3675,0,0,300); // 7
	prezidentcar[1] = AddStaticVehicleEx(487,1421.1051,-1791.2347,33.5997,357.0869,1,1,300);//prezident
	//============================= Ballas =====================================
	ballascar[0] = AddStaticVehicleEx(412,1987.5820,-1275.8378,23.6573,179.5757,85,1,300); //Voodoo
	AddStaticVehicleEx(412,1990.5176,-1275.8209,23.6589,180.1919,85,1,300); //Voodoo
	AddStaticVehicleEx(468,2021.5874,-1278.2593,23.6358,59.0409,85,1,300); // avto ballas
	AddStaticVehicleEx(566,1999.4882,-1275.4059,23.6020,180.9997,85,1,300); //Tahoma
	AddStaticVehicleEx(412,1984.8468,-1275.8879,23.6644,180.3700,85,1,300); // avto ballas
	AddStaticVehicleEx(468,2021.4863,-1275.9171,23.6451,56.5805,85,1,300); // avto ballas
	AddStaticVehicleEx(478,2021.4108,-1288.1591,23.9223,359.4613,85,1,300); // ballas avto
	ballascar[1] = AddStaticVehicleEx(566,1996.2883,-1275.4723,23.6001,180.9315,85,1,300); //Tahoma
	matsfura = AddStaticVehicleEx(482,1978.8966,-1275.0898,23.9380,179.2369,85,1,900); //Burrito
	//================================== Развозчик =============================
	comptruckcar[0] = AddStaticVehicleEx(440,-524.5677,-471.8651,25.6359,178.8661,3,3,300); // prods
	AddStaticVehicleEx(440,-514.6212,-472.3376,25.6372,178.6975,20,20,300); // prods
	AddStaticVehicleEx(440,-504.7041,-472.2677,25.6514,177.7482,11,11,300); // prods
	AddStaticVehicleEx(440,-494.3740,-472.6883,25.6390,178.1558,8,8,300); // prods
	AddStaticVehicleEx(440,-534.5190,-472.7173,25.6266,178.9570,5,5,300); // prods
	AddStaticVehicleEx(440,-544.6422,-472.3531,25.6401,179.5657,27,27,300); // prods
	AddStaticVehicleEx(440,-554.7783,-472.6953,25.6449,179.0569,23,23,300); // prods
	comptruckcar[1] = AddStaticVehicleEx(440,-564.6948,-472.6787,25.6508,179.1602,34,34,300); // prods
	//==================================== Бензовоз ============================
	benzovozcar[0] = AddStaticVehicleEx(403,-1008.7473,-623.0888,32.6140,91.2849,30,33,300); // benzo
	AddStaticVehicleEx(403,-1008.2144,-633.2949,32.6137,90.2068,10,10,300); // benzo
	AddStaticVehicleEx(403,-1008.4644,-643.4704,32.6138,89.7324,9,9,300); // benzo
	AddStaticVehicleEx(403,-1008.5569,-653.8291,32.6139,89.0561,6,6,300); // benzo
	AddStaticVehicleEx(403,-998.7760,-625.5865,32.6140,270.0690,3,3,300); // benzo
	AddStaticVehicleEx(403,-998.5176,-636.2751,32.6140,269.3684,19,19,300); // benzo
	AddStaticVehicleEx(403,-998.8336,-646.0377,32.6139,269.6916,12,12,300); // benzo
	AddStaticVehicleEx(403,-998.8111,-656.2497,32.6143,270.8438,16,16,300); // benzo
	AddStaticVehicleEx(584,-1030.5908,-638.5427,32.6137,270.6873,1,1,300); // benzopri
	AddStaticVehicleEx(584,-1030.5767,-651.1624,32.6145,268.7969,1,1,300); // benzopri
	AddStaticVehicleEx(584,-1030.9445,-663.8609,32.6161,271.2067,1,1,300); // benzopri
	AddStaticVehicleEx(584,-1030.6163,-676.5714,32.6162,270.8588,1,1,300); // benzopri
	benzovozcar[1] = AddStaticVehicleEx(584,-1030.6886,-625.6307,32.6136,269.8047,1,1,300); // benzopri
	//======================== Воздушная техника ВМФ  ==========================
	armsf[0] = AddStaticVehicleEx(520,-1429.4319,507.3795,18.9526,270.0001,0,0,100);
	AddStaticVehicleEx(520,-1397.0635,507.7015,18.9529,270.0029,0,0,100);
	AddStaticVehicleEx(520,-1301.7075,507.2173,18.9576,270.0001,0,0,100);
	AddStaticVehicleEx(520,-1268.4209,498.1505,18.9570,270.0028,0,0,100);
	AddStaticVehicleEx(425,-1607.0800,283.4644,7.7662,0.3373,3,3,100);
	AddStaticVehicleEx(425,-1641.1638,289.3371,7.7428,308.1117,3,3,100);
	armsf[1] = AddStaticVehicleEx(425,-1658.7822,306.3068,7.7644,310.4444,3,3,100);
	//======================== Техника СВ  =====================================
	armsv[0] = AddStaticVehicleEx(520,277.9764,2017.3213,18.3640,296.3493,0,0,100);
	AddStaticVehicleEx(425,342.4021,1975.8309,33.6185,89.1707,3,3,100);
	AddStaticVehicleEx(425,341.4717,1935.1681,39.6447,91.0267,3,3,100);
	AddStaticVehicleEx(425,175.7087,1885.0911,22.2879,268.1017,3,3,100);
	AddStaticVehicleEx(432,336.5826,1861.7437,17.9688,90.3844,3,3,100);
	AddStaticVehicleEx(432,336.7316,1853.4783,17.8177,91.3236,3,3,100);
	armsv[1] = AddStaticVehicleEx(520,278.3778,2031.6840,18.3639,238.7583,0,0,100);
	//============================== Байкеры ===================================
	bmoto[0] = AddStaticVehicleEx(463,694.8555,-460.7811,15.8762,271.2973,0,0,300);
	AddStaticVehicleEx(463,694.9320,-463.8717,15.8762,270.6608,13,13,300);
	AddStaticVehicleEx(463,694.7313,-470.3166,15.8763,268.5300,0,0,300);
	AddStaticVehicleEx(463,694.7266,-473.2953,15.8761,268.6022,13,13,300);
	AddStaticVehicleEx(463,708.8932,-457.9413,15.8762,87.4674,0,0,300);
	AddStaticVehicleEx(463,708.9929,-461.3357,15.8762,91.2266,13,13,300);
	AddStaticVehicleEx(463,709.0375,-464.5527,15.8763,91.6932,0,0,300);
	AddStaticVehicleEx(463,668.7131,-470.8006,15.8766,88.0964,13,13,300);
	AddStaticVehicleEx(463,668.7551,-467.5598,15.8761,91.2210,0,0,300);
	AddStaticVehicleEx(463,668.7856,-464.4341,15.8764,90.5580,13,13,300);
	AddStaticVehicleEx(463,668.7473,-461.3469,15.8764,91.0537,0,0,300);
	AddStaticVehicleEx(463,668.6407,-458.2648,15.8763,90.4711,13,13,300);
	AddStaticVehicleEx(463,668.9327,-473.4949,15.8763,89.8045,0,0,300);
	AddStaticVehicleEx(463,707.8539,-467.7365,15.8758,91.9275,13,13,300);
	AddStaticVehicleEx(463,708.0532,-470.9146,15.8750,92.4496,0,0,300);
	AddStaticVehicleEx(463,708.1385,-473.4845,15.8764,94.3557,13,13,300);
	AddStaticVehicleEx(463,709.1501,-454.4927,15.8763,87.4543,0,0,300);
	bmoto[1] = AddStaticVehicleEx(463,694.7928,-467.2727,15.8761,271.2539,13,13,300);
	furabiker[0] = AddStaticVehicleEx(459,708.5958,-447.1624,16.3871,90.1139,35,35,300);
	furabiker[1] = AddStaticVehicleEx(459,708.5588,-451.1295,16.3893,90.3305,35,35,300);
	//========================== Автобусы военкомата ===========================
	voenk[0] =	AddStaticVehicleEx(431,1148.2141,1323.5620,10.9219,0.5412,4,4,200);
	AddStaticVehicleEx(431,1141.0386,1323.3873,10.9221,2.2675,4,4,200);
	voenk[1] = AddStaticVehicleEx(431,1155.0729,1323.5734,10.9209,359.3708,4,4,200);
	//============================== Zone 51 ===================================
	gunscar[0] = AddStaticVehicleEx(433,276.8591,1950.1312,18.0792,271.6760,34,34,300);
	AddStaticVehicleEx(433,276.6065,1955.7543,18.0789,271.6867,34,34,300);
	AddStaticVehicleEx(433,277.2437,1983.8351,18.0774,265.4737,34,34,300);
	AddStaticVehicleEx(433,277.2820,1989.8121,18.0773,267.1807,34,34,300);
	AddStaticVehicleEx(433,277.6217,1995.3334,18.0773,267.8350,34,34,300);
	gunscar[1] = AddStaticVehicleEx(433,276.5988,1961.6086,18.0786,272.0377,34,34,300);
	//
	armcar[0] = AddStaticVehicleEx(487,243.5456,2062.1790,20.3398,180.2462,4,4,300);
	AddStaticVehicleEx(487,279.3238,2061.3684,20.3464,180.8831,4,4,300);
	AddStaticVehicleEx(487,314.1637,2061.1030,20.3511,181.0494,4,4,300);
	AddStaticVehicleEx(470,292.6497,1895.7864,17.6308,301.4113,4,4,300);
	AddStaticVehicleEx(470,292.3492,1888.8540,17.6334,303.5907,4,4,300);
	AddStaticVehicleEx(470,292.6306,1882.8979,17.6309,301.9543,4,4,300);
	AddStaticVehicleEx(470,292.6891,1875.2072,17.6340,302.2580,4,4,300);
	AddStaticVehicleEx(500,221.9194,1855.0072,13.0356,1.6078,77,77,300);
	AddStaticVehicleEx(500,217.1713,1854.8744,13.0242,1.6078,77,77,300);
	AddStaticVehicleEx(500,212.6617,1854.7483,13.0134,1.6078,77,77,300);
	AddStaticVehicleEx(500,203.7943,1862.3488,13.2462,271.1720,77,77,300);
	AddStaticVehicleEx(500,203.7240,1866.9736,13.2801,271.3324,77,77,300);
	AddStaticVehicleEx(500,203.5927,1872.2008,13.2459,271.1720,77,77,300);
	AddStaticVehicleEx(470,321.3738,1803.2595,17.7929,1.2100,0,0,300);
	AddStaticVehicleEx(470,312.2971,1803.2181,17.7976,358.9688,0,0,300);
	AddStaticVehicleEx(470,303.6162,1803.1311,17.7936,2.3702,0,0,300);
	armcar[1] = AddStaticVehicleEx(470,294.3468,1803.0085,17.7936,2.2516,0,0,300);
	//--------------------------- Цистерны К.А.С.С. ----------------------------
	trailerz[0] = AddStaticVehicleEx(584,2597.7175,2689.6245,11.9984,181.5018,123,123,300);
	AddStaticVehicleEx(584,2604.9878,2689.6741,12.0036,183.2959,123,123,300);
	AddStaticVehicleEx(584,2613.1338,2689.7566,11.9967,181.0876,123,123,300);
	AddStaticVehicleEx(584,2621.4521,2689.8804,11.9759,180.8867,123,123,300);
	trailerz[1] = AddStaticVehicleEx(584,2629.5464,2689.6599,11.9779,180.6504,123,123,300);
	//---------------------------- Тягачи цистерн ------------------------------
	zfuelcar[0] = AddStaticVehicleEx(514,2504.3582,2707.2705,11.4050,271.0518,123,123,300);
	AddStaticVehicleEx(514,2504.4871,2715.4324,11.4069,270.5488,123,123,300);
	AddStaticVehicleEx(514,2504.3096,2723.6113,11.4043,270.2860,123,123,300);
	AddStaticVehicleEx(514,2504.3237,2731.8176,11.3982,270.6210,123,123,300);
	zfuelcar[1] = AddStaticVehicleEx(514,2504.3259,2740.0811,11.3973,271.0276,123,123,300);
	//---------------------------- Фургоны К.А.С.С. ----------------------------
	zcar[0] = AddStaticVehicleEx(609,2541.3875,2790.8689,10.8870,179.7747,123,123,300);
	AddStaticVehicleEx(609,2549.6235,2790.7888,10.8869,178.9366,123,123,300);
	AddStaticVehicleEx(609,2557.7788,2790.7937,10.8889,179.7225,123,123,300);
	AddStaticVehicleEx(609,2566.1333,2790.7773,10.8892,179.0981,123,123,300);
	zcar[1] = AddStaticVehicleEx(609,2574.4744,2790.7878,10.8886,179.0772,123,123,300);
	//================================== АвтоСалон =============================
	saloncar[0] = AddStaticVehicleEx(466,524.09997559,-1291.19995117,17.20000076,358.00000000,-1,-1,15); //Glendale
	AddStaticVehicleEx(542,520.09997559,-1291.00000000,17.10000038,0.00000000,-1,-1,15); //Clover
	AddStaticVehicleEx(492,528.20001221,-1291.19995117,17.10000038,358.00000000,-1,-1,15); //Greenwood
	AddStaticVehicleEx(517,532.50000000,-1291.50000000,17.20000076,0.00000000,-1,-1,15); //Majestic
	AddStaticVehicleEx(516,537.20001221,-1291.19995117,17.10000038,0.00000000,-1,-1,15); //Nebula
	AddStaticVehicleEx(467,528.40002441,-1281.50000000,17.10000038,218.00000000,-1,-1,15); //Oceanic
	AddStaticVehicleEx(600,532.00000000,-1278.40002441,17.10000038,218.00000000,-1,-1,15); //Picador
	AddStaticVehicleEx(549,535.50000000,-1275.30004883,17.10000038,218.00000000,-1,-1,15); //Tampa
	AddStaticVehicleEx(529,538.90002441,-1272.50000000,17.00000000,217.99951172,-1,-1,15); //Willard
	AddStaticVehicleEx(404,542.29998779,-1270.00000000,17.10000038,218.00000000,-1,-1,15); //Perenniel
	AddStaticVehicleEx(474,546.09997559,-1267.30004883,17.10000038,214.00000000,-1,-1,15); //Hermes
	AddStaticVehicleEx(422,562.90002441,-1266.90002441,17.29999924,102.00000000,-1,-1,15); //Bobcat
	AddStaticVehicleEx(535,563.79998779,-1271.09997559,17.10000038,102.00000000,-1,-1,15); //Slamvan
	AddStaticVehicleEx(543,564.79998779,-1275.69995117,17.20000076,102.00000000,-1,-1,15); //Sadler
	AddStaticVehicleEx(575,567.40002441,-1288.40002441,17.00000000,102.00000000,-1,-1,15); //Broadway
	AddStaticVehicleEx(545,541.70001221,-1291.90002441,17.20000076,0.00000000,-1,-1,15); //Hustler
	//============================ Авторынок ЛВ ================================
	AddStaticVehicleEx(415,2464.8501,1336.8545,10.5703,179.9057,92,1,15); // Cheetah
	AddStaticVehicleEx(451,2458.4028,1336.6525,10.5423,180.5343,75,75,15); // Turismo
	AddStaticVehicleEx(402,2452.0537,1336.4951,10.6452,179.9693,22,22,15); // Buffalo
	AddStaticVehicleEx(603,2441.4016,1335.8466,10.5739,269.7882,75,77,15); // Phoenix
	AddStaticVehicleEx(602,2441.4912,1342.3033,10.6432,269.9018,75,77,15); // Alpha
	AddStaticVehicleEx(587,2441.6323,1348.5996,10.5534,269.9821,43,1,15); // Euros
	AddStaticVehicleEx(565,2441.0203,1355.0502,10.4424,269.9498,53,53,15); // Flash
	AddStaticVehicleEx(506,2452.0708,1357.9529,10.5094,180.3630,76,76,15); // Super GT
	AddStaticVehicleEx(559,2458.5916,1357.9718,10.4974,183.3553,60,1,15); // Jester
	AddStaticVehicleEx(541,2464.9209,1358.2946,10.4560,179.8829,36,8,15); // Bullet
	AddStaticVehicleEx(560,2471.2883,1358.0541,10.5271,181.0412,37,0,15); // Sultan
	AddStaticVehicleEx(429,2464.9260,1345.6094,10.4979,0.6739,3,1,15); // Banshee
	AddStaticVehicleEx(480,2458.5212,1345.6292,10.6045,0.1458,2,2,15); // Comet
	AddStaticVehicleEx(477,2452.1135,1345.8264,10.6067,0.0098,101,1,15); // ZR-350
	//=========================== Авторынок СФ-2 ===============================
	AddStaticVehicleEx(566,-1671.2559,1204.9709,13.4947,269.2117,52,8,15); // Tahoma
	AddStaticVehicleEx(567,-1679.2067,1209.1857,13.5766,224.3819,88,64,15); // Savanna
	AddStaticVehicleEx(475,-1667.8605,1222.2292,13.5229,225.2104,2,39,15); // Sabre
	AddStaticVehicleEx(418,-1664.4630,1225.2429,13.7967,225.2743,117,227,15); // Moonbeam
	AddStaticVehicleEx(496,-1658.5544,1218.8135,13.4196,133.6771,66,72,15); // Blista Compact
	AddStaticVehicleEx(533,-1656.0592,1216.0837,13.4135,133.3281,75,1,15); // Feltzer
	AddStaticVehicleEx(536,-1653.4425,1212.9457,13.4017,133.6770,12,1,15); // Blade
	AddStaticVehicleEx(580,-1665.9937,1223.8846,20.9756,224.2425,81,81,15); // Stafford
	AddStaticVehicleEx(534,-1656.7417,1215.8145,20.9038,134.4879,42,42,15); // Remington
	AddStaticVehicleEx(576,-1653.6145,1212.0641,20.8028,134.4139,68,96,15); // Tornado
	AddStaticVehicleEx(412,-1650.1639,1208.3586,21.0374,134.4998,10,8,15); // Voodoo
	AddStaticVehicleEx(589,-1679.4344,1210.1141,20.7956,224.3956,22,22,15); // Club
	//=========================== Авторынок СФ-1 ===============================
	AddStaticVehicleEx(547,-1954.3209,302.3019,35.2045,150.6224,125,1,15); // Primo
	AddStaticVehicleEx(550,-1959.8328,304.0068,35.2935,178.9667,62,62,15); // Sunrise
	AddStaticVehicleEx(546,-1953.9283,294.4562,35.1930,132.4206,2,62,15); // Intruder
	AddStaticVehicleEx(540,-1960.5535,288.2509,35.3288,177.3031,62,62,15); // Vincent
	AddStaticVehicleEx(426,-1946.4252,261.4338,35.2124,66.3871,10,10,15); // Premier
	AddStaticVehicleEx(421,-1949.5142,256.9565,35.3525,51.8514,30,1,15); // Washington
	AddStaticVehicleEx(405,-1957.8044,257.1968,35.3436,0.2665,123,1,15); // Sentinel
	AddStaticVehicleEx(401,-1955.4854,266.9453,35.2483,12.2445,52,52,15); // Bravura
	AddStaticVehicleEx(400,-1946.2535,273.4717,41.1426,125.9409,75,1,15); // Landstalker
	AddStaticVehicleEx(526,-1955.2605,271.1325,40.8138,219.3709,17,1,15); // Fortune
	AddStaticVehicleEx(500,-1945.6487,263.3558,41.1554,68.6747,28,119,15); // Mesa
	AddStaticVehicleEx(527,-1954.2917,259.4683,40.7621,322.7589,66,1,15); // Cadrona
	AddStaticVehicleEx(585,-1946.0463,267.5549,35.0603,92.4466,53,53,15); // Emperor
	AddStaticVehicleEx(579,-1946.1125,273.4043,35.4053,122.5222,7,7,15); // Huntley
	//=================================== Мото рынок ===========================
	AddStaticVehicleEx(521,2135.0933,-1132.3063,25.2235,87.7914,-1,-1,15);
	AddStaticVehicleEx(581,2135.3376,-1135.8730,25.2990,92.5018,-1,-1,15);
	AddStaticVehicleEx(586,2135.3516,-1126.7719,25.0513,84.3097,-1,-1,15);
	AddStaticVehicleEx(468,2135.2539,-1129.4902,25.3062,87.9760,-1,-1,15);
	AddStaticVehicleEx(463,2135.5693,-1139.7930,24.9033,91.9766,-1,-1,15);
	AddStaticVehicleEx(522,2135.6013,-1143.0702,24.5821,96.0640,3,3,15);
	saloncar[1] = AddStaticVehicleEx(562,-1954.1763,280.0875,35.1270,132.3259,101,1,15);
	printf("%d cars loaded!",saloncar[1]+1);
	return true;
}
stock CreateTimers()
{
	SetTimer("SecondTimer", 1000, true);
	SetTimer("UpdateSpeedometr", 120,true);
	SetTimer("HPCheck", 60000, true);
	return true;
}
stock CreateLabels()
{
	CreateDynamic3DTextLabel("{ffff00}[Автомастерская] \nВведите: {1e90ff}/tune",0xFF0000FF,-2054.0166,62.2480,28.1177, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{ffff00}[Автомастерская] \nВведите: {1e90ff}/tune",0xFF0000FF,-2054.2981,75.2348,28.1177, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{ffff00}[Автомастерская] \nВведите: {1e90ff}/tune",0xFF0000FF,-2054.4827,88.1688,28.1177, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{ffff00}[Автомастерская] \nВведите: {1e90ff}/tune",0xFF0000FF,1529.6611,1007.5448,10.5474, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{ffff00}[Автомастерская] \nВведите: {1e90ff}/tune",0xFF0000FF,1529.7915,989.0328,10.5474, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{ffff00}[Автомастерская] \nВведите: {1e90ff}/tune",0xFF0000FF,2512.0110,-1535.5844,23.4352, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{ffff00}[Автомастерская] \nВведите: {1e90ff}/tune",0xFF0000FF,2527.7119,-1535.5896,23.2970, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{ffff00}[Автомастерская] \nВведите: {1e90ff}/tune",0xFF0000FF,-47.9778,-1140.6030,0.8052, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{ffff00}[Автомастерская] \nВведите: {1e90ff}/tune",0xFF0000FF,-40.9765,-1126.6771,0.8052, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	//
    CreateDynamic3DTextLabel("{ffff00}Открыть шлагбаум\n{1e90ff}< Посигнальте >",0xFF0000FF,-2044.5059, -102.5607, 34.9626, 7.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 7.0);
	//
	CreateDynamic3DTextLabel("{ffff00}Открыть двери\nНажмите {1e90ff}< N >",0xFF0000FF,-1642.5784, 705.0701, 1002.3220, 7.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 7.0);
	CreateDynamic3DTextLabel("{ffff00}Открыть двери\nНажмите {1e90ff}< N >",0xFF0000FF,-1647.8240, 691.0106, 1009.3235, 7.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 7.0);
	CreateDynamic3DTextLabel("{ffff00}Открыть двери\nНажмите {1e90ff}< N >",0xFF0000FF,-1647.8239, 701.8553, 1009.3322, 7.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 7.0);
	//
	CreateDynamic3DTextLabel("{ffff00}Открыть двери\nНажмите {1e90ff}< N >",0xFF0000FF,1584.5718,-1637.1604,13.3905, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel("{ffff00}Открыть двери\nНажмите {1e90ff}< N >",0xFF0000FF,-1622.5175,687.6561,7.1875, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 5.0);
	CreateDynamic3DTextLabel("{ffff00}Открыть двери\nНажмите {1e90ff}< N >",0xFF0000FF,-1618.8412,688.9116,7.1875, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 5.0);
	CreateDynamic3DTextLabel("{ffff00}Открыть ворота\n{1e90ff}< Посигнальте >",0xFF0000FF,1588.5955,-1637.6282,13.4313, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel("{ffff00}Открыть ворота\n{1e90ff}< Посигнальте >",0xFF0000FF,-1631.6162,687.8357,7.1875, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	//
	CreateDynamic3DTextLabel("{ffff00}Арестовать\n/arrest",0xFF0000FF,-1647.6083,701.9725,1001.8149, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 5.0);
	CreateDynamic3DTextLabel("{ffff00}Арестовать\n/arrest",0xFF0000FF,-1653.9867,702.0215,1001.8049, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 5.0);
	//
	CreateDynamic3DTextLabel("{ffff00}Купить воздушный транспорт",0xFF0000FF,-1261.6259,43.1619,14.1345, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel("{30d5c8}Вызвать воздушный транспорт",0xFF0000FF,-1265.0143,39.7703,14.1357, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel("{ffff00}Купить воздушный транспорт",0xFF0000FF,1985.6235,-2329.4241,13.5469, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel("{30d5c8}Вызвать воздушный транспорт",0xFF0000FF,1984.3894,-2307.5452,13.5469, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel("{ffff00}Купить воздушный транспорт",0xFF0000FF,1347.4772,1261.5940,10.8203, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel("{30d5c8}Вызвать воздушный транспорт",0xFF0000FF,1350.8134,1258.0566,10.8203, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	//
	CreateDynamic3DTextLabel("{ffff00}Устройство на работу",0xFF0000FF,1404.6577,-1693.7471,23.0315, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel("{ffff00}Получить паспорт/лицензию на бизнес",0xFF0000FF,1403.4724,-1689.3228,23.0315, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	CreateDynamic3DTextLabel("{ffff00}Зарегистрировать семью",0xFF0000FF,1402.2450,-1684.6302,23.0315, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	//
	CreateDynamic3DTextLabel("{ffff00}/govbalance - баланс фонда\n{1e90ff}/govfond - положить деньги в фонд\n{009F00}/govwithdraw - снять деньги с фонда",0xFF0000FF,-469.3982,293.0259,2004.5850, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 10.0);
	//
	CreateDynamic3DTextLabel("{ffff00}Открыть ворота\nНажмите {1e90ff}< N >",0xFF0000FF,2498.1052,2778.3679,10.8203, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{ffff00}Открыть двери\nНажмите {1e90ff}< N >",0xFF0000FF,-1018.7110, 694.3480, 1507.9630, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	//--------------------------------------------------------------------------
	Create3DTextLabel("Затолкать в здание тюрьмы\nВведите /ceject",0x6495EDFF,-306.8596,1546.1813,75.5625,10.0,0,0);
	//--------------------------------------------------------------------------
	CreateDynamic3DTextLabel("{ffff00}Посадить преступника\nВведите: /parrest",COLOR_REDD,2537.8635,-1293.5372,1031.4219, 7.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 7.0);
	//--------------------------------------------------------------------------
	Create3DTextLabel("{B313E7}[Общак] \nВведите: {1e90ff}/binfo",0x6495EDFF,-2170.3062,645.6981,1057.5938,10.0,11);
	Create3DTextLabel("{DBD604}[Общак] \nВведите: {1e90ff}/vinfo",0x6495EDFF,301.4701,302.1598,1003.5391,10.0,75);
	Create3DTextLabel("{009F00}[Общак] \nВведите: {1e90ff}/ginfo",0x6495EDFF,2491.1707,-1699.9418,1014.7433,10.0,1);
	Create3DTextLabel("{2A9170}[Общак] \nВведите: {1e90ff}/ainfo",0x6495EDFF,-45.5650,1410.9452,1084.4297,10.0,36);
	Create3DTextLabel("{30d5c8}[Общак] \nВведите: {1e90ff}/rinfo",0x6495EDFF,2806.6743,-1171.8185,1025.5703,10.0,63);
	Create3DTextLabel("{30d5c8}[Общак] \nВведите: {1e90ff}/minfo",0x6495EDFF,510.9678,-74.1802,998.7578,10.0,132);
	//--------------------------------------------------------------------------
	Create3DTextLabel("CITY BANK",0x6495EDFF,595.2937,-1250.1853,18.2727,10.0,0,1);
	//
	CreateDynamic3DTextLabel("Пожениться\n /propose",COLOR_LIGHTBLUE,-2023.8943,1117.9874,53.9319,10.0);
	//
	CreateDynamic3DTextLabel("Сделать оружие из материалов\n /getgun",COLOR_LIGHTBLUE,1438.3441,780.0856,11.0234,40.0);// LCN
	CreateDynamic3DTextLabel("Сделать оружие из материалов\n /getgun",COLOR_LIGHTBLUE,1437.0110,2816.4558,10.8203,40.0); // Yakuza
	CreateDynamic3DTextLabel("Сделать оружие из материалов\n /getgun",COLOR_LIGHTBLUE,968.2819,1781.5436,8.8581,40.0); // PM
	//
	CreateDynamic3DTextLabel("{B313E7}Разгрузка материалов\n /unloading",0x6495EDFF,1440.8108,780.1008,11.0234,10.0);
	CreateDynamic3DTextLabel("{B313E7}Разгрузка материалов\n /unloading",0x6495EDFF,1434.6439,2816.4175,10.8203,10.0);
	CreateDynamic3DTextLabel("{B313E7}Разгрузка материалов\n /unloading",0x6495EDFF,968.2533,1783.9307,8.8581,10.0);
	CreateDynamic3DTextLabel("{B313E7}Разгрузка материалов\n /unloading",0x6495EDFF,1970.9800,-1281.3701,23.9844,10.0);
	CreateDynamic3DTextLabel("{B313E7}Разгрузка материалов\n /unloading",0x6495EDFF,2796.0659,-1612.0596,11.0938,10.0);
	CreateDynamic3DTextLabel("{B313E7}Разгрузка материалов\n /unloading",0x6495EDFF,2499.9006,-1686.8049,13.4962,10.0);
	CreateDynamic3DTextLabel("{B313E7}Разгрузка материалов\n /unloading",0x6495EDFF,2755.2000,-1948.3219,13.5465,10.0);
	CreateDynamic3DTextLabel("{B313E7}Разгрузка материалов\n /unloading",0x6495EDFF,2183.1975,-1811.8928,13.5469,10.0);
	CreateDynamic3DTextLabel("{B313E7}Разгрузка материалов\n /unloading",0x6495EDFF,681.4467,-444.9835,16.3359,10.0);
	//
	CreateDynamic3DTextLabel("{B313E7}Разгрузка травы\n /narkoput",0xFF0000FF,291.3910,304.7809,999.1484, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{B313E7}Разгрузка травы\n /narkoput",0xFF0000FF,1938.4286,165.4783,37.2813, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	//
	CreateDynamic3DTextLabel("{B313E7}Нажмите\n 'F'",0xFF9900,2592.3794,2783.0566,10.8203,10.0);
	CreateDynamic3DTextLabel("{B313E7}Нажмите\n 'F'",0xFF9900,-1349.1477,494.0280,11.1953,10.0);
	//
	CreateDynamic3DTextLabel("{B313E7}Радар: LS-LV\n Максимальная скорость 55 км/h",0x6495EDFF,1817.53,820.76,8.77,10.0);
	CreateDynamic3DTextLabel("{FFFF00}Радар: LS\n Максимальная скорость 55 км/h",0x6495EDFF,1402.78,-1737.79,11.22,10.0);
	CreateDynamic3DTextLabel("{FFFF00}Радар: LS\n Максимальная скорость 55 км/h",0x6495EDFF,1194.49,-1846.61,11.76,10.0);
	CreateDynamic3DTextLabel("{FFFF00}Радар: SF-LS\n Максимальная скорость 55 км/h",0x6495EDFF,167.09,-1567.70,10.53,10.0);
	CreateDynamic3DTextLabel("{FFFF00}Радар: SF\n Максимальная скорость 55 км/h",0x6495EDFF,-2001.06,19.17,30.69,10.0);
	CreateDynamic3DTextLabel("{FFFF00}Радар: SF\n Максимальная скорость 55 км/h",0x6495EDFF,-1740.99,323.06,5.45,10.0);
	//
	CreateDynamic3DTextLabel("{FFFFFF}Свалка Los Santos\n Разгрузити мусорные контейнеры /unloadmus",0xFFFFFFAA,2183.1965,-1993.3499,14.1243,10.0);
	//
	CreateDynamic3DTextLabel("{FFA500}Получение Мед.Карты",0xFF0000FF,-1052.7375,688.4049,1507.3469, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	//
	CreateDynamic3DTextLabel("{FFA500}Бросить кости\n/dice",0xFF0000FF,1954.4991,1038.8185,993.8879, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{FFA500}Бросить кости\n/dice",0xFF0000FF,1954.5040,996.8601,993.8836, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{FFA500}Бросить кости\n/dice",0xFF0000FF,2219.3132,1607.2161,1007.2018, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	CreateDynamic3DTextLabel("{FFA500}Бросить кости\n/dice",0xFF0000FF,2219.1455,1599.9976,1007.2018, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	//
	CreateDynamic3DTextLabel("{FFA500}Работа\n{FFFFFF}< Уборщик улиц >",0xFF0000FF,-2094.8853,83.2382,35.3134, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
	return true;
}
stock CreateMapIcons()
{
	CreateDynamicMapIcon(-2028.6849,-101.8958,35.1641,55,0); // Автошкола
	CreateDynamicMapIcon(-2238.5457,2352.6829,4.9800,9,0); // Морская школа
	CreateDynamicMapIcon(1318.8732,1251.3007,10.8203,5,0); // Школы пилотов
	CreateDynamicMapIcon(472.4380,-1515.5332,40.5726,45,0); // Victim LS
	CreateDynamicMapIcon(-1882.5100,866.3918,35.1719,45,0); // Victim SF
	CreateDynamicMapIcon(-1882.5100,866.3918,35.1719,45,0); // Victim LV
	CreateDynamicMapIcon(542.1437,-1272.3624,51.3059,55,0); // AutoSalone LS
	CreateDynamicMapIcon(-1948.4501,278.1562,68.9698,55,0); // AutoSalone SF
	CreateDynamicMapIcon(2200.9758,1394.2899,11.0625,55,0); // AutoSalone LV
	CreateDynamicMapIcon(1481.2144,-1756.5200,17.5313,56,0); // Goverment
	CreateDynamicMapIcon(1552.8314,-1675.9022,16.1953,30,0); // Police LS
	CreateDynamicMapIcon(-1605.4998,710.2729,13.8672,30,0); // Police SF
	CreateDynamicMapIcon(2340.2075,2459.0200,14.9688,30,0); // Police LV
	CreateDynamicMapIcon(1173.6215,-1323.2500,15.1953,22,0); // Medics LS
	CreateDynamicMapIcon(-2664.6611,637.9663,14.4531,22,0); // Medics SF
	CreateDynamicMapIcon(1607.1716,1817.0586,10.8203,22,0); // Medics LV
	CreateDynamicMapIcon(-2243.8826,-87.9706,35.3203,49,0); // Misty
	CreateDynamicMapIcon(2312.4189,-1641.4185,22.3378,49,0); // Bar Grove Steet
	CreateDynamicMapIcon(1495.4015,-1284.1047,14.5301,52,0); // Bank LS
	CreateDynamicMapIcon(-2172.0627,252.1688,35.3385,52,0); // Bank SF
	CreateDynamicMapIcon(2421.2842,-1221.6509,25.4070,49,0); // Pig Pen
	CreateDynamicMapIcon(1834.7672,-1682.3358,13.4178,49,0); // Alhambra
	CreateDynamicMapIcon(681.6204,-473.3593,16.5363,23,0); // Байкеры
	CreateDynamicMapIcon(-89.610397,1378.243530,10.469799,49,0); // Lil'Probe'in Bar
	CreateDynamicMapIcon(-2623.7166,1410.6890,7.0938,49,0); // Jizzy
	CreateDynamicMapIcon(1365.6863,-1279.8872,13.5469,6,0); // Ammo LS
	CreateDynamicMapIcon(-2626.6384,210.3960,4.5971,6,0); // Ammo SF
	CreateDynamicMapIcon(2159.5449,943.2165,10.8203,6,0); // Ammo LV
	CreateDynamicMapIcon(2228.5789,-1721.7820,13.5654,54,0); // Спортзал LS
	CreateDynamicMapIcon(1993.8706,-1269.3499,23.9844,59,0); // Ballas
	CreateDynamicMapIcon(2769.8887,-1950.8413,13.3719,58,0); // El Coronos
	CreateDynamicMapIcon(2770.6130,-1628.4537,12.1775,60,0); // LS Vagos
	CreateDynamicMapIcon(2184.2793,-1776.5498,13.3650,61,0); // SF Rifa
	CreateDynamicMapIcon(2495.3774,-1690.6801,14.7656,62,0); // Grove Street
	CreateDynamicMapIcon(-1458.1726,499.7299,28.8359,56,0); // ВМФ
	CreateDynamicMapIcon(154.2003,-1951.8547,51.3438,9,0); // Причал
	CreateDynamicMapIcon(69.7091,1218.5955,18.8097,55,0); // Заправка
	CreateDynamicMapIcon(2112.9299,919.8760,10.8203,55,0); // Заправка
	CreateDynamicMapIcon(-91.3459,-1169.9000,2.4206,55,0); // Заправка
	CreateDynamicMapIcon(-1676.8800,411.8920,7.1797,55,0); // Заправка
	CreateDynamicMapIcon(1003.7600,-936.1100,42.3281,55,0); // Заправка
	CreateDynamicMapIcon(1940.9301,-1772.9399,13.6406,55,0); // Заправка
	CreateDynamicMapIcon(655.2415,-564.9796,16.3359,55,0); // Заправка
	CreateDynamicMapIcon(-1329.0941,2677.4143,50.0625,55,0); // Заправка
	CreateDynamicMapIcon(1595.1919,2199.1509,10.8203,55,0); // Заправка
	CreateDynamicMapIcon(2146.2454,2747.7566,10.8203,55,0); // Заправка
	CreateDynamicMapIcon(2641.8623,1106.1095,10.8203,55,0); // Заправка
	CreateDynamicMapIcon(2202.4263,2474.2869,10.8203,55,0); // Заправка
	CreateDynamicMapIcon(1381.5828,459.9530,20.3452,55,0); // Заправка
	CreateDynamicMapIcon(213.7137,-1438.5184,13.2029,55,0); // arenda ls
	CreateDynamicMapIcon(-1872.5509,-133.2586,11.8984,55,0); // arenda sf
	CreateDynamicMapIcon(-77.4895,-1136.4185,1.0781,27,0); // АвтоМастерская
	CreateDynamicMapIcon(2520.0422,-1525.0465,23.8175,27,0); // АвтоМастерская
	CreateDynamicMapIcon(1535.5813,994.0795,10.8203,27,0); // АвтоМастерская
	CreateDynamicMapIcon(-2043.4336,80.3481,28.3977,27,0); // АвтоМастерская
	//=========================== Пицерии и Бургеры ============================
	CreateDynamicMapIcon(-1816.5311,618.6709,35.1719,29,0); // Pizza
	CreateDynamicMapIcon(2331.8088,75.0362,26.6210,29,0); // Pizza
	CreateDynamicMapIcon(-1911.7004,828.8093,35.1719,29,0); // Burger
	CreateDynamicMapIcon(-2336.1675,-168.1730,35.3203,29,0); // Burger
	CreateDynamicMapIcon(-2671.7808,257.9283,4.6328,29,0); // Pizza
	CreateDynamicMapIcon(2102.0913,-1808.8442,38.0027,29,0); // Pizza
	CreateDynamicMapIcon(2397.4641,-1903.6409,38.0027,29,0); // Pizza
	CreateDynamicMapIcon(800.9893,-1619.9106,38.0027,10,0); // Burger
	CreateDynamicMapIcon(932.5351,-1381.1470,32.0997,29,0); // Pizza
	CreateDynamicMapIcon(183.6340,1175.7919,22.6676,29,0); // Pizza
	CreateDynamicMapIcon(2420.4573,-1508.2711,24.0000,29,0); // Pizza
	CreateDynamicMapIcon(1204.3881,-915.2735,66.4264,29,0); // Burger
	CreateDynamicMapIcon(2391.6345,2041.7228,40.0850,29,0); // Pizza
	CreateDynamicMapIcon(1163.3766,2079.7026,40.0850,29,0); // Burger
	CreateDynamicMapIcon(-2155.3210,-2460.1714,30.8516,29,0); // Burger
	CreateDynamicMapIcon(203.4492,-201.9384,1.5781,29,0); // Burger
	CreateDynamicMapIcon(1157.9835,2072.1887,11.0625,29,0); // Burger
	CreateDynamicMapIcon(2169.4124,2795.8123,10.8203,29,0); // Burger
	CreateDynamicMapIcon(-2155.3306,-2460.1924,30.8516,29,0); // Burger
	CreateDynamicMapIcon(1367.5527,248.2316,19.5669,29,0); // Burger
	CreateDynamicMapIcon(1022.5176,-1121.4211,23.8701,49,0); // Ресторан
	CreateDynamicMapIcon(1879.1965,2339.4971,10.9799,49,0); // Бар
	CreateDynamicMapIcon(-1807.0596,944.8600,24.8906,29,0); // Burger
	return true;
}
stock CreatePickups()
{
    tirammo[0] = CreatePickup(19198, 23, 286.1657,-30.8244,1001.5156,51);// Вход в тир ЛС
    tirammo[1] = CreatePickup(19198, 23, 286.1479,-28.9596,1001.5156,51);// Выход из тира ЛС
    tirammo[2] = CreatePickup(19198, 23, 286.1657,-30.8244,1001.5156,52);// Вход в тир СФ
    tirammo[3] = CreatePickup(19198, 23, 286.1479,-28.9596,1001.5156,52);// Выход из тира СФ
    tirammo[4] = CreatePickup(19198, 23, 286.1657,-30.8244,1001.5156,53);// Вход в тир ЛВ
    tirammo[5] = CreatePickup(19198, 23, 286.1479,-28.9596,1001.5156,53);// Выход из тира ЛВ
    tirammo[6] = CreatePickup(19198, 23, 286.1657,-30.8244,1001.5156,54);// Вход в тир Гетто
    tirammo[7] = CreatePickup(19198, 23, 286.1479,-28.9596,1001.5156,54);// Выход из тира Гетто
	AvtoPrava = CreatePickup(1239,23,-1956.5341,-157.3518,3001.0859,1); // Автосдача на права
	AvtoBoat = CreatePickup(1239,23,-2237.0300,2354.2900,4.9799); // Автосдача на морской транспорт
	AvtoFly = CreatePickup(1239,23,1319.0797,1249.3893,10.8203); // Автосдача на пилота
	casdress[0] = CreatePickup(1314,23,1963.7367,972.4373,994.4688,-1); // Раздевалка для крупье 4 дракона
	casdress[1] = CreatePickup(1314,23,2150.5378,1602.9777,1006.1794,-1); // Раздевалка для крупье калигула
	casinfo[0] = CreatePickup(1239,23,1980.0601,1009.3029,994.4688,-1); // Работа крупье казино 4 дракона
	casinfo[1] = CreatePickup(1239,23,2235.9209,1628.2296,1008.3663,-1); // Работа крупье казино калигула
	prs[0] = CreatePickup(19133,23,-310.4564,1552.1171,75.5625); // Вход в тюрьму
	prs[1] = CreatePickup(19133,23,2541.5415,-1303.9469,1025.0703,1); // Выход из тюрьмы
	ash[0] = CreatePickup(19133,23,-2026.6025,-102.0611,35.1641); // Вход в АШ
	ash[1] = CreatePickup(19133,23,-1947.3933,-131.9932,3001.0859,1); // Выход из АШ
	ash[2] = CreatePickup(19133,23,-2029.7932,-120.5201,35.1692); // Вход в АШ из заднего двора
	ash[3] = CreatePickup(19133,23,-1964.0061,-159.7867,3001.0859,1); // Выход из АШ на задний двор
	zavfrak[0] = CreatePickup(1318,23,2595.8315,2790.7056,10.8203);//
	zavfrak[1] = CreatePickup(1318,23,315.8045,-143.6636,999.6016,1);//
	zavfrak[2] = CreatePickup(1318,23,305.3517,-141.8948,1004.0625,1);//
	zavfrak[3] = CreatePickup(1318,23,304.5869,-141.8592,1004.0625,1);//
	CreatePickup(1276,23,510.9678,-74.1802,998.7578,132);// Общак байкеров
	gunjob = CreatePickup(1239,23,2564.9146,2847.1965,10.8203);//Pickup устройства на работу (завод)
	//==========================================================================
	zavbenz[0] = CreatePickup(1318,23,2626.7590,2828.8191,10.8203); // Вход в топливный цех К.А.С.С.
	zavbenz[1] = CreatePickup(1318,23,-959.6130,1956.4578,9.0000,1); // Выход из топливного цеха К.А.С.С.
	medicss[0] = CreatePickup(1318,23,-2664.7141,639.9803,14.4531); // Медики SF Вход
	medicss[1] = CreatePickup(1318,23,-1051.6100,699.1318,1507.3469,1); // Медики SF Выход
	medicss[2] = CreatePickup(1318,23,1172.0767,-1323.3440,15.4030); // Медики LS Вход
	medicss[3] = CreatePickup(1318,23,-1051.6100,699.1318,1507.3469,2); // Медики LS Выход
	medicss[4] = CreatePickup(1318,23,-1061.0876,689.7462,1507.3469,1); // Медики SF вход в регистратуру
	medicss[5] = CreatePickup(1318,23,-1061.0541,683.8215,1507.3469,1); // Медики SF выход из регистратуры
	medicss[6] = CreatePickup(1318,23,-1061.0876,689.7462,1507.3469,2); // Медики LS вход в регистратуру
	medicss[7] = CreatePickup(1318,23,-1061.0541,683.8215,1507.3469,2); // Медики LS выход из регистратуры
	medicss[8] = CreatePickup(1318,23,-1048.8020,686.5355,1507.3469,1); // Медики SF вход в служебный отдел
	medicss[9] = CreatePickup(1318,23,-1339.5831,341.8994,1561.6119,1); // Медики SF выход из служебного отдела
	medicss[10] = CreatePickup(1318,23,-1048.8020,686.5355,1507.3469,2); // Медики LS вход в служебный отдел
	medicss[11] = CreatePickup(1318,23,-1339.5831,341.8994,1561.6119,2); // Медики LS выход из служебного отдела
	sportzal[0] = CreatePickup(1318,23,2229.7566,-1721.5988,13.5646); // Спортзал LS Вход
	sportzal[1] = CreatePickup(1318,23,772.4290,-5.0806,1000.7289); // Спортзал LS Выход
	CreatePickup(1279,23,937.2773,2135.0764,1011.0234,20); // Притон СФ
	chekmats[0] = CreatePickup(1239,2,-1297.3777,505.1444,11.1953); // Пикап 1
	chekmats[1] = CreatePickup(1239,2,-1405.5594,502.5779,11.1953); // Пикап 2
	chekmats[2] = CreatePickup(1239,2,-1336.0455,500.4789,11.3047); // Пикап 3
	passlic = CreatePickup(1239,23,1403.4724,-1689.3228,23.0315); // Выдача паспорта и лицензии на бизнес в ЦЗ
	serdce = CreatePickup(1240,23,-750.3890,-127.4648,65.8375); // Сердце Лесоруб
	medserdce[0] = CreatePickup(1240,23,-1027.1462,699.9853,1507.3469,-1);
	medserdce[1] = CreatePickup(1240,23,-1027.1470,702.9964,1507.3469,-1);
	medserdce[2] = CreatePickup(1240,23,-1027.1511,706.0045,1507.3469,-1);
	medserdce[3] = CreatePickup(1240,23,-1021.6219,706.4916,1507.3469,-1);
	medserdce[4] = CreatePickup(1240,23,-1021.5909,703.6018,1507.3469,-1);
	medserdce[5] = CreatePickup(1240,23,-1021.6140,700.5809,1507.3469,-1);
	medserdce[6] = CreatePickup(1240,23,-1021.7559,690.2491,1507.3469,-1);
	medserdce[7] = CreatePickup(1240,23,-1021.7162,687.3643,1507.3469,-1);
	medserdce[8] = CreatePickup(1240,23,-1021.7312,684.3661,1507.3469,-1);
	medserdce[9] = CreatePickup(1240,23,-1027.0105,684.4656,1507.3469,-1);
	medserdce[10] = CreatePickup(1240,23,-1027.0193,690.3388,1507.3469,-1);
	medserdce[11] = CreatePickup(1240,23,-1032.8649,688.7565,1507.3469,-1);
	medserdce[12] = CreatePickup(1240,23,-1032.8673,685.0907,1507.3469,-1);
	medserdce[13] = CreatePickup(1240,23,-1038.9738,685.1857,1507.3469,-1);
	medserdce[14] = CreatePickup(1240,23,-1038.9828,688.9351,1507.3469,-1);
	medserdce[15] = CreatePickup(1240,23,-1038.9501,702.0468,1507.3469,-1);
	medserdce[16] = CreatePickup(1240,23,-1038.9459,704.2466,1507.3469,-1);
	medserdce[17] = CreatePickup(1240,23,-1038.9531,706.4687,1507.3469,-1);
	medserdce[18] = CreatePickup(1240,23,-1032.8868,705.3477,1507.3469,-1);
	medserdce[19] = CreatePickup(1240,23,-1032.9047,703.3093,1507.3469,-1);
	medserdce[20] = CreatePickup(1240,23,-1032.9032,701.0790,1507.3469,-1);
	pickcutt = CreatePickup(1275,23,-757.7422,-129.2831,65.8004);// Устройство на работу лесоруб
	gunpiclic = CreatePickup(1239,23,-1651.8627,699.4036,1008.7549,-1); // Получение лицензии SAPD
	FormaFracPic[0] = CreatePickup(1275, 23, -1634.2466,682.7492,1008.7360,1);
	FormaFracPic[1] = CreatePickup(1275, 23, 321.7284,-167.8464,1141.0859,130);
	FormaFracPic[2] = CreatePickup(1275, 23, -1344.0225,490.3044,11.2027);
	FormaFracPic[3] = CreatePickup(1275, 23, -1356.4670,345.4832,1561.6119,1);
	FormaFracPic[4] = CreatePickup(1275, 23, 364.2415,197.5021,1014.1875);
	FormaFracPic[5] = CreatePickup(1275, 23, 2313.1497,-83.0121,1049.6899,2);
	FormaFracPic[6] = CreatePickup(1275, 23, -1634.2466,682.7492,1008.7360,2);
	FormaFracPic[7] = CreatePickup(1275, 23, -1958.8624,-139.4501,3001.0859,22);
	FormaFracPic[8] = CreatePickup(1275, 23, 999.3918,1003.7467,1999.7999,1);
	FormaFracPic[9] = CreatePickup(1275, 23, 240.4291,1860.7698,8.7578);
	FormaFracPic[10] = CreatePickup(1275, 23, 999.3918,1003.7467,1999.7999,3);
	FormaFracPic[11] = CreatePickup(1275, 23, -1634.2466,682.7492,1008.7360,122);
	FormaFracPic[12] = CreatePickup(1275, 23, -1356.4670,345.4832,1561.6119,2);
	FormaFracPic[13] = CreatePickup(1275, 23, 374.0956,-53.1722,1076.4708,5);
	FormaFracPic[14] = CreatePickup(1275, 23, -487.0027,321.8945,2004.5859,1);
	FormaFracPic[15] = CreatePickup(1275, 23, 370.8511,187.9144,1008.3893,1);
	FormaFracPic[16] = CreatePickup(1275, 23, 309.4186,-143.4560,1004.0625,1);
	FormaFracPic[17] = CreatePickup(1275, 23, 323.7769,309.0387,999.1484);
	Family = CreatePickup(1314, 23, 1402.2450,-1684.6302,23.0315);// Создание семьи
	clothes = CreatePickup(1275, 23, 2137.9661,-2282.2017,20.6719, -1); // Работа Грузчика
	cashs = CreatePickup(1274, 23, 2127.5701,-2275.1938,20.6719, -1); // Зарплата грузчикам
	skinshop[0] = CreatePickup(1275,23,206.0302,-3.5463,1001.2109); // Магагазин Одежды
	skinshop[1] = CreatePickup(1275,23,205.9253,-12.9991,1001.2178); // Магагазин Одежды
	skinshop[2] = CreatePickup(1275,23,181.3787,-86.4860,1002.0234); // Магагазин Одежды
	skinshop[3] = CreatePickup(1275,23,181.5291,-89.3950,1002.0307); // Магагазин Одежды
	skinshop[4] = CreatePickup(1275,23,202.0843,-131.0084,1003.5078); // Магагазин Одежды
	skinshop[5] = CreatePickup(1275,23,199.0271,-131.2711,1003.5152); // Магагазин Одежды
	maskirovka = CreatePickup(1314, 23, 321.6182,-170.2119,1141.0859,130); // Маскировка FBI
	airport[0] = CreatePickup(1239, 23, -1261.6259,43.1619,14.1345); // Покупка личного воздушного транспорта
	airport[1] = CreatePickup(1239, 23, 1985.6235,-2329.4241,13.5469); // Покупка личного воздушного транспорта
	airport[2] = CreatePickup(1239, 23, 1347.4772,1261.5940,10.8203); // Покупка личного воздушного транспорта
	airsp[0] = CreatePickup(1239, 23, -1265.0143,39.7703,14.1357); // Спавн личного воздушного транспорта
	airsp[1] = CreatePickup(1239, 23, 1984.3894,-2307.5452,13.5469); // Спавн личного воздушного транспорта
	airsp[2] = CreatePickup(1239, 23, 1350.8134,1258.0566,10.8203); // Спавн личного воздушного транспорта
	CreatePickup(1279,23,323.0342,1118.5804,1083.8828,19); // Притон LCN
	CreatePickup(1279,23,289.9830,307.6722,999.1484,18); // Притон Yakuza
	CreatePickup(1279,23,323.0342,1118.5804,1083.8828,20); // Притон RM
	plinfo = CreatePickup(1276, 23, -111.6788,-10.7694,3.1094); // Пикап инфо на плантации 1
	plinfo2 = CreatePickup(1276, 23, 1945.6587,163.7341,37.2585); // Пикап инфо на плантации 2
	medkarta = CreatePickup(1239, 23, -1052.7375,688.4049,1507.3469,-1); // МедКарта больница
	//========================== Пикапы входы/выходы ===========================
	chekmatlva[0] = CreatePickup(1239,2,223.8502,1931.5122,17.6406); // пикап1
	chekmatlva[1] = CreatePickup(1239,2,190.7502,1931.7085,17.6406); // пикап1
	chekmatlva[2] = CreatePickup(1239,2,155.8935,1903.3306,18.6603); // пикап3
	chekmatlva[3] = CreatePickup(1239,2,137.4635,1880.8014,17.8359); // пикап4
	chekmatlva[4] = CreatePickup(1239,2,117.9774,1869.8710,17.8359); // пикап5
	chekmatlva[5] = CreatePickup(1239,2,112.7323,1875.2440,17.8359); // пикап6
	chekmatlva[6] = CreatePickup(1239,2,153.5131,1845.9530,17.6406); // пикап7
	chekmatlva[7] = CreatePickup(1239,2,171.9801,1834.7606,17.6406); // пикап8
	chekmatlva[8] = CreatePickup(1239,2,176.9783,1841.3126,17.6406); // пикап9
	chekmatlva[9]= CreatePickup(1239,2,233.3041,1842.0875,17.6406); // пикап10
	victim2[0] = CreatePickup(1318,23,461.7025,-1500.7941,31.0454); // Магазин Одежды Вход
	victim2[1] = CreatePickup(1318,23,227.5632,-8.0904,1002.2109); // Магазин Одежды Выход
	zip[0] = CreatePickup(1318,23,-1882.5100,866.3918,35.1719); // Магазин ZIP Вход
	zip[1] = CreatePickup(1318,23,161.3232,-97.1035,1001.8047); // Магазин ZIP Выход
	zip1[0] = CreatePickup(1318,23,2090.5742,2224.7009,11.0234); // Магазин ZIP Вход
	zip1[1] = CreatePickup(1318,23,207.0216,-140.3734,1003.5078); // Магазин ZIP Выход
	pdd = CreatePickup(1239,23,-1951.4084,-159.0227,3001.0859,1); // Пикап ПДД
	buygunzakon[0] = CreatePickup(353,23,324.2191,-167.8302,1141.0859,130); //gun FBI
	buygunzakon[1] = CreatePickup(353,23,311.9774,-165.2273,999.6010,5); //gun Police
	buygunzakon[2] = CreatePickup(353,23,311.9774,-165.2273,999.6010,1); //gun Police
	buygunzakon[3] = CreatePickup(353,23,302.5668,-127.6718,1004.0625,15); //gun Police
	buygunzakon[4] = CreatePickup(353,23,-487.5088,325.1217,2004.5859,1); //gun Правительство
	buygunzakon[5] = CreatePickup(353,23,245.6338,1859.2839,14.0840); //СВ
	buygunzakon[6] = CreatePickup(353,23,311.9774,-165.2273,999.6010,3); //ВМФ
	buygunzakon[7] = CreatePickup(353,23,311.8892,-143.2266,1004.0547,1); //gun zavod
	lspd[0] = CreatePickup(1318,23,1555.1332,-1675.7180,16.1953);//Lspd вход
	lspd[1] = CreatePickup(1318,23,-1660.4196,691.0757,1008.7549,1);//Lspd выход
	lspd[2] = CreatePickup(1318,23,1524.486938,-1677.990844,6.218750);//Lspd Вход в аммо
	lspd[3] = CreatePickup(1318,23,-1642.9624,716.1722,1006.8359,1);//Lspd выход в гараж из интерьера
	lspd[4] = CreatePickup(1318,23,316.6778,-170.0422,999.5938,5);//Lspd выход из аммо
	lspd[5] = CreatePickup(1318,23,1568.6144,-1689.9901,6.2188);//Lspd Вход из гаража
	sf[0]  = CreatePickup(1318,23,316.3047,-170.2971,999.5938,1);// Оружейка СФПД
	sf[1]  = CreatePickup(1318,23,-1642.9624,716.1722,1006.8359,2);// Пикап выхода с КПЗ в гараж (СФПД)
	sf[2] = CreatePickup(1318,23,-1594.2096,716.1803,-4.9063);// Пикап входа с гаража в КПЗ (СФПД)
	sf[3]  = CreatePickup(1318,23,-1660.4196,691.0757,1008.7549,2);// Выход из СФПД
	sf[4]  = CreatePickup(1318,23,-1606.4298,672.0637,-4.9063);// Пикап входа в оружейку (СФПД)
	sf[5]  = CreatePickup(1318,23,-1605.5789,710.2825,13.8672);// Вход в СФПД
	lvpdpic[0] = CreatePickup(1318,23,2297.1138,2451.4346,10.8203);//lvpd вход с гаража
	lvpdpic[1] = CreatePickup(1318,23,-1642.9624,716.1722,1006.8359,122);//lvpd вход в гараж
	lvpdpic[2] = CreatePickup(1318,23,2337.1335,2459.3105,14.9742);//Центральный вход
	lvpdpic[3] = CreatePickup(1318,23,-1660.4196,691.0757,1008.7549,122);//Центральный выход
	lvpdpic[4] = CreatePickup(1318,23,2297.1165,2468.6892,10.8203);//lvpd оружие вход
	lvpdpic[5] = CreatePickup(1318,23,299.9460,-141.8767,1004.0625,15);//lvpd оружие выход
	lvpdpic[6] = CreatePickup(1318,23,2278.3835,2458.0950,38.6837);//крыша
	sanpic[0] = CreatePickup(1318,23,2314.9512,-60.0498,1049.6899,2);
	sanpic[1] = CreatePickup(19130,23,-2521.1641,-624.9492,132.7839);
	cerkva[0] = CreatePickup(1318,23,-1989.8961,1117.8936,54.4688);
	cerkva[1] = CreatePickup(19130,23,-2008.4950,1118.0276,53.9249);
	rmpic[0] = CreatePickup(1318,23,1298.7498,-797.0133,1084.0078,1);
	yakexit[0] = CreatePickup(1318,23,1298.7498,-797.0133,1084.0078);
	yakexit[1] = CreatePickup(1318,23,1456.1324,2773.4790,10.8203);
	fbiintpic1[0] = CreatePickup(1318,23,316.5252,-161.4028,1101.0959,130);// Вход на 2 этаж FBI
	fbiintpic1[1] = CreatePickup(1318,23,317.4258,-163.1961,1141.0859,130);// Вход на 1 этаж FBI
	fbiintpic1[2] = CreatePickup(1318,23,299.0979,-170.2893,1101.0959,130);// Выход на улицу FBI
	voenkomat[0] = CreatePickup(1318,23,1165.4404,1346.0521,10.9219); // Появление на заднем дворе военкомата
	voenkomat[1] = CreatePickup(1318,23,1165.6138,1344.7832,10.8125); // Появление из заднего двора военкомата
	barbike[0] = CreatePickup(1318,23,501.9166,-67.5638,998.7578,132); // Выход из интерьера байкеров
	barbike[1] = CreatePickup(1318,23,681.6204,-473.3593,16.5363); // Вход в интерьер байкеров
	fbi = CreatePickup(1318,23,1038.9977,1013.0452,11.0000);//fbi вход
	fbikpz = CreatePickup(1318,23,1012.4271,1058.5791,11.0000);//fbi вход в КПЗ
	lcnpic[0] = CreatePickup(1318,23,1298.7498,-797.0133,1084.0078,2);
	lcnpic[1] = CreatePickup(1318,23,1455.8972,751.4310,11.0234);//lcn вход
	pband[0] = CreatePickup(1318,23,293.2198,310.0125,999.1484,1);///Выход из притона банды 1
	pband[1] = CreatePickup(1318,23,-108.7135,-3.4173,3.1172);//Вход в притон банды 1
	rmpic[1] = CreatePickup(1318,23,937.0892,1733.2124,8.8516);//RM вход
	centr[0] = CreatePickup(1318,23,1411.5469,-1699.5450,13.5395);// Вход в центр занятости
	centr[1]  = CreatePickup(1318,23,1407.0350,-1697.9369,23.0315);// Выход из центра занятости
	marenter[0] = CreatePickup(19130,23,1481.1272,-1771.6830,18.7958);// Вход в Правительство
	marenter[1]  = CreatePickup(19130,23,-501.2064,286.1060,2001.0950,1);// Выход из Правительства
	marenter[2]  = CreatePickup(19130,23,1549.1715,-1790.7283,15.4356);// Вход из заднего двора
	marenter[3]  = CreatePickup(19130,23,-516.4189,296.1476,2001.0859,1);// Выход на задний двор
	marenter[4]  = CreatePickup(19130,23,-486.0667,295.2288,2001.0859,1);// Вход на крышу
	marenter[5]  = CreatePickup(19130,23,1437.8632,-1794.0901,33.4297);// Вход с крыши
	marenter[6]  = CreatePickup(19130,23,-501.1961,313.1427,2004.5909,1);// Вход в кабинеты
	marenter[7]  = CreatePickup(19130,23,-501.2593,315.6526,2004.5909,1);// Выход из кабинетов
	rabota = CreatePickup(1239,23,1404.6577,-1693.7471,23.0315);// Пикап устройства на работу в центре занятости
	armpick[0] = CreatePickup(1318,23,-1384.6310,445.1089,30.0820);// армия сф вышка
	armpick[1] = CreatePickup(1318,23,-1337.2877,449.7234,7.1875);//армия сф снизу
	bankpic[0] = CreatePickup(1318,23,1495.1288,-1279.9285,14.5749);//Банк вход LS
	bankpic[1] = CreatePickup(1318,23,1388.7587,-26.6327,1000.872,-1);//Банк выход LS
	bankpic[2] = CreatePickup(1318,23,-2172.4556,252.0875,35.3394);//Банк вход СФ
	bankpic[3] = CreatePickup(1318,23,2143.9138,1607.2461,993.6882,2);//Банк выход СФ
	bankmenu[0] = CreatePickup(1274,23,1376.3572,-29.5992,1000.8729,-1);//Меню банка
	ballaspickup[0] = CreatePickup(19130, 23, 1992.5120,-1285.4764,28.4919);
	ballaspickup[1] = CreatePickup(19130, 23, -2158.7656,642.6190,1052.3750,11);// выход с инта баллас (бар)
	rifa[0] = CreatePickup(19130,23,2807.6653,-1174.5896,1025.5703,63);//Рифа вход на улицу
	rifa[1] = CreatePickup(19130,23,2185.8225,-1815.2219,13.5469);//Рифа вход
	vagospic[0] = CreatePickup(19130,23,2796.0027,-1619.2698,10.9219);//Vagos вход
	vagospic[1] = CreatePickup(19130,23,300.4915,305.8677,1003.5391,75);//Vagos выход
	aztecpic[0] = CreatePickup(19130,23,2751.4968,-1962.8711,13.5469);//Aztec вход
	aztecpic[1] = CreatePickup(19130,23,-42.5856,1405.4747,1084.4297,36);//Aztec выход
	grooveexit = CreatePickup(19130,23,2495.7993,-1692.4044,1014.7422,1);//grove spawn выход
	grooveenter = CreatePickup(19130,23,2495.3271,-1690.9893,14.7656);//Дом грув
	plen[0] = CreatePickup(1318,23,305.6964,-159.2085,999.5938);
	plen[1] = CreatePickup(1318,23,306.4392,-159.2731,999.5938);
	sklad[0] = CreatePickup(1318,23,339.5173,1916.7911,17.8271);
	sklad[1] = CreatePickup(1318,23,316.3806,-170.2857,999.5938);
	sklad[2] = CreatePickup(1318,23,316.3806,-170.2857,999.5938,3);
	sklad[3] = CreatePickup(1318,23,-1373.0463,498.9842,11.1953);
	rob = CreatePickup(1239, 23, 2755.9060,-2515.5491,13.6397, -1);
	PickZavBen[0] = CreatePickup(19135, 2, -960.2543,1939.4897,9.0000, 1);
	PickZavBen[1] = CreatePickup(19135, 2, -960.2430,1923.5123,9.0000, 1);
	PickZavBen[2] = CreatePickup(19135, 2, -960.2540,1901.8752,9.0000, 1);
	PickZavBen[3] = CreatePickup(19135, 2, -960.2527,1880.2371,9.0000, 1);
	PickZavBen[4] = CreatePickup(19135, 2, -960.2462,1858.6466,9.0000, 1);
	PickZavBen[5] = CreatePickup(19135, 2, -960.2515,1847.2874,9.0000, 1);
	PickupRazd[0] = CreatePickup(1275, 23, 2263.1721,-1132.6626,1050.6328, -1);
	PickupRazd[1] = CreatePickup(1275, 23, 2363.7668,-1127.3840,1050.8826, -1);
	PickupRazd[2] = CreatePickup(1275, 23, 2452.5249,-1705.9507,1013.5078, -1);
	PickupRazd[3] = CreatePickup(1275, 23, 229.0762,1287.0829,1082.1406, -1);
	PickupRazd[4] = CreatePickup(1275, 23, 371.7677,1461.0544,1080.1949, -1);
	PickupRazd[5] = CreatePickup(1275, 23, 2337.9553,-1141.6935,1054.3047, -1);
	PickupRazd[6] = CreatePickup(1275, 23, 2326.9736,-1015.4188,1054.7111, -1);
	PickupRazd[7] = CreatePickup(1275, 23, 2258.5884,-1220.2598,1049.0234, -1);
	PickupRazd[8] = CreatePickup(1275, 23, 243.1892,1049.3624,1084.0000, -1);
	PickupRazd[9] = CreatePickup(1275, 23, 230.0533,1107.6466,1080.9922, -1);
	PickupRazd[10] = CreatePickup(1275, 23, 241.8878,1082.4502,1084.1945, -1);
	PickupRazd[11] = CreatePickup(1275, 23, 248.8183,303.9028,999.1484, -1);
	PickupRazd[12] = CreatePickup(1275, 23, 270.5222,303.4104,999.1558, -1);
	PickupRazd[13] = CreatePickup(1275, 23, 417.2167,2535.2437,10.0000, -1);
	PickupRazd[14] = CreatePickup(1275, 23, 152.8741,1384.8661,1088.3672, -1);
	PickupRazd[15] = CreatePickup(1275, 23, 2235.8840,-1073.8998,1049.0234, -1);
	chistigo = CreatePickup(1239, 23, -2094.8853,83.2382,35.3134, 0);
	return true;
}
stock CreateObjects()
{
	sab[0] = CreateDynamicObject(968, 56.89, -1535.34, 4.90,   0.00, 270.00, 83.00);// КПП
	sab[1] = CreateDynamicObject(968, 50.61, -1528.43, 4.86,   0.00, 270.00, 262.00);
	sab[2] = CreateDynamicObject(968, 97.36, -1272.42, 14.29,   0.00, 90.00, 301.00);
	sab[3] = CreateDynamicObject(968, 87.00, -1264.37, 14.30,   0.00, 270.00, 301.00);
	sab[4] = CreateDynamicObject(968, 104.38, -1284.05, 14.29,   0.00, 270.00, 301.00);
	sab[5] = CreateDynamicObject(968, 80.06, -1252.83, 14.29,   0.00, 270.00, 121.00);
	sab[6] = CreateDynamicObject(968, 1722.16, 528.04, 27.84,   0.00, 270.00, 160.00);
	sab[7] = CreateDynamicObject(968, 1730.67, 524.96, 27.74,   0.00, 270.00, 160.00);
	sab[8] = CreateDynamicObject(968, 1757.43, 525.87, 27.34,   0.00, 270.00, -20.10);
	sab[9] = CreateDynamicObject(968, 1748.9000, 528.9700, 27.5400,   0.0000, 270.0000, -20.1000);// КПП
	sab[10] = CreateDynamicObject(968, 1144.6262, 1362.8641, 10.5103,   0.0000, -88.8400, 0.0000);// Закрытый шлакбаум военкомата
	sab[11] = CreateDynamicObject(968, 94.51540, 1923.93018, 17.81800,   0.00000, -89.53900, 88.00000);// Закрытый шлакбаум LVA
	sab[12] = CreateDynamicObject(968, -1526.50513, 482.53680, 6.90630,   357.00000, -89.05200, 2.00000);// Закрытый шлакбаум SFA
	sab[13] = CreateDynamicObject(968, 1544.68506, -1630.83228, 13.05930,   1.94800, -88.56500, 269.43500);// Закрытый шлакбаум LSPD
	sab[14] = CreateDynamicObject(968, 1029.9292, 1182.8590, 10.3718,   0.0000, -89.0400, 0.0000);// Закрытый шлакбаум FBI
	sab[15] = CreateDynamicObject(968, 2238.1980, 2450.3962, 10.5532,   0.0000, 88.3900, 90.0660);// Закрытый шлакбаум LVPD
	sab[16] = CreateDynamicObject(968, -1572.2118, 658.8192, 6.7852,   0.0000, 87.9870, 90.0000);// Закрытый шлакбаум SFPD1
	sab[17] = CreateDynamicObject(968, -1701.4314, 687.6194, 24.6419,   0.0000, 89.1280, 270.0000);// Закрытый шлакбаум SFPD2
	sab[18] = CreateDynamicObject(968, -1642.6927, 579.5979, 39.4935,   0.0000, -88.8400, -42.8800);// Закрытый шлакбаум 1 в СФ на мост
	sab[19] = CreateDynamicObject(968, -1632.9912, 561.1000, 39.2935,   -0.3600, -89.5600, -42.8800);// Закрытый шлакбаум 2 в СФ на мост
	sab[20] = CreateDynamicObject(971, -301.8942, 1507.6520, 78.1179,   0.0000, 0.0000, 0.0000);// Закрытые ворота тюрьмы
	sab[21] = CreateDynamicObject(971, 135.1606, 1941.0687, 20.7168,   0.0000, 0.0000, 180.0000);// Закрытые ворота КПП СВ
	sab[22] = CreateDynamicObject(971, 285.8610, 1820.2784, 19.1930,   0.0000, 0.0000, 90.0000);// Закрытые внутренние ворота СВ
	sab[23] = CreateDynamicObject(986, 2497.4358, 2773.1748, 11.5677,   0.0000, 0.0000, 90.2800);// К.А.С.С.
	sab[24] = CreateObject(19325, -1018.6143, 695.3543, 1508.2934,   0.0000, 0.0000, 0.0000);// Двери в операционную
	sab[25] = CreateDynamicObject(1966, 1588.18835, -1638.25171, 13.69940,   0.00000, 0.00000, 0.00000);// Ворота в гараж ЛСПД
	sab[26] = CreateDynamicObject(1495, 1582.61389, -1638.16309, 12.30700,   0.00000, 0.00000, 0.00000);// Двери в гараж ЛСПД
	sab[27] = CreateDynamicObject(1495, -1619.73816, 688.23260, 6.26340,   0.00000, 0.00000, 180.00000);// Двери в гараж СФПД
	sab[28] = CreateDynamicObject(16775, -1631.66345, 688.28943, 10.16920,   0.00000, 0.00000, 0.00000);// Ворота в гараж СФПД
	sab[29] = CreateDynamicObject(1495, -1647.73340, 689.29578, 1007.75537,   0.00000, 0.00000, 90.00000);// Двери в интерьере САПД 1
	sab[30] = CreateDynamicObject(1495, -1647.77405, 703.58362, 1007.74402,   0.00000, 0.00000, 270.00000);// Двери в интерьере САПД 2
	sab[31] = CreateDynamicObject(1495, -1642.64136, 703.36627, 1000.79840,   0.00000, 0.00000, 90.00000);// Двери в интерьере САПД 3
	sab[32] = CreateDynamicObject(968, -2044.6180, -102.5718, 34.8549,   0.0000, -88.7590, -1.7150);// Закрытый шлагбаум АШ
	//--------------------------------------------------------------------------
	CreateDynamicObject(18880, 1817.53, 820.76, 8.77,   0.00, 0.00, 179.00);
	CreateDynamicObject(18880, 1402.78, -1737.79, 11.22,   0.00, 0.00, 91.00);
	CreateDynamicObject(18880, 1194.49, -1846.61, 11.76,   0.00, 0.00, -88.00);
	CreateDynamicObject(18880, 167.09, -1567.70, 10.53,   0.00, 0.00, -135.00);
	CreateDynamicObject(18880, -2001.06, 19.17, 30.69,   0.00, 0.00, -178.00);
	CreateDynamicObject(18880, -1740.99, 323.06, 5.45,   0.00, 0.00, -42.00);
	CreateObject(1233, 2471.46, 2764.75, 10.89,   0.00, 0.00, -91.00);//no parking
	CreateObject(1233, 1450.50, -1738.85, 13.28,   0.00, 0.00, -91.00);//no parking
	CreateObject(1233, -2040.50, -82.64, 34.79,   0.00, 0.00, -185.00);//no parking
	CreateObject(2008, -1952.19, 291.04, 40.00,   0.00, 0.00, -271.00);//changecar
	CreateObject(2356, -1951.23, 292.05, 40.00,   0.00, 0.00, 88.00);
	CreateObject(2198, -1952.10, 297.80, 40.00,   0.00, 0.00, 90.00);
	CreateObject(2166, -1952.17, 294.53, 40.07,   0.00, 0.00, 0.00);
	CreateObject(1727, -1958.47, 299.16, 40.00,   0.00, 0.00, 47.00);
	CreateObject(1727, -1957.89, 296.09, 40.00,   0.00, 0.00, 127.00);//changecar
    //------------------------------Мусорки ---------------------------
    CreateDynamicObject(1345, 1231.87195, -918.62622, 42.82585,   0.00000, 0.00000, 75.05995);
    CreateDynamicObject(1344, 1231.29260, -915.17572, 42.87297,   0.00000, 0.00000, -67.68000);
    CreateDynamicObject(1328, 1231.52563, -913.54108, 42.56477,   0.00000, 0.00000, -135.30002);
    CreateDynamicObject(1343, 1232.16174, -916.77014, 42.65314,   0.00000, 0.00000, -81.12000);
    CreateDynamicObject(1328, 1231.50256, -912.73511, 42.56477,   0.00000, 0.00000, -135.30002);
    CreateDynamicObject(1265, 1230.37109, -913.65973, 42.56395,   0.00000, 0.00000, -55.74000);
    CreateDynamicObject(1265, 1231.55396, -913.48291, 43.45282,   0.00000, 0.00000, -174.30003);
    CreateDynamicObject(19094, 1231.52429, -919.03540, 42.15907,   -18.00000, -90.00000, 1.44000);
    CreateDynamicObject(19094, 1232.02734, -918.15997, 42.15916,   -16.98001, -90.54008, 1.44000);
    CreateDynamicObject(19364, 780.98651, -1639.02002, 11.89150,   0.00000, 0.00000, 89.52000);
    CreateDynamicObject(19364, 784.19897, -1639.04846, 11.89150,   0.00000, 0.00000, 89.52000);
    CreateDynamicObject(19364, 779.48578, -1637.31116, 11.89148,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1344, 780.78375, -1637.97705, 13.16602,   0.00000, 0.00000, 154.19997);
    CreateDynamicObject(1344, 784.42096, -1638.33765, 13.16602,   0.00000, 0.00000, 181.62035);
    CreateDynamicObject(1343, 782.58911, -1638.40637, 13.12650,   0.00000, 0.00000, -188.52005);
    CreateDynamicObject(1265, 780.05548, -1636.57544, 12.79039,   0.00000, 0.00000, -96.96001);
    CreateDynamicObject(1265, 782.58264, -1638.44043, 14.30497,   0.00000, 0.00000, -187.92009);
    CreateDynamicObject(762, 788.06122, -1646.05347, 13.32019,   0.00000, 0.00000, -79.56001);
    CreateDynamicObject(1344, 2122.44434, -1830.35840, 13.32462,   0.00000, 0.00000, -144.89996);
    CreateDynamicObject(1345, 2119.86377, -1830.98425, 13.29253,   0.00000, 0.00000, -540.53918);
    CreateDynamicObject(1343, 2123.69556, -1828.33130, 13.29716,   0.00000, 0.00000, -83.99998);
    CreateDynamicObject(1328, 2118.11646, -1831.10437, 13.03770,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2860, 2119.51733, -1830.72681, 12.54640,   0.00000, 0.00000, -72.72002);
    CreateDynamicObject(1265, 2124.17188, -1830.36353, 13.00160,   0.00000, 0.00000, -75.66002);
    CreateDynamicObject(1265, 2123.73462, -1829.22412, 13.00160,   0.00000, 0.00000, 9.65998);
    CreateDynamicObject(1344, 2386.47827, -1940.24438, 13.33409,   0.00000, 0.00000, -140.51999);
    CreateDynamicObject(1415, 2383.14917, -1941.08862, 12.65917,   3.14159, 0.00000, 173.33997);
    CreateDynamicObject(1343, 2381.33740, -1940.61353, 13.25723,   0.00000, 0.00000, -177.47995);
    CreateDynamicObject(1328, 2387.19775, -1937.41064, 13.06351,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1328, 2386.65894, -1937.93420, 13.06351,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1328, 2386.31836, -1936.85962, 13.06351,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1344, 2379.42505, -1940.71606, 13.33409,   0.00000, 0.00000, -174.71994);
    CreateDynamicObject(1345, 2376.78564, -1940.87830, 13.30728,   0.00000, 0.00000, 353.39987);
    CreateDynamicObject(1265, 2386.60840, -1937.98132, 13.99642,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1265, 2384.65283, -1941.33118, 13.00146,   0.00000, 0.00000, -65.34005);
    CreateDynamicObject(1265, 2385.52490, -1941.42419, 13.16104,   0.00000, 0.00000, 387.17996);
    CreateDynamicObject(2860, 2376.33960, -1940.85510, 14.01587,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1344, 1007.91168, -908.20526, 42.10950, 0.00000, 0.00000, -171.65990);//24/7 winwood
    CreateDynamicObject(1344, 1031.39905, -1363.82837, 13.36360, 0.00000, 0.12000, -90.11993);//пончик лс
    CreateDynamicObject(1344, 2384.49365, -1486.12549, 23.79213, 0.00000, 0.00000, 55.67999);//kfc getto
	return true;
}
stock Menu()
{
	BuyClothes = CreateMenu("Clothes", 1, 50.0, 160.0, 110.0);
	SetMenuColumnHeader(BuyClothes, 0, "Choose Skin");
	AddMenuItem(BuyClothes, 0, "Next >>");
	AddMenuItem(BuyClothes, 0, "<< Previous");
	AddMenuItem(BuyClothes, 0, "Done");
	AddMenuItem(BuyClothes, 0, "Exit");

	BuyClothes1 = CreateMenu("Clothes", 1, 50.0, 160.0, 110.0);
	SetMenuColumnHeader(BuyClothes1, 0, "Choose Skin");
	AddMenuItem(BuyClothes1, 0, "Next >>");
	AddMenuItem(BuyClothes1, 0, "<< Previous");
	AddMenuItem(BuyClothes1, 0, "Done");
	AddMenuItem(BuyClothes1, 0, "Exit");

	BuyClothes2 = CreateMenu("Clothes", 1, 50.0, 160.0, 110.0);
	SetMenuColumnHeader(BuyClothes2, 0, "Choose Skin");
	AddMenuItem(BuyClothes2, 0, "Next >>");
	AddMenuItem(BuyClothes2, 0, "<< Previous");
	AddMenuItem(BuyClothes2, 0, "Done");
	AddMenuItem(BuyClothes2, 0, "Exit");

	ChoseSkin = CreateMenu("Victim", 1, 50.0, 160.0, 110.0);
	SetMenuColumnHeader(ChoseSkin, 0, "Choose Skin");
	AddMenuItem(ChoseSkin, 0, ">> Next");
	AddMenuItem(ChoseSkin, 0, "<< Previous");
	AddMenuItem(ChoseSkin, 0, "Done");

	bomj[0] = CreateMenu("Victim", 1, 50.0, 160.0, 110.0);
	SetMenuColumnHeader(bomj[0], 0, "Choose Skin");
	AddMenuItem(bomj[0], 0, ">> Next");
	AddMenuItem(bomj[0], 0, "<< Previous");
	AddMenuItem(bomj[0], 0, "Save");

	bomj[1] = CreateMenu("Victim", 1, 50.0, 160.0, 110.0);
	SetMenuColumnHeader(bomj[1], 0, "Choose Skin");
	AddMenuItem(bomj[1], 0, ">> Next>");
	AddMenuItem(bomj[1], 0, "<< Previous");
	AddMenuItem(bomj[1], 0, "Save");

	Admin = CreateMenu("Recon", 1, 50.0, 170.0, 70.0);
	AddMenuItem(Admin,0,"Update");
	AddMenuItem(Admin,0,"Slap");
	AddMenuItem(Admin,0,"Stats");
	AddMenuItem(Admin,0,"GetIP");
	AddMenuItem(Admin,0,"Weap");
	AddMenuItem(Admin,0,"OFF");
	return true;
}

stock AutoColors()
{
	AutoColor[0] = TextDrawCreate(192.093719, 376.250061, "Color:1");
	TextDrawLetterSize(AutoColor[0], 0.449999, 1.600000);
	TextDrawTextSize(AutoColor[0], 267.057098, 10.0);
	TextDrawAlignment(AutoColor[0], 1);
	TextDrawColor(AutoColor[0], 16711935);
	TextDrawUseBox(AutoColor[0], true);
	TextDrawBoxColor(AutoColor[0], -2139062017);
	TextDrawSetShadow(AutoColor[0], 0);
	TextDrawSetOutline(AutoColor[0], -1);
	TextDrawBackgroundColor(AutoColor[0], 51);
	TextDrawFont(AutoColor[0], 2);
	TextDrawSetProportional(AutoColor[0], 1);
	TextDrawSetSelectable(AutoColor[0], true);

	AutoColor[1] = TextDrawCreate(191.156616, 403.666625, "Color:2");
	TextDrawLetterSize(AutoColor[1], 0.449999, 1.600000);
	TextDrawTextSize(AutoColor[1], 271.742340, 10.0);
	TextDrawAlignment(AutoColor[1], 1);
	TextDrawColor(AutoColor[1], -5963521);
	TextDrawUseBox(AutoColor[1], true);
	TextDrawBoxColor(AutoColor[1], -2139062017);
	TextDrawSetShadow(AutoColor[1], 0);
	TextDrawSetOutline(AutoColor[1], 1);
	TextDrawBackgroundColor(AutoColor[1], 51);
	TextDrawFont(AutoColor[1], 2);
	TextDrawSetProportional(AutoColor[1], 1);
	TextDrawSetSelectable(AutoColor[1], true);

	AutoColor[2] = TextDrawCreate(293.763183, 375.666687, "Buy");
	TextDrawLetterSize(AutoColor[2], 0.449999, 1.600000);
	TextDrawTextSize(AutoColor[2], 330.307769, 10.0);
	TextDrawAlignment(AutoColor[2], 1);
	TextDrawColor(AutoColor[2], -1);
	TextDrawUseBox(AutoColor[2], true);
	TextDrawBoxColor(AutoColor[2], -1523963137);
	TextDrawSetShadow(AutoColor[2], 0);
	TextDrawSetOutline(AutoColor[2], 0);
	TextDrawBackgroundColor(AutoColor[2], 51);
	TextDrawFont(AutoColor[2], 2);
	TextDrawSetProportional(AutoColor[2], 1);
	TextDrawSetSelectable(AutoColor[2], true);

	AutoColor[3] = TextDrawCreate(283.924224, 403.083404, "Cancel");
	TextDrawLetterSize(AutoColor[3], 0.449999, 1.600000);
	TextDrawTextSize(AutoColor[3], 357.482025, 10.0);
	TextDrawAlignment(AutoColor[3], 1);
	TextDrawColor(AutoColor[3], -16776961);
	TextDrawUseBox(AutoColor[3], true);
	TextDrawBoxColor(AutoColor[3], -2139062017);
	TextDrawSetShadow(AutoColor[3], 0);
	TextDrawSetOutline(AutoColor[3], 0);
	TextDrawBackgroundColor(AutoColor[3], 51);
	TextDrawFont(AutoColor[3], 2);
	TextDrawSetProportional(AutoColor[3], 1);
	TextDrawSetSelectable(AutoColor[3], true);

	AutoColor[4] = TextDrawCreate(366.040985, 370.166687, "usebox");
	TextDrawLetterSize(AutoColor[4], 0.000000, 5.840735);
	TextDrawTextSize(AutoColor[4], 180.254760, 0.000000);
	TextDrawAlignment(AutoColor[4], 1);
	TextDrawColor(AutoColor[4], 0);
	TextDrawUseBox(AutoColor[4], true);
	TextDrawBoxColor(AutoColor[4], 102);
	TextDrawSetShadow(AutoColor[4], 0);
	TextDrawSetOutline(AutoColor[4], 0);
	TextDrawFont(AutoColor[4], 0);
	return true;
}

stock LoadTextDraw()
{
	Mobilka[0] = TextDrawCreate(453.654479, 158.416656, "usebox");
	TextDrawLetterSize(Mobilka[0], 0.000000, 21.331483);
	TextDrawTextSize(Mobilka[0], 359.698364, 0.000000);
	TextDrawAlignment(Mobilka[0], 1);
	TextDrawColor(Mobilka[0], 0);
	TextDrawUseBox(Mobilka[0], true);
	TextDrawBoxColor(Mobilka[0], 102);
	TextDrawSetShadow(Mobilka[0], 0);
	TextDrawSetOutline(Mobilka[0], 0);
	TextDrawBackgroundColor(Mobilka[0], 0);

	Mobilka[1] = TextDrawCreate(388.404449, 158.083297, "Crylax");
	TextDrawLetterSize(Mobilka[1], 0.221829, 1.238332);
	TextDrawAlignment(Mobilka[1], 1);
	TextDrawColor(Mobilka[1], -1061109505);
	TextDrawSetShadow(Mobilka[1], 0);
	TextDrawSetOutline(Mobilka[1], 1);
	TextDrawBackgroundColor(Mobilka[1], 51);
	TextDrawFont(Mobilka[1], 2);
	TextDrawSetProportional(Mobilka[1], 1);

	Mobilka[2] = TextDrawCreate(421.326477, 172.999984, "usebox");
	TextDrawLetterSize(Mobilka[2], 0.000000, -0.251850);
	TextDrawTextSize(Mobilka[2], 389.683715, 0.000000);
	TextDrawAlignment(Mobilka[2], 1);
	TextDrawColor(Mobilka[2], 0);
	TextDrawUseBox(Mobilka[2], true);
	TextDrawBoxColor(Mobilka[2], 102);
	TextDrawSetShadow(Mobilka[2], 0);
	TextDrawSetOutline(Mobilka[2], 0);
	TextDrawFont(Mobilka[2], 2);

	Mobilka[3] = TextDrawCreate(449.906311, 177.666656, "usebox");
	TextDrawLetterSize(Mobilka[3], 0.000000, 11.350004);
	TextDrawTextSize(Mobilka[3], 363.446533, 0.000000);
	TextDrawAlignment(Mobilka[3], 1);
	TextDrawColor(Mobilka[3], 0);
	TextDrawUseBox(Mobilka[3], true);
	TextDrawBoxColor(Mobilka[3], 102);
	TextDrawSetShadow(Mobilka[3], 0);
	TextDrawSetOutline(Mobilka[3], 0);
	TextDrawFont(Mobilka[3], 0);

	Mobilka[4] = TextDrawCreate(449.437774, 177.666656, "usebox");
	TextDrawLetterSize(Mobilka[4], 0.000000, 0.072222);
	TextDrawTextSize(Mobilka[4], 363.446533, 0.000000);
	TextDrawAlignment(Mobilka[4], 1);
	TextDrawColor(Mobilka[4], 0);
	TextDrawUseBox(Mobilka[4], true);
	TextDrawBoxColor(Mobilka[4], 102);
	TextDrawSetShadow(Mobilka[4], 0);
	TextDrawSetOutline(Mobilka[4], 0);
	TextDrawFont(Mobilka[4], 0);

	Mobilka[5] = TextDrawCreate(367.789337, 176.749969, "I");
	TextDrawLetterSize(Mobilka[5], 0.099546, 0.579167);
	TextDrawAlignment(Mobilka[5], 1);
	TextDrawColor(Mobilka[5], -1);
	TextDrawSetShadow(Mobilka[5], 0);
	TextDrawSetOutline(Mobilka[5], 1);
	TextDrawBackgroundColor(Mobilka[5], 51);
	TextDrawFont(Mobilka[5], 1);
	TextDrawSetProportional(Mobilka[5], 1);

	Mobilka[6] = TextDrawCreate(436.662628, 176.166763, "IIIII");
	TextDrawLetterSize(Mobilka[6], 0.166544, 0.637499);
	TextDrawAlignment(Mobilka[6], 1);
	TextDrawColor(Mobilka[6], -1);
	TextDrawSetShadow(Mobilka[6], 0);
	TextDrawSetOutline(Mobilka[6], 1);
	TextDrawBackgroundColor(Mobilka[6], 51);
	TextDrawFont(Mobilka[6], 1);
	TextDrawSetProportional(Mobilka[6], 1);

	Mobilka[7] = TextDrawCreate(365.446960, 177.916671, "I");
	TextDrawLetterSize(Mobilka[7], 0.153425, 0.421666);
	TextDrawAlignment(Mobilka[7], 1);
	TextDrawColor(Mobilka[7], -1);
	TextDrawSetShadow(Mobilka[7], 0);
	TextDrawSetOutline(Mobilka[7], 1);
	TextDrawBackgroundColor(Mobilka[7], 51);
	TextDrawFont(Mobilka[7], 1);
	TextDrawSetProportional(Mobilka[7], 1);

	Mobilka[8] = TextDrawCreate(369.663421, 176.166625, "I");
	TextDrawLetterSize(Mobilka[8], 0.099546, 0.631666);
	TextDrawAlignment(Mobilka[8], 1);
	TextDrawColor(Mobilka[8], -1);
	TextDrawSetShadow(Mobilka[8], 0);
	TextDrawSetOutline(Mobilka[8], 1);
	TextDrawBackgroundColor(Mobilka[8], 51);
	TextDrawFont(Mobilka[8], 1);
	TextDrawSetProportional(Mobilka[8], 1);

	Mobilka[9] = TextDrawCreate(371.537658, 175.583328, "I");
	TextDrawLetterSize(Mobilka[9], 0.095797, 0.742499);
	TextDrawAlignment(Mobilka[9], 1);
	TextDrawColor(Mobilka[9], -1);
	TextDrawSetShadow(Mobilka[9], 0);
	TextDrawSetOutline(Mobilka[9], 1);
	TextDrawBackgroundColor(Mobilka[9], 51);
	TextDrawFont(Mobilka[9], 1);
	TextDrawSetProportional(Mobilka[9], 1);

	Mobilka[10] = TextDrawCreate(395.432800, 225.749954, "Call");
	TextDrawLetterSize(Mobilka[10], 0.222298, 1.255834);
	TextDrawTextSize(Mobilka[10], 418.858459, 10.0);
	TextDrawAlignment(Mobilka[10], 1);
	TextDrawColor(Mobilka[10], -1378294017);
	TextDrawSetShadow(Mobilka[10], 0);
	TextDrawSetOutline(Mobilka[10], 1);
	TextDrawBackgroundColor(Mobilka[10], 51);
	TextDrawFont(Mobilka[10], 2);
	TextDrawSetProportional(Mobilka[10], 1);
	TextDrawSetSelectable(Mobilka[10], true);

	Mobilka[11] = TextDrawCreate(387.467163, 209.416534, "Service");
	TextDrawLetterSize(Mobilka[11], 0.218081, 1.249999);
	TextDrawTextSize(Mobilka[11], 424.948730, 10.0);
	TextDrawAlignment(Mobilka[11], 1);
	TextDrawColor(Mobilka[11], -2147483393);
	TextDrawSetShadow(Mobilka[11], 0);
	TextDrawSetOutline(Mobilka[11], 1);
	TextDrawBackgroundColor(Mobilka[11], 51);
	TextDrawFont(Mobilka[11], 2);
	TextDrawSetProportional(Mobilka[11], 1);
	TextDrawSetSelectable(Mobilka[11], true);

	Mobilka[12] = TextDrawCreate(432.914093, 299.833282, "P");
	TextDrawLetterSize(Mobilka[12], 0.352078, 2.072501);
	TextDrawTextSize(Mobilka[12], 443.689880, 10.0);
	TextDrawAlignment(Mobilka[12], 1);
	TextDrawColor(Mobilka[12], 16711935);
	TextDrawSetShadow(Mobilka[12], 0);
	TextDrawSetOutline(Mobilka[12], 1);
	TextDrawBackgroundColor(Mobilka[12], 51);
	TextDrawFont(Mobilka[12], 2);
	TextDrawSetProportional(Mobilka[12], 1);
	TextDrawSetSelectable(Mobilka[12], true);

	Mobilka[13] = TextDrawCreate(391.215698, 342.999938, "EXSIGHT-Rp");
	TextDrawLetterSize(Mobilka[13], 0.128594, 0.835833);
	TextDrawAlignment(Mobilka[13], 1);
	TextDrawColor(Mobilka[13], -5963521);
	TextDrawSetShadow(Mobilka[13], 0);
	TextDrawSetOutline(Mobilka[13], 1);
	TextDrawBackgroundColor(Mobilka[13], 51);
	TextDrawFont(Mobilka[13], 2);
	TextDrawSetProportional(Mobilka[13], 1);

	Mobilka[14] = TextDrawCreate(387.467651, 244.416641, "Balance");
	TextDrawLetterSize(Mobilka[14], 0.202152, 1.244165);
	TextDrawTextSize(Mobilka[14], 426.823150, 10.0);
	TextDrawAlignment(Mobilka[14], 1);
	TextDrawColor(Mobilka[14], -65281);
	TextDrawSetShadow(Mobilka[14], 0);
	TextDrawSetOutline(Mobilka[14], 1);
	TextDrawBackgroundColor(Mobilka[14], 51);
	TextDrawFont(Mobilka[14], 2);
	TextDrawSetProportional(Mobilka[14], 1);
	TextDrawSetSelectable(Mobilka[14], true);

	Mobilka[15] = TextDrawCreate(369.824218, 291.749908, "x");
	TextDrawLetterSize(Mobilka[15], 0.326310, 1.955833);
	TextDrawTextSize(Mobilka[15], 378.096893, 10.0);
	TextDrawAlignment(Mobilka[15], 1);
	TextDrawColor(Mobilka[15], -16776961);
	TextDrawSetShadow(Mobilka[15], 0);
	TextDrawSetOutline(Mobilka[15], 1);
	TextDrawBackgroundColor(Mobilka[15], 51);
	TextDrawFont(Mobilka[15], 2);
	TextDrawSetProportional(Mobilka[15], 1);
	TextDrawSetSelectable(Mobilka[15], true);

	Mobilka[16] = TextDrawCreate(385.656341, 283.916595, "1");
	TextDrawLetterSize(Mobilka[16], 0.326310, 1.955832);
	TextDrawTextSize(Mobilka[16], 390.746978, 10.0);
	TextDrawAlignment(Mobilka[16], 1);
	TextDrawColor(Mobilka[16], -1);
	TextDrawSetShadow(Mobilka[16], 0);
	TextDrawSetOutline(Mobilka[16], 0);
	TextDrawBackgroundColor(Mobilka[16], 51);
	TextDrawFont(Mobilka[16], 2);
	TextDrawSetProportional(Mobilka[16], 1);
	TextDrawSetSelectable(Mobilka[16], true);

	Mobilka[17] = TextDrawCreate(400.712097, 283.749908, "2");
	TextDrawLetterSize(Mobilka[17], 0.326310, 1.955832);
	TextDrawTextSize(Mobilka[17], 409.956542, 10.0);
	TextDrawAlignment(Mobilka[17], 1);
	TextDrawColor(Mobilka[17], -1);
	TextDrawSetShadow(Mobilka[17], 0);
	TextDrawSetOutline(Mobilka[17], 1);
	TextDrawBackgroundColor(Mobilka[17], 51);
	TextDrawFont(Mobilka[17], 2);
	TextDrawSetProportional(Mobilka[17], 1);
	TextDrawSetSelectable(Mobilka[17], true);

	Mobilka[18] = TextDrawCreate(419.047607, 283.583312, "3");
	TextDrawLetterSize(Mobilka[18], 0.326310, 1.955832);
	TextDrawTextSize(Mobilka[18], 427.760406, 10.0);
	TextDrawAlignment(Mobilka[18], 1);
	TextDrawColor(Mobilka[18], -1);
	TextDrawSetShadow(Mobilka[18], 0);
	TextDrawSetOutline(Mobilka[18], 1);
	TextDrawBackgroundColor(Mobilka[18], 51);
	TextDrawFont(Mobilka[18], 2);
	TextDrawSetProportional(Mobilka[18], 1);
	TextDrawSetSelectable(Mobilka[18], true);

	Mobilka[19] = TextDrawCreate(383.033813, 301.500000, "4");
	TextDrawLetterSize(Mobilka[19], 0.326310, 1.955832);
	TextDrawTextSize(Mobilka[19], 392.621002, 10.0);
	TextDrawAlignment(Mobilka[19], 1);
	TextDrawColor(Mobilka[19], -1);
	TextDrawSetShadow(Mobilka[19], 0);
	TextDrawSetOutline(Mobilka[19], 1);
	TextDrawBackgroundColor(Mobilka[19], 51);
	TextDrawFont(Mobilka[19], 2);
	TextDrawSetProportional(Mobilka[19], 1);
	TextDrawSetSelectable(Mobilka[19], true);

	Mobilka[20] = TextDrawCreate(401.837921, 301.333374, "5");
	TextDrawLetterSize(Mobilka[20], 0.326310, 1.955832);
	TextDrawTextSize(Mobilka[20], 410.424743, 10.0);
	TextDrawAlignment(Mobilka[20], 1);
	TextDrawColor(Mobilka[20], -1);
	TextDrawSetShadow(Mobilka[20], 0);
	TextDrawSetOutline(Mobilka[20], 1);
	TextDrawBackgroundColor(Mobilka[20], 51);
	TextDrawFont(Mobilka[20], 2);
	TextDrawSetProportional(Mobilka[20], 1);
	TextDrawSetSelectable(Mobilka[20], true);

	Mobilka[21] = TextDrawCreate(419.236419, 300.583374, "6");
	TextDrawLetterSize(Mobilka[21], 0.326310, 1.955832);
	TextDrawTextSize(Mobilka[21], 427.759857, 10.0);
	TextDrawAlignment(Mobilka[21], 1);
	TextDrawColor(Mobilka[21], -1);
	TextDrawSetShadow(Mobilka[21], 0);
	TextDrawSetOutline(Mobilka[21], 1);
	TextDrawBackgroundColor(Mobilka[21], 51);
	TextDrawFont(Mobilka[21], 2);
	TextDrawSetProportional(Mobilka[21], 1);
	TextDrawSetSelectable(Mobilka[21], true);

	Mobilka[22] = TextDrawCreate(383.691253, 320.833343, "7");
	TextDrawLetterSize(Mobilka[22], 0.326310, 1.955832);
	TextDrawTextSize(Mobilka[22], 392.621185, 10.0);
	TextDrawAlignment(Mobilka[22], 1);
	TextDrawColor(Mobilka[22], -1);
	TextDrawSetShadow(Mobilka[22], 0);
	TextDrawSetOutline(Mobilka[22], 1);
	TextDrawBackgroundColor(Mobilka[22], 51);
	TextDrawFont(Mobilka[22], 2);
	TextDrawSetProportional(Mobilka[22], 1);
	TextDrawSetSelectable(Mobilka[22], true);

	Mobilka[23] = TextDrawCreate(402.026733, 321.250091, "8");
	TextDrawLetterSize(Mobilka[23], 0.326310, 1.955832);
	TextDrawTextSize(Mobilka[23], 410.893432, 10.0);
	TextDrawAlignment(Mobilka[23], 1);
	TextDrawColor(Mobilka[23], -1);
	TextDrawSetShadow(Mobilka[23], 0);
	TextDrawSetOutline(Mobilka[23], 1);
	TextDrawBackgroundColor(Mobilka[23], 51);
	TextDrawFont(Mobilka[23], 2);
	TextDrawSetProportional(Mobilka[23], 1);
	TextDrawSetSelectable(Mobilka[23], true);

	Mobilka[24] = TextDrawCreate(419.893707, 321.083221, "9");
	TextDrawLetterSize(Mobilka[24], 0.326310, 1.955832);
	TextDrawTextSize(Mobilka[24], 429.165649, 10.0);
	TextDrawAlignment(Mobilka[24], 1);
	TextDrawColor(Mobilka[24], -1);
	TextDrawSetShadow(Mobilka[24], 0);
	TextDrawSetOutline(Mobilka[24], 1);
	TextDrawBackgroundColor(Mobilka[24], 51);
	TextDrawFont(Mobilka[24], 2);
	TextDrawSetProportional(Mobilka[24], 1);
	TextDrawSetSelectable(Mobilka[24], true);

	Mobilka[25] = TextDrawCreate(369.419219, 313.749908, "0");
	TextDrawLetterSize(Mobilka[25], 0.326310, 1.955832);
	TextDrawTextSize(Mobilka[25], 378.096862, 10.0);
	TextDrawAlignment(Mobilka[25], 1);
	TextDrawColor(Mobilka[25], -1);
	TextDrawSetShadow(Mobilka[25], 0);
	TextDrawSetOutline(Mobilka[25], 1);
	TextDrawBackgroundColor(Mobilka[25], 51);
	TextDrawFont(Mobilka[25], 2);
	TextDrawSetProportional(Mobilka[25], 1);
	TextDrawSetSelectable(Mobilka[25], true);

	Mobilka[26] = TextDrawCreate(432.914031, 324.916656, "<");
	TextDrawLetterSize(Mobilka[26], 0.449999, 1.600000);
	TextDrawTextSize(Mobilka[26], 445.094879, 10.0);
	TextDrawAlignment(Mobilka[26], 1);
	TextDrawColor(Mobilka[26], -2139062017);
	TextDrawSetShadow(Mobilka[26], 0);
	TextDrawSetOutline(Mobilka[26], 1);
	TextDrawBackgroundColor(Mobilka[26], 51);
	TextDrawFont(Mobilka[26], 3);
	TextDrawSetProportional(Mobilka[26], 1);
	TextDrawSetSelectable(Mobilka[26], true);
	return true;
}
stock PlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:xxp,Float:yyp,Float:zzp; GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return true;
	return false;
}
stock GetGangZoneColor(gangzonex)
{
	new zx;
	switch(GZInfo[gangzonex][gFrakVlad])
	{
	case 12: zx = 0xED00B6AA;
	case 13: zx = 0xFFEE00AA;
	case 15: zx = 0x00E300AA;
	case 17: zx = 0x00EEFFAA;
	case 18: zx = 0x4D9AFFAA;
	default: zx = 0xF7F7F7AA;
	}
	return zx;
}
stock GetGangColor(g)
{
	new zx;
	switch(g)
	{
	case 12: zx = 0xED00B6AA;
	case 13: zx = 0xFFEE00AA;
	case 15: zx = 0x00E300AA;
	case 17: zx = 0x00EEFFAA;
	case 18: zx = 0x4D9AFFAA;
	default: zx = 0xC0C0C0AA;
	}
	return zx;
}
stock GetMN(fraca)
{
	new mafianame[15];
	switch(fraca)
	{
	case 6: mafianame = "Yakuza";
	case 14: mafianame = "Russian Mafia";
	case 5: mafianame = "La Cosa Nostra";
	}
	return mafianame;
}
stock GetColor(fraca)
{
	switch(fraca)
	{
	case 6: return 0xFF000040;
	case 14: return 0x26262640;
	case 5: return 0xDDA70140;
	}
	return 1;
}
stock IsPlayerInBandOnline(bandid)
{
	foreach(new i : Player)
	if(PI[i][pMember] == bandid || PI[i][pLeader] == bandid) return true;
	return false;
}
stock GetGangName(fnumbwer)
{
	switch(fnumbwer)
	{
	case 15: format(YCMDstr, 15, "The Grove");
	case 17: format(YCMDstr, 20, "The Aztecas");
	case 12: format(YCMDstr, 20, "The Ballas");
	case 18: format(YCMDstr, 20, "The Rifa");
	case 13: format(YCMDstr, 20, "The Vagos");
	}
	return YCMDstr;
}
stock EndBizwar(m)
{
	for(new i; i < 5; i++) PlayerTextDrawHide(m, Bizwar[m][i]);
	PI[m][kaptmafia] = false;
	MafiaCapture[MZInfo[bNapad]] = gettime()+3600;
	return true;
}
stock IsInAllowed(playerid)
{
	for(new i = 0; i < sizeof(allowedfactions); i++)
	{
		if(PI[playerid][pMember] == allowedfactions[i] && PI[playerid][pRank] >= 8) return true;
	}
	return false;
}
stock IsInAllowedM(mnumbers)
{
	for(new i = 0; i < sizeof(allowedmfactions); i++)
	{
		if(mnumbers == allowedmfactions[i]) return true;
	}
	return false;
}
stock IsInAllowedF(fnumbers)
{
	for(new i = 0; i < sizeof(allowedfactions); i++)
	{
		if(fnumbers == allowedfactions[i])
		return true;
	}
	return false;
}
publics: CompVehDel(playerid)
{
	PI[playerid][pWheels] = 0;
	PI[playerid][pSpoiler] = 0;
	PI[playerid][pBumper1] = 0;
	PI[playerid][pBumper2] = 0;
	PI[playerid][pPaintJob] = 255;
	PI[playerid][pNitro] = 0;
	PI[playerid][pHydrawlic] = 0;
	PI[playerid][pUbka] = 0;
	PI[playerid][pVozduh] = 0;
	PI[playerid][pVihlop] = 0;
	return true;
}
publics: CompVehDel1(playerid)
{
	PI[playerid][pWheels1] = 0;
	PI[playerid][pSpoiler1] = 0;
	PI[playerid][pBumper11] = 0;
	PI[playerid][pBumper21] = 0;
	PI[playerid][pPaintJob1] = 255;
	PI[playerid][pNitro1] = 0;
	PI[playerid][pHydrawlic1] = 0;
	PI[playerid][pUbka11] = 0;
	PI[playerid][pVozduh11] = 0;
	PI[playerid][pVihlop11] = 0;
	return true;
}
stock CompVeh(playerid,vehicleid)
{
	AddVehicleComponent(vehicleid, PI[playerid][pWheels]);
	AddVehicleComponent(vehicleid, PI[playerid][pNitro]);
	AddVehicleComponent(vehicleid, PI[playerid][pHydrawlic]);
	AddVehicleComponent(vehicleid, PI[playerid][pUbka]);
	ChangeVehiclePaintjob(vehicleid, PI[playerid][pPaintJob]);
	AddVehicleComponent(vehicleid, PI[playerid][pSpoiler]);
	AddVehicleComponent(vehicleid, PI[playerid][pBumper1]);
	AddVehicleComponent(vehicleid, PI[playerid][pBumper2]);
	AddVehicleComponent(vehicleid, PI[playerid][pVozduh]);
	AddVehicleComponent(vehicleid, PI[playerid][pVihlop]);
	return true;
}
stock CompVeh1(playerid,vehicleid)
{
	AddVehicleComponent(vehicleid, PI[playerid][pWheels1]);
	AddVehicleComponent(vehicleid, PI[playerid][pNitro1]);
	AddVehicleComponent(vehicleid, PI[playerid][pHydrawlic1]);
	AddVehicleComponent(vehicleid, PI[playerid][pUbka11]);
	ChangeVehiclePaintjob(vehicleid, PI[playerid][pPaintJob1]);
	AddVehicleComponent(vehicleid, PI[playerid][pSpoiler1]);
	AddVehicleComponent(vehicleid, PI[playerid][pBumper11]);
	AddVehicleComponent(vehicleid, PI[playerid][pBumper21]);
	AddVehicleComponent(vehicleid, PI[playerid][pVozduh11]);
	AddVehicleComponent(vehicleid, PI[playerid][pVihlop11]);
	return true;
}

public OnVehicleSpawn(vehicleid)
{
	for(new z = 0; z < 1; z++)
	{
		if(vehicleid == CarNafta[z]) for(new i; i < 10; i++) DestroyObject(object_job[z][i]);
	}
	for(new z = 1; z < 5; z++)
	{
		if(vehicleid == fbicar[z])
		{
			DestroyObject(police[fbicar[z]]);
			police[fbicar[z]] = CreateObject(19419,0,0,0,0,0,0,100.0);
			AttachObjectToVehicle(police[fbicar[z]], fbicar[z], 0.000000, -0.074999, 0.824999, 0.000000, 0.000000, 0.000000);
		}
	}
	for(new z = 0; z < 13; z++)
	{
		if(vehicleid == SultanPD[z])// Sultan
		{
			DestroyObject(police[SultanPD[z]]);
			police[SultanPD[z]] = CreateObject(19419,0,0,0,0,0,0,100.0);
			AttachObjectToVehicle(police[SultanPD[z]], SultanPD[z], 0.000000, -0.074999, 0.824999, 0.000000, 0.000000, 0.000000);
		}
	}
	for(new z = 0; z < 10; z++)
	{
		if(vehicleid == BulletPD[z])// Bullet
		{
			DestroyObject(police[BulletPD[z]]);
			police[BulletPD[z]] = CreateObject(19419,0,0,0,0,0,0,100.0);
			AttachObjectToVehicle(police[BulletPD[z]], BulletPD[z], 0.00300, -0.29730, 0.61620,   0.00000, 0.00000, 0.00000);
		}
	}
	zavodis[vehicleid] = 0;
	Light[vehicleid] = 0;
	enginebrokened[vehicleid] = 0;
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(vehicleid == caridhouse[i][0]) Fuell[caridhouse[i][0]] = PI[i][pFuelcar],LockCar(caridhouse[i][0]), CompVeh(i,caridhouse[i][0]);
		else if(vehicleid == caridhouse[i][1]) Fuell[caridhouse[i][1]] = PI[i][pFuelcar1],LockCar(caridhouse[i][1]), CompVeh1(i,caridhouse[i][1]);
	}
	if(LightsObject[vehicleid][0] != -1 || LightsObject[vehicleid][1] != -1 || (LightsObject[vehicleid][2] != -1 && LightsObject[vehicleid][3] != -1))
  	{
  	    if(LightsObject[vehicleid][0] != -1) DestroyDynamicObject(LightsObject[vehicleid][0]), LightsObject[vehicleid][0] = -1;
        if(LightsObject[vehicleid][1] != -1) DestroyDynamicObject(LightsObject[vehicleid][1]), LightsObject[vehicleid][1] = -1;
        if(LightsObject[vehicleid][2] != -1) DestroyDynamicObject(LightsObject[vehicleid][2]), LightsObject[vehicleid][2] = -1;
        if(LightsObject[vehicleid][3] != -1) DestroyDynamicObject(LightsObject[vehicleid][3]), LightsObject[vehicleid][3] = -1;
		SignalTick[vehicleid][0] = 0;
		SignalTick[vehicleid][1] = -1;
		Signal[vehicleid] = 0;
	}
	return true;
}
public OnVehicleDeath(vehicleid, killerid)
{
	for(new z = 0; z < 1; z++) if(vehicleid == CarNafta[z]) for(new i; i < 10; i++) DestroyObject(object_job[z][i]);
	for(new x = 1; x < 5; x++) if(vehicleid == fbicar[x] && GetPlayerVehicleID(killerid) == fbicar[x]) return DestroyObject(police[fbicar[x]]);
	for(new x = 0; x < 13; x++) if(vehicleid == SultanPD[x] && GetPlayerVehicleID(killerid) == SultanPD[x]) return DestroyObject(police[SultanPD[x]]);
	for(new x = 0; x < 10; x++) if(vehicleid == BulletPD[x] && GetPlayerVehicleID(killerid) == BulletPD[x]) return DestroyObject(police[BulletPD[x]]);
	new get_rent = GetArendCarID(vehicleid);
	if(get_rent != INVALID_VEHICLE_ID)
	{
		new arend = ArendInfo[get_rent][aPlayerID];
		ArendInfo[get_rent][aPlayerID] = INVALID_PLAYER_ID;
		if(IsPlayerConnected(arend) && GetPVarInt(arend, "ArendKey") == get_rent)
		{
			new lockstatus = gCarLock[ArendInfo[get_rent][aID]];
			switch (lockstatus)
			{
			case 0:
				{
					UnLockCar(ArendInfo[get_rent][aID]);
					IsLocked[ArendInfo[get_rent][aID]] = 0;
				}
			case 1:
				{
					UnLockCar(ArendInfo[get_rent][aID]);
					IsLocked[ArendInfo[get_rent][aID]] = 0;
				}
			default:
				{
					SCM(arend, COLOR_RED, "Ошибка!");
				}
			}
			SCM(arend, COLOR_ORANGE, "Транспорт, который Вы арендовали, был разбит. Аренда закончилась.");
			SCM(arend, COLOR_ORANGE, "За порчу государственного имущества с Вас снято $100 с Вашего счёта в банке.");
			PI[arend][pBank] -= 100;
			arendtime[arend] = 0;
			SetPVarInt(arend, "ArendKey", -1);
		}
	}
	return true;
}
publics: UnlockVehicle(vehicleid)
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx); SetVehicleParamsForPlayer(vehicleid,i, 0, 0);
	}
	IsLocked[vehicleid] = 0;
}
publics: Random(min, max)
{
	new a = random(max - min) + min;
	return a;
}
publics: PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	tempposx = (oldposx -x);
	tempposy = (oldposy -y);
	tempposz = (oldposz -z);
	if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return true;
	return false;
}

stock GetSRVMoney(playerid) return PI[playerid][pCash];

publics: RemovePlayerFromVehicleAC(playerid)
{
	RemovePlayerFromVehicle(playerid);
	return true;
}
publics: GetMoney()
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx); if(PI[i][pCash] != GetPlayerMoney(i)) ResetPlayerMoney(i), GivePlayerMoney(i, PI[i][pCash]);
	}
	return ;
}
stock UnLockCar(carid)
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		gCarLock[carid] = 0;
		IsLocked[carid] = 0;
		GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(carid,engine,lights,alarm,VEHICLE_PARAMS_OFF,bonnet,boot,objective);
		SetVehicleParamsForPlayer(carid,i, 0, 0);
	}
}
stock SpeedVehicle(playerid)
{
	new Float:ST[4];
	if(IsPlayerInAnyVehicle(playerid))
	GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
	else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 100.3;
	return floatround(ST[3]);
}
publics: UpdateSpeedometr()
{
	for(new idx=0, playerid=0; idx<cvector_size(players); idx++)
	{
		playerid = cvector_get(players, idx);
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) continue;
		if(IsAPlane(GetPlayerVehicleID(playerid)) || IsABoat(GetPlayerVehicleID(playerid)) || IsABike(GetPlayerVehicleID(playerid))) continue;
		format(str1, 20, "%d", SpeedVehicle(playerid));
		if(Fuell[vehicleid] <= 45) format(str2, 20, "~r~%.0f%", Fuell[vehicleid]);
		else if(Fuell[vehicleid] <= 100) format(str2, 20, "~g~%.0f%", Fuell[vehicleid]);
		format(str3, 20, "%s",(!IsLocked[GetPlayerVehicleID(playerid)])?("~h~Unlock") : ("~r~~h~ Lock"));
		format(str4, 20, "%.0f%", GetVehicleHealthEx(GetPlayerVehicleID(playerid)));
		if(SpeedVehicle(playerid) >= 150 && PI[playerid][pBSA] == 0 || IsPlayerInAnyVehicle(playerid) && GetVehicleModel(GetPlayerVehicleID(playerid)) == 462 && SpeedVehicle(playerid) > 110 && PI[playerid][pBSA] == 0)
		{
			SCM(playerid, COLOR_LIGHTRED, "Вы были кикнуты по подозрению в читерстве. {FFA500}(#2888)");
			Kick(playerid);
		}
		if(Fuell[vehicleid] <= 0)
		{
			Fuell[vehicleid] = 0;
			GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
			zavodis[GetPlayerVehicleID(playerid)] = 0;
			GameTextForPlayer(playerid,"~r~FUEL HAS ENDED", 5000, 3);
		}
		if(vehicleid == caridhouse[playerid][0]) PI[playerid][pFuelcar] = Fuell[vehicleid];
		if(vehicleid == caridhouse[playerid][1]) PI[playerid][pFuelcar1] = Fuell[vehicleid];
		PlayerTextDrawSetString(playerid,FL[playerid][SpeedShow],str1);
		PlayerTextDrawSetString(playerid,FL[playerid][FuelShow],str2);
		PlayerTextDrawSetString(playerid,FL[playerid][StatusShow],str3);
		PlayerTextDrawSetString(playerid,FL[playerid][IndCarHP],str4);
		UnSurfCar(vehicleid);
	}
	return true;
}
stock AntiReklama(playerid,text[],test[])
{
    new ip[16];
	GetPlayerIp(playerid,ip,sizeof(ip));
	for(new txt; txt < strlen(text); txt++)
	{
		if(text[txt] >= '0' && text[txt] <= '9')
		{
			SetPVarInt(playerid,"Text",GetPVarInt(playerid,"Text")+1);
			if(GetPVarInt(playerid,"Text") == 10)
			{
				format(YCMDstr, sizeof(YCMDstr), "[WARNING]: [%s] %s[id:%i]: %s",test,Name(playerid),playerid,text);
				ABroadCast(COLOR_REDD, YCMDstr, 2);
				SetPVarInt(playerid, "antireklamka", 1);
			}
		}
	}
	if(Rekl[playerid] == 1 && strfind(text,"www.",true) !=-1 || Rekl[playerid] == 1 && strfind(text,":7",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,"7777",true) !=-1 || Rekl[playerid] == 1 && strfind(text,".ru",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,".net",true) !=-1 || Rekl[playerid] == 1 && strfind(text,".com",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,".su",true) !=-1 || Rekl[playerid] == 1 && strfind(text,"77.",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,":7777",true) !=-1 || Rekl[playerid] == 1 && strfind(text,"176.",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,".ru",true)  !=-1 || Rekl[playerid] == 1 && strfind(text,".RU",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,".COM",true)!=-1 || Rekl[playerid] == 1 && strfind(text,".com",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,"IP",true) !=-1 || Rekl[playerid] == 1 && strfind(text,"СЕРВЕР",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,"бонус",true) !=-1 || Rekl[playerid] == 1 && strfind(text,"АДМИНКИ",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,"http",true) !=-1 || Rekl[playerid] == 1 && strfind(text,"лидерки",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,"хелперов",true) !=-1 || Rekl[playerid] == 1 && strfind(text,"ебать",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,"мамку ебал",true) !=-1 || Rekl[playerid] == 1 && strfind(text,"пидорас",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,"176.32.37.15:7777",true) !=-1 || Rekl[playerid] == 1 && strfind(text,"смит",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,"Smit",true) !=-1 || Rekl[playerid] == 1 && strfind(text,"смит рп",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,"smit rp",true) !=-1 || Rekl[playerid] == 1 && strfind(text,"СМИТ",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,"Смит Рп",true) !=-1 || Rekl[playerid] == 1 && strfind(text,"Smit-Rp",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,"смит",true) !=-1 || Rekl[playerid] == 1 && strfind(text,"смит-рп",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,"SmitRp",true) !=-1 || Rekl[playerid] == 1 && strfind(text,"СмитРп",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,"нубо",true) !=-1 || Rekl[playerid] == 1 && strfind(text,"нубо рп",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,"сервер",true) !=-1 || Rekl[playerid] == 1 && strfind(text,"Смит-Рп",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,"Smit Role Play",true) !=-1 || Rekl[playerid] == 1 && strfind(text,"SRL",true) != -1
			|| Rekl[playerid] == 1 && strfind(text,"176точка32точка37точка15",true) !=-1 || Rekl[playerid] == 1 && strfind(text,"176 точка 32 точка 37 точка 15",true) != -1)
	{
		format(YCMDstr, sizeof(YCMDstr), "WARNING: [%s] %s[id:%i]: %s",test,Name(playerid),playerid,text);
		ABroadCast(COLOR_REDD, YCMDstr, 2);
		SetPVarInt(playerid, "antireklamka", 1);
	}
	return true;
}
new WebSites[][] ={".ws", ".ru", ".tk", ".com", "www.", ".org", ".net", ".cc", ".рф", ".by", ".biz", ".su", ".info"};
stock CheckString(str[])
{
	for(new i = 0; i < sizeof(WebSites); i++) if(strfind(str,WebSites[i],true) != -1) return true;
	return false;
}
new delimiters[]={'.', ' ', ',', '*', '/', ';', '\\', '|'};
stock IsIP(const str[])
{
	for(new cIP[4]; cIP[0] != strlen(str)+1; cIP[0]++)
	{
		switch(str[cIP[0]])
		{
		case '.', ' ', ':', ',', '*', '/', ';', '\\', '|' : continue;
		case '0' .. '9': cIP[1]++;
		}
		if(cIP[1] ==1){ cIP[2] = cIP[0];}
		if(cIP[1] >= 8)
		{
			new strx[16];
			new l[4][4];
			cIP[3] = cIP[0]+8;
			strmid(strx,str,cIP[2],cIP[3],16);
			for(new i = strlen(strx); i > 8; i--)
			{
				switch(strx[i])
				{
				case '0' .. '9','.', ' ', ':', ',', '*', '/', ';', '\\', '|': continue;
				default: strx[i] =0;
				}
			}
			for(new i = 0 ; i < sizeof(delimiters); i++)
			{
				split(strx,l,delimiters[i]);
				if(strlen(l[0]) == 1 ||strlen(l[1]) == 1 ||strlen(l[2]) == 1 ||strlen(l[3]) == 1)
				{
					continue;
				}
				if(strlen(l[0]) >3 ||strlen(l[1]) >3 ||strlen(l[2]) >3)
				{
					continue;
				}
				else
				{
					return true;
				}
			}
		}
	}
	return false;
}

publics: OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	new Float: carhp;
	if(PI[playerid][pProcents] < 5)
	{
		if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0])
		{
			GameTextForPlayer(playerid,"~r~ENGINE HAS BROKENED", 5000, 3);
			GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
			zavodis[GetPlayerVehicleID(playerid)] = 0;
		}
	}
	if(PI[playerid][pProcents2] < 5)
	{
		if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1])
		{
			GameTextForPlayer(playerid,"~r~ENGINE HAS BROKENED", 5000, 3);
			GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
			zavodis[GetPlayerVehicleID(playerid)] = 0;
		}
	}
	GetVehicleHealth(vehicleid, carhp);
	if(carhp > 0 && carhp < 400 && enginebrokened[vehicleid] == 0)
	{
		GameTextForPlayer(playerid,"~r~ENGINE HAS BROKENED", 5000, 3);
		enginebrokened[vehicleid] = 1;
		player_NoCheckTimeVeh[playerid] = 3;
		SetVehicleHealth(vehicleid, 300.0);
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
	}
	if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0])
	{
		proccar[GetPlayerVehicleID(playerid)]++;
		if(proccar[GetPlayerVehicleID(playerid)] >= 15) return proccar[GetPlayerVehicleID(playerid)] = 0,PI[playerid][pProcents] -= 1;
	}
	if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1])
	{
		proccar[GetPlayerVehicleID(playerid)]++;
		if(proccar[GetPlayerVehicleID(playerid)] >= 15) return proccar[GetPlayerVehicleID(playerid)] = 0,PI[playerid][pProcents2] -= 1;
	}
	GetVehicleHealth(vehicleid, carhp);
	for(new p = 0; p < MAX_PLAYERS; p++)
	{
		if(GetPlayerVehicleID(playerid) == caridhouse[p][1])
		{
			if(carhp > 800 && carhp < 1000)
			{
				if(PI[playerid][pProcents2] > 0)
				{
					PI[playerid][pProcents2] -= 0;
					return true;
				}
			}
			else if(carhp > 600 && carhp < 800)
			{
				if(PI[playerid][pProcents2] > 0)
				{
					PI[playerid][pProcents2] -= 1;
					return true;
				}
			}
			else if(carhp > 400 && carhp < 600)
			{
				if(PI[playerid][pProcents2] > 0)
				{
					PI[playerid][pProcents2] -= 2;
					return true;
				}
			}
		}
	}
	GetVehicleHealth(vehicleid, carhp);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(GetPlayerVehicleID(playerid) == caridhouse[i][0])
		{
			if(carhp > 800 && carhp < 1000)
			{
				if(PI[playerid][pProcents] > 0)
				{
					PI[playerid][pProcents] -= 0;
					return true;
				}
			}
			else if(carhp > 600 && carhp < 800)
			{
				if(PI[playerid][pProcents] > 0)
				{
					PI[playerid][pProcents] -= 1;
					return true;
				}
			}
			else if(carhp > 400 && carhp < 600)
			{
				if(PI[playerid][pProcents] > 0)
				{
					PI[playerid][pProcents] -= 2;
					return true;
				}
			}
		}
	}
	return true;
}

publics: GETHP(playerid)
{
	GetPlayerHealth(playerid,GMHP[playerid][1]);
	GetVehicleHealth(GetPlayerVehicleID(playerid),VEHHP[playerid][1]);
	if(!IsPlayerInAnyVehicle(playerid))
	{
		if(GMHP[playerid][1] >= 100.0)
		{
			format(YCMDstr,256, "- Игрок: %s[id:%d]\n- Ping: %d\n\n- Результат: {ff0000}Возможно GM", Name(playerid),playerid,GetPlayerPing(playerid));
			SPDEx(FL[playerid][GMNameAdmin],1122,0, "Проверка на GM",YCMDstr, "x", "");
			SetPlayerHealthAC(playerid, GMHP[playerid][0]);
			SetPlayerArmour(playerid, GMARMOUR[playerid][0]);
			return true;
		}
		else
		{
			format(YCMDstr,256, "- Игрок: %s[id:%d]\n- Ping: %d\n\n- Результат: {00ff00}Не использует GM", Name(playerid),playerid,GetPlayerPing(playerid));
			SPDEx(FL[playerid][GMNameAdmin],1133,0, "Проверка на GM",YCMDstr, "x", "");
			SetPlayerHealthAC(playerid, GMHP[playerid][0]);
			SetPlayerArmour(playerid, GMARMOUR[playerid][0]);
			return true;
		}
	}
	else
	{
		if(VEHHP[playerid][1] >= 1000.0)
		{
			format(YCMDstr,256, "- Игрок: %s[id:%d]\n- Ping: %d\n\n- Результат: {ff0000}Возможно GM Car", Name(playerid),playerid,GetPlayerPing(playerid));
			SPDEx(FL[playerid][GMNameAdmin],1166,0, "Проверка на GM",YCMDstr, "x", "");
			SetVehicleHealth(GetPlayerVehicleID(playerid),VEHHP[playerid][0]);
			return true;
		}
		else
		{
			format(YCMDstr,256, "- Игрок: %s[id:%d]\n- Ping: %d\n\n- Результат: {00ff00}Не использует GM Car", Name(playerid),playerid,GetPlayerPing(playerid));
			SPDEx(FL[playerid][GMNameAdmin],1155,0, "Проверка на GM",YCMDstr, "x", "");
			SetVehicleHealth(GetPlayerVehicleID(playerid),VEHHP[playerid][0]);
			return true;
		}
	}
}

stock StartSpectate(playerid, specid)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
	{
		GetPlayerPos(playerid, FL[playerid][TeleportDest][0],FL[playerid][TeleportDest][1],FL[playerid][TeleportDest][2]);
		TeleportDestNoFloat[playerid][0] = GetPlayerInterior(playerid);
		TeleportDestNoFloat[playerid][1] = GetPlayerVirtualWorld(playerid);
	}
	if(IsPlayerInAnyVehicle(specid))
	{
		SetPlayerInterior(playerid,GetPlayerInterior(specid));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specid));
		TogglePlayerSpectating(playerid, 1);
		PlayerSpectateVehicle(playerid, GetPlayerVehicleID(specid));
		gSpectateID[playerid] = specid;
		gSpectateType[playerid] = ADMIN_SPEC_TYPE_VEHICLE;
	}
	else
	{
		SetPlayerInterior(playerid,GetPlayerInterior(specid));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specid));
		TogglePlayerSpectating(playerid, 1);
		PlayerSpectatePlayer(playerid, specid);
		gSpectateID[playerid] = specid;
		gSpectateType[playerid] = ADMIN_SPEC_TYPE_PLAYER;
	}
	SpecAd[playerid] = specid;
	SpecID[specid] = playerid;
	PlayerTextDrawShow(playerid, FL[playerid][FULLRECON]);
	PlayerTextDrawShow(playerid, FL[playerid][boxre]);
	ShowMenuForPlayer(Admin,playerid);
	return true;
}

publics: TeleportTimer(playerid)
{
	SetPlayerPos(playerid, FL[playerid][TeleportDest][0],FL[playerid][TeleportDest][1],FL[playerid][TeleportDest][2]);
	SetPlayerInterior(playerid, TeleportDestNoFloat[playerid][0]);
	SetPlayerVirtualWorld(playerid, TeleportDestNoFloat[playerid][1]);
	GameTextForPlayer(playerid,"~w~RECON ~r~ OFF~n~ ~g~CHANGE POSITION", 5000, 3);
	return true;
}

stock StopSpectate(playerid)
{
	TogglePlayerSpectating(playerid, 0);
	gSpectateID[playerid] = INVALID_PLAYER_ID;
	gSpectateType[playerid] = ADMIN_SPEC_TYPE_NONE;
	PlayerTextDrawHide(playerid, FL[playerid][FULLRECON]);
	PlayerTextDrawHide(playerid, FL[playerid][boxre]);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~w~Recon Stop",1000,3);
	SetTimerEx("TeleportTimer",200,false,"i",playerid);
	HideMenuForPlayer(Admin,playerid);
	return true;
}

stock Convert(number)
{
	new hours = 0, mins = 0, secs = 0, str[100];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0) format(str, 100, "%i:%02d:%02d", hours, mins, secs);
	else format(str, 100, "%i:%02d", mins, secs);
	return str;
}

stock TimeConverter(seconds)
{
	new strings[64];
	new minutes = floatround(seconds/60);
	seconds -= minutes*60;
	format(strings, 64, "%02d:%02d", minutes, seconds);
	return strings;
}

stock GetPlayerID(string[])
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		new testname[MAX_PLAYER_NAME];
		GetPlayerName(i, testname, sizeof(testname));
		if(strcmp(testname, string, true, strlen(string)) == 0) return i;
	}
	return INVALID_PLAYER_ID;
}

stock ToDevelopSkills(Slashes,Points)
{
	new SlashesAndPoints[200];
	new Slash[2] = "|";
	new Point[2] = "'";
	for(new i = 0; i < Slashes; i++) strcat(SlashesAndPoints, Slash);
	for(new i = 0; i < Points; i++) strcat(SlashesAndPoints, Point);
	return SlashesAndPoints;
}

stock SetPlayerSkills(playerid)
{
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, PI[playerid][pGunSkill][0]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PI[playerid][pGunSkill][1]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PI[playerid][pGunSkill][2]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PI[playerid][pGunSkill][3]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PI[playerid][pGunSkill][4]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, PI[playerid][pGunSkill][5]*10);
	return true;
}

stock OnPlayerAmmoChange(playerid, newammo, oldammo)
{
	if(newammo < oldammo)
	{
		switch(GetPlayerWeapon(playerid))
		{
		case 24:
			{
				SetPVarInt(playerid, "SkillD",GetPVarInt(playerid, "SkillD") +1);
				if(GetPVarInt(playerid, "SkillD") >= Ammo_DEAGLE && PI[playerid][pGunSkill][1] < 100)
				{
					PI[playerid][pGunSkill][1]++;
					SetPVarInt(playerid, "SkillD",0);
				}
			}
		case 23:
			{
				SetPVarInt(playerid, "SkillSD",GetPVarInt(playerid, "SkillSD") +1);
				if(GetPVarInt(playerid, "SkillSD")>= Ammo_SDPISTOL && PI[playerid][pGunSkill][0] < 100)
				{
					PI[playerid][pGunSkill][0]++;
					SetPVarInt(playerid, "SkillSD",0);
				}
			}
		case 25:
			{
				SetPVarInt(playerid, "SkillShot",GetPVarInt(playerid, "SkillShot") +1);
				if(GetPVarInt(playerid, "SkillShot") >= Ammo_SHOTGUN && PI[playerid][pGunSkill][2] < 100)
				{
					PI[playerid][pGunSkill][2]++;
					SetPVarInt(playerid, "SkillShot",0);
				}
			}
		case 29:
			{
				SetPVarInt(playerid, "SkillMP5",GetPVarInt(playerid, "SkillMP5") +1);
				if(GetPVarInt(playerid, "SkillMP5") >= Ammo_MP5 && PI[playerid][pGunSkill][3] < 100)
				{
					PI[playerid][pGunSkill][3]++;
					SetPVarInt(playerid, "SkillMP5",0);
				}
			}
		case 30:
			{
				SetPVarInt(playerid, "SkillAk47",GetPVarInt(playerid, "SkillAk47") +1);
				if(GetPVarInt(playerid, "SkillAk47") >= Ammo_AK47 && PI[playerid][pGunSkill][4] < 100)
				{
					PI[playerid][pGunSkill][4]++;
					SetPVarInt(playerid, "SkillAk47",0);
				}
			}
		case 31:
			{
				SetPVarInt(playerid, "SkillM4",GetPVarInt(playerid, "SkillM4") +1);
				if(GetPVarInt(playerid, "SkillM4") >= Ammo_M4A1 && PI[playerid][pGunSkill][5] < 100)
				{
					PI[playerid][pGunSkill][5]++;
					SetPVarInt(playerid, "SkillM4",0);
				}
			}
		}
	}
	return true;
}

stock IsWheelModel(modelid)
{
	new wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};
	for(new i = 0; i < 17; i++)
	{
		if (modelid == wheelmodels[i]) return true;
	}
	return false;
}

stock IsLegalCarNitroIde(carmodel)
{
	new illegalvehs[29] = { 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449 };
	for(new i = 0; i < 29; i++)
	{
		if (carmodel == illegalvehs[i]) return true;
	}
	return false;
}

stock IsLegal_Nos_Vehicle(PlayerID)
{
	new carid = GetPlayerVehicleID(PlayerID);
	new playercarmodel = GetVehicleModel(carid);
	return IsLegalCarNitroIde(playercarmodel);
}

stock IsLegalCarMod(vehicleide, componentid)
{
	new modok = false;
	if((IsWheelModel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010)))
	{
		new nosblocker = IsLegalCarNitroIde(vehicleide);
		if(!nosblocker) modok = true;
	}
	else
	{
		for(new I = 0; I < 48; I++)
		{
			if (legalmods[I][0] == vehicleide)
			{
				for(new J = 1; J < 22; J++)
				{
					if (legalmods[I][J] == componentid)
					modok = true;
				}
			}
		}
	}
	return modok;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	if(!IsPlayerInRangeOfPoint(playerid, 7, 1067.3966,2128.3901,10.5110) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		SCM(playerid, COLOR_LIGHTRED, "Вы были кикнуты по подозрению в читерстве {FFA500}(#1142)");
		Kick(playerid);
	}
	return true;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
	if(!IsPlayerInRangeOfPoint(playerid, 7, 1067.3966,2128.3901,10.5110) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		SCM(playerid, COLOR_LIGHTRED, "Вы были кикнуты по подозрению в читерстве {FFA500}(#2341)");
		Kick(playerid);
	}
	new vehicleide = GetVehicleModel(vehicleid);
	new modok = IsLegalCarMod(vehicleide, componentid);
	if(!modok) Kick(playerid);
	return true;
}

stock AdvertList(playerid)
{
	new full, str[90], strrr[571];
	switch(PI[playerid][pMember])
	{
	case 9: full = 1;
	}
	for(new i = 1; i <= TOTALADVERT[full];i++)
	{
		format(str, 90, "[%i] Прислал: %s\n",i, AdvertInfo[i][full][adName]);
		strcat(strrr, str);
	}
	if(TOTALADVERT[full] == 0) return SPDEx(playerid, 69, 0, "Объявления", "    Новых объявлений нет", "Назад", "");
	SPDEx(playerid, 11518, 2, "Объявления", strrr, "Принять", "Отмена");
	return true;
}
publics: OnMaska(playerid)
{
	SetPlayerAttachedObject(playerid, 0, 18912, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
	EditAttachedObject(playerid, 1);
	SetPlayerToTeamColor(playerid);
	SetPlayerColor(playerid,0xFFFFFF00);
	return true;
}
publics: AntiSbiv(playerid)
{
	TogglePlayerControllable(playerid, 1);
	DeletePVar(playerid,"AntisbivAnim");
}
stock CanUninvitePlayer(playerid)
{
	if(PI[playerid][pLeader] >= 1) return true;
	new rank = PI[playerid][pRank];
	switch(PI[playerid][pMember])
	{
	case 1, 10, 21: if(rank >= 9) return true;
	case 3, 19: if(rank >= 15) return true;
	case 5, 6, 12, 13, 14, 15, 17, 18, 23: if(rank >= 4) return true;
	case 2, 4, 8: if(rank >= 9) return true;
	case 9: if(rank >= 6) return true;
	case 22: if(rank >= 12) return true;
	case 24: if(rank >= 5) return true;
	}
	return false;
}
stock CanInvitePlayer(playerid)
{
	if(PI[playerid][pLeader] >= 1) return true;
	new rank = PI[playerid][pRank];
	switch(PI[playerid][pMember])
	{
	case 1, 10, 21: if(rank >= 9) return true;
	case 3, 19: if(rank >= 15) return true;
	case 5, 6, 12, 13, 14, 15, 17, 18, 23: if(rank >= 4) return true;
	case 2, 4, 8: if(rank >= 9) return true;
	case 9: if(rank >= 6) return true;
	case 22: if(rank >= 13) return true;
	case 24: if(rank >= 5) return true;
	}
	return false;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
    if(clickedid == AutoColor[0])// Color:1
	{
		SetPVarInt(playerid,"BuyColor",GetPVarInt(playerid,"BuyColor")+1);
		if(GetPVarInt(playerid,"BuyColor") > 125) SetPVarInt(playerid,"BuyColor",0);
		ChangeVehicleColor(GetPlayerVehicleID(playerid),GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	}
	else if(clickedid == AutoColor[1])// Color:2
	{
		SetPVarInt(playerid,"BuyColor1",GetPVarInt(playerid,"BuyColor1")+1);
		if(GetPVarInt(playerid,"BuyColor1") > 125) SetPVarInt(playerid,"BuyColor1",0);
		ChangeVehicleColor(GetPlayerVehicleID(playerid),GetPVarInt(playerid,"BuyColor"),GetPVarInt(playerid,"BuyColor1"));
	}
	else if(clickedid == AutoColor[2])// Buy
	{
		for(new v = 0; v <= TotalMast; v++)
		{
			if(PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
			{
				if(AvtoMInfo[v][vProducts] <= 0 && AvtoMInfo[v][vOwned] == 1) return SCM(playerid, COLOR_GREY, "Нет запчастей");
				if(PI[playerid][pCash] < 10000) return SCM(playerid, 0xB4B5B7FF, "У тебя недостаточно денег. Нужно 10.000$");
				GameTextForPlayer(playerid, "~y~-10.000~r~$", 5000, 1);
				PI[playerid][pCash] -= 10000; PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				AvtoMInfo[v][v2Till] += 10000;
				if(AvtoMInfo[v][vOwned] == 1) AvtoMInfo[v][vProducts] -= 5;
				if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0])
				{
					PI[playerid][pColor][0] = GetPVarInt(playerid,"BuyColor");
					PI[playerid][pColor][1] = GetPVarInt(playerid,"BuyColor1");
				}
				else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1])
				{
					PI[playerid][pColor1][0] = GetPVarInt(playerid,"BuyColor");
					PI[playerid][pColor1][1] = GetPVarInt(playerid,"BuyColor1");
				}
				for(new x; x < 5; x++) TextDrawHideForPlayer(playerid, AutoColor[x]);
				CancelSelectTextDraw(playerid);
			}
		}
	}
	else if(clickedid == AutoColor[3])// Cancel
	{
		if(GetPlayerVehicleID(playerid) == caridhouse[playerid][0])
		{
			ChangeVehicleColor(GetPlayerVehicleID(playerid),PI[playerid][pColor][0],PI[playerid][pColor][1]);
		}
		else if(GetPlayerVehicleID(playerid) == caridhouse[playerid][1])
		{
			ChangeVehicleColor(GetPlayerVehicleID(playerid),PI[playerid][pColor1][0],PI[playerid][pColor1][1]);
		}
		for(new x; x < 5; x++) TextDrawHideForPlayer(playerid, AutoColor[x]);
		CancelSelectTextDraw(playerid);
	}
	//----------------------------------- Mobile -------------------------------
	else if(clickedid == Text:INVALID_TEXT_DRAW)// ESC
	{
		for(new e; e < 27; e++) TextDrawHideForPlayer(playerid, Mobilka[e]);
		PlayerTextDrawHide(playerid, MobNom);
		OnMobile[playerid] = 0;
		return 0;
	}
	else  if(clickedid == Mobilka[11])// Service
	{
		OnMobile[playerid] = 0;
		SPDEx(playerid, 9956, 2, "Выберите сервис", "- Вызвать Таксиста \n- Вызвать Медицинскую помощь \n- Вызвать Механика\n- Вызвать Полицию", "Выбор", "Отмена");
	}
	else if(clickedid == Mobilka[12])// H - поднять трубку
	{
		new sendername[MAX_PLAYER_NAME];
		if(PI[playerid][pMuted] == 1) { SCM(playerid, TEAM_CYAN_COLOR, "У Вас бан чата!"); return true; }
		if(Mobile[playerid] != 999) return SCM(playerid, COLOR_GREY, "Вы уже разговариваете по телефону!");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(Mobile[i] == playerid)
				{
					Mobile[playerid] = i;
					SCM(i, COLOR_GREY, "Поднял(а) трубку телефона.");
					SCM(i, COLOR_GREY, "Чтобы положить трубку, используйте: /phone -> Кнопка < X >");
					PI[i][pMobile] -= 100;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
					format(YCMDstr, 128, "%s ответил на звонок", sendername);
					ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
					GetPlayerPos(playerid,CallInfo[playerid][callx],CallInfo[playerid][cally],CallInfo[playerid][callz]);
					CallInfo[playerid][callused] = 1;
				}
			}
		}
		for(new t; t < 27; t++) TextDrawHideForPlayer(playerid, Mobilka[t]);
		PlayerTextDrawHide(playerid, MobNom);
		CancelSelectTextDraw(playerid);
		OnMobile[playerid] = 0;
		return true;
	}
	else if(clickedid == Mobilka[14])// Balance
	{
		format(YCMDstr, 100, "Ваш мобильный счёт: $%d",PI[playerid][pMobile]);
		SPDEx(playerid, 0, 0, "Мобильный счёт", YCMDstr, "X", "");
	}
	else if(clickedid == Mobilka[15])// X - положить трубку
	{
		for(new u; u < 27; u++) TextDrawHideForPlayer(playerid, Mobilka[u]);
		PlayerTextDrawHide(playerid, MobNom);
		CancelSelectTextDraw(playerid);
		OnMobile[playerid] = 0;
		if(IsPlayerConnected(Mobile[playerid]))
		{
			if(Mobile[playerid] != 999)
			{
				SCM(Mobile[playerid], COLOR_GRAD2, "Абонент положил(a) трубку");
				SetPlayerSpecialAction(Mobile[playerid],SPECIAL_ACTION_STOPUSECELLPHONE);
				CellTime[Mobile[playerid]] = 0;
				CellTime[playerid] = 0;
				Mobile[Mobile[playerid]] = 999;
				SCM(playerid, COLOR_GRAD2, "Вы повесили трубку");
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			}
			Mobile[playerid] = 999;
			Mobile[Mobile[playerid]] = 999;// debug
			CellTime[playerid] = 0;
			return true;
		}
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
		TalkingLive[playerid] = 999;
		zvonok[playerid] = 0;
		FL[playerid][Tel] = 999;
		return true;
	}
	if(clickedid == Mobilka[26])// <
	{
		new size = strlen(EnterNumb[playerid]);
		if(size == 1) strdel(EnterNumb[playerid],0,1),PlayerTextDrawSetString(playerid, MobNom,"");
		else if(size == 2) strdel(EnterNumb[playerid],1,2),PlayerTextDrawSetString(playerid, MobNom,EnterNumb[playerid]);
		else if(size == 3) strdel(EnterNumb[playerid],2,3),PlayerTextDrawSetString(playerid, MobNom,EnterNumb[playerid]);
		else if(size == 4) strdel(EnterNumb[playerid],3,4),PlayerTextDrawSetString(playerid, MobNom,EnterNumb[playerid]);
		else if(size == 5) strdel(EnterNumb[playerid],4,5),PlayerTextDrawSetString(playerid, MobNom,EnterNumb[playerid]);
		else if(size == 6) strdel(EnterNumb[playerid],5,6),PlayerTextDrawSetString(playerid, MobNom,EnterNumb[playerid]);
	}
	if(clickedid == Mobilka[16])//Цифра 1
	{
		PlayerPlaySound(playerid, 21000, 0, 0, 0);
		strcat(EnterNumb[playerid], "1");
		PlayerTextDrawSetString(playerid, MobNom, EnterNumb[playerid]);
	}
	else if(clickedid == Mobilka[17])//Цифра 2
	{
		PlayerPlaySound(playerid, 21000, 0, 0, 0);
		strcat(EnterNumb[playerid], "2");
		PlayerTextDrawSetString(playerid, MobNom, EnterNumb[playerid]);
	}
	else if(clickedid == Mobilka[18])//Цифра 3
	{
		PlayerPlaySound(playerid, 21000, 0, 0, 0);
		strcat(EnterNumb[playerid], "3");
		PlayerTextDrawSetString(playerid, MobNom, EnterNumb[playerid]);
	}
	else if(clickedid == Mobilka[19])//Цифра 4
	{
		PlayerPlaySound(playerid, 21000, 0, 0, 0);
		strcat(EnterNumb[playerid], "4");
		PlayerTextDrawSetString(playerid,MobNom, EnterNumb[playerid]);
	}
	else if(clickedid == Mobilka[20])//Цифра 5
	{
		PlayerPlaySound(playerid, 21000, 0, 0, 0);
		strcat(EnterNumb[playerid], "5");
		PlayerTextDrawSetString(playerid, MobNom, EnterNumb[playerid]);
	}
	else if(clickedid == Mobilka[21])//Цифра 6
	{
		PlayerPlaySound(playerid, 21000, 0, 0, 0);
		strcat(EnterNumb[playerid], "6");
		PlayerTextDrawSetString(playerid, MobNom, EnterNumb[playerid]);
	}
	else if(clickedid == Mobilka[22])//Цифра 7
	{
		PlayerPlaySound(playerid, 21000, 0, 0, 0);
		strcat(EnterNumb[playerid], "7");
		PlayerTextDrawSetString(playerid, MobNom, EnterNumb[playerid]);
	}
	else if(clickedid == Mobilka[23])//Цифра 8
	{
		PlayerPlaySound(playerid, 21000, 0, 0, 0);
		strcat(EnterNumb[playerid], "8");
		PlayerTextDrawSetString(playerid, MobNom, EnterNumb[playerid]);
	}
	else if(clickedid == Mobilka[24])//Цифра 9
	{
		PlayerPlaySound(playerid, 21000, 0, 0, 0);
		strcat(EnterNumb[playerid], "9");
		PlayerTextDrawSetString(playerid, MobNom, EnterNumb[playerid]);
	}
	else if(clickedid == Mobilka[25])//Цифра 0
	{
		PlayerPlaySound(playerid, 21000, 0, 0, 0);
		strcat(EnterNumb[playerid], "0");
		PlayerTextDrawSetString(playerid, MobNom, EnterNumb[playerid]);
	}
	else if(clickedid == Mobilka[10])//Call
	{
		for(new o; o < 27; o++) TextDrawHideForPlayer(playerid, Mobilka[o]);
		PlayerTextDrawHide(playerid, MobNom);
		CancelSelectTextDraw(playerid);
		OnMobile[playerid] = 0;
		new phonenumb = strval(EnterNumb[playerid]);
		strdel(EnterNumb[playerid],0,strlen(EnterNumb[playerid]));
		if(PI[playerid][pMuted] == 1) return SCM(playerid, COLOR_LIGHTRED, "У Вас бан чата!");
		if(Mobile[playerid] != 999) return SCM(playerid, COLOR_GREY, "Вы уже разговариваете по телефону!");
		if(phonenumb == PI[playerid][pPnumber]) return SCM(playerid, COLOR_GREY, "Ты не можешь позвонить самому себе!");
		if(PI[playerid][pMobile] <= 0) return SCM(playerid, COLOR_GREY, "Недостаточно денег для совершения звонка. Пожалуйста, пополните Ваш счёт.");
		format(YCMDstr, 128, "%s использует мобильный телефон",Name(playerid));
		ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		GetPlayerPos(playerid,CallInfo[playerid][callx],CallInfo[playerid][cally],CallInfo[playerid][callz]);
		CallInfo[playerid][callused] = 1;
		if(phonenumb == PI[playerid][pPnumber])
		{
			SCM(playerid, COLOR_GRAD2, "Линия занята");
			SetPlayerSpecialAction(playerid,13);
			return true;
		}
		if(phonenumb == 11555)
		{
			if(smssf == 0) return SCM(playerid, COLOR_GREY, "Прямой эфир отключен.");
			format(YCMDstr, 128, "В студию звонит: %s. Введите /yes [%d], чтобы ответить",Name(playerid), playerid);
			SendFamilyMessage(9, COLOR_YELLOW, YCMDstr);
			SetPlayerSpecialAction(playerid,11);
			zvonok[playerid] = 1;
			return true;
		}
		for(new idx=0, i=0; idx<cvector_size(players); idx++)
		{
			i = cvector_get(players, idx);
			if(PI[i][pPnumber] == phonenumb && phonenumb != 0)
			{
				Mobile[playerid] = i;
				if(!IsPlayerConnected(i)) return true;
				if(PhoneOnline[Mobile[playerid]] > 0) return SCM(playerid, COLOR_GREY, "Телефон абонента выключен...");
				if(Mobile[Mobile[playerid]] == 999)
				{
					OnMobile[Mobile[playerid]] = 1;
					for(new q; q < 27; q++) TextDrawShowForPlayer(Mobile[playerid], Mobilka[q]);
					PlayerTextDrawShow(Mobile[playerid], MobNom);
					SelectTextDraw(Mobile[playerid], 0x0080FFFF);
					format(YCMDstr, 128, "Ваш мобильник звонит. Введите /phone и нажмите P | Звонит: %s",Name(playerid));
					SCM(Mobile[playerid], COLOR_WHITE, YCMDstr);
					PlayerPlaySound(Mobile[playerid], 20600, 0.0, 0.0, 0.0);
					format(YCMDstr, 128, "У %s звонит мобильник",Name(i));
					ProxDetector(30.0, i, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerSpecialAction(playerid,11);
					CellTime[playerid] = 1;
					return true;
				}
			}
		}
		if(Mobile[playerid] == -1)
		{
			SCM(playerid, COLOR_GRAD2, "Телефон вне зоны доступа сети");
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			return true;
		}
	}
	return 1;
}

stock GeneratePassword(size)
{
	new
	bigletters[26][] = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"},
	smallletters[26][] = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"},
	numbers[10][] = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9"},
	password[128];
	if(size > sizeof(password)) size = sizeof(password);
	for(new i = 0; i < size; i ++)
	{
		switch(random(3))
		{
		case 0: strcat(password, bigletters[random(sizeof(bigletters))]);
		case 1: strcat(password, smallletters[random(sizeof(smallletters))]);
		case 2: strcat(password, numbers[random(sizeof(numbers))]);
		}
	}
	return password;
}

stock ClearBizz(i)
{
	BizzInfo[i][bLocked] = 1;
	BizzInfo[i][bOwned] = 0;
	BizzInfo[i][bProducts] = 0;
	BizzInfo[i][bTill] = 0;
	BizzInfo[i][b2Till] = 0;
	BizzInfo[i][bLockTime] = 0;
	BizzInfo[i][pBizLic] = 0;
	format(YCMDstr, 256, "%s\nПродаётся\nЦена: $%d", BizzInfo[i][bMessage],BizzInfo[i][bBuyPrice]);
	Update3DTextLabelText(BizzInfo[i][bLabel], 0xEAC700FF, YCMDstr);
	if(IsPlayerConnected(GetPlayerID(BizzInfo[i][bOwner]))) PI[GetPlayerID(BizzInfo[i][bOwner])][pBank] += BizzInfo[i][bBuyPrice] / 2, SetPVarInt(GetPlayerID(BizzInfo[i][bOwner]), "GetBizz", 1);
	else mysql_format(DATABASE,YCMDstr, 256, "UPDATE accounts SET pPbiskey = '255', pBank = pBank + 50000, pText = '2' WHERE Name = '%s'",BizzInfo[i][bOwner]), mysql_function_query(DATABASE,YCMDstr,false,"","");
	strmid(BizzInfo[i][bOwner], "The State", 0, strlen("The State"), 50);
	return true;
}

stock ClearMast(i)
{
	AvtoMInfo[i][vLocked] = 1;
	AvtoMInfo[i][vOwned] = 0;
	AvtoMInfo[i][vProducts] = 0;
	AvtoMInfo[i][vTill] = 0;
	AvtoMInfo[i][v2Till] = 0;
	AvtoMInfo[i][vLockTime] = 0;
	format(YCMDstr, 256, "%s\nПродаётся\nЦена: $%d", AvtoMInfo[i][vMessage],AvtoMInfo[i][vBuyPrice]);
	Update3DTextLabelText(AvtoMInfo[i][vLabel], 0x38FFD7FF, YCMDstr);
	if(IsPlayerConnected(GetPlayerID(AvtoMInfo[i][vOwner]))) PI[GetPlayerID(AvtoMInfo[i][vOwner])][pBank] += AvtoMInfo[i][vBuyPrice] / 2, SetPVarInt(GetPlayerID(AvtoMInfo[i][vOwner]), "GetMast", 1);
	else mysql_format(DATABASE,YCMDstr, 256, "UPDATE accounts SET pPviskey = '255', pBank = pBank + 50000, pText = '6' WHERE Name = '%s'",AvtoMInfo[i][vOwner]), mysql_function_query(DATABASE,YCMDstr,false,"","");
	strmid(AvtoMInfo[i][vOwner], "The State", 0, strlen("The State"), 50);
	return true;
}

stock ChosePlayerSkin(playerid)
{
    SetPlayerHealthAC(playerid,100);
    gOoc[playerid] = 0; gFam[playerid] = 0; FL[playerid][gLogin] = 0; PI[playerid][pTut] = 0;
	TogglePlayerControllable(playerid, 0);
	if(PI[playerid][pSex] == 1 && PI[playerid][pTut] == 0)
	{
		new rand = 0;
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
		SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		PI[playerid][pChar][PI[playerid][pViborChar]] = 143;
		if(!IsValidMenu(bomj[0]))
		{
			bomj[0] = CreateMenu("Victim", 1, 50.0, 160.0, 110.0);
			SetMenuColumnHeader(bomj[0], 0, "Skin");
			AddMenuItem(bomj[0], 0, "Next");
			AddMenuItem(bomj[0], 0, "Back");
			AddMenuItem(bomj[0], 0, "Save");
		}
		ShowMenuForPlayer(bomj[0],playerid);
		FL[playerid][ChosenSkin] = 143;
		//----------------------------------------------------------------------
		SetPlayerSkin(playerid,PI[playerid][pChar][PI[playerid][pViborChar]]);
		FL[playerid][SelectCharPlace] = 1;
		PI[playerid][pChar][PI[playerid][pViborChar]] = FL[playerid][ChosenSkin];
		new skin = 2 + random(100);
		SetPlayerVirtualWorld(playerid,skin);
		SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
		SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		return true;
	}
	else if(PI[playerid][pSex] == 2 && PI[playerid][pTut] == 0)
	{
		new rand = 0;
		SetPlayerInterior(playerid,1);
		SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
		SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		PI[playerid][pChar][PI[playerid][pViborChar]] = 90;
		if(!IsValidMenu(bomj[1]))
		{
			bomj[1] = CreateMenu("Victim", 1, 50.0, 160.0, 110.0);
			SetMenuColumnHeader(bomj[1], 0, "Skin");
			AddMenuItem(bomj[1], 0, "Next");
			AddMenuItem(bomj[1], 0, "Back");
			AddMenuItem(bomj[1], 0, "Save");
		}
		ShowMenuForPlayer(bomj[1],playerid);
		FL[playerid][ChosenSkin] = 90;
		//----------------------------------------------------------------------
		SetPlayerSkin(playerid,PI[playerid][pChar][PI[playerid][pViborChar]]);
		FL[playerid][SelectCharPlace] = 1;
		PI[playerid][pChar][PI[playerid][pViborChar]] = FL[playerid][ChosenSkin];
		new skin = 2 + random(100);
		SetPlayerVirtualWorld(playerid,skin);
		SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
		SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
		return true;
	}
	return true;
}

stock SetHouse(username, stolb[], znach)
{
	new Query[128];
	format(Query, 128, "UPDATE `house` SET  %s = '%i' WHERE hID = '%i' LIMIT 1", stolb, znach, username);
	return mysql_function_query(DATABASE,Query,false,"","");
}

stock SetHotel(username, stolb[], znach)
{
	new Query[128];
	format(Query, 128, "UPDATE `hotel` SET  %s = '%i' WHERE oID = '%i' LIMIT 1", stolb, znach, username);
	return mysql_function_query(DATABASE,Query,false,"","");
}

stock ClearReconnect()
{
	for(new i = 0; i < MAX_PLAYERS; i++) strmid(ExitInfo[i][ExitName],"None", 0, strlen("None"), 32), ExitInfo[i][ExitTime] = 0;
	return 1;
}

stock SendMes(playerid, color, fstringg[], {Float, _}:...)
{
	static const
	STATIC_ARGS = 3;
	new
	n = (numargs() - STATIC_ARGS) * BYTES_PER_CELL;
	if (n)
	{
		new
		message[128],
		arg_start,
		arg_end;
		#emit CONST.alt        fstringg
		#emit LCTRL          5
		#emit ADD
		#emit STOR.S.pri        arg_start

		#emit LOAD.S.alt        n
		#emit ADD
		#emit STOR.S.pri        arg_end
		do
		{
			#emit LOAD.I
			#emit PUSH.pri
			arg_end -= BYTES_PER_CELL;
			#emit LOAD.S.pri      arg_end
		}
		while (arg_end > arg_start);

		#emit PUSH.S          fstringg
		#emit PUSH.C          128
		#emit PUSH.ADR         message

		n += BYTES_PER_CELL * 3;
		#emit PUSH.S          n
		#emit SYSREQ.C         format

		n += BYTES_PER_CELL;
		#emit LCTRL          4
		#emit LOAD.S.alt        n
		#emit ADD
		#emit SCTRL          4
		return SCM(playerid, color, message);
	}
	else return SCM(playerid, color, fstringg);
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid)
{
	format(YCMDstr,10,"-%.0f hp",amount);
	SetPlayerChatBubble(playerid, YCMDstr, 0x00D900C8, 100.0, 1000);
	PlayerPlaySound(issuerid,17802,0,0,0);
	return true;
}

public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid)
{
	if(weaponid == 34)
	{
		for(new i = 0; i < sizeof(GZInfo); i++)
		{
			if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
			{
				if(FL[playerid][Operation] == true)
				{
					SetPlayerHealthAC(damagedid, 0);
					FL[playerid][Operation] = false;
					_ResetGun(playerid);
					SCM(playerid, COLOR_GREEN, "Задание окончено.");
				}
			}
		}
	}
	if(AntiDM(playerid))
	{
		if(!IsACop(playerid) && !IsAMayor(playerid))
		{
			PI[playerid][pDM] += 1;
			if(PI[playerid][pDM] >= 3)
			{
				SCM(playerid,COLOR_REDD,"Вы были кикнуты сервером за DM!");
				Kick(playerid);
			}
			else
			{
				format(YCMDstr,128,"В зелёных зонах DM запрещён! {ff0000}[Предупреждений: %d/3]",PI[playerid][pDM]);
				SPDEx(playerid,289,0,"Warning",YCMDstr,"X","");
			}
		}
	}
	if(GetPlayerWeapon(playerid) == TAZE_WEAPON)
	{
		if(IsACop(playerid))
		{
			if(IsACop(damagedid)) return SCM(playerid, COLOR_GREY, "Вы не можете ударить тазером законника");
			if(IsPlayerInAnyVehicle(damagedid)) return SCM(playerid, COLOR_GREY, "Человек в машине!");
			format(YCMDstr, 128, "Вас обездвижил тазером %s на 15 секунд",Name(playerid));
			SCM(damagedid, 0x6495EDFF, YCMDstr);
			format(YCMDstr, 128, "Вы обездвижили тазером %s на 15 секунд",Name(damagedid));
			SCM(playerid, 0x6495EDFF, YCMDstr);
			format(YCMDstr, 128, "Законник %s обезвредил %s", Name(playerid) ,Name(damagedid));
			ProxDetector(30.0, playerid, YCMDstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			TogglePlayerControllable(damagedid,0);
			SCM(damagedid,-1,"Вы обездвижены на 15 секунд");
			Tazed[damagedid] = 1;
			PlayerCuffed[damagedid] = 1;
			PlayerCuffedTime[damagedid] = 15;
			ClearAnimations(damagedid);
			ApplyAnimation(damagedid,"PED","KO_skid_front",4.1,0,1,1,1,0);
		}
	}
	if(weaponid == 4 || weaponid == 9 || weaponid == 16 || weaponid == 18 || weaponid == 26 || weaponid == 27 ||
			weaponid == 28 || weaponid == 32 || weaponid == 35 || weaponid == 36 || weaponid == 37 || weaponid == 38 || weaponid == 39 || weaponid == 44)
	{
		SCM(playerid,COLOR_REDD,"Вы были кикнуты за читы на оружие!");
		print("KICK #7");
		Kick(playerid);
	}
	return true;
}

publics: SpcarsAvto(playerid)
{
	for(new c = 0; c < MAX_VEHICLES; c++) if(IsVehicleOccupied(c) == -1) SetVehicleToRespawn(c);
	format(YCMDstr, 48,"Администратор обновил весь незанятый транспорт!");
	SCMToAll(COLOR_LIGHTRED,YCMDstr);
}

publics: EngineVehicle(playerid, vehicleid)
{
	if(IsPlayerInVehicle(playerid,vehicleid))
	{
 		new Float:Health;
		GetVehicleHealth(vehicleid, Health);
		if(Health > 1000.0) Health = 1000.0;
		new hp = 11 - floatround(Health / 100.0);
  		new uEngine = random(hp);
    	new string[150];
  		if(uEngine < 4)
    	{
     		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid) ,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
			zavodis[GetPlayerVehicleID(playerid)] = 1;
       		format(string,sizeof(string),"Двигатель успешно завелся | -  %s",Name(playerid));
	        ProxDetector(25.0, playerid, string, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
	    }
	    else
	    {
     		format(string,sizeof(string),"Двигатель не завелся | -  %s",Name(playerid));
       		ProxDetector(25.0, playerid, string, 0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF,0xDD90FFFF);
		}
	}
	return true;
}

stock IsText(text[])
{
	if(strfind(text, "\\", true) != -1) return 0;
	if(strfind(text, "/", true) != -1) return 0;
	if(strfind(text, "q", true) != -1) return 1;
	if(strfind(text, "w", true) != -1) return 1;
	if(strfind(text, "e", true) != -1) return 1;
	if(strfind(text, "r", true) != -1) return 1;
	if(strfind(text, "t", true) != -1) return 1;
	if(strfind(text, "y", true) != -1) return 1;
	if(strfind(text, "u", true) != -1) return 1;
	if(strfind(text, "i", true) != -1) return 1;
	if(strfind(text, "o", true) != -1) return 1;
	if(strfind(text, "p", true) != -1) return 1;
	if(strfind(text, "a", true) != -1) return 1;
	if(strfind(text, "s", true) != -1) return 1;
	if(strfind(text, "d", true) != -1) return 1;
	if(strfind(text, "f", true) != -1) return 1;
	if(strfind(text, "g", true) != -1) return 1;
	if(strfind(text, "h", true) != -1) return 1;
	if(strfind(text, "j", true) != -1) return 1;
	if(strfind(text, "k", true) != -1) return 1;
	if(strfind(text, "l", true) != -1) return 1;
	if(strfind(text, "z", true) != -1) return 1;
	if(strfind(text, "x", true) != -1) return 1;
	if(strfind(text, "c", true) != -1) return 1;
	if(strfind(text, "v", true) != -1) return 1;
	if(strfind(text, "b", true) != -1) return 1;
	if(strfind(text, "n", true) != -1) return 1;
	if(strfind(text, "m", true) != -1) return 1;
	return 0;
}

stock ShowSTODialog(playerid)
{
	for(new v = 1; v <= TotalMast; v++)
	{
		if(PlayerToPoint(15, playerid,AvtoMInfo[v][vBarX], AvtoMInfo[v][vBarY], AvtoMInfo[v][vBarZ]))
		{
			SPDEx(playerid, 2769, 2,"Тюнинг меню","[1] Покраска\n[2] Нитро\n[3] Диски\n[4] Покрасочные работы\n[5] Спойлер\n[6] Передний бампер\n[7] Задний бампер\n[8] Гидравлика\n[9] Починить транспорт\n[10] Ремонт двигателя\n[11] Боковая юбка\n[12] Воздухозаборник\n[13] Выхлоп\n[14] Удалить тюнинг","Выбрать","Закрыть");
		}
	}
	return true;
}

stock VehiclePlayer(vehicleid)
{
	for(new idx=0, i=0; idx<cvector_size(players); idx++)
	{
		i = cvector_get(players, idx);
		if(caridhouse[i][0] == vehicleid || caridhouse[i][1] == vehicleid) return i;
	}
	return -1;
}

stock ConvertSeconds(time)
{
	new string[128];
	if(time < 60) format(string, sizeof(string), "0:%d", time);
	else if(time == 60) string = "1:00";
	else if(time > 60 && time < 3600)
	{
		new Float: minutes;
		new seconds;
		minutes = time / 60;
		seconds = time % 60;
		format(string, 128, "%.0f:%d", minutes, seconds);
	}
	return string;
}

stock strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}

GoAnim(playerid,alib[],aanim[],Float:atime,amove,ax,ay,az,af,ac) return ApplyAnimation(playerid,alib,aanim,atime,amove,ax,ay,az,af,ac);

stock AdminStroki()
{
	for(new l; l < sizeof(stroki); l++)
	{
		StroStr[l] = " ";
		stroki[l] = TextDrawCreate(155.0,(410.0-(l*10)),StroStr[l]);
		TextDrawLetterSize(stroki[l],0.230000,1.100000);
		TextDrawSetShadow(stroki[l],0);
		TextDrawTextSize(stroki[l],640,480);
		TextDrawBoxColor(stroki[l],0x000000FF);
		TextDrawSetProportional(stroki[l],1);
		TextDrawFont(stroki[l],1);
		TextDrawSetOutline(stroki[l],1);
		TextDrawShowForAll(stroki[l]);
	}
	return 1;
}

publics: ConnectMessage(text[])
{
	for(new l = (sizeof(stroki)-1); l > 0; l--)
	{
		TextDrawSetString(stroki[l],StroStr[l-1]);
		StroStr[l] = StroStr[l-1];
	}
	TextDrawSetString(stroki[0],text);
	strmid(StroStr[0],text,0,128,128);
	return ;
}

publics: CloseGate(playerid, gateid)
{
	switch(gateid)
	{
	case 1: MoveDynamicObject(sab[0], 56.89, -1535.34,4.90-0.010,0.010,0.00, 270.00, 83.00);
	case 2: MoveDynamicObject(sab[1], 50.61,-1528.43,4.86-0.010,0.010,0.00, 270.00, 262.00);
	case 3: MoveDynamicObject(sab[2], 97.36,-1272.42,14.29-0.010,0.010,0.00,90.00,301.00);
	case 4: MoveDynamicObject(sab[3], 87.00, -1264.37, 14.30-0.010,0.010,0.00, 270.00, 301.00);
	case 5: MoveDynamicObject(sab[4], 104.38, -1284.05, 14.29-0.010,0.010,0.00, 270.00, 301.00);
	case 6: MoveDynamicObject(sab[5], 80.06, -1252.83, 14.29-0.010,0.010,0.00, 270.00, 121.00);
	case 7: MoveDynamicObject(sab[6], 1722.16, 528.04, 27.84-0.010,0.010,0.00, 270.00, 160.00);
	case 8: MoveDynamicObject(sab[7], 1730.67, 524.96, 27.74-0.010,0.010,0.00, 270.00, 160.00);
	case 9: MoveDynamicObject(sab[8], 1757.43, 525.87, 27.34-0.010,0.010,0.00, 270.00, -20.10);
	case 10: MoveDynamicObject(sab[9], 1748.9000, 528.9700, 27.5400-0.010,0.010, 0.0000, 270.0000, -20.1000);
	case 11: MoveDynamicObject(sab[10], 1144.6262, 1362.8641, 10.5103-0.010,0.010,0.0000, -88.8400, 0.0000);
	case 12: MoveDynamicObject(sab[11], 94.5154, 1923.9302, 17.8180-0.010,0.010,0.0000, -89.5390, 88.0000);
	case 13: MoveDynamicObject(sab[12], -1526.50513, 482.53680, 6.90630-0.010,0.010,357.00000,-89.05200,2.00000);
	case 14: MoveDynamicObject(sab[13], 1544.68506,-1630.83228,13.05930-0.010,0.010,1.94800,-88.56500, 269.43500);
	case 15: MoveDynamicObject(sab[14], 1029.9292, 1182.8590, 10.3718-0.010,0.010,0.0000, -89.0400, 0.0000);
	case 16: MoveDynamicObject(sab[15], 2238.1980,2450.3962,10.5532-0.010,0.010,0.0000,88.3900,90.0660);
	case 17: MoveDynamicObject(sab[16], -1572.2118,658.8192,6.7852-0.010,0.010,0.0000,87.9870,90.0000);
	case 18: MoveDynamicObject(sab[17], -1701.4314, 687.6194, 24.6419-0.010,0.010,0.0000, 89.1280, 270.0000);
	case 19: MoveDynamicObject(sab[18], -1642.6927, 579.5979, 39.4935-0.010,0.010,0.0000, -88.8400, -42.8800);
	case 20: MoveDynamicObject(sab[19], -1632.9912, 561.1000, 39.2935-0.010,0.010,-0.3600, -89.5600, -42.8800);
	case 21: MoveDynamicObject(sab[20], -301.8942, 1507.6520, 78.1179-0.50,0.50,0.0000, 0.0000, 0.0000), PlayerPlaySound(playerid, 0, 0.0, 0.0, 0.0);
	case 22: MoveDynamicObject(sab[21], 135.1606, 1941.0687, 20.7168-0.50,0.50,0.0000, 0.0000, 180.0000), PlayerPlaySound(playerid, 0, 0.0, 0.0, 0.0);
	case 23: MoveDynamicObject(sab[22], 285.8610, 1820.2784, 19.1930-0.50,0.50,0.0000, 0.0000, 90.0000), PlayerPlaySound(playerid, 0, 0.0, 0.0, 0.0);
	case 24: MoveDynamicObject(sab[23], 2497.4358, 2773.1748, 11.5677-0.50,0.50,0.0000, 0.0000, 90.2800), PlayerPlaySound(playerid, 0, 0.0, 0.0, 0.0);
	case 25: MoveObject(sab[24], -1018.6143, 695.3543, 1508.2934-0.50,0.50,0.0000, 0.0000, 0.0000);
	case 26: MoveDynamicObject(sab[25], 1588.18835, -1638.25171, 13.69940, 0.5);
	case 27: MoveDynamicObject(sab[26], 1582.61389, -1638.16309, 12.30700, 0.3);
	case 28: MoveDynamicObject(sab[27], -1619.73816, 688.23260, 6.26340, 0.3);
	case 29: MoveDynamicObject(sab[28], -1631.66345, 688.28943, 10.16920, 0.5);
	case 30: MoveDynamicObject(sab[29], -1647.73340, 689.29578, 1007.75537, 0.3);
	case 31: MoveDynamicObject(sab[30], -1647.77405, 703.58362, 1007.74402, 0.3);
	case 32: MoveDynamicObject(sab[31], -1642.64136, 703.36627, 1000.79840, 0.3);
	case 33: MoveDynamicObject(sab[32], -2044.6180, -102.5718, 34.8549-0.010,0.010,0.0000, -88.7590, -1.7150);
	default: {}
	}
	return 0;
}

LoopingAnim(playerid,animlib[],animname[], Float:Sspeed, looping, lockx, locky, lockz, lp, sync) ApplyAnimation(playerid, animlib, animname, Sspeed, looping, lockx, locky, lockz, lp, sync);

publics: TimeDrov(playerid)
{
	if(GetPVarInt(playerid,"startjobd") == 1)
	{
		_ResetGun(playerid);
		SetPlayerAttachedObject(playerid, 1 , 1463, 1,0.20,0.36,0.0,0.0,90.0, 0.0, 0.4, 0.3, 0.6);
		ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
		SetPlayerCheckpoint(playerid,-749.7355,-119.9744,66.0487,3.0);
	}
	return 1;
}

stock GetPosPickup(playerid)
{
	if(FL[playerid][oldpickup] == -1) return 1;
	new Float:z;
	GetPlayerPos(playerid, z, z, z);
	if(!IsPlayerInRangeOfPoint(playerid,1.0,FL[playerid][PickupX],FL[playerid][PickupY],z)) FL[playerid][oldpickup] = -1;
	return 1;
}
publics: Seem(playerid)
{
	for(new h = 1; h < sizeof(NarkoInfo); h++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, NarkoInfo[h][nX], NarkoInfo[h][nY], NarkoInfo[h][nZ]))
		{
			NarkoInfo[h][nZasev] = 1;
			NarkoInfo[h][nWait] = 1;
			NarkoInfo[h][nObject] = CreateDynamicObject(824,NarkoInfo[h][nX],NarkoInfo[h][nY],NarkoInfo[h][nZ],0.00,0.00,0.00);
			format(YCMDstr, 100,"%d часов осталось до того,\n когда плантацию можно будет собрать",NarkoInfo[h][nWait]);
			Update3DTextLabelText(NarkoInfo[h][nLabel], 0xC4DAADFF,YCMDstr);
			mysql_format(DATABASE, YCMDstr, 256, "UPDATE `"TABLE_PLANTS"` SET nWait = '%i', nZasev = '%i' WHERE nID = '%i'",NarkoInfo[h][nWait],NarkoInfo[h][nZasev],h);
			mysql_function_query(DATABASE,YCMDstr,false,"","");
			ClearAnimations(playerid);
			ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, 0, 0, 0, 0, 1, 1);
			SetPVarInt(playerid, "seit", 0);
			DisablePlayerCheckpoint(playerid);
		}
	}
}
stock GetNearestVehicle(playerid)
{
	for(new i; i < MAX_VEHICLES; i++)
	{
		if(GetVehicleModel(i))
		{
			new Float:X,Float:Y,Float:Z;
			GetVehiclePos(i,X,Y,Z);
			if(PlayerToPoint(4.0, playerid, X, Y, Z))return i;
		}
	}
	return -1;
}
stock FuelList(playerid)
{
	new strrr[600], str[90];
	for(new i = 1; i <= TOTALFUEL; i++)
	{
		format(str, 90, "№%i - Заказал: %s\n",i, FuelInfo[i][pName]);
		strcat(strrr, str);
	}
	if(TOTALFUEL == 0) return SPDEx(playerid, 0, 0, "Заказы", "Новых заказов нет", "Закрыть", "");
	SPDEx(playerid, 5348, 2, "Заказы", strrr, "Принять", "Отмена");
	return 1;
}
stock ProductList(playerid)
{
	new strrr[600], str[90];
	for(new i = 1; i <= TOTALPRODUCT; i++)
	{
		format(str, 90, "№%i - Заказал: %s\n",i, ProductInfo[i][pName]);
		strcat(strrr, str);
	}
	if(TOTALPRODUCT == 0) return SPDEx(playerid, 0, 0, "Заказы", "Новых заказов нет", "Закрыть", "");
	SPDEx(playerid, 5351, 2, "Заказы", strrr, "Принять", "Отмена");
	return 1;
}
publics: Gunjobanim(playerid)
{
	RemovePlayerAttachedObject(playerid,3);
	ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
	SetPlayerAttachedObject(playerid,3,2969,1,0.075578,0.407083,0.000000,1.248928,97.393852,359.645050,1.000000,1.000000,1.000000);
	SetPVarInt(playerid, "Gjob",3);
	SCM(playerid, COLOR_LIGHTGREEN, "Оружие собрано. Отнесите оружие на склад.");
	new pcheck = random(5);
	if(pcheck == 0) SetPlayerCheckpoint(playerid,2547.4834,2837.4275,10.8203,1.5);
	if(pcheck == 1) SetPlayerCheckpoint(playerid,2547.1812,2833.0649,10.8203,1.5);
	if(pcheck == 2) SetPlayerCheckpoint(playerid,2544.8445,2828.9470,10.8203,1.5);
	if(pcheck == 3) SetPlayerCheckpoint(playerid,2535.7996,2827.6956,10.8203,1.5);
	if(pcheck == 4) SetPlayerCheckpoint(playerid,2527.4241,2830.8210,10.8203,1.5);
	return 1;
}
stock ShowClothesShopDialogEx(playerid)
{
	if(PI[playerid][pDonateRank] < 1) return SCM(playerid, COLOR_LIGHTGREEN, "Вы не VIP игрок");
	SPDEx(playerid, 2539, 2, "Аксессуары:", "<- Береты\n<- Кепки\n<- Шляпы\n<- Шапки\n<- Маски\n<- Очки\n<- Снять аксессуары", "Ок", "Отмена");
	return 1;
}
stock OnPlayerEnterEmail(playerid)
{
	mysql_format(DATABASE,YCMDstr,114,"SELECT * FROM `accounts` WHERE `Name` = '%s' AND `pKey`= '%s'",Name(playerid),PI[playerid][pKey]);
	mysql_function_query(DATABASE,YCMDstr,true,"OnMySQL_QUERY","iis",0,playerid,"");
	return true;
}
publics: OFFuninvite(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SCM(playerid, COLOR_GREY, "Аккаунт не найден");
	new name[MAX_PLAYER_NAME];
	if(PI[playerid][pLeader] == 1)
	{
	    cache_get_field_content(0,"Name",name,DATABASE,sizeof(name));
	    new sapd = cache_get_field_content_int(0,"pSAPD");
		if(sapd != PI[playerid][pSAPD]) return SCM(playerid,COLOR_GREY,"Этот игрок не состоит в SAPD");
		mysql_format(DATABASE,YCMDstr,200,"UPDATE `accounts` SET pSAPD = '0', pMember = '0', pRank = '0', pText = '7', pSPChange = '1' WHERE `Name` ='%s'",name);
		mysql_function_query(DATABASE,YCMDstr,false,"","");
		format(YCMDstr, 49,"Игрок %s исключён из SAPD!",name);
		SCM(playerid,COLOR_YELLOW,YCMDstr);
		return true;
	}
	if(PI[playerid][pLeader] == 8)
	{
	    cache_get_field_content(0,"Name",name,DATABASE,sizeof(name));
	    new med = cache_get_field_content_int(0,"pMedic");
		if(med != PI[playerid][pMedic]) return SCM(playerid,COLOR_GREY,"Этот игрок не состоит в Мед. Центре");
		mysql_format(DATABASE,YCMDstr,200,"UPDATE `accounts` SET pMedic = '0', pMember = '0', pRank = '0', pText = '7', pSPChange = '1' WHERE `Name` ='%s'",name);
		mysql_function_query(DATABASE,YCMDstr,false,"","");
		format(YCMDstr, 49,"Игрок %s исключён из Мед. Центра!",name);
		SCM(playerid,COLOR_YELLOW,YCMDstr);
		return true;
	}
	cache_get_field_content(0,"Name",name,DATABASE,sizeof(name));
	new memb = cache_get_field_content_int(0,"pMember");
	if(memb != PI[playerid][pMember]) return SCM(playerid,COLOR_GREY,"Этот игрок не состоит в Вашей организации!");
	mysql_format(DATABASE,YCMDstr,200,"UPDATE `accounts` SET pMember = '0', pRank = '0', pText = '7', pSPChange = '1' WHERE `Name` ='%s'",name);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	format(YCMDstr, 62,"Игрок %s исключён из Вашей организации!",name);
	SCM(playerid,COLOR_YELLOW,YCMDstr);
	return true;
}
publics: OffFamily(playerid)
{
	new f,d;
	cache_get_data(f,d);
	if(!f) return SCM(playerid, -1, "Состав семьи не найден");
	new online[20], name[24], ttextt[32], ofm_string[3000];
	for(new i = 0; i < f; i ++)
	{
		cache_get_field_content(i,"Name", name, DATABASE, 24);
		cache_get_field_content(i, "pOnline", online, DATABASE, 20);
		if(IsPlayerConnected(GetPlayerID(name))) { ttextt = "{00FF00}Online"; }
		else if(!IsPlayerConnected(GetPlayerID(name))) { ttextt = "{FF0000}Offline"; }
		format(YCMDstr, 150, "{E0FFFF}- {FFD700}%s {E0FFFF}[Статус: %s{E0FFFF}] [Заходил: {00FFFF}%s{E0FFFF}]\n",name, ttextt, online), strcat(ofm_string, YCMDstr);
		SPDEx(playerid, 1022, 0, "Состав семьи", ofm_string, "X","");
	}
	return true;
}
publics: OffMembFam(playerid) 
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SCM(playerid, COLOR_GREY, "Введённый Вами ник не найден!");
	new name[MAX_PLAYER_NAME];
	cache_get_field_content(0,"Name",name,DATABASE,sizeof(name));
	new fam = cache_get_field_content_int(0,"pFamily");
	if(fam != player_family[playerid]) return SCM(playerid,COLOR_GREY,"Этот игрок не состоит в Вашей семье!");
	mysql_format(DATABASE,YCMDstr,80,"UPDATE `accounts` SET pFamily = '0' WHERE `Name` ='%s'",name);
	mysql_function_query(DATABASE,YCMDstr,false,"","");
	format(YCMDstr, 60,"Игрок %s исключён из Вашей семьи!",name);
	SCM(playerid,COLOR_REDD,YCMDstr);
	return true;
}
publics: Leaders(playerid, query[])
{
	new f,d;
	cache_get_data(f,d);
	new rows = f;
	if(rows)
	{
		new name[24], leader, number;
		new ttextt[18];
		new string[2127], string_last[133];
		for(new i = 0; i < rows; i ++)
		{
			leader = cache_get_field_content_int (i, "pLeader", DATABASE);
			cache_get_field_content(i,"Name", name, DATABASE, 24);
			number = cache_get_field_content_int(i,"pPnumber",DATABASE);
			if(IsPlayerConnected(GetPlayerID(name))) { ttextt = "{00FF00}[Online]"; }
			else if(!IsPlayerConnected(GetPlayerID(name))) { ttextt = "{FF0000}[Offline]"; }
			format(string_last,sizeof(string_last),"%s {FFFFE0}| {FFA500}%s {FFFFE0}| {48D1CC}Телефон: %d {FFFFE0}| %s\n",Fraction_Name[leader],name,number,ttextt); strcat(string,string_last);
		}
		SPDEx(playerid,0000,0,"Лидеры организаций",string,"Закрыть","");
	}
	else SCM(playerid, COLOR_GREY, "Список лидеров пуст!");
	return true;
}
publics: OnPlayerCheckName(playerid, inputtext[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows) return SCM(playerid, COLOR_GREY, "Ошибка! Данный ник уже занят.");
	else
	{
		SetPVarInt(playerid, "ChangeName", 1), SetPVarString(playerid, "ChangeNameVariant", inputtext);
		SCM(playerid, COLOR_ORANGE, "Заявка на смену ника отправлена. Ждите рассмотрения администрацией.");
		format(YCMDstr,117, "{FF0000}[Заявка на смену ника] {32CD32}%s[%d] просит сменить ник на: %s", Name(playerid),playerid,inputtext);
		ABroadCast(COLOR_ISPOLZUY, YCMDstr, 1);
	}
	return true;
}
stock GetCasinoNumber(playerid)
{
	switch(GetPVarInt(playerid,"RNumber"))
	{
	case 0: SetPVarString(playerid,"RNumbers","0"), SetPVarInt(playerid,"RNumber_",1);
	case 1: SetPVarString(playerid,"RNumbers","1"), SetPVarInt(playerid,"RNumber_",1);
	case 3: SetPVarString(playerid,"RNumbers","2"), SetPVarInt(playerid,"RNumber_",1);
	case 5: SetPVarString(playerid,"RNumbers","3"), SetPVarInt(playerid,"RNumber_",1);
	case 11: SetPVarString(playerid,"RNumbers","4"), SetPVarInt(playerid,"RNumber_",1);
	case 13: SetPVarString(playerid,"RNumbers","5"), SetPVarInt(playerid,"RNumber_",1);
	case 15: SetPVarString(playerid,"RNumbers","6"), SetPVarInt(playerid,"RNumber_",1);
	case 21: SetPVarString(playerid,"RNumbers","7"), SetPVarInt(playerid,"RNumber_",1);
	case 23: SetPVarString(playerid,"RNumbers","8"), SetPVarInt(playerid,"RNumber_",1);
	case 25: SetPVarString(playerid,"RNumbers","9"), SetPVarInt(playerid,"RNumber_",1);
	case 31: SetPVarString(playerid,"RNumbers","10"), SetPVarInt(playerid,"RNumber_",1);
	case 33: SetPVarString(playerid,"RNumbers","11"), SetPVarInt(playerid,"RNumber_",1);
	case 35: SetPVarString(playerid,"RNumbers","12"), SetPVarInt(playerid,"RNumber_",1);
	case 41: SetPVarString(playerid,"RNumbers","13"), SetPVarInt(playerid,"RNumber_",1);
	case 43: SetPVarString(playerid,"RNumbers","14"), SetPVarInt(playerid,"RNumber_",1);
	case 45: SetPVarString(playerid,"RNumbers","15"), SetPVarInt(playerid,"RNumber_",1);
	case 51: SetPVarString(playerid,"RNumbers","16"), SetPVarInt(playerid,"RNumber_",1);
	case 53: SetPVarString(playerid,"RNumbers","17"), SetPVarInt(playerid,"RNumber_",1);
	case 55: SetPVarString(playerid,"RNumbers","18"), SetPVarInt(playerid,"RNumber_",1);
	case 61: SetPVarString(playerid,"RNumbers","19"), SetPVarInt(playerid,"RNumber_",1);
	case 63: SetPVarString(playerid,"RNumbers","20"), SetPVarInt(playerid,"RNumber_",1);
	case 65: SetPVarString(playerid,"RNumbers","21"), SetPVarInt(playerid,"RNumber_",1);
	case 71: SetPVarString(playerid,"RNumbers","22"), SetPVarInt(playerid,"RNumber_",1);
	case 73: SetPVarString(playerid,"RNumbers","23"), SetPVarInt(playerid,"RNumber_",1);
	case 75: SetPVarString(playerid,"RNumbers","24"), SetPVarInt(playerid,"RNumber_",1);
	case 81: SetPVarString(playerid,"RNumbers","25"), SetPVarInt(playerid,"RNumber_",1);
	case 83: SetPVarString(playerid,"RNumbers","26"), SetPVarInt(playerid,"RNumber_",1);
	case 85: SetPVarString(playerid,"RNumbers","27"), SetPVarInt(playerid,"RNumber_",1);
	case 91: SetPVarString(playerid,"RNumbers","28"), SetPVarInt(playerid,"RNumber_",1);
	case 93: SetPVarString(playerid,"RNumbers","29"), SetPVarInt(playerid,"RNumber_",1);
	case 95: SetPVarString(playerid,"RNumbers","30"), SetPVarInt(playerid,"RNumber_",1);
	case 101: SetPVarString(playerid,"RNumbers","31"), SetPVarInt(playerid,"RNumber_",1);
	case 103: SetPVarString(playerid,"RNumbers","32"), SetPVarInt(playerid,"RNumber_",1);
	case 105: SetPVarString(playerid,"RNumbers","33"), SetPVarInt(playerid,"RNumber_",1);
	case 111: SetPVarString(playerid,"RNumbers","34"), SetPVarInt(playerid,"RNumber_",1);
	case 113: SetPVarString(playerid,"RNumbers","35"), SetPVarInt(playerid,"RNumber_",1);
	case 115: SetPVarString(playerid,"RNumbers","36"), SetPVarInt(playerid,"RNumber_",1);
	case 2: SetPVarString(playerid,"RNumbers","1, 2"), SetPVarInt(playerid,"RNumber_",2);
	case 4: SetPVarString(playerid,"RNumbers","2, 3"), SetPVarInt(playerid,"RNumber_",2);
	case 6: SetPVarString(playerid,"RNumbers","1, 4"), SetPVarInt(playerid,"RNumber_",2);
	case 7: SetPVarString(playerid,"RNumbers","1, 2, 4, 5"), SetPVarInt(playerid,"RNumber_",4);
	case 8: SetPVarString(playerid,"RNumbers","2, 5"), SetPVarInt(playerid,"RNumber_",2);
	case 9: SetPVarString(playerid,"RNumbers","2, 3, 5, 6"), SetPVarInt(playerid,"RNumber_",4);
	case 10: SetPVarString(playerid,"RNumbers","3, 6"), SetPVarInt(playerid,"RNumber_",2);
	case 12: SetPVarString(playerid,"RNumbers","4, 5"), SetPVarInt(playerid,"RNumber_",2);
	case 14: SetPVarString(playerid,"RNumbers","5, 6"), SetPVarInt(playerid,"RNumber_",2);
	case 16: SetPVarString(playerid,"RNumbers","4, 7"), SetPVarInt(playerid,"RNumber_",2);
	case 17: SetPVarString(playerid,"RNumbers","4, 5, 7, 8"), SetPVarInt(playerid,"RNumber_",4);
	case 18: SetPVarString(playerid,"RNumbers","5, 8"), SetPVarInt(playerid,"RNumber_",2);
	case 19: SetPVarString(playerid,"RNumbers","5, 6, 8, 9"), SetPVarInt(playerid,"RNumber_",4);
	case 20: SetPVarString(playerid,"RNumbers","6, 9"), SetPVarInt(playerid,"RNumber_",2);
	case 22: SetPVarString(playerid,"RNumbers","7, 8"), SetPVarInt(playerid,"RNumber_",2);
	case 24: SetPVarString(playerid,"RNumbers","8, 9"), SetPVarInt(playerid,"RNumber_",2);
	case 26: SetPVarString(playerid,"RNumbers","7, 10"), SetPVarInt(playerid,"RNumber_",2);
	case 27: SetPVarString(playerid,"RNumbers","7, 8, 10, 11"), SetPVarInt(playerid,"RNumber_",4);
	case 28: SetPVarString(playerid,"RNumbers","8, 10"), SetPVarInt(playerid,"RNumber_",2);
	case 29: SetPVarString(playerid,"RNumbers","8, 9, 11, 12"), SetPVarInt(playerid,"RNumber_",4);
	case 30: SetPVarString(playerid,"RNumbers","9, 12"), SetPVarInt(playerid,"RNumber_",2);
	case 32: SetPVarString(playerid,"RNumbers","10, 11"), SetPVarInt(playerid,"RNumber_",2);
	case 34: SetPVarString(playerid,"RNumbers","11, 12"), SetPVarInt(playerid,"RNumber_",2);
	case 36: SetPVarString(playerid,"RNumbers","10, 13"), SetPVarInt(playerid,"RNumber_",2);
	case 37: SetPVarString(playerid,"RNumbers","10, 11, 13, 14"), SetPVarInt(playerid,"RNumber_",4);
	case 38: SetPVarString(playerid,"RNumbers","11, 14"), SetPVarInt(playerid,"RNumber_",2);
	case 39: SetPVarString(playerid,"RNumbers","11, 12, 14, 15"), SetPVarInt(playerid,"RNumber_",4);
	case 40: SetPVarString(playerid,"RNumbers","12, 15"), SetPVarInt(playerid,"RNumber_",2);
	case 42: SetPVarString(playerid,"RNumbers","13, 14"), SetPVarInt(playerid,"RNumber_",2);
	case 44: SetPVarString(playerid,"RNumbers","14, 15"), SetPVarInt(playerid,"RNumber_",2);
	case 46: SetPVarString(playerid,"RNumbers","13, 16"), SetPVarInt(playerid,"RNumber_",2);
	case 47: SetPVarString(playerid,"RNumbers","13, 14, 16, 17"), SetPVarInt(playerid,"RNumber_",4);
	case 48: SetPVarString(playerid,"RNumbers","14, 17"), SetPVarInt(playerid,"RNumber_",2);
	case 49: SetPVarString(playerid,"RNumbers","14, 15, 17, 18"), SetPVarInt(playerid,"RNumber_",4);
	case 50: SetPVarString(playerid,"RNumbers","15, 18"), SetPVarInt(playerid,"RNumber_",2);
	case 52: SetPVarString(playerid,"RNumbers","16, 17"), SetPVarInt(playerid,"RNumber_",2);
	case 54: SetPVarString(playerid,"RNumbers","17, 18"), SetPVarInt(playerid,"RNumber_",2);
	case 56: SetPVarString(playerid,"RNumbers","16, 19"), SetPVarInt(playerid,"RNumber_",2);
	case 57: SetPVarString(playerid,"RNumbers","16, 17, 19, 20"), SetPVarInt(playerid,"RNumber_",4);
	case 58: SetPVarString(playerid,"RNumbers","17, 20"), SetPVarInt(playerid,"RNumber_",2);
	case 59: SetPVarString(playerid,"RNumbers","17, 18, 20, 21"), SetPVarInt(playerid,"RNumber_",4);
	case 60: SetPVarString(playerid,"RNumbers","18, 21"), SetPVarInt(playerid,"RNumber_",2);
	case 62: SetPVarString(playerid,"RNumbers","19, 20"), SetPVarInt(playerid,"RNumber_",2);
	case 64: SetPVarString(playerid,"RNumbers","20, 21"), SetPVarInt(playerid,"RNumber_",2);
	case 66: SetPVarString(playerid,"RNumbers","19, 22"), SetPVarInt(playerid,"RNumber_",2);
	case 67: SetPVarString(playerid,"RNumbers","19, 20, 22, 23"), SetPVarInt(playerid,"RNumber_",4);
	case 68: SetPVarString(playerid,"RNumbers","20, 23"), SetPVarInt(playerid,"RNumber_",2);
	case 69: SetPVarString(playerid,"RNumbers","20, 21, 23, 24"), SetPVarInt(playerid,"RNumber_",4);
	case 70: SetPVarString(playerid,"RNumbers","21, 24"), SetPVarInt(playerid,"RNumber_",2);
	case 72: SetPVarString(playerid,"RNumbers","22, 23"), SetPVarInt(playerid,"RNumber_",2);
	case 74: SetPVarString(playerid,"RNumbers","23, 24"), SetPVarInt(playerid,"RNumber_",2);
	case 76: SetPVarString(playerid,"RNumbers","22, 25"), SetPVarInt(playerid,"RNumber_",2);
	case 77: SetPVarString(playerid,"RNumbers","22, 23, 25, 26"), SetPVarInt(playerid,"RNumber_",4);
	case 78: SetPVarString(playerid,"RNumbers","23, 26"), SetPVarInt(playerid,"RNumber_",2);
	case 79: SetPVarString(playerid,"RNumbers","23, 24, 26, 27"), SetPVarInt(playerid,"RNumber_",4);
	case 80: SetPVarString(playerid,"RNumbers","24, 27"), SetPVarInt(playerid,"RNumber_",2);
	case 82: SetPVarString(playerid,"RNumbers","25, 26"), SetPVarInt(playerid,"RNumber_",2);
	case 84: SetPVarString(playerid,"RNumbers","26, 27"), SetPVarInt(playerid,"RNumber_",2);
	case 86: SetPVarString(playerid,"RNumbers","25, 28"), SetPVarInt(playerid,"RNumber_",2);
	case 87: SetPVarString(playerid,"RNumbers","25, 26, 28, 29"), SetPVarInt(playerid,"RNumber_",4);
	case 88: SetPVarString(playerid,"RNumbers","26, 29"), SetPVarInt(playerid,"RNumber_",2);
	case 89: SetPVarString(playerid,"RNumbers","26, 27, 29, 30"), SetPVarInt(playerid,"RNumber_",4);
	case 90: SetPVarString(playerid,"RNumbers","27, 30"), SetPVarInt(playerid,"RNumber_",2);
	case 92: SetPVarString(playerid,"RNumbers","28, 29"), SetPVarInt(playerid,"RNumber_",2);
	case 94: SetPVarString(playerid,"RNumbers","29, 30"), SetPVarInt(playerid,"RNumber_",2);
	case 96: SetPVarString(playerid,"RNumbers","28, 31"), SetPVarInt(playerid,"RNumber_",2);
	case 97: SetPVarString(playerid,"RNumbers","28, 29, 31, 32"), SetPVarInt(playerid,"RNumber_",4);
	case 98: SetPVarString(playerid,"RNumbers","29, 32"), SetPVarInt(playerid,"RNumber_",2);
	case 99: SetPVarString(playerid,"RNumbers","29, 30, 32, 33"), SetPVarInt(playerid,"RNumber_",4);
	case 100: SetPVarString(playerid,"RNumbers","30, 33"), SetPVarInt(playerid,"RNumber_",2);
	case 102: SetPVarString(playerid,"RNumbers","31, 32"), SetPVarInt(playerid,"RNumber_",2);
	case 104: SetPVarString(playerid,"RNumbers","32, 33"), SetPVarInt(playerid,"RNumber_",2);
	case 106: SetPVarString(playerid,"RNumbers","31, 34"), SetPVarInt(playerid,"RNumber_",2);
	case 107: SetPVarString(playerid,"RNumbers","31, 32, 34, 35"), SetPVarInt(playerid,"RNumber_",4);
	case 108: SetPVarString(playerid,"RNumbers","32, 35"), SetPVarInt(playerid,"RNumber_",2);
	case 109: SetPVarString(playerid,"RNumbers","32, 33, 35, 36"), SetPVarInt(playerid,"RNumber_",4);
	case 110: SetPVarString(playerid,"RNumbers","33, 36"), SetPVarInt(playerid,"RNumber_",2);
	case 112: SetPVarString(playerid,"RNumbers","34, 35"), SetPVarInt(playerid,"RNumber_",2);
	case 114: SetPVarString(playerid,"RNumbers","35, 36"), SetPVarInt(playerid,"RNumber_",2);
	case 116: SetPVarString(playerid,"RNumbers","1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31, 34"), SetPVarInt(playerid,"RNumber_",12);
	case 118: SetPVarString(playerid,"RNumbers","2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35"), SetPVarInt(playerid,"RNumber_",12);
	case 120: SetPVarString(playerid,"RNumbers","3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36"), SetPVarInt(playerid,"RNumber_",12);
	case 121: SetPVarString(playerid,"RNumbers","1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12"), SetPVarInt(playerid,"RNumber_",12);
	case 122: SetPVarString(playerid,"RNumbers","13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24"), SetPVarInt(playerid,"RNumber_",12);
	case 123: SetPVarString(playerid,"RNumbers","25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36"), SetPVarInt(playerid,"RNumber_",12);
	case 124: SetPVarString(playerid,"RNumbers","1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18"), SetPVarInt(playerid,"RNumber_",18);
	case 125: SetPVarString(playerid,"RNumbers","2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36"), SetPVarInt(playerid,"RNumber_",18);
	case 126: SetPVarString(playerid,"RNumbers","1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36"), SetPVarInt(playerid,"RNumber_",18);
	case 127: SetPVarString(playerid,"RNumbers","2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35"), SetPVarInt(playerid,"RNumber_",18);
	case 128: SetPVarString(playerid,"RNumbers","1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35"), SetPVarInt(playerid,"RNumber_",18);
	case 129: SetPVarString(playerid,"RNumbers","19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36"), SetPVarInt(playerid,"RNumber_",18);
	}
	return true;
}
publics: RouletCheck(idx)
{
	new strings[50];
	if(PlayRoulette[idx])
	{
		if(TimerRoulette[idx][0x1] < TimerRoulette[idx][0x2])
		{
			TimerRoulette[idx][0x1]++;
			RouletNumber[idx] = random(37);
			foreach(new i : Player)
			{
				if(GetPVarInt(i,"RStol") != idx && DealerRoulette[idx] != i) continue;
				switch(RouletNumber[idx])
				{
				case 0: format(strings, 20, "~g~%i", RouletNumber[idx]);
				case 1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36: format(strings, 20, "~r~%i", RouletNumber[idx]);
				default: format(strings, 20, "%i", RouletNumber[idx]);
				}
				GameTextForPlayer(i, strings, 4000, 6);
			}
		}
		else PlayRoulette[idx] = false, TimerRoulette[idx][0x1] = 0, TimerRoulette[idx][0x2] = 0, RouletPrize[idx] = true;
	}
	foreach(new i : Player)
	{
		if(!RouletPrize[idx]) continue;
		if(GetPVarInt(i,"RStol") == idx || DealerRoulette[idx] == i)
		{
			PlayerPlaySound(i, 33403, 0.0, 0.0, 0.0);
			if(!GetPVarInt(i,"RStavka") || DealerRoulette[idx] == i) SendMes(i,COLOR_YELLOW, "Шарик попал в ячейку номер %i.",RouletNumber[idx]);
			else if(GetPVarInt(i,"RStavka"))
			{
				new str[300], number[20], bool:null, null_;
				GetPVarString(i,"RNumbers",str,sizeof(str));
				sscanf(str,"p<,>a<i>[20]",number);
				null = false;
				for(new n = 0; n < GetPVarInt(i,"RNumber_"); n++) if(number[n] == RouletNumber[idx]) { null = true; break; }
				if(null == false) SendMes(i,COLOR_YELLOW,"Номер ячейки %i. Ваша ставка проиграла.",RouletNumber[idx]), SetPlayerChatBubble(i,"Проиграл",COLOR_LIGHTRED,30.0,3000);
				else
				{
					switch(GetPVarInt(i,"RNumber_")) { case 1: null_ = 36; case 2: null_ = 8; case 4: null_ = 6; case 12: null_ = 3; case 18: null_ = 2; }
					SendMes(i,COLOR_YELLOW,"Номер ячейки %i. Вы выиграли $%i.",RouletNumber[idx], GetPVarInt(i,"RStavka")*null_);
					PI[i][pCash] += GetPVarInt(i,"RStavka")*null_;
					SetPlayerChatBubble(i,"Выиграл",COLOR_LIGHTGREEN,30.0,3000);
					PlayerPlaySound(i, 43001, 0.0, 0.0, 0.0);
				}
			}
		}
	}
	if(RouletPrize[idx])
	{
		RouletPrize[idx] = false;
		PlayRoulette[idx] = false;
		RouletNumber[idx] = 0;
		KillTimer(TimerRoulette[idx][0x0]);
		foreach(new l : Player)
		{
			if(!IsPlayerConnected(l) || IsPlayerNPC(l)) continue;
			if(GetPVarInt(l,"RStol") != idx || !GetPVarInt(l,"RStavka")) continue;
			PI[DealerRoulette[idx]][pPayCheck] += 100;
			DestroyObject(GetPVarInt(l,"RObj"));
			new obj = CreateObject(random(5) + 1912,GetPVarFloat(l,"RXONE"),GetPVarFloat(l,"RYONE"),GetPVarFloat(l,"RZONE"),0.00,0.00,0.00);
			SetPVarFloat(l,"RX",GetPVarFloat(l,"RXONE"));
			SetPVarFloat(l,"RY",GetPVarFloat(l,"RYONE"));
			SetPVarFloat(l,"RZ",GetPVarFloat(l,"RZONE"));
			SetPlayerCameraLookAt(l,GetPVarFloat(l,"RXONE"),GetPVarFloat(l,"RYONE"),GetPVarFloat(l,"RZONE"));
			SetPVarInt(l,"RNumber",0);
			SetPVarInt(l,"RObj",obj);
			DeletePVar(l,"RStavka");
			DeletePVar(l,"RNumbers");
			DeletePVar(l,"RNumber_");
			PlayerTextDrawSetString(l,RouletteText[l],"~<~~>~~up~~down~~n~~g~Money: none~n~~y~Bet: none");
		}
		DeletePVar(DealerRoulette[idx],"Roulet");
		DealerRoulette[idx] = INVALID_PLAYER_ID;
	}
	return true;
}
stock GetRoulet(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 2, 1962.8666,1026.0941,993.3957)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1957.9739,1026.1073,993.3957)) return 2;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1958.1686,1008.0011,993.3957)) return 3;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1962.8086,1007.9399,993.3957)) return 4;
	//
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2230.8989,1619.5001,1006.2346)) return 5;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2242.4980,1619.5001,1006.2346)) return 6;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2230.8989,1613.5001,1006.2346)) return 7;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2242.4980,1613.5001,1006.2346)) return 8;
	//
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2230.8989,1594.5001,1006.2346)) return 9;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2242.4980,1594.5001,1006.2346)) return 10;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2230.8989,1588.5001,1006.2346)) return 11;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2242.4980,1588.5001,1006.2346)) return 12;
	else return false;
}
stock Up(playerid)
{
	new str[0x5];
	switch(GetPVarInt(playerid,"RStol"))
	{
	case 1..4:
		{
			str = "RY";
			switch(GetPVarInt(playerid,"RNumber"))
			{
			case 1..5:
				{
					SetPVarFloat(playerid,"RX",GetPVarFloat(playerid,"RXONE"));
					SetPVarFloat(playerid,"RY",GetPVarFloat(playerid,"RYONE"));
					SetPVarFloat(playerid,"RZ",GetPVarFloat(playerid,"RZONE"));
					SetPVarInt(playerid,"RNumber",0);
				}
			case 6..115: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.076), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-5);
			case 116,118,120: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.152), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-5);
			case 123,122: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.608), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-1);
			case 121: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-1.216), SetPVarInt(playerid,"RNumber",123);
			case 125..129: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.304), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-1);
			case 124: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-1.520), SetPVarInt(playerid,"RNumber",129);
			}
		}
	default:
		{
			str = "RX";
			switch(GetPVarInt(playerid,"RNumber"))
			{
			case 1..5:
				{
					SetPVarFloat(playerid,"RX",GetPVarFloat(playerid,"RXONE"));
					SetPVarFloat(playerid,"RY",GetPVarFloat(playerid,"RYONE"));
					SetPVarFloat(playerid,"RZ",GetPVarFloat(playerid,"RZONE"));
					SetPVarInt(playerid,"RNumber",0);
				}
			case 6..115: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.076), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-5);
			case 116,118,120: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.152), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-5);
			case 123,122: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.608), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-1);
			case 121: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+1.216), SetPVarInt(playerid,"RNumber",123);
			case 125..129: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.304), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-1);
			case 124: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+1.520), SetPVarInt(playerid,"RNumber",129);
			}
		}
	}
	SetObjectPos(GetPVarInt(playerid,"RObj"),GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
	return SetPlayerCameraLookAt(playerid,GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
}
stock Right(playerid)
{
	new str[0x5], str_[0x5];
	switch(GetPVarInt(playerid,"RStol"))
	{
	case 1..4: str = "RX", str_ = "RY";
	default: str = "RY", str_ = "RX";
	}
	switch(GetPVarInt(playerid,"RNumber"))
	{
	case 1..4,6..9,11..14,16..19,21..24,26..29,31..34,36..39,41..44,46..49,51..54,56..59,61..64,66..69,71..74,76..79,81..84,86..89,91..94,96..99,101..104,106..109,111..114: {
			SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.110);
			SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+1); }
	case 116,118: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+2);
	case 120: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.440), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-4);
	case 121: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarInt(playerid,"RNumber",16);
	case 122: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarInt(playerid,"RNumber",56);
	case 123: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarInt(playerid,"RNumber",96);
	case 129:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 128:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 127:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 126:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 125:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 124:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",121);
			}
		}
	}
	SetObjectPos(GetPVarInt(playerid,"RObj"),GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
	return SetPlayerCameraLookAt(playerid,GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
}
stock Left(playerid)
{
	new str[0x5], str_[0x5];
	switch(GetPVarInt(playerid,"RStol"))
	{
	case 1..4: str = "RX", str_ = "RY";
	default: str = "RY", str_ = "RX";
	}
	switch(GetPVarInt(playerid,"RNumber"))
	{
	case 2..5,7..10,12..15,17..20,22..25,27..30,32..35,37..40,42..45,47..50,52..55,57..60,62..65,67..70,72..75,77..80,82..85,87..90,92..95,97..100,102..105,107..110,112..115: {
			SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.110);
			SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-1); }
	case 118,120: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")-2);
	case 116: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.440), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+4);
	case 31:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.228), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.228), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 36:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.304), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.304), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 76:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.304), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.304), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 81:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.228), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.228), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 86:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 91:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.076), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.076), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 96: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarInt(playerid,"RNumber",123);
	case 101:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.076), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.076), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 106:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 111:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.228), SetPVarInt(playerid,"RNumber",123);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.228), SetPVarInt(playerid,"RNumber",123);
			}
		}
	case 71:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.228), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.228), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 26:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 66:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 21:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.076), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.076), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 61:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.076), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.076), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 16: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarInt(playerid,"RNumber",121);
	case 56: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarInt(playerid,"RNumber",122);
	case 11:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.076), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.076), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 51:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.076), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.076), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 6:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 46:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 1:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.228), SetPVarInt(playerid,"RNumber",121);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.228), SetPVarInt(playerid,"RNumber",121);
			}
		}
	case 41:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.228), SetPVarInt(playerid,"RNumber",122);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.228), SetPVarInt(playerid,"RNumber",122);
			}
		}
	case 121:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",124);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",124);
			}
		}
	case 122:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",126);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",126);
			}
		}
	case 123:
		{
			switch(GetPVarInt(playerid,"RStol"))
			{
			case 1..4: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.152), SetPVarInt(playerid,"RNumber",128);
			default: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.220), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.152), SetPVarInt(playerid,"RNumber",128);
			}
		}
	}
	SetObjectPos(GetPVarInt(playerid,"RObj"),GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
	return SetPlayerCameraLookAt(playerid,GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
}
stock Down(playerid)
{
	new str[0x5], str_[0x5];
	switch(GetPVarInt(playerid,"RStol"))
	{
	case 1..4:
		{
			str = "RY", str_ = "RX";
			switch(GetPVarInt(playerid,"RNumber"))
			{
			case 0: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.152), SetPVarInt(playerid,"RNumber",3);
			case 111,113,115: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.152), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+5);
			case 1..110: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.076), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+5);
			case 114: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.152), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.110), SetPVarInt(playerid,"RNumber",118);
			case 112: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.152), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.110), SetPVarInt(playerid,"RNumber",118);
			case 122,121: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.608), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+1);
			case 123: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+1.216), SetPVarInt(playerid,"RNumber",121);
			case 124..128: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-0.304), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+1);
			case 129: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+1.520), SetPVarInt(playerid,"RNumber",124);
			}
		}
	default:
		{
			str = "RX", str_ = "RY";
			switch(GetPVarInt(playerid,"RNumber"))
			{
			case 0: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.152), SetPVarInt(playerid,"RNumber",3);
			case 111,113,115: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.152), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+5);
			case 1..110: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.076), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+5);
			case 114: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.152), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)-0.110), SetPVarInt(playerid,"RNumber",118);
			case 112: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.152), SetPVarFloat(playerid,str_,GetPVarFloat(playerid,str_)+0.110), SetPVarInt(playerid,"RNumber",118);
			case 122,121: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.608), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+1);
			case 123: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-1.216), SetPVarInt(playerid,"RNumber",121);
			case 124..128: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)+0.304), SetPVarInt(playerid,"RNumber",GetPVarInt(playerid,"RNumber")+1);
			case 129: SetPVarFloat(playerid,str,GetPVarFloat(playerid,str)-1.520), SetPVarInt(playerid,"RNumber",124);
			}
		}
	}
	SetObjectPos(GetPVarInt(playerid,"RObj"),GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
	return SetPlayerCameraLookAt(playerid,GetPVarFloat(playerid,"RX"),GetPVarFloat(playerid,"RY"),GetPVarFloat(playerid,"RZ"));
}
stock GetKrupie(playerid, idx)
{
	if(strcmp(PI[playerid][pName],BizzInfo[idx][caKrupie1],true) == 0 ||
			strcmp(PI[playerid][pName],BizzInfo[idx][caKrupie2],true) == 0 ||
			strcmp(PI[playerid][pName],BizzInfo[idx][caKrupie3],true) == 0 ||
			strcmp(PI[playerid][pName],BizzInfo[idx][caKrupie4],true) == 0 ||
			strcmp(PI[playerid][pName],BizzInfo[idx][caKrupie5],true) == 0) return true;
	return false;
}
Hook_SetPlayerWanted(playerid, amount)
{
	PI[playerid][pWantedLevel] = amount;
	SetPlayerWantedLevel(playerid, amount);
	return true;
}
stock BenzFrac()
{
	new strings[100];
	format(strings,sizeof(strings),"Цистерна LSPD\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][lspdbenz]);
	UpdateDynamic3DTextLabelText(BenzText[0], 0x6495EDFF, strings);
	format(strings,sizeof(strings),"Цистерна FBI\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][fbibenz]);
	UpdateDynamic3DTextLabelText(BenzText[1], 0x6495EDFF, strings);
	format(strings,sizeof(strings),"Цистерна ВМФ\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][vmfbenz]);
	UpdateDynamic3DTextLabelText(BenzText[2], 0x6495EDFF, strings);
	format(strings,sizeof(strings),"Цистерна МЦСФ\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][medsfbenz]);
	UpdateDynamic3DTextLabelText(BenzText[3], 0x6495EDFF, strings);
	format(strings,sizeof(strings),"Цистерна LCN\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][lcnbenz]);
	UpdateDynamic3DTextLabelText(BenzText[4], 0x6495EDFF, strings);
	format(strings,sizeof(strings),"Цистерна Yakuza\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][yakuzabenz]);
	UpdateDynamic3DTextLabelText(BenzText[5], 0x6495EDFF, strings);
	format(strings,sizeof(strings),"Цистерна МЦЛС\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][medlsbenz]);
	UpdateDynamic3DTextLabelText(BenzText[6], 0x6495EDFF, strings);
	format(strings,sizeof(strings),"Цистерна Ballas\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][ballasbenz]);
	UpdateDynamic3DTextLabelText(BenzText[7], 0x6495EDFF, strings);
	format(strings,sizeof(strings),"Цистерна Vagos\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][vagosbenz]);
	UpdateDynamic3DTextLabelText(BenzText[8], 0x6495EDFF, strings);
	format(strings,sizeof(strings),"Цистерна PM\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][pmbenz]);
	UpdateDynamic3DTextLabelText(BenzText[9], 0x6495EDFF, strings);
	format(strings,sizeof(strings),"Цистерна Grove\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][grovebenz]);
	UpdateDynamic3DTextLabelText(BenzText[10], 0x6495EDFF, strings);
	format(strings,sizeof(strings),"Цистерна Aztec\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][aztecbenz]);
	UpdateDynamic3DTextLabelText(BenzText[11], 0x6495EDFF, strings);
	format(strings,sizeof(strings),"Цистерна Rifa\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][rifabenz]);
	UpdateDynamic3DTextLabelText(BenzText[12], 0x6495EDFF, strings);
	format(strings,sizeof(strings),"Цистерна СВ\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][zonabenz]);
	UpdateDynamic3DTextLabelText(BenzText[13], 0x6495EDFF, strings);
	format(strings,sizeof(strings),"Цистерна Адм. Президента\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][pravbenz]);
	UpdateDynamic3DTextLabelText(BenzText[14], 0x6495EDFF, strings);
	format(strings,sizeof(strings),"Цистерна Байкеров\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][bikerbenz]);
	UpdateDynamic3DTextLabelText(BenzText[15], 0x6495EDFF, strings);
	format(strings,sizeof(strings),"Цистерна K.A.C.C.\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][kassbenzce]);
	UpdateDynamic3DTextLabelText(BenzText[16], 0x6495EDFF, strings);
	format(strings,sizeof(strings),"Цистерна SFPD\nЛитров: %d/10000\nВзять канистру: /getfuel",FracBank[0][sfpdbenz]);
	UpdateDynamic3DTextLabelText(BenzText[17], 0x6495EDFF, strings);
	format(strings,sizeof(strings)," %d/1000",FracBank[0][musorbak1]);
	UpdateDynamic3DTextLabelText(BenzText[18], 0xE0FFFFAA, strings);
	format(strings,sizeof(strings)," %d/1000",FracBank[0][musorbak2]);
	UpdateDynamic3DTextLabelText(BenzText[19], 0xE0FFFFAA, strings);
	format(strings,sizeof(strings)," %d/1000",FracBank[0][musorbak3]);
	UpdateDynamic3DTextLabelText(BenzText[20], 0xE0FFFFAA, strings);
	format(strings,sizeof(strings)," %d/1000",FracBank[0][musorbak4]);
	UpdateDynamic3DTextLabelText(BenzText[21], 0xE0FFFFAA, strings);
	format(strings,sizeof(strings)," %d/1000",FracBank[0][musorbak5]);
	UpdateDynamic3DTextLabelText(BenzText[22], 0xE0FFFFAA, strings);
	format(strings,sizeof(strings)," %d/1000",FracBank[0][musorbak6]);
	UpdateDynamic3DTextLabelText(BenzText[23], 0xE0FFFFAA, strings);
	format(strings,sizeof(strings)," %d/1000",FracBank[0][musorbak7]);
	UpdateDynamic3DTextLabelText(BenzText[24], 0xE0FFFFAA, strings);
	return true;
}
publics: load_timer(playerid)
{
	SCM(playerid, 0xF5DEB3AA, "Бочки с нефтью загружены. Отвезите груз на завод К.А.С.С");
	object_job[playerid][0] = CreateObject(3633, 0, 0, 0, 0, 0, 0); object_job[playerid][1] = CreateObject(3633, 0, 0, 0, 0, 0, 0);
	object_job[playerid][2] = CreateObject(3633, 0, 0, 0, 0, 0, 0); object_job[playerid][3] = CreateObject(3633, 0, 0, 0, 0, 0, 0);
	object_job[playerid][4] = CreateObject(3633, 0, 0, 0, 0, 0, 0); object_job[playerid][5] = CreateObject(3633, 0, 0, 0, 0, 0, 0);
	object_job[playerid][6] = CreateObject(3633, 0, 0, 0, 0, 0, 0); object_job[playerid][7] = CreateObject(3633, 0, 0, 0, 0, 0, 0);
	object_job[playerid][8] = CreateObject(3633, 0, 0, 0, 0, 0, 0); object_job[playerid][9] = CreateObject(3633, 0, 0, 0, 0, 0, 0);
	AttachObjectToVehicle(object_job[playerid][0], GetPlayerVehicleID(playerid), -0.73080, 1.28750, 0.21140,   0.00000, 0.00000, 0.00000 );
	AttachObjectToVehicle(object_job[playerid][1], GetPlayerVehicleID(playerid), 0.64320, 1.28750, 0.21140,   0.00000, 0.00000, 0.00000 );
	AttachObjectToVehicle(object_job[playerid][2], GetPlayerVehicleID(playerid), -0.73080, -0.10450, 0.21140,   0.00000, 0.00000, 0.00000 );
	AttachObjectToVehicle(object_job[playerid][3], GetPlayerVehicleID(playerid), 0.64320, -0.10450, 0.21140,   0.00000, 0.00000, 0.00000 );
	AttachObjectToVehicle(object_job[playerid][4], GetPlayerVehicleID(playerid), -0.73080, -1.49650, 0.21140,   0.00000, 0.00000, 0.00000 );
	AttachObjectToVehicle(object_job[playerid][5], GetPlayerVehicleID(playerid), 0.64320, -1.49650, 0.21140,   0.00000, 0.00000, 0.00000 );
	AttachObjectToVehicle(object_job[playerid][6], GetPlayerVehicleID(playerid), -0.73080, -2.88850, 0.21140,   0.00000, 0.00000, 0.00000 );
	AttachObjectToVehicle(object_job[playerid][7], GetPlayerVehicleID(playerid), 0.64320, -2.88850, 0.21140,   0.00000, 0.00000, 0.00000 );
	AttachObjectToVehicle(object_job[playerid][8], GetPlayerVehicleID(playerid), -0.73080, -4.28050, 0.21140,   0.00000, 0.00000, 0.00000 );
	AttachObjectToVehicle(object_job[playerid][9], GetPlayerVehicleID(playerid), 0.64320, -4.28050, 0.21140,   0.00000, 0.00000, 0.00000 );
	SetPVarInt(playerid, "loading_job", 1);
	SetPVarInt(playerid, "Proverka_Neft", 1);
	TogglePlayerControllable(playerid, 1);
	SetPlayerRaceCheckpoint(playerid, 2, 2688.4985,2721.0486,10.9633, 0.0, 0.0, 0.0, 3.0);
}
stock ToCheat(type,playerid)
{
	if(type == 1)
	{
	    SetPVarInt(playerid, "ACGun", 1);
		ResetPlayerWeapons(playerid);
		_ResetGun(playerid);
		SetPlayerHealthAC(playerid, 0);
		SPDEx(playerid, 1032, 0, "АнтиЧит", "{FF0000}Вы убиты от своего читерского оружия", "x", "");
	}
	return 1;
}
stock SetPlayerFaceToPoint(playerid, Float:X, Float:Y)
{
	new Float:angle;
	new Float:misc = 5.0;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	angle = 180.0-atan2(x-X,y-Y);
	angle += misc;
	misc *= -1;
	SetPlayerFacingAngle(playerid, angle+misc);
	return true;
}
stock ShiftCords(&Float:x, &Float:y,Float:a, Float:distance)
{
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	return 1;
}
stock GoPlayerAnimation(playerid, Float:X, Float:Y, Float:Z)
{
	if(IsPlayerInAnyVehicle(playerid)) return 0;
	if(IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z))
	{
		ApplyAnimation(playerid, "PED", "IDLE_STANCE", 4.1, 0, 1, 1, 0, 0, 1);
		return 1;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, X, Y, Z))
	{
		ApplyAnimation(playerid, "PED", "WALK_PLAYER", 4.1, 0, 1, 1, 0, 0, 1);
		return 2;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 7.0, X, Y, Z))
	{
		ApplyAnimation(playerid, "PED", "RUN_GANG1", 4.1, 0, 1, 1, 0, 0, 1);
		return 3;
	}
	ApplyAnimation(playerid, "PED", "SPRINT_PANIC", 4.1, 0, 1, 1, 0, 0, 1);
	return 4;
}
stock RemovePlayerWeapon(playerid, weaponid)
{
	if(!IsPlayerConnected(playerid) || weaponid < 0 || weaponid > 50) return;
	new saveweapon[13], saveammo[13];
	for(new slot; slot < 13; slot ++) GetPlayerWeaponData(playerid, slot, saveweapon[slot], saveammo[slot]);
	ResetPlayerWeapons(playerid);
	for(new slot; slot < 13; slot ++)
	{
		if(saveweapon[slot] == weaponid || saveammo[slot] == 0) continue;
		_GiveGun(playerid, saveweapon[slot], saveammo[slot]);
	}
	_GiveGun(playerid, 0, 1);
}
publics: lechenie(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid, 40.0,-1031.7172,695.4889,1507.3469))
    {
	    if(PI[playerid][pHospital] == 1)
		{
			new Float:Health;
			GetPlayerHealth(playerid,Health);
			SetPlayerHealthAC(playerid, Health+1);
			format(YCMDstr,sizeof(YCMDstr),"~p~+1/%.0fhp",Health+1);
			GameTextForPlayer(playerid,YCMDstr,1000,4);
			PlayerPlaySound(playerid, 30801, 0.0, 0.0, 0.0);
			if(Health >= 100)
			{
				SCM(playerid, COLOR_GREEN,"Курс лечения завершен. Теперь Вы можете выйти из больницы");
				PI[playerid][pHospital] = 0;
				PI[playerid][pHospLS] = 0;
				PI[playerid][pHospSF] = 0;
				KillTimer(HPTimer[playerid]);
				return true;
			}
		}
	}
    return true;
}
stock SetPlayerHealthAC(playerid, Float: Health)
{
	if(IsPlayerConnected(playerid))
	{
		FL[playerid][PlayerHealth] = Health;
		SetPlayerHealth(playerid, Health);
		PI[playerid][pHP] = Health;
	}
	return true;
}
stock Musorki()
{
    if(FracBank[0][musorbak1] >= 1000) FracBank[0][musorbak1] = 1000;
    else if(FracBank[0][musorbak1] < 1000)
    FracBank[0][musorbak1] += 10;
    mysql_format(DATABASE, YCMDstr, 56, "UPDATE `frakbank` SET `FracBank[0][musorbak1]` = '%i'",FracBank[0][musorbak1]);
    mysql_function_query(DATABASE,YCMDstr,false,"","");
    //
    if(FracBank[0][musorbak2] >= 1000) FracBank[0][musorbak2] = 1000;
    else if(FracBank[0][musorbak2] < 1000)
    FracBank[0][musorbak2] += 10;
    mysql_format(DATABASE, YCMDstr, 56, "UPDATE `frakbank` SET `FracBank[0][musorbak2]` = '%i'",FracBank[0][musorbak2]);
    mysql_function_query(DATABASE,YCMDstr,false,"","");
    //
    if(FracBank[0][musorbak3] >= 1000) FracBank[0][musorbak3] = 1000;
    else if(FracBank[0][musorbak3] < 1000)
    FracBank[0][musorbak3] += 10;
    mysql_format(DATABASE, YCMDstr, 56, "UPDATE `frakbank` SET `FracBank[0][musorbak3]` = '%i'",FracBank[0][musorbak3]);
    mysql_function_query(DATABASE,YCMDstr,false,"","");
    //
    if(FracBank[0][musorbak4] >= 1000) FracBank[0][musorbak4] = 1000;
    else if(FracBank[0][musorbak4] < 1000)
    FracBank[0][musorbak4] += 10;
    mysql_format(DATABASE, YCMDstr, 56, "UPDATE `frakbank` SET `FracBank[0][musorbak4]` = '%i'",FracBank[0][musorbak4]);
    mysql_function_query(DATABASE,YCMDstr,false,"","");
    //
    if(FracBank[0][musorbak5] >= 1000) FracBank[0][musorbak5] = 1000;
    else if(FracBank[0][musorbak5] < 1000)
    FracBank[0][musorbak5] += 10;
    mysql_format(DATABASE, YCMDstr, 56, "UPDATE `frakbank` SET `FracBank[0][musorbak5]` = '%i'",FracBank[0][musorbak5]);
    mysql_function_query(DATABASE,YCMDstr,false,"","");
    //
    if(FracBank[0][musorbak6] >= 1000) FracBank[0][musorbak6] = 1000;
    else if(FracBank[0][musorbak6] < 1000)
    FracBank[0][musorbak6] += 10;
    mysql_format(DATABASE, YCMDstr, 56, "UPDATE `frakbank` SET `FracBank[0][musorbak6]` = '%i'",FracBank[0][musorbak6]);
    mysql_function_query(DATABASE,YCMDstr,false,"","");
    //
    if(FracBank[0][musorbak7] >= 1000) FracBank[0][musorbak7] = 1000;
    else if(FracBank[0][musorbak7] < 1000)
    FracBank[0][musorbak7] += 10;
    mysql_format(DATABASE, YCMDstr, 56, "UPDATE `frakbank` SET `FracBank[0][musorbak7]` = '%i'",FracBank[0][musorbak7]);
    mysql_function_query(DATABASE,YCMDstr,false,"","");
    return true;
}
publics: AntiSobeit(playerid)
{
	new string[256];
 	if(GetPVarInt(playerid, "SobCheck") > 1)
	{
		TogglePlayerControllable(playerid, false);
		SetPVarInt(playerid, "SobCheck", GetPVarInt(playerid, "SobCheck") - 1);
		format(YCMDstr,12,"Time %d sec",GetPVarInt(playerid,"SobCheck"));
		PlayerTextDrawSetString(playerid,sobeit[playerid][1],YCMDstr);
		ApplyAnimation(playerid,"COP_AMBIENT","Coplook_loop",4.1,0,0,0,0,0,1);
		return SetTimerEx("AntiSobeit", 1000, false, "i",playerid);
 	}
 	if(GetPVarInt(playerid, "PlayerInAFK") > 2)
	{
		SPDEx(playerid, 1383, 0, "{FF0000}АнтиЧит", "Вы были кикнуты из-за того что были в AFK во время проверки!", "X", "");
		Kick(playerid);
	}
	if(GetPVarInt(playerid, "SobCheck") == 1)
	{
		if(GetPlayerAnimationIndex(playerid) != 373)
		{
		    for(new i; i < 2; i++) PlayerTextDrawHide(playerid, sobeit[playerid][i]);
		    format(string,sizeof string,"При проверке у Вас сбилась анимация и Вы были кикнуты!\n\nВозможно анимация сбилась из-за клео/мода. Проверьте свою папку с игрой и\nудалите файл который сбивает анимацию, если такой есть.");
			SPDEx(playerid,1383,0,"{FF0000}АнтиЧит",string,"Ok","");
			Kick(playerid);
		}
	}
	GetPlayerCameraFrontVector(playerid,spos[playerid][0],spos[playerid][1],spos[playerid][2]);
	if(GetPVarInt(playerid, "SobCheck") == 1 && spos[playerid][2] < -0.4)
	{
	    for(new i; i < 2; i++) PlayerTextDrawHide(playerid, sobeit[playerid][i]);
		SPDEx(playerid, 1383, 0, "{FF0000}АнтиЧит", "В директории игры GTA San Andreas обнаружен посторонний чит файл!\nДля игры на нашем сервере - удалите этот файл.", "X", "");
		PlayerPlaySound(playerid, 31202, 0.0, 0.0, 0.0);
		Kick(playerid);
		return true;
	}
	else
	{
	    for(new i; i < 2; i++) PlayerTextDrawHide(playerid, sobeit[playerid][i]);
		SPDEx(playerid,0,0,"{FF0000}АнтиЧит","Постороннего файла не обнаружено! Приятной игры.","Закрыть","");
		TogglePlayerControllable(playerid, true);
	}
	return 1;
}
publics: CheckForCheater(playerid)
{
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(!player_NoCheckTimeVeh[playerid])
		{
			GetVehicleHealth(GetPlayerVehicleID(playerid),player_VehHealth[playerid]);
			if(player_VehHealth[playerid] > HealthVeh[playerid])
			{
				format(YCMDstr, sizeof(YCMDstr),"< AC > Игрок %s[%i]: возможно использует чит [Repair] (Было %.0f, Стало %.0f)",Name(playerid),playerid,HealthVeh[playerid],player_VehHealth[playerid]);
				ABroadCast(COLOR_REDD, YCMDstr, 1);
			}
		}
		else { player_NoCheckTimeVeh[playerid] -= 1; }
		GetVehicleHealth(GetPlayerVehicleID(playerid),HealthVeh[playerid]);
	}
	return true;
}
//------------------------------------------------------------------------------
stock AC_RepairVeh(vehicleid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(GetPlayerVehicleID(i) == vehicleid && GetPlayerState(i) == PLAYER_STATE_DRIVER) player_NoCheckTimeVeh[i] = 3;
		}
	}
	RepairVehicle(vehicleid);
	return 1;
}
//------------------------------------------------------------------------------
stock Chectkick(playerid)
{
    format(YCMDstr,sizeof(YCMDstr),"< AC > Игрок %s: был кикнут за использование чита [CarSpam/CarFlood]", Name(playerid));
    ABroadCast(COLOR_REDD, YCMDstr, 1);
    SCM(playerid,COLOR_LIGHTRED,"Вы были кикнуты по подозрению в читерстве! Код: [#017]");
	Kick(playerid);
	return 1;
}
stock Quest(playerid)
{
	if(PI[playerid][pLogin] == 0) return true;
	new exp = PI[playerid][pExp];
	new nxtlevel = PI[playerid][pLevel]+1;
	new expamount = nxtlevel*levelexp;
	//------------------------------- Документы --------------------------------
	if(PI[playerid][pQuest][0] == 0 && PI[playerid][pPassport] == 1)
	{
		PI[playerid][pQuest][0] = 1; PI[playerid][pCash] += 1000; GameTextForPlayer(playerid, "~g~+$1.000", 1000, 1);
		PI[playerid][pExp]++;
		if(exp >= expamount-1) PI[playerid][pLevel] += 1, PI[playerid][pExp] = 0, DollahScoreUpdate(playerid), SCM(playerid, COLOR_YELLOW, "Поздравляем! Ваш игровой уровень повысился");
		SCM(playerid, 0xFFE4E1FF, "Поздравляем! Вы получили достижение 'Документы'. Награда: $1.000, 1 EXP");
		return true;
	}
	//------------------------------ Покупатель --------------------------------
	if(PI[playerid][pQuest][1] == 0 && PI[playerid][pClock] == 1 && PI[playerid][pPhoneBook] == 1 && PI[playerid][pDirectory] == 1 && PI[playerid][pRadio] == 1)
	{
		PI[playerid][pQuest][1] = 1; PI[playerid][pCash] += 1000; PI[playerid][pExp]++; GameTextForPlayer(playerid, "~g~+$1.000", 1000, 1);
        PI[playerid][pExp]++;
		if(exp >= expamount-1) PI[playerid][pLevel] += 1, PI[playerid][pExp] = 0, DollahScoreUpdate(playerid), SCM(playerid, COLOR_YELLOW, "Поздравляем! Ваш игровой уровень повысился");
		SCM(playerid, 0xFFE4E1FF, "Поздравляем! Вы получили достижение 'Покупатель'. Награда: $1.000, 1 EXP");
		return true;
	}
	//------------------------------- Водитель ---------------------------------
	if(PI[playerid][pQuest][2] == 0 && PI[playerid][pCarLic] == 1)
	{
		PI[playerid][pQuest][2] = 1; PI[playerid][pCash] += 1500; PI[playerid][pExp]++; GameTextForPlayer(playerid, "~g~+$1.500", 1000, 1);
		if(exp >= expamount-1) PI[playerid][pLevel] += 1, PI[playerid][pExp] = 0, DollahScoreUpdate(playerid), SCM(playerid, COLOR_YELLOW, "Поздравляем! Ваш игровой уровень повысился");
		SCM(playerid, 0xFFE4E1FF, "Поздравляем! Вы получили достижение 'Водитель'. Награда: $1.500, 1 EXP");
		return true;
	}
	//-------------------------------- Моряк -----------------------------------
	if(PI[playerid][pQuest][3] == 0 && PI[playerid][pBoatLic] == 1)
	{
 		PI[playerid][pQuest][3] = 1; PI[playerid][pCash] += 1500; PI[playerid][pExp]++; GameTextForPlayer(playerid, "~g~+$1.500", 1000, 1);
 		if(exp >= expamount-1) PI[playerid][pLevel] += 1, PI[playerid][pExp] = 0, DollahScoreUpdate(playerid), SCM(playerid, COLOR_YELLOW, "Поздравляем! Ваш игровой уровень повысился");
		SCM(playerid, 0xFFE4E1FF, "Поздравляем! Вы получили достижение 'Моряк'. Награда: $1.500, 1 EXP");
        return true;
	}
	//------------------------------- Лётчик -----------------------------------
	if(PI[playerid][pQuest][4] == 0 && PI[playerid][pFlyLic] == 1)
	{
		PI[playerid][pQuest][4] = 1; PI[playerid][pCash] += 2000; PI[playerid][pExp]+=2; GameTextForPlayer(playerid, "~g~+$2.000", 1000, 1);
		if(exp >= expamount-1) PI[playerid][pLevel] += 1, PI[playerid][pExp] = 0, DollahScoreUpdate(playerid), SCM(playerid, COLOR_YELLOW, "Поздравляем! Ваш игровой уровень повысился");
		SCM(playerid, 0xFFE4E1FF, "Поздравляем! Вы получили достижение 'Лётчик'. Награда: $2.000, 2 EXP");
		return true;
	}
	//------------------------------ Стрелок -----------------------------------
    if(PI[playerid][pQuest][5] == 0 && PI[playerid][pGunSkill][0] == 100 && PI[playerid][pGunSkill][1] == 100 && PI[playerid][pGunSkill][2] == 100 && PI[playerid][pGunSkill][3] == 100 && PI[playerid][pGunSkill][4] == 100 && PI[playerid][pGunSkill][5] == 100)
	{
		PI[playerid][pQuest][5] = 1; PI[playerid][pCash] += 5000; PI[playerid][pExp]+=3; GameTextForPlayer(playerid, "~g~+$5.000", 1000, 1);
		if(exp >= expamount-1) PI[playerid][pLevel] += 1, PI[playerid][pExp] = 0, DollahScoreUpdate(playerid), SCM(playerid, COLOR_YELLOW, "Поздравляем! Ваш игровой уровень повысился");
		SCM(playerid, 0xFFE4E1FF, "Поздравляем! Вы получили достижение 'Стрелок'. Награда: $5.000, 3 EXP");
		return true;
	}
	//----------------------------- Оружейник ----------------------------------
	if(PI[playerid][pQuest][6] == 0 && PI[playerid][pGunLic] == 1)
	{
		PI[playerid][pQuest][6] = 1; PI[playerid][pCash] += 2500; PI[playerid][pExp]+=2; GameTextForPlayer(playerid, "~g~+$2.500", 1000, 1);
		if(exp >= expamount-1) PI[playerid][pLevel] += 1, PI[playerid][pExp] = 0, DollahScoreUpdate(playerid), SCM(playerid, COLOR_YELLOW, "Поздравляем! Ваш игровой уровень повысился");
		SCM(playerid, 0xFFE4E1FF, "Поздравляем! Вы получили достижение 'Оружейник'. Награда: $2.500, 2 EXP");
		return true;
	}
	//----------------------------- Личный т/с ---------------------------------
	if(PI[playerid][pQuest][7] == 0 && PI[playerid][pCar1] != 462 && PI[playerid][pCar2] != 462)
	{
		PI[playerid][pQuest][7] = 1; PI[playerid][pCash] += 3000; PI[playerid][pExp]+=2; GameTextForPlayer(playerid, "~g~+$3.000", 1000, 1);
		if(exp >= expamount-1) PI[playerid][pLevel] += 1, PI[playerid][pExp] = 0, DollahScoreUpdate(playerid), SCM(playerid, COLOR_YELLOW, "Поздравляем! Ваш игровой уровень повысился");
		SCM(playerid, 0xFFE4E1FF, "Поздравляем! Вы получили достижение 'Личный т/с'. Награда: $3.000, 2 EXP");
		return true;
	}
	//---------------------------- Военный билет -------------------------------
	if(PI[playerid][pQuest][8] == 0 && PI[playerid][pVoenBil] == 1)
	{
		PI[playerid][pQuest][8] = 1; PI[playerid][pCash] += 10000; PI[playerid][pExp]+=3; GameTextForPlayer(playerid, "~g~+$10.000", 1000, 1);
		if(exp >= expamount-1) PI[playerid][pLevel] += 1, PI[playerid][pExp] = 0, DollahScoreUpdate(playerid), SCM(playerid, COLOR_YELLOW, "Поздравляем! Ваш игровой уровень повысился");
		SCM(playerid, 0xFFE4E1FF, "Поздравляем! Вы получили достижение 'Военный билет'. Награда: $10.000, 3 EXP");
        return true;
  	}
  	//----------------------------- Мед. Карта ---------------------------------
  	if(PI[playerid][pQuest][9] == 0 && PI[playerid][pMedKarta] == 1)
	{
		PI[playerid][pQuest][9] = 1; PI[playerid][pCash] += 2500; PI[playerid][pExp]+=2; GameTextForPlayer(playerid, "~g~+$2.500", 1000, 1);
		if(exp >= expamount-1) PI[playerid][pLevel] += 1, PI[playerid][pExp] = 0, DollahScoreUpdate(playerid), SCM(playerid, COLOR_YELLOW, "Поздравляем! Ваш игровой уровень повысился");
		SCM(playerid, 0xFFE4E1FF, "Поздравляем! Вы получили достижение 'Мед. Карта'. Награда: $2.500, 2 EXP");
		return true;
 	}
 	//----------------------------- Бизнесмен ----------------------------------
    if(PI[playerid][pQuest][10] == 0 && PI[playerid][pPbiskey] != 255)
	{
		PI[playerid][pQuest][10] = 1; PI[playerid][pCash] += 10000; PI[playerid][pExp] +=3; GameTextForPlayer(playerid, "~g~+$10.000", 1000, 1);
		if(exp >= expamount-1) PI[playerid][pLevel] += 1, PI[playerid][pExp] = 0, DollahScoreUpdate(playerid), SCM(playerid, COLOR_YELLOW, "Поздравляем! Ваш игровой уровень повысился");
		SCM(playerid, 0xFFE4E1FF, "Поздравляем! Вы получили достижение 'Бизнесмен'. Награда: $10.000, 3 EXP");
		return true;
 	}
 	//------------------------------ Глава -------------------------------------
 	if(PI[playerid][pQuest][11] == 0 && PI[playerid][pLeader] > 0)
	{
		PI[playerid][pQuest][11] = 1; PI[playerid][pCash] += 50000; PI[playerid][pExp] +=4; GameTextForPlayer(playerid, "~g~+$50.000", 1000, 1);
		if(exp >= expamount-1) PI[playerid][pLevel] += 1, PI[playerid][pExp] = 0, DollahScoreUpdate(playerid), SCM(playerid, COLOR_YELLOW, "Поздравляем! Ваш игровой уровень повысился");
		SCM(playerid, 0xFFE4E1FF, "Поздравляем! Вы получили достижение 'Глава'. Награда: $50.000, 4 EXP");
		return true;
 	}
 	//------------------------------ Семья -------------------------------------
 	if(PI[playerid][pQuest][12] == 0 && PI[playerid][pFLeader] == 1)
	{
		PI[playerid][pQuest][12] = 1; PI[playerid][pCash] += 30000; PI[playerid][pExp] +=5; GameTextForPlayer(playerid, "~g~+$30.000", 1000, 1);
		if(exp >= expamount-1) PI[playerid][pLevel] += 1, PI[playerid][pExp] = 0, DollahScoreUpdate(playerid), SCM(playerid, COLOR_YELLOW, "Поздравляем! Ваш игровой уровень повысился");
		SCM(playerid, 0xFFE4E1FF, "Поздравляем! Вы получили достижение 'Семья'. Награда: $30.000, 5 EXP");
		return true;
 	}
 	//------------------------------- Дом --------------------------------------
 	if(PI[playerid][pQuest][13] == 0 && PI[playerid][pPhousekey] != 999)
	{
		PI[playerid][pQuest][13] = 1; PI[playerid][pCash] += 15000; PI[playerid][pExp] +=3; GameTextForPlayer(playerid, "~g~+$15.000", 1000, 1);
		if(exp >= expamount-1) PI[playerid][pLevel] += 1, PI[playerid][pExp] = 0, DollahScoreUpdate(playerid), SCM(playerid, COLOR_YELLOW, "Поздравляем! Ваш игровой уровень повысился");
		SCM(playerid, 0xFFE4E1FF, "Поздравляем! Вы получили достижение 'Дом'. Награда: $15.000, 3 EXP");
		return true;
	}
	//----------------------------- Свадьба ------------------------------------
 	if(PI[playerid][pQuest][14] == 0 && PI[playerid][pMarried] == 1)
	{
		PI[playerid][pQuest][14] = 1; PI[playerid][pCash] += 50000; PI[playerid][pExp] +=3; GameTextForPlayer(playerid, "~g~+$50.000", 1000, 1);
		if(exp >= expamount-1) PI[playerid][pLevel] += 1, PI[playerid][pExp] = 0, DollahScoreUpdate(playerid), SCM(playerid, COLOR_YELLOW, "Поздравляем! Ваш игровой уровень повысился");
		SCM(playerid, 0xFFE4E1FF, "Поздравляем! Вы получили достижение 'Свадьба'. Награда: $50.000, 3 EXP");
		return true;
	}
	//---------------------------- Законник ------------------------------------
 	if(PI[playerid][pQuest][15] == 0 && PI[playerid][pZakonp] == 100)
	{
		PI[playerid][pQuest][15] = 1; PI[playerid][pCash] += 30000; PI[playerid][pExp] +=4; GameTextForPlayer(playerid, "~g~+$30.000", 1000, 1);
		if(exp >= expamount-1) PI[playerid][pLevel] += 1, PI[playerid][pExp] = 0, DollahScoreUpdate(playerid), SCM(playerid, COLOR_YELLOW, "Поздравляем! Ваш игровой уровень повысился");
		SCM(playerid, 0xFFE4E1FF, "Поздравляем! Вы получили достижение 'Законник'. Награда: $30.000, 4 EXP");
		return true;
	}
	//---------------------------------- Боец ----------------------------------
 	if(PI[playerid][pQuest][16] == 0 && PI[playerid][pBoxSkill] == 5000 && PI[playerid][pKickboxSkill] == 5000 && PI[playerid][pKongfuSkill] == 5000)
	{
	    if(exp >= expamount-1) PI[playerid][pLevel] += 1, PI[playerid][pExp] = 0, DollahScoreUpdate(playerid), SCM(playerid, COLOR_YELLOW, "Поздравляем! Ваш игровой уровень повысился");
		PI[playerid][pQuest][16] = 1; PI[playerid][pCash] += 30000; PI[playerid][pExp] +=3; GameTextForPlayer(playerid, "~g~+$30.000", 1000, 1);
		SCM(playerid, 0xFFE4E1FF, "Поздравляем! Вы получили достижение 'Боец'. Награда: $30.000, 3 EXP");
		return true;
	}
	return true;
}
publics: TimeFind(playerid, id)
{
	new Float:x, Float:y, Float:z;
	if(GetPlayerInterior(id) != 0)
	{
	    DeletePVar(playerid, "UseFind");
		KillTimer(SetFind[playerid]);
		DisablePlayerCheckpoint(playerid);
	    SCM(playerid,COLOR_GREY,"[Спутник]: Мы не можем найти координаты (Игрок в интерьере)");
	    return true;
	}
	if(GetPlayerVirtualWorld(id) != 0)
	{
	    DeletePVar(playerid, "UseFind");
		KillTimer(SetFind[playerid]);
		DisablePlayerCheckpoint(playerid);
		SCM(playerid,COLOR_GREY,"[Спутник]: Мы не можем найти координаты (Игрок в другом виртуальном мире)");
		return true;
	}
	if(!IsPlayerConnected(id))
	{
	    DeletePVar(playerid, "UseFind");
		KillTimer(SetFind[playerid]);
		DisablePlayerCheckpoint(playerid);
		SCM(playerid, COLOR_GREY, "[Спутник]: Человек не найден!");
		return true;
	}
	GetPlayerPos(id,x,y,z);
	SetPlayerCheckpoint(playerid,x,y,z,4.0);
	return 1;
}
